# vi:syntax=sql

Trace file /u01/app/oracle/diag/rdbms/lin183/LIN183/trace/LIN183_ora_26384.trc
Oracle Database 18c Enterprise Edition Release 18.0.0.0.0 - Production
Version 18.3.0.0.0
Build label:    RDBMS_18.1.0.0.0_LINUX.X64_180103.1
ORACLE_HOME:    /u01/app/oracle/product/18.0.0/dbhome_1
System name:	Linux
Node name:	oel7.localdomain
Release:	4.14.35-1818.3.3.el7uek.x86_64
Version:	#2 SMP Mon Sep 24 14:45:01 PDT 2018
Machine:	x86_64
Instance name: LIN183
Redo thread mounted by this instance: 1
Oracle process number: 57
Unix process pid: 26384, image: oracle@oel7.localdomain


*** 2018-10-24T22:44:51.791986-04:00
*** SESSION ID:(381.51037) 2018-10-24T22:44:51.792004-04:00
*** CLIENT ID:() 2018-10-24T22:44:51.792008-04:00
*** SERVICE NAME:(LIN183) 2018-10-24T22:44:51.792012-04:00
*** MODULE NAME:(sqlplus@mac18 (TNS V1-V3)) 2018-10-24T22:44:51.792015-04:00
*** ACTION NAME:() 2018-10-24T22:44:51.792019-04:00
*** CLIENT DRIVER:(SQL*PLUS) 2018-10-24T22:44:51.792022-04:00
 
Registered qb: SEL$1 0x78a29c28 (PARSER)
---------------------
QUERY BLOCK SIGNATURE
---------------------
  signature (): qb_name=SEL$1 nbfros=3 flg=0
    fro(0): flg=4 objn=74168 hint_alias="C"@"SEL$1"
    fro(1): flg=4 objn=74169 hint_alias="CA"@"SEL$1"
    fro(2): flg=4 objn=74170 hint_alias="CUSTOMER_DEMOGRAPHICS"@"SEL$1"

Registered qb: SEL$2 0x727f0400 (PARSER)
---------------------
QUERY BLOCK SIGNATURE
---------------------
  signature (): qb_name=SEL$2 nbfros=2 flg=0
    fro(0): flg=4 objn=74171 hint_alias="DATE_DIM"@"SEL$2"
    fro(1): flg=4 objn=74191 hint_alias="SS"@"SEL$2"

Registered qb: SEL$3 0x727eeae8 (PARSER)
---------------------
QUERY BLOCK SIGNATURE
---------------------
  signature (): qb_name=SEL$3 nbfros=2 flg=0
    fro(0): flg=4 objn=74171 hint_alias="DATE_DIM"@"SEL$3"
    fro(1): flg=4 objn=74195 hint_alias="WEB_SALES"@"SEL$3"

Registered qb: SEL$4 0x727ecfc8 (PARSER)
---------------------
QUERY BLOCK SIGNATURE
---------------------
  signature (): qb_name=SEL$4 nbfros=2 flg=0
    fro(0): flg=4 objn=74185 hint_alias="CATALOG_SALES"@"SEL$4"
    fro(1): flg=4 objn=74171 hint_alias="DATE_DIM"@"SEL$4"


**************************
Automatic degree of parallelism (AUTODOP)
**************************
Automatic degree of parallelism is disabled: Parameter.
kkopqSetForceParallelProperties: Hint:no
Query: compute:yes forced:no forceDop:0
Global Manual Dop: 1 - Rounded?: no

PM: Considering predicate move-around in query block SEL$1 (#0)
**************************
Predicate Move-Around (PM)
**************************
OPTIMIZER INFORMATION

******************************************
----- Current SQL Statement for this session (sql_id=9n131sd5sqw58) -----
SELECT /*query10*/
    cd_gender,
    cd_marital_status,
    cd_education_status,
    COUNT(*) cnt1,
    cd_purchase_estimate,
    COUNT(*) cnt2,
    cd_credit_rating,
    COUNT(*) cnt3,
    cd_dep_count,
    COUNT(*) cnt4,
    cd_dep_employed_count,
    COUNT(*) cnt5,
    cd_dep_college_count,
    COUNT(*) cnt6
FROM
    customer c,
    customer_address ca,
    customer_demographics
WHERE
    -- join predicates
        c.c_current_addr_sk = ca.ca_address_sk
    AND cd_demo_sk = c.c_current_cdemo_sk
    -- filter predicates
    AND ca.ca_county IN (
        'Chouteau County',
        'Dixie County',
        'Harrisonburg city',
        'Lowndes County',
        'Dinwiddie County'
    )
    -- filter predicate (subquery)
    AND EXISTS (
        SELECT
            *
        FROM
            store_sales ss,
            date_dim
        WHERE
            c.c_customer_sk = ss.ss_customer_sk
            AND ss_sold_date_sk = d_date_sk
            AND d_year = 2001
            AND d_moy BETWEEN 1 AND 1 + 3
            AND ( EXISTS (
                SELECT
                    *
                FROM
                    web_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = ws_bill_customer_sk
                    AND ws_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            )
                  OR EXISTS (
                SELECT
                    *
                FROM
                    catalog_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = cs_ship_customer_sk
                    AND cs_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            ) )
    )
GROUP BY
    cd_gender,
    cd_marital_status,
    cd_education_status,
    cd_purchase_estimate,
    cd_credit_rating,
    cd_dep_count,
    cd_dep_employed_count,
    cd_dep_college_count
ORDER BY
    cd_gender,
    cd_marital_status,
    cd_education_status,
    cd_purchase_estimate,
    cd_credit_rating,
    cd_dep_count,
    cd_dep_employed_count,
    cd_dep_college_count
*******************************************
Legend
The following abbreviations are used by optimizer trace.
CBQT - cost-based query transformation
JPPD - join predicate push-down
OJPPD - old-style (non-cost-based) JPPD
FPD - filter push-down
PM - predicate move-around
CVM - complex view merging
SPJ - select-project-join
SJC - set join conversion
SU - subquery unnesting
OBYE - order by elimination
OST - old style star transformation
ST - new (cbqt) star transformation
CNT - count(col) to count(*) transformation
JE - Join Elimination
JF - join factorization
CBY - connect by
SLP - select list pruning
DP - distinct placement
VT - vector transformation
AAT - Approximate Aggregate Transformation
ORE - CBQT OR-Expansion
LORE - Legacy OR-Expansion
qb - query block
LB - leaf blocks
DK - distinct keys
LB/K - average number of leaf blocks per key
DB/K - average number of data blocks per key
CLUF - clustering factor
NDV - number of distinct values
Resp - response cost
Card - cardinality
Resc - resource cost
NL - nested loops (join)
SM - sort merge (join)
HA - hash (join)
CPUSPEED - CPU Speed 
IOTFRSPEED - I/O transfer speed
IOSEEKTIM - I/O seek time
SREADTIM - average single block read time
MREADTIM - average multiblock read time
MBRC - average multiblock read count
MAXTHR - maximum I/O system throughput
SLAVETHR - average slave I/O throughput
dmeth - distribution method
  1: no partitioning required
  2: value partitioned
  4: right is random (round-robin)
  128: left is random (round-robin)
  8: broadcast right and partition left
  16: broadcast left and partition right
  32: partition left using partitioning of right
  64: partition right using partitioning of left
  256: run the join in serial
  0: invalid distribution method
sel - selectivity
ptn - partition
AP - adaptive plans
***************************************
PARAMETERS USED BY THE OPTIMIZER
********************************
  *************************************
  PARAMETERS WITH ALTERED VALUES
  ******************************
Compilation Environment Dump
sqlstat_enabled                     = true
statistics_level                    = all
_optimizer_adaptive_cursor_sharing  = false
optimizer_use_sql_plan_baselines    = false
_optimizer_use_feedback             = false
_px_adaptive_dist_method            = off
_optimizer_strans_adaptive_pruning  = false
_optimizer_nlj_hj_adaptive_join     = false
optimizer_adaptive_plans            = false
Bug Fix Control Environment


  *************************************
  PARAMETERS WITH DEFAULT VALUES
  ******************************
Compilation Environment Dump
optimizer_mode_hinted               = false
optimizer_features_hinted           = 0.0.0
parallel_execution_enabled          = true
parallel_query_forced_dop           = 0
parallel_dml_forced_dop             = 0
parallel_ddl_forced_degree          = 0
parallel_ddl_forced_instances       = 0
_query_rewrite_fudge                = 90
optimizer_features_enable           = 18.1.0
_optimizer_search_limit             = 5
cpu_count                           = 6
active_instance_count               = 1
parallel_threads_per_cpu            = 1
hash_area_size                      = 131072
bitmap_merge_area_size              = 1048576
sort_area_size                      = 65536
sort_area_retained_size             = 0
_sort_elimination_cost_ratio        = 0
_optimizer_block_size               = 8192
_sort_multiblock_read_count         = 2
_hash_multiblock_io_count           = 0
_db_file_optimizer_read_count       = 8
_optimizer_max_permutations         = 2000
pga_aggregate_target                = 921600 KB
_pga_max_size                       = 204800 KB
_query_rewrite_maxdisjunct          = 257
_smm_auto_min_io_size               = 56 KB
_smm_auto_max_io_size               = 248 KB
_smm_min_size                       = 921 KB
_smm_max_size_static                = 102400 KB
_smm_px_max_size_static             = 460800 KB
_cpu_to_io                          = 0
_optimizer_undo_cost_change         = 18.1.0
parallel_query_mode                 = enabled
_enable_parallel_dml                = disabled
parallel_ddl_mode                   = enabled
optimizer_mode                      = all_rows
_optimizer_percent_parallel         = 101
_always_anti_join                   = choose
_always_semi_join                   = choose
_optimizer_mode_force               = true
_partition_view_enabled             = true
_always_star_transformation         = false
_query_rewrite_or_error             = false
_hash_join_enabled                  = true
cursor_sharing                      = exact
_b_tree_bitmap_plans                = true
star_transformation_enabled         = false
_optimizer_cost_model               = choose
_new_sort_cost_estimate             = true
_complex_view_merging               = true
_unnest_subquery                    = true
_eliminate_common_subexpr           = true
_pred_move_around                   = true
_convert_set_to_join                = false
_push_join_predicate                = true
_push_join_union_view               = true
_fast_full_scan_enabled             = true
_optim_enhance_nnull_detection      = true
_parallel_broadcast_enabled         = true
_px_broadcast_fudge_factor          = 100
_ordered_nested_loop                = true
_no_or_expansion                    = false
optimizer_index_cost_adj            = 100
optimizer_index_caching             = 0
_system_index_caching               = 0
_disable_datalayer_sampling         = false
query_rewrite_enabled               = true
query_rewrite_integrity             = enforced
_query_cost_rewrite                 = true
_query_rewrite_2                    = true
_query_rewrite_1                    = true
_query_rewrite_expression           = true
_query_rewrite_jgmigrate            = true
_query_rewrite_fpc                  = true
_query_rewrite_drj                  = false
_full_pwise_join_enabled            = true
_partial_pwise_join_enabled         = true
_left_nested_loops_random           = true
_improved_row_length_enabled        = true
_index_join_enabled                 = true
_enable_type_dep_selectivity        = true
_improved_outerjoin_card            = true
_optimizer_adjust_for_nulls         = true
_optimizer_degree                   = 0
_use_column_stats_for_function      = true
_subquery_pruning_enabled           = true
_subquery_pruning_mv_enabled        = false
_or_expand_nvl_predicate            = true
_like_with_bind_as_equality         = false
_table_scan_cost_plus_one           = true
_cost_equality_semi_join            = true
_default_non_equality_sel_check     = true
_new_initial_join_orders            = true
_oneside_colstat_for_equijoins      = true
_optim_peek_user_binds              = true
_minimal_stats_aggregation          = true
_force_temptables_for_gsets         = false
workarea_size_policy                = auto
_smm_auto_cost_enabled              = true
_gs_anti_semi_join_allowed          = true
_optim_new_default_join_sel         = true
optimizer_dynamic_sampling          = 2
_pre_rewrite_push_pred              = true
_optimizer_new_join_card_computation = true
_union_rewrite_for_gs               = yes_gset_mvs
_generalized_pruning_enabled        = true
_optim_adjust_for_part_skews        = true
_force_datefold_trunc               = false
_optimizer_system_stats_usage       = true
skip_unusable_indexes               = true
_remove_aggr_subquery               = true
_optimizer_push_down_distinct       = 0
_dml_monitoring_enabled             = true
_optimizer_undo_changes             = false
_predicate_elimination_enabled      = true
_nested_loop_fudge                  = 100
_project_view_columns               = true
_local_communication_costing_enabled = true
_local_communication_ratio          = 50
_query_rewrite_vop_cleanup          = true
_slave_mapping_enabled              = true
_optimizer_cost_based_transformation = linear
_optimizer_mjc_enabled              = true
_right_outer_hash_enable            = true
_spr_push_pred_refspr               = true
_optimizer_cache_stats              = false
_optimizer_cbqt_factor              = 50
_optimizer_squ_bottomup             = true
_fic_area_size                      = 131072
_optimizer_skip_scan_enabled        = true
_optimizer_cost_filter_pred         = false
_optimizer_sortmerge_join_enabled   = true
_optimizer_join_sel_sanity_check    = true
_mmv_query_rewrite_enabled          = true
_bt_mmv_query_rewrite_enabled       = true
_add_stale_mv_to_dependency_list    = true
_distinct_view_unnesting            = false
_optimizer_dim_subq_join_sel        = true
_optimizer_disable_strans_sanity_checks = 0
_optimizer_compute_index_stats      = true
_push_join_union_view2              = true
optimizer_ignore_hints              = false
_optimizer_random_plan              = 0
_query_rewrite_setopgrw_enable      = true
_optimizer_correct_sq_selectivity   = true
_disable_function_based_index       = false
_optimizer_join_order_control       = 3
_optimizer_cartesian_enabled        = true
_optimizer_starplan_enabled         = true
_extended_pruning_enabled           = true
_optimizer_push_pred_cost_based     = true
_optimizer_null_aware_antijoin      = true
_optimizer_extend_jppd_view_types   = true
_sql_model_unfold_forloops          = run_time
_enable_dml_lock_escalation         = false
_bloom_filter_enabled               = true
_update_bji_ipdml_enabled           = 0
_optimizer_extended_cursor_sharing  = udo
_dm_max_shared_pool_pct             = 1
_optimizer_cost_hjsmj_multimatch    = true
_optimizer_transitivity_retain      = true
_px_pwg_enabled                     = true
optimizer_secure_view_merging       = true
_optimizer_join_elimination_enabled = true
flashback_table_rpi                 = non_fbt
_optimizer_cbqt_no_size_restriction = true
_optimizer_enhanced_filter_push     = true
_optimizer_filter_pred_pullup       = true
_rowsrc_trace_level                 = 0
_simple_view_merging                = true
_optimizer_rownum_pred_based_fkr    = true
_optimizer_better_inlist_costing    = all
_optimizer_self_induced_cache_cost  = false
_optimizer_min_cache_blocks         = 10
_optimizer_or_expansion             = depth
_optimizer_order_by_elimination_enabled = true
_optimizer_outer_to_anti_enabled    = true
_selfjoin_mv_duplicates             = true
_dimension_skip_null                = true
_force_rewrite_enable               = false
_optimizer_star_tran_in_with_clause = true
_optimizer_complex_pred_selectivity = true
_optimizer_connect_by_cost_based    = true
_gby_hash_aggregation_enabled       = true
_globalindex_pnum_filter_enabled    = true
_px_minus_intersect                 = true
_fix_control_key                    = 0
_force_slave_mapping_intra_part_loads = false
_force_tmp_segment_loads            = false
_query_mmvrewrite_maxpreds          = 10
_query_mmvrewrite_maxintervals      = 5
_query_mmvrewrite_maxinlists        = 5
_query_mmvrewrite_maxdmaps          = 10
_query_mmvrewrite_maxcmaps          = 20
_query_mmvrewrite_maxregperm        = 512
_query_mmvrewrite_maxqryinlistvals  = 500
_disable_parallel_conventional_load = false
_trace_virtual_columns              = false
_replace_virtual_columns            = true
_virtual_column_overload_allowed    = true
_kdt_buffering                      = true
_first_k_rows_dynamic_proration     = true
_optimizer_sortmerge_join_inequality = true
_optimizer_aw_stats_enabled         = true
_bloom_pruning_enabled              = true
result_cache_mode                   = MANUAL
_px_ual_serial_input                = true
_optimizer_skip_scan_guess          = false
_enable_row_shipping                = true
_row_shipping_threshold             = 100
_row_shipping_explain               = false
transaction_isolation_level         = read_commited
_optimizer_distinct_elimination     = true
_optimizer_multi_level_push_pred    = true
_optimizer_group_by_placement       = true
_optimizer_rownum_bind_default      = 10
_enable_query_rewrite_on_remote_objs = true
_optimizer_extended_cursor_sharing_rel = simple
_direct_path_insert_features        = 0
_optimizer_improve_selectivity      = true
optimizer_use_pending_statistics    = false
_optimizer_enable_density_improvements = true
_optimizer_aw_join_push_enabled     = true
_optimizer_connect_by_combine_sw    = true
_enable_pmo_ctas                    = 0
_optimizer_native_full_outer_join   = force
_bloom_predicate_enabled            = true
_optimizer_enable_extended_stats    = true
_is_lock_table_for_ddl_wait_lock    = 0
_pivot_implementation_method        = choose
optimizer_capture_sql_plan_baselines = false
_optimizer_star_trans_min_cost      = 0
_optimizer_star_trans_min_ratio     = 0
_with_subquery                      = OPTIMIZER
_optimizer_fkr_index_cost_bias      = 10
_optimizer_use_subheap              = true
parallel_degree_policy              = manual
parallel_degree                     = 0
parallel_min_time_threshold         = 10
_parallel_time_unit                 = 10
_optimizer_or_expansion_subheap     = true
_optimizer_free_transformation_heap = true
_optimizer_reuse_cost_annotations   = true
_result_cache_auto_size_threshold   = 100
_result_cache_auto_time_threshold   = 1000
_optimizer_nested_rollup_for_gset   = 100
_nlj_batching_enabled               = 1
parallel_query_default_dop          = 0
is_recur_flags                      = 0
optimizer_use_invisible_indexes     = false
flashback_data_archive_internal_cursor = 0
_optimizer_extended_stats_usage_control = 192
_parallel_syspls_obey_force         = true
cell_offload_processing             = true
_rdbms_internal_fplib_enabled       = false
db_file_multiblock_read_count       = 123
_bloom_folding_enabled              = true
_mv_generalized_oj_refresh_opt      = true
cell_offload_compaction             = ADAPTIVE
cell_offload_plan_display           = AUTO
_bloom_predicate_offload            = true
_bloom_filter_size                  = 0
_bloom_pushing_max                  = 512
parallel_degree_limit               = 65535
parallel_force_local                = false
parallel_max_degree                 = 6
total_cpu_count                     = 6
_optimizer_coalesce_subqueries      = true
_optimizer_fast_pred_transitivity   = true
_optimizer_fast_access_pred_analysis = true
_optimizer_unnest_disjunctive_subq  = true
_optimizer_unnest_corr_set_subq     = true
_optimizer_distinct_agg_transform   = true
_aggregation_optimization_settings  = 0
_optimizer_connect_by_elim_dups     = true
_optimizer_eliminate_filtering_join = true
_connect_by_use_union_all           = true
dst_upgrade_insert_conv             = true
advanced_queuing_internal_cursor    = 0
_optimizer_unnest_all_subqueries    = true
parallel_autodop                    = 0
parallel_ddldml                     = 0
_parallel_cluster_cache_policy      = adaptive
_parallel_scalability               = 50
iot_internal_cursor                 = 0
_optimizer_instance_count           = 0
_optimizer_connect_by_cb_whr_only   = false
_suppress_scn_chk_for_cqn           = nosuppress_1466
_optimizer_join_factorization       = true
_optimizer_use_cbqt_star_transformation = true
_optimizer_table_expansion          = true
_and_pruning_enabled                = true
_deferred_constant_folding_mode     = DEFAULT
_optimizer_distinct_placement       = true
partition_pruning_internal_cursor   = 0
parallel_hinted                     = none
_sql_compatibility                  = 0
_optimizer_try_st_before_jppd       = true
_dml_frequency_tracking             = false
_optimizer_interleave_jppd          = true
kkb_drop_empty_segments             = 0
_px_partition_scan_enabled          = true
_px_partition_scan_threshold        = 64
_optimizer_false_filter_pred_pullup = true
_bloom_minmax_enabled               = true
only_move_row                       = 0
_optimizer_enable_table_lookup_by_nl = true
parallel_execution_message_size     = 16384
_px_loc_msg_cost                    = 1000
_px_net_msg_cost                    = 10000
_optimizer_generate_transitive_pred = true
_optimizer_cube_join_enabled        = true
_optimizer_filter_pushdown          = true
deferred_segment_creation           = true
_optimizer_outer_join_to_inner      = true
_allow_level_without_connect_by     = false
_max_rwgs_groupings                 = 8192
_optimizer_hybrid_fpwj_enabled      = true
_px_replication_enabled             = true
ilm_filter                          = 0
_optimizer_partial_join_eval        = true
_px_concurrent                      = true
_px_object_sampling_enabled         = true
_px_back_to_parallel                = OFF
_optimizer_unnest_scalar_sq         = true
_optimizer_full_outer_join_to_outer = true
_px_filter_parallelized             = true
_px_filter_skew_handling            = true
_zonemap_use_enabled                = true
_zonemap_control                    = 0
_optimizer_multi_table_outerjoin    = true
_px_groupby_pushdown                = force
_partition_advisor_srs_active       = true
_optimizer_ansi_join_lateral_enhance = true
_px_parallelize_expression          = true
_fast_index_maintenance             = true
_optimizer_ansi_rearchitecture      = true
_optimizer_gather_stats_on_load     = true
ilm_access_tracking                 = 0
ilm_dml_timestamp                   = 0
_px_adaptive_dist_method_threshold  = 0
_optimizer_batch_table_access_by_rowid = true
optimizer_adaptive_reporting_only   = false
_optimizer_ads_max_table_count      = 0
_optimizer_ads_time_limit           = 0
_optimizer_ads_use_result_cache     = true
_px_wif_dfo_declumping              = choose
_px_wif_extend_distribution_keys    = true
_px_join_skew_handling              = true
_px_join_skew_ratio                 = 10
_px_join_skew_minfreq               = 30
CLI_internal_cursor                 = 0
_parallel_fault_tolerance_enabled   = false
_parallel_fault_tolerance_threshold = 3
_px_partial_rollup_pushdown         = adaptive
_px_single_server_enabled           = true
_optimizer_dsdir_usage_control      = 0
_px_cpu_autodop_enabled             = true
_px_cpu_process_bandwidth           = 200
_sql_hvshare_threshold              = 0
_px_tq_rowhvs                       = true
_optimizer_use_gtt_session_stats    = true
_optimizer_proc_rate_level          = basic
_px_hybrid_TSM_HWMB_load            = true
_optimizer_use_histograms           = true
PMO_altidx_rebuild                  = 0
_cell_offload_expressions           = true
_cell_materialize_virtual_columns   = true
_cell_materialize_all_expressions   = false
_rowsets_enabled                    = true
_rowsets_target_maxsize             = 524288
_rowsets_max_rows                   = 256
_use_hidden_partitions              = 0
_px_monitor_load                    = false
_px_load_monitor_threshold          = 10000
_px_numa_support_enabled            = false
total_processor_group_count         = 1
_adaptive_window_consolidator_enabled = true
_bloom_rm_filter                    = false
_optimizer_null_accepting_semijoin  = true
_long_varchar_allow_IOT             = 0
_parallel_ctas_enabled              = true
_cell_offload_complex_processing    = true
_optimizer_performance_feedback     = off
_optimizer_proc_rate_source         = DEFAULT
_hashops_prefetch_size              = 4
_cell_offload_sys_context           = true
_multi_commit_global_index_maint    = 0
_stat_aggs_one_pass_algorithm       = false
_dbg_scan                           = 0
_oltp_comp_dbg_scan                 = 0
_arch_comp_dbg_scan                 = 0
_optimizer_gather_feedback          = true
_upddel_dba_hash_mask_bits          = 0
_px_pwmr_enabled                    = true
_px_cdb_view_enabled                = true
_bloom_sm_enabled                   = true
_optimizer_cluster_by_rowid         = true
_optimizer_cluster_by_rowid_control = 129
_partition_cdb_view_enabled         = true
_common_data_view_enabled           = true
_pred_push_cdb_view_enabled         = true
_rowsets_cdb_view_enabled           = true
_distinct_agg_optimization_gsets    = choose
_array_cdb_view_enabled             = true
_optimizer_adaptive_plan_control    = 0
_optimizer_adaptive_random_seed     = 0
_optimizer_cbqt_or_expansion        = on
_inmemory_dbg_scan                  = 0
_gby_vector_aggregation_enabled     = true
_optimizer_vector_transformation    = true
_optimizer_vector_fact_dim_ratio    = 10
_key_vector_max_size                = 0
_key_vector_predicate_enabled       = true
_key_vector_predicate_threshold     = 0
_vector_operations_control          = 0
_optimizer_vector_min_fact_rows     = 10000000
parallel_dblink                     = 0
_px_scalable_invdist                = true
_key_vector_offload                 = predicate
_optimizer_aggr_groupby_elim        = true
_optimizer_reduce_groupby_key       = true
_vector_serialize_temp_threshold    = 1000
_always_vector_transformation       = false
_optimizer_cluster_by_rowid_batched = true
_object_link_fixed_enabled          = true
optimizer_inmemory_aware            = true
_optimizer_inmemory_table_expansion = true
_optimizer_inmemory_gen_pushable_preds = true
_optimizer_inmemory_autodop         = true
_optimizer_inmemory_access_path     = true
_optimizer_inmemory_bloom_filter    = true
_parallel_inmemory_min_time_threshold = 1
_parallel_inmemory_time_unit        = 1
_rc_sys_obj_enabled                 = true
_indexable_con_id                   = true
_bloom_serial_filter                = on
inmemory_force                      = default
inmemory_query                      = enable
_inmemory_query_scan                = true
_inmemory_query_fetch_by_rowid      = false
_inmemory_pruning                   = on
_px_autodop_pq_overhead             = true
_px_external_table_default_stats    = true
_optimizer_key_vector_aggr_factor   = 75
_optimizer_vector_cost_adj          = 100
_cdb_cross_container                = 65535
_cdb_view_parallel_degree           = 65535
_optimizer_hll_entry                = 4096
_px_cdb_view_join_enabled           = true
inmemory_size                       = 0
_external_table_smart_scan          = hadoop_only
_optimizer_inmemory_minmax_pruning  = true
_approx_cnt_distinct_gby_pushdown   = choose
_approx_cnt_distinct_optimization   = 0
_optimizer_ads_use_partial_results  = true
_query_execution_time_limit         = 0
_optimizer_inmemory_cluster_aware_dop = true
_optimizer_db_blocks_buffers        = 0 KB
_query_rewrite_use_on_query_computation = true
_px_scalable_invdist_mcol           = true
_optimizer_bushy_join               = off
_optimizer_bushy_fact_dim_ratio     = 20
_optimizer_bushy_fact_min_size      = 100000
_optimizer_bushy_cost_factor        = 100
_rmt_for_table_redef_enabled        = true
_optimizer_eliminate_subquery       = true
_sqlexec_cache_aware_hash_join_enabled = true
_zonemap_usage_tracking             = true
_sqlexec_hash_based_distagg_enabled = false
_sqlexec_disable_hash_based_distagg_tiv = false
_sqlexec_hash_based_distagg_ssf_enabled = true
_sqlexec_distagg_optimization_settings = 0
approx_for_aggregation              = false
approx_for_count_distinct           = false
_optimizer_union_all_gsets          = true
_rowsets_use_encoding               = true
_rowsets_max_enc_rows               = 64
_optimizer_enhanced_join_elimination = true
_optimizer_multicol_join_elimination = true
_key_vector_create_pushdown_threshold = 20000
_optimizer_enable_plsql_stats       = true
_recursive_with_parallel            = true
_recursive_with_branch_iterations   = 7
_px_dist_agg_partial_rollup_pushdown = adaptive
_px_adaptive_dist_bypass_enabled    = true
_enable_view_pdb                    = true
_optimizer_key_vector_pruning_enabled = true
_pwise_distinct_enabled             = true
_recursive_with_using_temp_table    = false
_partition_read_only                = true
_sql_alias_scope                    = true
_cdb_view_no_skip_migrate           = false
_approx_perc_sampling_err_rate      = 2
_sqlexec_encoding_aware_hj_enabled  = true
rim_node_exist                      = 0
_enable_containers_subquery         = true
_force_containers_subquery          = false
_cell_offload_vector_groupby        = true
_vector_encoding_mode               = manual
_ds_xt_split_count                  = 1
_ds_sampling_method                 = PROGRESSIVE
_optimizer_ads_use_spd_cache        = true
_optimizer_use_table_scanrate       = HADOOP_ONLY
_optimizer_use_xt_rowid             = true
_xt_sampling_scan_granules          = on
_recursive_with_control             = 0
_sqlexec_use_rwo_aware_expr_analysis = true
_optimizer_band_join_aware          = true
_optimizer_vector_base_dim_fact_factor = 200
approx_for_percentile               = none
_approx_percentile_optimization     = 0
_projection_pushdown                = true
_px_object_sampling                 = 200
_optimizer_adaptive_plans_continuous = false
_optimizer_adaptive_plans_iterative = false
_ds_enable_view_sampling            = true
_optimizer_generate_ptf_implied_preds = true
_optimizer_inmemory_use_stored_stats = AUTO
_cdb_special_old_xplan              = true
uniaud_internal_cursor              = 0
_kd_dbg_control                     = 0
_mv_access_compute_fresh_data       = on
_bloom_filter_ratio                 = 35
_optimizer_control_shard_qry_processing = 65528
containers_parallel_degree          = 65535
sql_from_coordinator                = 0
_xt_sampling_scan_granules_min_granules = 1
_in_memory_cdt                      = LIMITED
_in_memory_cdt_maxpx                = 4
_px_partition_load_dist_threshold   = 64
_px_adaptive_dist_bypass_optimization = 1
_optimizer_interleave_or_expansion  = true
optimizer_adaptive_statistics       = false
_optimizer_use_feedback_for_join    = false
_optimizer_ads_for_pq               = false
_px_join_skewed_values_count        = 0
optimizer_ignore_parallel_hints     = false
parallel_min_degree                 = 1
_px_nlj_bcast_rr_threshold          = 10
_optimizer_gather_stats_on_load_all = false
_optimizer_gather_stats_on_load_hist = false
_optimizer_allow_all_access_paths   = true
_key_vector_double_enabled          = true
_key_vector_timestamp_enabled       = true
_optimizer_answering_query_using_stats = false
_disable_dblink_optim               = true
_cell_offload_hybrid_processing     = true
_read_optimized_table_lookup        = true
_optimizer_key_vector_payload       = true
_optimizer_vector_fact_payload_ratio = 20
_bloom_pruning_setops_enabled       = true
_bloom_filter_setops_enabled        = true
_key_vector_shared_dgk_ht           = true
_px_pwise_wif_enabled               = true
_sqlexec_reorder_wif_enabled        = true
_px_partition_skew_threshold        = 80
_sqlexec_pwiseops_with_sqlfuncs_enabled = true
_sqlexec_pwiseops_with_binds_enabled = true
_px_shared_hash_join                = false
_px_reuse_server_groups             = multi
_px_join_skew_null_handling         = true
_px_join_skew_use_histogram         = true
_px_join_skew_sampling_time_limit   = 50
_px_join_skew_sampling_percent      = 0
_cdb_view_no_skip_restricted        = false
_inmemory_external_table            = true
_sqlexec_use_kgghash3               = true
_cell_offload_vector_groupby_force  = false
_hcs_opt_av_pred_push               = true
parallel_dop_doubled                = 0

  ***************************************
  PARAMETERS IN OPT_PARAM HINT
  ****************************
***************************************
Column Usage Monitoring is ON: tracking level = 21
***************************************

Considering Query Transformations on query block SEL$1 (#0)
**************************
Query transformations (QT)
**************************
JF: Checking validity of join factorization for query block SEL$3 (#0)
JF: Bypassed: not a UNION or UNION-ALL query block.
ST: not valid since star transformation parameter is FALSE
TE: Checking validity of table expansion for query block SEL$3 (#0)
TE: Bypassed: No relevant table found.
ORE: Checking validity of OR Expansion for query block SEL$3 (#0)
ORE: Predicate chain before QB validity check - SEL$3
"C"."C_CUSTOMER_SK"="WEB_SALES"."WS_BILL_CUSTOMER_SK" AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3
ORE: Predicate chain after QB validity check - SEL$3
"C"."C_CUSTOMER_SK"="WEB_SALES"."WS_BILL_CUSTOMER_SK" AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3
ORE: bypassed - No valid predicate for OR expansion.
VT: Initial VT validity check for query block SEL$3 (#0)
VT: Bypassed: inmemory is disabled.
BJ: Checking validity for bushy join for query block SEL$3 (#0)
invalid because Not enabled by hint/parameter
BJ: Bypassed: Not enabled by hint/parameter.
JF: Checking validity of join factorization for query block SEL$4 (#0)
JF: Bypassed: not a UNION or UNION-ALL query block.
ST: not valid since star transformation parameter is FALSE
TE: Checking validity of table expansion for query block SEL$4 (#0)
TE: Bypassed: No relevant table found.
ORE: Checking validity of OR Expansion for query block SEL$4 (#0)
ORE: Predicate chain before QB validity check - SEL$4
"C"."C_CUSTOMER_SK"="CATALOG_SALES"."CS_SHIP_CUSTOMER_SK" AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3
ORE: Predicate chain after QB validity check - SEL$4
"C"."C_CUSTOMER_SK"="CATALOG_SALES"."CS_SHIP_CUSTOMER_SK" AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3
ORE: bypassed - No valid predicate for OR expansion.
VT: Initial VT validity check for query block SEL$4 (#0)
VT: Bypassed: inmemory is disabled.
BJ: Checking validity for bushy join for query block SEL$4 (#0)
invalid because Not enabled by hint/parameter
BJ: Bypassed: Not enabled by hint/parameter.
CBQT: Validity checks passed for 9n131sd5sqw58.
CSE: Considering common sub-expression elimination in query block SEL$1 (#0)
*************************
Common Subexpression elimination (CSE)
*************************
CSE: Considering common sub-expression elimination in query block SEL$2 (#0)
*************************
Common Subexpression elimination (CSE)
*************************
CSE: Considering common sub-expression elimination in query block SEL$4 (#0)
*************************
Common Subexpression elimination (CSE)
*************************
CSE:     CSE not performed on query block SEL$4 (#0).
CSE: Considering common sub-expression elimination in query block SEL$3 (#0)
*************************
Common Subexpression elimination (CSE)
*************************
CSE:     CSE not performed on query block SEL$3 (#0).
CSE:     CSE not performed on query block SEL$2 (#0).
CSE:     CSE not performed on query block SEL$1 (#0).
OBYE:   Considering Order-by Elimination from view SEL$1 (#0)
***************************
Order-by elimination (OBYE)
***************************
OBYE:   Considering Order-by Elimination from view SEL$2 (#0)
***************************
Order-by elimination (OBYE)
***************************
OBYE:   Considering Order-by Elimination from view SEL$4 (#0)
***************************
Order-by elimination (OBYE)
***************************
OBYE:     OBYE bypassed: no order by to eliminate.
OBYE:   Considering Order-by Elimination from view SEL$3 (#0)
***************************
Order-by elimination (OBYE)
***************************
OBYE:     OBYE bypassed: no order by to eliminate.
OBYE:     OBYE bypassed: no order by to eliminate.
OBYE:     OBYE performed.
JE:[V2]   Considering Join Elimination on query block SEL$3 (#0)
*************************
Join Elimination [JE:R 12.2]    
*************************
SQL:******* UNPARSED QUERY IS *******
SELECT 0 FROM "TPCDS"."WEB_SALES" "WEB_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="WEB_SALES"."WS_BILL_CUSTOMER_SK" AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3
JE:[V2] Query block (0x7f04727eeae8) before join elimination:
SQL:******* UNPARSED QUERY IS *******
SELECT 0 FROM "TPCDS"."WEB_SALES" "WEB_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="WEB_SALES"."WS_BILL_CUSTOMER_SK" AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3
JE:[V2]: Try to eliminate DATE_DIM by ref. join elim using PRIMARY(D_DATE_SK) <- FOREIGN(WS_SOLD_DATE_SK)
JE:[V2]: Cannot eliminate DATE_DIM by ref. join elim - predicate column refs.
JE:[V2]: Try to eliminate DATE_DIM by ref. join elim using PRIMARY(D_DATE_SK) <- FOREIGN()
JE:[V2]: Cannot eliminate DATE_DIM by ref. join elim - no constr. based join pred(s)
JE:[V2]: Try to eliminate DATE_DIM by ref. join elim using NTSID
JE:[V2]: Cannot eliminate DATE_DIM by ref. join elim - no constr. based join pred(s)
JE:[V2]: Try to eliminate WEB_SALES by ref. join elim using NTSID
JE:[V2]: Cannot eliminate WEB_SALES by ref. join elim - no constr. based join pred(s)
JE:[V2] Query block (0x7f04727eeae8) after join elimination:
SQL:******* UNPARSED QUERY IS *******
SELECT 0 FROM "TPCDS"."WEB_SALES" "WEB_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="WEB_SALES"."WS_BILL_CUSTOMER_SK" AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3

JE:[V2]   Considering Join Elimination on query block SEL$4 (#0)
*************************
Join Elimination [JE:R 12.2]    
*************************
SQL:******* UNPARSED QUERY IS *******
SELECT 0 FROM "TPCDS"."CATALOG_SALES" "CATALOG_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="CATALOG_SALES"."CS_SHIP_CUSTOMER_SK" AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3
JE:[V2] Query block (0x7f04727ecfc8) before join elimination:
SQL:******* UNPARSED QUERY IS *******
SELECT 0 FROM "TPCDS"."CATALOG_SALES" "CATALOG_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="CATALOG_SALES"."CS_SHIP_CUSTOMER_SK" AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3
JE:[V2]: Try to eliminate DATE_DIM by ref. join elim using PRIMARY(D_DATE_SK) <- FOREIGN(CS_SOLD_DATE_SK)
JE:[V2]: Cannot eliminate DATE_DIM by ref. join elim - predicate column refs.
JE:[V2]: Try to eliminate DATE_DIM by ref. join elim using PRIMARY(D_DATE_SK) <- FOREIGN()
JE:[V2]: Cannot eliminate DATE_DIM by ref. join elim - no constr. based join pred(s)
JE:[V2]: Try to eliminate DATE_DIM by ref. join elim using NTSID
JE:[V2]: Cannot eliminate DATE_DIM by ref. join elim - no constr. based join pred(s)
JE:[V2]: Try to eliminate CATALOG_SALES by ref. join elim using NTSID
JE:[V2]: Cannot eliminate CATALOG_SALES by ref. join elim - no constr. based join pred(s)
JE:[V2] Query block (0x7f04727ecfc8) after join elimination:
SQL:******* UNPARSED QUERY IS *******
SELECT 0 FROM "TPCDS"."CATALOG_SALES" "CATALOG_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="CATALOG_SALES"."CS_SHIP_CUSTOMER_SK" AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3

JE:[V2]   Considering Join Elimination on query block SEL$2 (#0)
*************************
Join Elimination [JE:R 12.2]    
*************************
SQL:******* UNPARSED QUERY IS *******
SELECT 0 FROM "TPCDS"."STORE_SALES" "SS","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="SS"."SS_CUSTOMER_SK" AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3 AND ( EXISTS (SELECT 0 FROM "TPCDS"."WEB_SALES" "WEB_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="WEB_SALES"."WS_BILL_CUSTOMER_SK" AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3) OR  EXISTS (SELECT 0 FROM "TPCDS"."CATALOG_SALES" "CATALOG_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="CATALOG_SALES"."CS_SHIP_CUSTOMER_SK" AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3))
JE:[V2] Query block (0x7f04727f0400) before join elimination:
SQL:******* UNPARSED QUERY IS *******
SELECT 0 FROM "TPCDS"."STORE_SALES" "SS","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="SS"."SS_CUSTOMER_SK" AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3 AND ( EXISTS (SELECT 0 FROM "TPCDS"."WEB_SALES" "WEB_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="WEB_SALES"."WS_BILL_CUSTOMER_SK" AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3) OR  EXISTS (SELECT 0 FROM "TPCDS"."CATALOG_SALES" "CATALOG_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="CATALOG_SALES"."CS_SHIP_CUSTOMER_SK" AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3))
JE:[V2]: Try to eliminate DATE_DIM by ref. join elim using PRIMARY(D_DATE_SK) <- FOREIGN(SS_SOLD_DATE_SK)
JE:[V2]: Cannot eliminate DATE_DIM by ref. join elim - predicate column refs.
JE:[V2]: Try to eliminate DATE_DIM by ref. join elim using NTSID
JE:[V2]: Cannot eliminate DATE_DIM by ref. join elim - no constr. based join pred(s)
JE:[V2]: Try to eliminate SS by ref. join elim using NTSID
JE:[V2]: Cannot eliminate SS by ref. join elim - no constr. based join pred(s)
JE:[V2] Query block (0x7f04727f0400) after join elimination:
SQL:******* UNPARSED QUERY IS *******
SELECT 0 FROM "TPCDS"."STORE_SALES" "SS","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="SS"."SS_CUSTOMER_SK" AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3 AND ( EXISTS (SELECT 0 FROM "TPCDS"."WEB_SALES" "WEB_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="WEB_SALES"."WS_BILL_CUSTOMER_SK" AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3) OR  EXISTS (SELECT 0 FROM "TPCDS"."CATALOG_SALES" "CATALOG_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="CATALOG_SALES"."CS_SHIP_CUSTOMER_SK" AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3))

JE:[V2]   Considering Join Elimination on query block SEL$1 (#0)
*************************
Join Elimination [JE:R 12.2]    
*************************
SQL:******* UNPARSED QUERY IS *******
SELECT "CUSTOMER_DEMOGRAPHICS"."CD_GENDER" "CD_GENDER","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS" "CD_MARITAL_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS" "CD_EDUCATION_STATUS",COUNT(*) "CNT1","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE" "CD_PURCHASE_ESTIMATE",COUNT(*) "CNT2","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING" "CD_CREDIT_RATING",COUNT(*) "CNT3","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT" "CD_DEP_COUNT",COUNT(*) "CNT4","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT" "CD_DEP_EMPLOYED_COUNT",COUNT(*) "CNT5","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT" "CD_DEP_COLLEGE_COUNT",COUNT(*) "CNT6" FROM "TPCDS"."CUSTOMER" "C","TPCDS"."CUSTOMER_ADDRESS" "CA","TPCDS"."CUSTOMER_DEMOGRAPHICS" "CUSTOMER_DEMOGRAPHICS" WHERE "C"."C_CURRENT_ADDR_SK"="CA"."CA_ADDRESS_SK" AND "CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK"="C"."C_CURRENT_CDEMO_SK" AND ("CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County' OR "CA"."CA_COUNTY"='Dinwiddie County') AND  EXISTS (SELECT 0 FROM "TPCDS"."STORE_SALES" "SS","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="SS"."SS_CUSTOMER_SK" AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3 AND ( EXISTS (SELECT 0 FROM "TPCDS"."WEB_SALES" "WEB_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="WEB_SALES"."WS_BILL_CUSTOMER_SK" AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3) OR  EXISTS (SELECT 0 FROM "TPCDS"."CATALOG_SALES" "CATALOG_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="CATALOG_SALES"."CS_SHIP_CUSTOMER_SK" AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3))) GROUP BY "CUSTOMER_DEMOGRAPHICS"."CD_GENDER","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT" ORDER BY "CUSTOMER_DEMOGRAPHICS"."CD_GENDER","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT"
JE:[V2] Query block (0x7f0478a29c28) before join elimination:
SQL:******* UNPARSED QUERY IS *******
SELECT "CUSTOMER_DEMOGRAPHICS"."CD_GENDER" "CD_GENDER","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS" "CD_MARITAL_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS" "CD_EDUCATION_STATUS",COUNT(*) "CNT1","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE" "CD_PURCHASE_ESTIMATE",COUNT(*) "CNT2","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING" "CD_CREDIT_RATING",COUNT(*) "CNT3","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT" "CD_DEP_COUNT",COUNT(*) "CNT4","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT" "CD_DEP_EMPLOYED_COUNT",COUNT(*) "CNT5","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT" "CD_DEP_COLLEGE_COUNT",COUNT(*) "CNT6" FROM "TPCDS"."CUSTOMER" "C","TPCDS"."CUSTOMER_ADDRESS" "CA","TPCDS"."CUSTOMER_DEMOGRAPHICS" "CUSTOMER_DEMOGRAPHICS" WHERE "C"."C_CURRENT_ADDR_SK"="CA"."CA_ADDRESS_SK" AND "CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK"="C"."C_CURRENT_CDEMO_SK" AND ("CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County') AND  EXISTS (SELECT 0 FROM "TPCDS"."STORE_SALES" "SS","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="SS"."SS_CUSTOMER_SK" AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3 AND ( EXISTS (SELECT 0 FROM "TPCDS"."WEB_SALES" "WEB_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="WEB_SALES"."WS_BILL_CUSTOMER_SK" AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3) OR  EXISTS (SELECT 0 FROM "TPCDS"."CATALOG_SALES" "CATALOG_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="CATALOG_SALES"."CS_SHIP_CUSTOMER_SK" AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3))) GROUP BY "CUSTOMER_DEMOGRAPHICS"."CD_GENDER","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT" ORDER BY "CUSTOMER_DEMOGRAPHICS"."CD_GENDER","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT"
JE:[V2]: Try to eliminate CUSTOMER_DEMOGRAPHICS by ref. join elim using NTSID
JE:[V2]: Cannot eliminate CUSTOMER_DEMOGRAPHICS by ref. join elim - no constr. based join pred(s)
JE:[V2]: Try to eliminate CUSTOMER_DEMOGRAPHICS by ref. join elim using PRIMARY(CD_DEMO_SK) <- FOREIGN(C_CURRENT_CDEMO_SK)
JE:[V2]: Cannot eliminate CUSTOMER_DEMOGRAPHICS by ref. join elim - predicate column refs.
JE:[V2]: Try to eliminate CUSTOMER_DEMOGRAPHICS by ref. join elim using NTSID
JE:[V2]: Cannot eliminate CUSTOMER_DEMOGRAPHICS by ref. join elim - no constr. based join pred(s)
JE:[V2]: Try to eliminate CA by ref. join elim using NTSID
JE:[V2]: Cannot eliminate CA by ref. join elim - no constr. based join pred(s)
JE:[V2]: Try to eliminate CA by ref. join elim using PRIMARY(CA_ADDRESS_SK) <- FOREIGN(C_CURRENT_ADDR_SK)
JE:[V2]: Cannot eliminate CA by ref. join elim - predicate column refs.
JE:[V2]: Try to eliminate CA by ref. join elim using NTSID
JE:[V2]: Cannot eliminate CA by ref. join elim - no constr. based join pred(s)
JE:[V2]: Try to eliminate C by ref. join elim using NTSID
JE:[V2]: Cannot eliminate C by ref. join elim - no constr. based join pred(s)
JE:[V2]: Try to eliminate C by ref. join elim using NTSID
JE:[V2]: Cannot eliminate C by ref. join elim - no constr. based join pred(s)
JE:[V2] Query block (0x7f0478a29c28) after join elimination:
SQL:******* UNPARSED QUERY IS *******
SELECT "CUSTOMER_DEMOGRAPHICS"."CD_GENDER" "CD_GENDER","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS" "CD_MARITAL_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS" "CD_EDUCATION_STATUS",COUNT(*) "CNT1","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE" "CD_PURCHASE_ESTIMATE",COUNT(*) "CNT2","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING" "CD_CREDIT_RATING",COUNT(*) "CNT3","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT" "CD_DEP_COUNT",COUNT(*) "CNT4","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT" "CD_DEP_EMPLOYED_COUNT",COUNT(*) "CNT5","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT" "CD_DEP_COLLEGE_COUNT",COUNT(*) "CNT6" FROM "TPCDS"."CUSTOMER" "C","TPCDS"."CUSTOMER_ADDRESS" "CA","TPCDS"."CUSTOMER_DEMOGRAPHICS" "CUSTOMER_DEMOGRAPHICS" WHERE "C"."C_CURRENT_ADDR_SK"="CA"."CA_ADDRESS_SK" AND "CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK"="C"."C_CURRENT_CDEMO_SK" AND ("CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County') AND  EXISTS (SELECT 0 FROM "TPCDS"."STORE_SALES" "SS","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="SS"."SS_CUSTOMER_SK" AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3 AND ( EXISTS (SELECT 0 FROM "TPCDS"."WEB_SALES" "WEB_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="WEB_SALES"."WS_BILL_CUSTOMER_SK" AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3) OR  EXISTS (SELECT 0 FROM "TPCDS"."CATALOG_SALES" "CATALOG_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="CATALOG_SALES"."CS_SHIP_CUSTOMER_SK" AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3))) GROUP BY "CUSTOMER_DEMOGRAPHICS"."CD_GENDER","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT" ORDER BY "CUSTOMER_DEMOGRAPHICS"."CD_GENDER","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT"

OJE: Begin: find best directive for query block SEL$1 (#0)
OJE: End: finding best directive for query block SEL$1 (#0)
CNT:   Considering count(col) to count(*) on query block SEL$1 (#0)
*************************
Count(col) to Count(*) (CNT)
*************************
CNT:     COUNT() to COUNT(*) not done.
OJE: Begin: find best directive for query block SEL$2 (#0)
OJE: End: finding best directive for query block SEL$2 (#0)
OJE: Begin: find best directive for query block SEL$3 (#0)
OJE: End: finding best directive for query block SEL$3 (#0)
OJE: Begin: find best directive for query block SEL$4 (#0)
OJE: End: finding best directive for query block SEL$4 (#0)
JE:[V2]   Considering Join Elimination on query block SEL$3 (#0)
*************************
Join Elimination [JE:R 12.2]    
*************************
SQL:******* UNPARSED QUERY IS *******
SELECT 0 FROM "TPCDS"."WEB_SALES" "WEB_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="WEB_SALES"."WS_BILL_CUSTOMER_SK" AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3
JE:[V2] Query block (0x7f04727eeae8) before join elimination:
SQL:******* UNPARSED QUERY IS *******
SELECT 0 FROM "TPCDS"."WEB_SALES" "WEB_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="WEB_SALES"."WS_BILL_CUSTOMER_SK" AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3
JE:[V2]: Try to eliminate DATE_DIM by ref. join elim using PRIMARY(D_DATE_SK) <- FOREIGN(WS_SOLD_DATE_SK)
JE:[V2]: Cannot eliminate DATE_DIM by ref. join elim - predicate column refs.
JE:[V2]: Try to eliminate DATE_DIM by ref. join elim using PRIMARY(D_DATE_SK) <- FOREIGN()
JE:[V2]: Cannot eliminate DATE_DIM by ref. join elim - no constr. based join pred(s)
JE:[V2]: Try to eliminate DATE_DIM by ref. join elim using NTSID
JE:[V2]: Cannot eliminate DATE_DIM by ref. join elim - no constr. based join pred(s)
JE:[V2]: Try to eliminate WEB_SALES by ref. join elim using NTSID
JE:[V2]: Cannot eliminate WEB_SALES by ref. join elim - no constr. based join pred(s)
JE:[V2] Query block (0x7f04727eeae8) after join elimination:
SQL:******* UNPARSED QUERY IS *******
SELECT 0 FROM "TPCDS"."WEB_SALES" "WEB_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="WEB_SALES"."WS_BILL_CUSTOMER_SK" AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3

JE:[V2]   Considering Join Elimination on query block SEL$4 (#0)
*************************
Join Elimination [JE:R 12.2]    
*************************
SQL:******* UNPARSED QUERY IS *******
SELECT 0 FROM "TPCDS"."CATALOG_SALES" "CATALOG_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="CATALOG_SALES"."CS_SHIP_CUSTOMER_SK" AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3
JE:[V2] Query block (0x7f04727ecfc8) before join elimination:
SQL:******* UNPARSED QUERY IS *******
SELECT 0 FROM "TPCDS"."CATALOG_SALES" "CATALOG_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="CATALOG_SALES"."CS_SHIP_CUSTOMER_SK" AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3
JE:[V2]: Try to eliminate DATE_DIM by ref. join elim using PRIMARY(D_DATE_SK) <- FOREIGN(CS_SOLD_DATE_SK)
JE:[V2]: Cannot eliminate DATE_DIM by ref. join elim - predicate column refs.
JE:[V2]: Try to eliminate DATE_DIM by ref. join elim using PRIMARY(D_DATE_SK) <- FOREIGN()
JE:[V2]: Cannot eliminate DATE_DIM by ref. join elim - no constr. based join pred(s)
JE:[V2]: Try to eliminate DATE_DIM by ref. join elim using NTSID
JE:[V2]: Cannot eliminate DATE_DIM by ref. join elim - no constr. based join pred(s)
JE:[V2]: Try to eliminate CATALOG_SALES by ref. join elim using NTSID
JE:[V2]: Cannot eliminate CATALOG_SALES by ref. join elim - no constr. based join pred(s)
JE:[V2] Query block (0x7f04727ecfc8) after join elimination:
SQL:******* UNPARSED QUERY IS *******
SELECT 0 FROM "TPCDS"."CATALOG_SALES" "CATALOG_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="CATALOG_SALES"."CS_SHIP_CUSTOMER_SK" AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3

JE:[V2]   Considering Join Elimination on query block SEL$2 (#0)
*************************
Join Elimination [JE:R 12.2]    
*************************
SQL:******* UNPARSED QUERY IS *******
SELECT 0 FROM "TPCDS"."STORE_SALES" "SS","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="SS"."SS_CUSTOMER_SK" AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3 AND ( EXISTS (SELECT 0 FROM "TPCDS"."WEB_SALES" "WEB_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="WEB_SALES"."WS_BILL_CUSTOMER_SK" AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3) OR  EXISTS (SELECT 0 FROM "TPCDS"."CATALOG_SALES" "CATALOG_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="CATALOG_SALES"."CS_SHIP_CUSTOMER_SK" AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3))
JE:[V2] Query block (0x7f04727f0400) before join elimination:
SQL:******* UNPARSED QUERY IS *******
SELECT 0 FROM "TPCDS"."STORE_SALES" "SS","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="SS"."SS_CUSTOMER_SK" AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3 AND ( EXISTS (SELECT 0 FROM "TPCDS"."WEB_SALES" "WEB_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="WEB_SALES"."WS_BILL_CUSTOMER_SK" AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3) OR  EXISTS (SELECT 0 FROM "TPCDS"."CATALOG_SALES" "CATALOG_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="CATALOG_SALES"."CS_SHIP_CUSTOMER_SK" AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3))
JE:[V2]: Try to eliminate DATE_DIM by ref. join elim using PRIMARY(D_DATE_SK) <- FOREIGN(SS_SOLD_DATE_SK)
JE:[V2]: Cannot eliminate DATE_DIM by ref. join elim - predicate column refs.
JE:[V2]: Try to eliminate DATE_DIM by ref. join elim using NTSID
JE:[V2]: Cannot eliminate DATE_DIM by ref. join elim - no constr. based join pred(s)
JE:[V2]: Try to eliminate SS by ref. join elim using NTSID
JE:[V2]: Cannot eliminate SS by ref. join elim - no constr. based join pred(s)
JE:[V2] Query block (0x7f04727f0400) after join elimination:
SQL:******* UNPARSED QUERY IS *******
SELECT 0 FROM "TPCDS"."STORE_SALES" "SS","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="SS"."SS_CUSTOMER_SK" AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3 AND ( EXISTS (SELECT 0 FROM "TPCDS"."WEB_SALES" "WEB_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="WEB_SALES"."WS_BILL_CUSTOMER_SK" AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3) OR  EXISTS (SELECT 0 FROM "TPCDS"."CATALOG_SALES" "CATALOG_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="CATALOG_SALES"."CS_SHIP_CUSTOMER_SK" AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3))

JE:[V2]   Considering Join Elimination on query block SEL$1 (#0)
*************************
Join Elimination [JE:R 12.2]    
*************************
SQL:******* UNPARSED QUERY IS *******
SELECT "CUSTOMER_DEMOGRAPHICS"."CD_GENDER" "CD_GENDER","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS" "CD_MARITAL_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS" "CD_EDUCATION_STATUS",COUNT(*) "CNT1","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE" "CD_PURCHASE_ESTIMATE",COUNT(*) "CNT2","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING" "CD_CREDIT_RATING",COUNT(*) "CNT3","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT" "CD_DEP_COUNT",COUNT(*) "CNT4","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT" "CD_DEP_EMPLOYED_COUNT",COUNT(*) "CNT5","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT" "CD_DEP_COLLEGE_COUNT",COUNT(*) "CNT6" FROM "TPCDS"."CUSTOMER" "C","TPCDS"."CUSTOMER_ADDRESS" "CA","TPCDS"."CUSTOMER_DEMOGRAPHICS" "CUSTOMER_DEMOGRAPHICS" WHERE "C"."C_CURRENT_ADDR_SK"="CA"."CA_ADDRESS_SK" AND "CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK"="C"."C_CURRENT_CDEMO_SK" AND ("CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County') AND  EXISTS (SELECT 0 FROM "TPCDS"."STORE_SALES" "SS","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="SS"."SS_CUSTOMER_SK" AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3 AND ( EXISTS (SELECT 0 FROM "TPCDS"."WEB_SALES" "WEB_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="WEB_SALES"."WS_BILL_CUSTOMER_SK" AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3) OR  EXISTS (SELECT 0 FROM "TPCDS"."CATALOG_SALES" "CATALOG_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="CATALOG_SALES"."CS_SHIP_CUSTOMER_SK" AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3))) GROUP BY "CUSTOMER_DEMOGRAPHICS"."CD_GENDER","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT" ORDER BY "CUSTOMER_DEMOGRAPHICS"."CD_GENDER","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT"
JE:[V2] Query block (0x7f0478a29c28) before join elimination:
SQL:******* UNPARSED QUERY IS *******
SELECT "CUSTOMER_DEMOGRAPHICS"."CD_GENDER" "CD_GENDER","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS" "CD_MARITAL_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS" "CD_EDUCATION_STATUS",COUNT(*) "CNT1","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE" "CD_PURCHASE_ESTIMATE",COUNT(*) "CNT2","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING" "CD_CREDIT_RATING",COUNT(*) "CNT3","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT" "CD_DEP_COUNT",COUNT(*) "CNT4","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT" "CD_DEP_EMPLOYED_COUNT",COUNT(*) "CNT5","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT" "CD_DEP_COLLEGE_COUNT",COUNT(*) "CNT6" FROM "TPCDS"."CUSTOMER" "C","TPCDS"."CUSTOMER_ADDRESS" "CA","TPCDS"."CUSTOMER_DEMOGRAPHICS" "CUSTOMER_DEMOGRAPHICS" WHERE "C"."C_CURRENT_ADDR_SK"="CA"."CA_ADDRESS_SK" AND "CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK"="C"."C_CURRENT_CDEMO_SK" AND ("CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County') AND  EXISTS (SELECT 0 FROM "TPCDS"."STORE_SALES" "SS","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="SS"."SS_CUSTOMER_SK" AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3 AND ( EXISTS (SELECT 0 FROM "TPCDS"."WEB_SALES" "WEB_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="WEB_SALES"."WS_BILL_CUSTOMER_SK" AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3) OR  EXISTS (SELECT 0 FROM "TPCDS"."CATALOG_SALES" "CATALOG_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="CATALOG_SALES"."CS_SHIP_CUSTOMER_SK" AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3))) GROUP BY "CUSTOMER_DEMOGRAPHICS"."CD_GENDER","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT" ORDER BY "CUSTOMER_DEMOGRAPHICS"."CD_GENDER","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT"
JE:[V2]: Try to eliminate CUSTOMER_DEMOGRAPHICS by ref. join elim using NTSID
JE:[V2]: Cannot eliminate CUSTOMER_DEMOGRAPHICS by ref. join elim - no constr. based join pred(s)
JE:[V2]: Try to eliminate CUSTOMER_DEMOGRAPHICS by ref. join elim using PRIMARY(CD_DEMO_SK) <- FOREIGN(C_CURRENT_CDEMO_SK)
JE:[V2]: Cannot eliminate CUSTOMER_DEMOGRAPHICS by ref. join elim - predicate column refs.
JE:[V2]: Try to eliminate CUSTOMER_DEMOGRAPHICS by ref. join elim using NTSID
JE:[V2]: Cannot eliminate CUSTOMER_DEMOGRAPHICS by ref. join elim - no constr. based join pred(s)
JE:[V2]: Try to eliminate CA by ref. join elim using NTSID
JE:[V2]: Cannot eliminate CA by ref. join elim - no constr. based join pred(s)
JE:[V2]: Try to eliminate CA by ref. join elim using PRIMARY(CA_ADDRESS_SK) <- FOREIGN(C_CURRENT_ADDR_SK)
JE:[V2]: Cannot eliminate CA by ref. join elim - predicate column refs.
JE:[V2]: Try to eliminate CA by ref. join elim using NTSID
JE:[V2]: Cannot eliminate CA by ref. join elim - no constr. based join pred(s)
JE:[V2]: Try to eliminate C by ref. join elim using NTSID
JE:[V2]: Cannot eliminate C by ref. join elim - no constr. based join pred(s)
JE:[V2]: Try to eliminate C by ref. join elim using NTSID
JE:[V2]: Cannot eliminate C by ref. join elim - no constr. based join pred(s)
JE:[V2] Query block (0x7f0478a29c28) after join elimination:
SQL:******* UNPARSED QUERY IS *******
SELECT "CUSTOMER_DEMOGRAPHICS"."CD_GENDER" "CD_GENDER","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS" "CD_MARITAL_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS" "CD_EDUCATION_STATUS",COUNT(*) "CNT1","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE" "CD_PURCHASE_ESTIMATE",COUNT(*) "CNT2","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING" "CD_CREDIT_RATING",COUNT(*) "CNT3","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT" "CD_DEP_COUNT",COUNT(*) "CNT4","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT" "CD_DEP_EMPLOYED_COUNT",COUNT(*) "CNT5","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT" "CD_DEP_COLLEGE_COUNT",COUNT(*) "CNT6" FROM "TPCDS"."CUSTOMER" "C","TPCDS"."CUSTOMER_ADDRESS" "CA","TPCDS"."CUSTOMER_DEMOGRAPHICS" "CUSTOMER_DEMOGRAPHICS" WHERE "C"."C_CURRENT_ADDR_SK"="CA"."CA_ADDRESS_SK" AND "CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK"="C"."C_CURRENT_CDEMO_SK" AND ("CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County') AND  EXISTS (SELECT 0 FROM "TPCDS"."STORE_SALES" "SS","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="SS"."SS_CUSTOMER_SK" AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3 AND ( EXISTS (SELECT 0 FROM "TPCDS"."WEB_SALES" "WEB_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="WEB_SALES"."WS_BILL_CUSTOMER_SK" AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3) OR  EXISTS (SELECT 0 FROM "TPCDS"."CATALOG_SALES" "CATALOG_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="CATALOG_SALES"."CS_SHIP_CUSTOMER_SK" AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3))) GROUP BY "CUSTOMER_DEMOGRAPHICS"."CD_GENDER","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT" ORDER BY "CUSTOMER_DEMOGRAPHICS"."CD_GENDER","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT"

query block SEL$1 (#0) unchanged
Considering Query Transformations on query block SEL$1 (#0)
**************************
Query transformations (QT)
**************************
CSE: Considering common sub-expression elimination in query block SEL$1 (#0)
*************************
Common Subexpression elimination (CSE)
*************************
CSE: Considering common sub-expression elimination in query block SEL$2 (#0)
*************************
Common Subexpression elimination (CSE)
*************************
CSE: Considering common sub-expression elimination in query block SEL$4 (#0)
*************************
Common Subexpression elimination (CSE)
*************************
CSE:     CSE not performed on query block SEL$4 (#0).
CSE: Considering common sub-expression elimination in query block SEL$3 (#0)
*************************
Common Subexpression elimination (CSE)
*************************
CSE:     CSE not performed on query block SEL$3 (#0).
CSE:     CSE not performed on query block SEL$2 (#0).
CSE:     CSE not performed on query block SEL$1 (#0).
query block SEL$1 (#0) unchanged
apadrv-start sqlid=11098102873161691304
CSE: Considering common sub-expression elimination in query block SEL$1 (#0)
*************************
Common Subexpression elimination (CSE)
*************************
CSE: Considering common sub-expression elimination in query block SEL$2 (#0)
*************************
Common Subexpression elimination (CSE)
*************************
CSE: Considering common sub-expression elimination in query block SEL$4 (#0)
*************************
Common Subexpression elimination (CSE)
*************************
CSE:     CSE not performed on query block SEL$4 (#0).
CSE: Considering common sub-expression elimination in query block SEL$3 (#0)
*************************
Common Subexpression elimination (CSE)
*************************
CSE:     CSE not performed on query block SEL$3 (#0).
CSE:     CSE not performed on query block SEL$2 (#0).
CSE:     CSE not performed on query block SEL$1 (#0).
  :
    call(in-use=43632, alloc=65448), compile(in-use=380144, alloc=383752), execution(in-use=10872, alloc=12144)

*******************************************
Peeked values of the binds in SQL statement
*******************************************


=====================================
SPD: BEGIN context at statement level
=====================================
Stmt: ******* UNPARSED QUERY IS *******
SELECT "CUSTOMER_DEMOGRAPHICS"."CD_GENDER" "CD_GENDER","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS" "CD_MARITAL_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS" "CD_EDUCATION_STATUS",COUNT(*) "CNT1","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE" "CD_PURCHASE_ESTIMATE",COUNT(*) "CNT2","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING" "CD_CREDIT_RATING",COUNT(*) "CNT3","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT" "CD_DEP_COUNT",COUNT(*) "CNT4","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT" "CD_DEP_EMPLOYED_COUNT",COUNT(*) "CNT5","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT" "CD_DEP_COLLEGE_COUNT",COUNT(*) "CNT6" FROM "TPCDS"."CUSTOMER" "C","TPCDS"."CUSTOMER_ADDRESS" "CA","TPCDS"."CUSTOMER_DEMOGRAPHICS" "CUSTOMER_DEMOGRAPHICS" WHERE "C"."C_CURRENT_ADDR_SK"="CA"."CA_ADDRESS_SK" AND "CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK"="C"."C_CURRENT_CDEMO_SK" AND ("CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County') AND  EXISTS (SELECT 0 FROM "TPCDS"."STORE_SALES" "SS","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="SS"."SS_CUSTOMER_SK" AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3 AND ( EXISTS (SELECT 0 FROM "TPCDS"."WEB_SALES" "WEB_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="WEB_SALES"."WS_BILL_CUSTOMER_SK" AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3) OR  EXISTS (SELECT 0 FROM "TPCDS"."CATALOG_SALES" "CATALOG_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="CATALOG_SALES"."CS_SHIP_CUSTOMER_SK" AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3))) GROUP BY "CUSTOMER_DEMOGRAPHICS"."CD_GENDER","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT" ORDER BY "CUSTOMER_DEMOGRAPHICS"."CD_GENDER","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT"
Objects referenced in the statement
  CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS] 74170, type = 1
  CUSTOMER_ADDRESS[CA] 74169, type = 1
  CUSTOMER[C] 74168, type = 1
  DATE_DIM[DATE_DIM] 74171, type = 1
  STORE_SALES[SS] 74191, type = 1
  DATE_DIM[DATE_DIM] 74171, type = 1
  CATALOG_SALES[CATALOG_SALES] 74185, type = 1
  DATE_DIM[DATE_DIM] 74171, type = 1
  WEB_SALES[WEB_SALES] 74195, type = 1
Objects in the hash table
  Hash table Object 74191, type = 1, ownerid = 13636710846408258497:
    Dynamic Sampling Directives at location 2:
       dirid = 10827845680942532126, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {F(74191)[]; F(74171)[]}
    Dynamic Sampling Directives at location 4:
       dirid = 7660518587836633700, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74191)[4]}
  Hash table Object 74170, type = 1, ownerid = 3614541375281590710:
    Dynamic Sampling Directives at location 1:
       dirid = 7754152966831092939, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {EC(74170)[3, 4]}
  Hash table Object 74168, type = 1, ownerid = 211582754057285188:
    Dynamic Sampling Directives at location 4:
       dirid = 5181560337004891843, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74169)[]; (74168)[3]}
       dirid = 9316027922818115912, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74168)[3, 5]}
  Hash table Object 74185, type = 1, ownerid = 4550515023711131852:
    Dynamic Sampling Directives at location 4:
       dirid = 11267665714990475542, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74185)[8]}
  Hash table Object 74171, type = 1, ownerid = 14515013897672122994:
    Dynamic Sampling Directives at location 1:
       dirid = 13969931850241126217, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {C(74171)[7, 9]}
    Dynamic Sampling Directives at location 2:
       dirid = 2361553282592865451, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {(74191)[]; F(74171)[]}
       dirid = 12943986683386070018, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {(74191)[]; (74171)[]}
       dirid = 2090373381697137251, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {(74185)[]; F(74171)[]}
       dirid = 14483145493039253896, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {(74185)[]; (74171)[]}
    Dynamic Sampling Directives at location 4:
       dirid = 13683461771316641482, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74195)[5]; (74171)[7]}
  Hash table Object 74169, type = 1, ownerid = 11970851919200002002:
    Dynamic Sampling Directives at location 1:
       dirid = 18439699102505563871, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {EC(74169)[8]}
  Hash table Object 74195, type = 1, ownerid = 935057511219483676:
    Dynamic Sampling Directives at location 2:
       dirid = 4510913066701158191, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {(74195)[]; (74171)[]}
    Dynamic Sampling Directives at location 4:
       dirid = 11051034729196502093, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74195)[1]; (74169)[8]}
       dirid = 14910903719618111890, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74195)[5]}
Return code in qosdInitDirCtx: ENBLD
===================================
SPD: END context at statement level
===================================
CBQT: Considering cost-based transformation on query block SEL$1 (#0)
********************************
COST-BASED QUERY TRANSFORMATIONS
********************************
FPD: Considering simple filter push (pre rewrite) in query block SEL$4 (#0)
FPD:  Current where clause predicates "C"."C_CUSTOMER_SK"="CATALOG_SALES"."CS_SHIP_CUSTOMER_SK" AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3

FPD: Considering simple filter push (pre rewrite) in query block SEL$2 (#0)
FPD:  Current where clause predicates "C"."C_CUSTOMER_SK"="SS"."SS_CUSTOMER_SK" AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3 AND ( EXISTS (SELECT 0 FROM "WEB_SALES" "WEB_SALES","DATE_DIM" "DATE_DIM") OR  EXISTS (SELECT 0 FROM "CATALOG_SALES" "CATALOG_SALES","DATE_DIM" "DATE_DIM"))

FPD: Considering simple filter push (pre rewrite) in query block SEL$1 (#0)
FPD:  Current where clause predicates "C"."C_CURRENT_ADDR_SK"="CA"."CA_ADDRESS_SK" AND "CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK"="C"."C_CURRENT_CDEMO_SK" AND ("CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County') AND  EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM")

OBYE:   Considering Order-by Elimination from view SEL$1 (#0)
***************************
Order-by elimination (OBYE)
***************************
OBYE:   Considering Order-by Elimination from view SEL$2 (#0)
***************************
Order-by elimination (OBYE)
***************************
OBYE:   Considering Order-by Elimination from view SEL$4 (#0)
***************************
Order-by elimination (OBYE)
***************************
OBYE:     OBYE bypassed: no order by to eliminate.
OBYE:   Considering Order-by Elimination from view SEL$3 (#0)
***************************
Order-by elimination (OBYE)
***************************
OBYE:     OBYE bypassed: no order by to eliminate.
OBYE:     OBYE bypassed: no order by to eliminate.
OBYE:     OBYE performed.
Considering Query Transformations on query block SEL$1 (#0)
**************************
Query transformations (QT)
**************************
CSE: Considering common sub-expression elimination in query block SEL$1 (#0)
*************************
Common Subexpression elimination (CSE)
*************************
CSE: Considering common sub-expression elimination in query block SEL$2 (#0)
*************************
Common Subexpression elimination (CSE)
*************************
CSE: Considering common sub-expression elimination in query block SEL$4 (#0)
*************************
Common Subexpression elimination (CSE)
*************************
CSE:     CSE not performed on query block SEL$4 (#0).
CSE: Considering common sub-expression elimination in query block SEL$3 (#0)
*************************
Common Subexpression elimination (CSE)
*************************
CSE:     CSE not performed on query block SEL$3 (#0).
CSE:     CSE not performed on query block SEL$2 (#0).
CSE:     CSE not performed on query block SEL$1 (#0).
AAT:   Considering Approximate Aggregate Transformation on query block SEL$1 (#0) 
*******************************************
Approximate Aggregate Transformation (AAT) 
*******************************************
AAT: no exact aggregates transformed
SQE: Trying SQ elimination.
SQE: Trying SQ elimination.
SQE: Trying SQ elimination.
SQE: Query valid for SQ elimination:******* UNPARSED QUERY IS *******
SELECT 0 FROM "TPCDS"."STORE_SALES" "SS","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="SS"."SS_CUSTOMER_SK" AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3 AND ( EXISTS (SELECT 0 FROM "TPCDS"."WEB_SALES" "WEB_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="WEB_SALES"."WS_BILL_CUSTOMER_SK" AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3) OR  EXISTS (SELECT 0 FROM "TPCDS"."CATALOG_SALES" "CATALOG_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="CATALOG_SALES"."CS_SHIP_CUSTOMER_SK" AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3))
SQE: Query after SQ elimination:******* UNPARSED QUERY IS *******
SELECT 0 FROM "TPCDS"."STORE_SALES" "SS","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="SS"."SS_CUSTOMER_SK" AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3 AND ( EXISTS (SELECT 0 FROM "TPCDS"."WEB_SALES" "WEB_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="WEB_SALES"."WS_BILL_CUSTOMER_SK" AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3) OR  EXISTS (SELECT 0 FROM "TPCDS"."CATALOG_SALES" "CATALOG_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="CATALOG_SALES"."CS_SHIP_CUSTOMER_SK" AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3))
SQE: Trying SQ elimination.
SQE: Query valid for SQ elimination:******* UNPARSED QUERY IS *******
SELECT "CUSTOMER_DEMOGRAPHICS"."CD_GENDER" "CD_GENDER","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS" "CD_MARITAL_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS" "CD_EDUCATION_STATUS",COUNT(*) "CNT1","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE" "CD_PURCHASE_ESTIMATE",COUNT(*) "CNT2","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING" "CD_CREDIT_RATING",COUNT(*) "CNT3","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT" "CD_DEP_COUNT",COUNT(*) "CNT4","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT" "CD_DEP_EMPLOYED_COUNT",COUNT(*) "CNT5","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT" "CD_DEP_COLLEGE_COUNT",COUNT(*) "CNT6" FROM "TPCDS"."CUSTOMER" "C","TPCDS"."CUSTOMER_ADDRESS" "CA","TPCDS"."CUSTOMER_DEMOGRAPHICS" "CUSTOMER_DEMOGRAPHICS" WHERE "C"."C_CURRENT_ADDR_SK"="CA"."CA_ADDRESS_SK" AND "CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK"="C"."C_CURRENT_CDEMO_SK" AND ("CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County') AND  EXISTS (SELECT 0 FROM "TPCDS"."STORE_SALES" "SS","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="SS"."SS_CUSTOMER_SK" AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3 AND ( EXISTS (SELECT 0 FROM "TPCDS"."WEB_SALES" "WEB_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="WEB_SALES"."WS_BILL_CUSTOMER_SK" AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3) OR  EXISTS (SELECT 0 FROM "TPCDS"."CATALOG_SALES" "CATALOG_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="CATALOG_SALES"."CS_SHIP_CUSTOMER_SK" AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3))) GROUP BY "CUSTOMER_DEMOGRAPHICS"."CD_GENDER","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT" ORDER BY "CUSTOMER_DEMOGRAPHICS"."CD_GENDER","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT"
SQE: Query after SQ elimination:******* UNPARSED QUERY IS *******
SELECT "CUSTOMER_DEMOGRAPHICS"."CD_GENDER" "CD_GENDER","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS" "CD_MARITAL_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS" "CD_EDUCATION_STATUS",COUNT(*) "CNT1","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE" "CD_PURCHASE_ESTIMATE",COUNT(*) "CNT2","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING" "CD_CREDIT_RATING",COUNT(*) "CNT3","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT" "CD_DEP_COUNT",COUNT(*) "CNT4","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT" "CD_DEP_EMPLOYED_COUNT",COUNT(*) "CNT5","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT" "CD_DEP_COLLEGE_COUNT",COUNT(*) "CNT6" FROM "TPCDS"."CUSTOMER" "C","TPCDS"."CUSTOMER_ADDRESS" "CA","TPCDS"."CUSTOMER_DEMOGRAPHICS" "CUSTOMER_DEMOGRAPHICS" WHERE "C"."C_CURRENT_ADDR_SK"="CA"."CA_ADDRESS_SK" AND "CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK"="C"."C_CURRENT_CDEMO_SK" AND ("CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County') AND  EXISTS (SELECT 0 FROM "TPCDS"."STORE_SALES" "SS","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="SS"."SS_CUSTOMER_SK" AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3 AND ( EXISTS (SELECT 0 FROM "TPCDS"."WEB_SALES" "WEB_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="WEB_SALES"."WS_BILL_CUSTOMER_SK" AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3) OR  EXISTS (SELECT 0 FROM "TPCDS"."CATALOG_SALES" "CATALOG_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="CATALOG_SALES"."CS_SHIP_CUSTOMER_SK" AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3))) GROUP BY "CUSTOMER_DEMOGRAPHICS"."CD_GENDER","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT" ORDER BY "CUSTOMER_DEMOGRAPHICS"."CD_GENDER","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT"
Query after View Removal
******* UNPARSED QUERY IS *******
SELECT 0 FROM "TPCDS"."WEB_SALES" "WEB_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="WEB_SALES"."WS_BILL_CUSTOMER_SK" AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3
Query after View Removal
******* UNPARSED QUERY IS *******
SELECT 0 FROM "TPCDS"."CATALOG_SALES" "CATALOG_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="CATALOG_SALES"."CS_SHIP_CUSTOMER_SK" AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3
Query after View Removal
******* UNPARSED QUERY IS *******
SELECT 0 FROM "TPCDS"."STORE_SALES" "SS","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="SS"."SS_CUSTOMER_SK" AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3 AND ( EXISTS (SELECT 0 FROM "TPCDS"."WEB_SALES" "WEB_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="WEB_SALES"."WS_BILL_CUSTOMER_SK" AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3) OR  EXISTS (SELECT 0 FROM "TPCDS"."CATALOG_SALES" "CATALOG_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="CATALOG_SALES"."CS_SHIP_CUSTOMER_SK" AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3))
Query after View Removal
******* UNPARSED QUERY IS *******
SELECT "CUSTOMER_DEMOGRAPHICS"."CD_GENDER" "CD_GENDER","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS" "CD_MARITAL_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS" "CD_EDUCATION_STATUS",COUNT(*) "CNT1","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE" "CD_PURCHASE_ESTIMATE",COUNT(*) "CNT2","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING" "CD_CREDIT_RATING",COUNT(*) "CNT3","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT" "CD_DEP_COUNT",COUNT(*) "CNT4","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT" "CD_DEP_EMPLOYED_COUNT",COUNT(*) "CNT5","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT" "CD_DEP_COLLEGE_COUNT",COUNT(*) "CNT6" FROM "TPCDS"."CUSTOMER" "C","TPCDS"."CUSTOMER_ADDRESS" "CA","TPCDS"."CUSTOMER_DEMOGRAPHICS" "CUSTOMER_DEMOGRAPHICS" WHERE "C"."C_CURRENT_ADDR_SK"="CA"."CA_ADDRESS_SK" AND "CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK"="C"."C_CURRENT_CDEMO_SK" AND ("CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County') AND  EXISTS (SELECT 0 FROM "TPCDS"."STORE_SALES" "SS","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="SS"."SS_CUSTOMER_SK" AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3 AND ( EXISTS (SELECT 0 FROM "TPCDS"."WEB_SALES" "WEB_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="WEB_SALES"."WS_BILL_CUSTOMER_SK" AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3) OR  EXISTS (SELECT 0 FROM "TPCDS"."CATALOG_SALES" "CATALOG_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="CATALOG_SALES"."CS_SHIP_CUSTOMER_SK" AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3))) GROUP BY "CUSTOMER_DEMOGRAPHICS"."CD_GENDER","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT" ORDER BY "CUSTOMER_DEMOGRAPHICS"."CD_GENDER","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT"
kkqctdrvTD-start on query block SEL$1 (#0)
kkqctdrvTD-start: :
    call(in-use=52600, alloc=65448), compile(in-use=438960, alloc=441624), execution(in-use=10872, alloc=12144)

ORE: Checking validity of OR Expansion for query block SEL$3 (#4)
ORE: Predicate chain before QB validity check - SEL$3
"C"."C_CUSTOMER_SK"="WEB_SALES"."WS_BILL_CUSTOMER_SK" AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3
ORE: Predicate chain after QB validity check - SEL$3
"C"."C_CUSTOMER_SK"="WEB_SALES"."WS_BILL_CUSTOMER_SK" AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3
ORE: bypassed - query block has subquery correlated to non-parent.
ORE: Checking validity of OR Expansion for query block SEL$4 (#3)
ORE: Predicate chain before QB validity check - SEL$4
"C"."C_CUSTOMER_SK"="CATALOG_SALES"."CS_SHIP_CUSTOMER_SK" AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3
ORE: Predicate chain after QB validity check - SEL$4
"C"."C_CUSTOMER_SK"="CATALOG_SALES"."CS_SHIP_CUSTOMER_SK" AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3
ORE: bypassed - query block has subquery correlated to non-parent.
ORE: Checking validity of OR Expansion for query block SEL$2 (#2)
ORE: Predicate chain before QB validity check - SEL$2
"C"."C_CUSTOMER_SK"="SS"."SS_CUSTOMER_SK" AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3 AND ( EXISTS (SELECT 0 FROM "WEB_SALES" "WEB_SALES","DATE_DIM" "DATE_DIM") OR  EXISTS (SELECT 0 FROM "CATALOG_SALES" "CATALOG_SALES","DATE_DIM" "DATE_DIM"))
ORE: Predicate chain after QB validity check - SEL$2
"C"."C_CUSTOMER_SK"="SS"."SS_CUSTOMER_SK" AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3 AND ( EXISTS (SELECT 0 FROM "WEB_SALES" "WEB_SALES","DATE_DIM" "DATE_DIM") OR  EXISTS (SELECT 0 FROM "CATALOG_SALES" "CATALOG_SALES","DATE_DIM" "DATE_DIM"))
ORE: bypassed - query block has subquery correlated to non-parent.
ORE: Checking validity of OR Expansion for query block SEL$1 (#1)
ORE: Predicate chain before QB validity check - SEL$1
"C"."C_CURRENT_ADDR_SK"="CA"."CA_ADDRESS_SK" AND "CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK"="C"."C_CURRENT_CDEMO_SK" AND ("CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County') AND  EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM")
ORE: Predicate chain after QB validity check - SEL$1
"C"."C_CURRENT_ADDR_SK"="CA"."CA_ADDRESS_SK" AND "CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK"="C"."C_CURRENT_CDEMO_SK" AND ("CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County') AND  EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM")
ORE: bypassed - query block has subquery correlated to non-parent.
kkqctdrvTD-cleanup: transform(in-use=0, alloc=0) :
    call(in-use=52600, alloc=65448), compile(in-use=442552, alloc=445768), execution(in-use=10872, alloc=12144)

kkqctdrvTD-end:
    call(in-use=52600, alloc=65448), compile(in-use=445736, alloc=448464), execution(in-use=10872, alloc=12144)

kkqctdrvTD-start on query block SEL$1 (#1)
kkqctdrvTD-start: :
    call(in-use=52600, alloc=65448), compile(in-use=445736, alloc=448464), execution(in-use=10872, alloc=12144)

Registered qb: SEL$1 0x72506f40 (COPY SEL$1)
---------------------
QUERY BLOCK SIGNATURE
---------------------
  signature(): NULL
Registered qb: SEL$2 0x725038d8 (COPY SEL$2)
---------------------
QUERY BLOCK SIGNATURE
---------------------
  signature(): NULL
Registered qb: SEL$4 0x724fccc8 (COPY SEL$4)
---------------------
QUERY BLOCK SIGNATURE
---------------------
  signature(): NULL
Registered qb: SEL$3 0x72519b90 (COPY SEL$3)
---------------------
QUERY BLOCK SIGNATURE
---------------------
  signature(): NULL
*****************************
Cost-Based Subquery Unnesting
*****************************
SU: Unnesting query blocks in query block SEL$1 (#1) that are valid to unnest.
Subquery Unnesting on query block SEL$2 (#2)SU: Performing unnesting that does not require costing.
SU: Considering subquery unnest on query block SEL$2 (#2).
SU:   Checking validity of unnesting subquery SEL$3 (#4)
SU:     SU bypassed: No correlation to immediate outer subquery.
Subquery Unnesting on query block SEL$1 (#1)SU: Performing unnesting that does not require costing.
SU: Considering subquery unnest on query block SEL$1 (#1).
SU:   Checking validity of unnesting subquery SEL$2 (#2)
SU:     SU bypassed: Failed subquery correlated reference checks.
SU:   Validity checks failed.
*******************************
Cost-Based Complex View Merging
*******************************
CVM: Finding query blocks in query block SEL$1 (#1) that are valid to merge.
OJE: Begin: find best directive for query block SEL$1 (#1)
OJE: End: finding best directive for query block SEL$1 (#1)
CNT:   Considering count(col) to count(*) on query block SEL$1 (#1)
*************************
Count(col) to Count(*) (CNT)
*************************
CNT:     COUNT() to COUNT(*) not done.
OJE: Begin: find best directive for query block SEL$2 (#2)
OJE: End: finding best directive for query block SEL$2 (#2)
OJE: Begin: find best directive for query block SEL$3 (#4)
OJE: End: finding best directive for query block SEL$3 (#4)
OJE: Begin: find best directive for query block SEL$4 (#3)
OJE: End: finding best directive for query block SEL$4 (#3)
kkqctdrvTD-cleanup: transform(in-use=29704, alloc=33640) :
    call(in-use=56032, alloc=65448), compile(in-use=523376, alloc=537872), execution(in-use=10872, alloc=12144)

kkqctdrvTD-end:
    call(in-use=56032, alloc=65448), compile(in-use=492560, alloc=537872), execution(in-use=10872, alloc=12144)

SU:     SU bypassed: No correlation to immediate outer subquery.
SU:     SU bypassed: Failed subquery correlated reference checks.
SJC: Considering set-join conversion in query block SEL$1 (#1)
*************************
Set-Join Conversion (SJC)
*************************
SJC: Considering set-join conversion in query block SEL$2 (#2)
*************************
Set-Join Conversion (SJC)
*************************
SJC: Considering set-join conversion in query block SEL$4 (#3)
*************************
Set-Join Conversion (SJC)
*************************
SJC: not performed
SJC: Considering set-join conversion in query block SEL$3 (#4)
*************************
Set-Join Conversion (SJC)
*************************
SJC: not performed
SJC: not performed
SJC: not performed
DCL: Checking validity of group-by elimination SEL$3 (#4)
DCL: Result of group-by elimination: Invalid
DCL: Checking validity of group-by elimination SEL$4 (#3)
DCL: Result of group-by elimination: Invalid
DCL: Checking validity of group-by elimination SEL$2 (#2)
DCL: Result of group-by elimination: Invalid
DCL: Checking validity of group-by elimination SEL$1 (#1)
DCL: Result of group-by elimination: Invalid
OJE: Begin: find best directive for query block SEL$1 (#1)
OJE: End: finding best directive for query block SEL$1 (#1)
CNT:   Considering count(col) to count(*) on query block SEL$1 (#1)
*************************
Count(col) to Count(*) (CNT)
*************************
CNT:     COUNT() to COUNT(*) not done.
OJE: Begin: find best directive for query block SEL$2 (#2)
OJE: End: finding best directive for query block SEL$2 (#2)
OJE: Begin: find best directive for query block SEL$3 (#4)
OJE: End: finding best directive for query block SEL$3 (#4)
OJE: Begin: find best directive for query block SEL$4 (#3)
OJE: End: finding best directive for query block SEL$4 (#3)
JE:[V2]   Considering Join Elimination on query block SEL$3 (#4)
*************************
Join Elimination [JE:R 12.2]    
*************************
SQL:******* UNPARSED QUERY IS *******
SELECT 0 FROM "TPCDS"."WEB_SALES" "WEB_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="WEB_SALES"."WS_BILL_CUSTOMER_SK" AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3
JE:[V2] Query block (0x7f04727eeae8) before join elimination:
SQL:******* UNPARSED QUERY IS *******
SELECT 0 FROM "TPCDS"."WEB_SALES" "WEB_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="WEB_SALES"."WS_BILL_CUSTOMER_SK" AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3
JE:[V2]: Try to eliminate DATE_DIM by ref. join elim using PRIMARY(D_DATE_SK) <- FOREIGN(WS_SOLD_DATE_SK)
JE:[V2]: Cannot eliminate DATE_DIM by ref. join elim - predicate column refs.
JE:[V2]: Try to eliminate DATE_DIM by ref. join elim using PRIMARY(D_DATE_SK) <- FOREIGN()
JE:[V2]: Cannot eliminate DATE_DIM by ref. join elim - no constr. based join pred(s)
JE:[V2]: Try to eliminate DATE_DIM by ref. join elim using NTSID
JE:[V2]: Cannot eliminate DATE_DIM by ref. join elim - no constr. based join pred(s)
JE:[V2]: Try to eliminate WEB_SALES by ref. join elim using NTSID
JE:[V2]: Cannot eliminate WEB_SALES by ref. join elim - no constr. based join pred(s)
JE:[V2] Query block (0x7f04727eeae8) after join elimination:
SQL:******* UNPARSED QUERY IS *******
SELECT 0 FROM "TPCDS"."WEB_SALES" "WEB_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="WEB_SALES"."WS_BILL_CUSTOMER_SK" AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3

JE:[V2]   Considering Join Elimination on query block SEL$4 (#3)
*************************
Join Elimination [JE:R 12.2]    
*************************
SQL:******* UNPARSED QUERY IS *******
SELECT 0 FROM "TPCDS"."CATALOG_SALES" "CATALOG_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="CATALOG_SALES"."CS_SHIP_CUSTOMER_SK" AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3
JE:[V2] Query block (0x7f04727ecfc8) before join elimination:
SQL:******* UNPARSED QUERY IS *******
SELECT 0 FROM "TPCDS"."CATALOG_SALES" "CATALOG_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="CATALOG_SALES"."CS_SHIP_CUSTOMER_SK" AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3
JE:[V2]: Try to eliminate DATE_DIM by ref. join elim using PRIMARY(D_DATE_SK) <- FOREIGN(CS_SOLD_DATE_SK)
JE:[V2]: Cannot eliminate DATE_DIM by ref. join elim - predicate column refs.
JE:[V2]: Try to eliminate DATE_DIM by ref. join elim using PRIMARY(D_DATE_SK) <- FOREIGN()
JE:[V2]: Cannot eliminate DATE_DIM by ref. join elim - no constr. based join pred(s)
JE:[V2]: Try to eliminate DATE_DIM by ref. join elim using NTSID
JE:[V2]: Cannot eliminate DATE_DIM by ref. join elim - no constr. based join pred(s)
JE:[V2]: Try to eliminate CATALOG_SALES by ref. join elim using NTSID
JE:[V2]: Cannot eliminate CATALOG_SALES by ref. join elim - no constr. based join pred(s)
JE:[V2] Query block (0x7f04727ecfc8) after join elimination:
SQL:******* UNPARSED QUERY IS *******
SELECT 0 FROM "TPCDS"."CATALOG_SALES" "CATALOG_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="CATALOG_SALES"."CS_SHIP_CUSTOMER_SK" AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3

JE:[V2]   Considering Join Elimination on query block SEL$2 (#2)
*************************
Join Elimination [JE:R 12.2]    
*************************
SQL:******* UNPARSED QUERY IS *******
SELECT 0 FROM "TPCDS"."STORE_SALES" "SS","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="SS"."SS_CUSTOMER_SK" AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3 AND ( EXISTS (SELECT 0 FROM "TPCDS"."WEB_SALES" "WEB_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="WEB_SALES"."WS_BILL_CUSTOMER_SK" AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3) OR  EXISTS (SELECT 0 FROM "TPCDS"."CATALOG_SALES" "CATALOG_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="CATALOG_SALES"."CS_SHIP_CUSTOMER_SK" AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3))
JE:[V2] Query block (0x7f04727f0400) before join elimination:
SQL:******* UNPARSED QUERY IS *******
SELECT 0 FROM "TPCDS"."STORE_SALES" "SS","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="SS"."SS_CUSTOMER_SK" AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3 AND ( EXISTS (SELECT 0 FROM "TPCDS"."WEB_SALES" "WEB_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="WEB_SALES"."WS_BILL_CUSTOMER_SK" AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3) OR  EXISTS (SELECT 0 FROM "TPCDS"."CATALOG_SALES" "CATALOG_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="CATALOG_SALES"."CS_SHIP_CUSTOMER_SK" AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3))
JE:[V2]: Try to eliminate DATE_DIM by ref. join elim using PRIMARY(D_DATE_SK) <- FOREIGN(SS_SOLD_DATE_SK)
JE:[V2]: Cannot eliminate DATE_DIM by ref. join elim - predicate column refs.
JE:[V2]: Try to eliminate DATE_DIM by ref. join elim using NTSID
JE:[V2]: Cannot eliminate DATE_DIM by ref. join elim - no constr. based join pred(s)
JE:[V2]: Try to eliminate SS by ref. join elim using NTSID
JE:[V2]: Cannot eliminate SS by ref. join elim - no constr. based join pred(s)
JE:[V2] Query block (0x7f04727f0400) after join elimination:
SQL:******* UNPARSED QUERY IS *******
SELECT 0 FROM "TPCDS"."STORE_SALES" "SS","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="SS"."SS_CUSTOMER_SK" AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3 AND ( EXISTS (SELECT 0 FROM "TPCDS"."WEB_SALES" "WEB_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="WEB_SALES"."WS_BILL_CUSTOMER_SK" AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3) OR  EXISTS (SELECT 0 FROM "TPCDS"."CATALOG_SALES" "CATALOG_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="CATALOG_SALES"."CS_SHIP_CUSTOMER_SK" AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3))

JE:[V2]   Considering Join Elimination on query block SEL$1 (#1)
*************************
Join Elimination [JE:R 12.2]    
*************************
SQL:******* UNPARSED QUERY IS *******
SELECT "CUSTOMER_DEMOGRAPHICS"."CD_GENDER" "CD_GENDER","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS" "CD_MARITAL_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS" "CD_EDUCATION_STATUS",COUNT(*) "CNT1","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE" "CD_PURCHASE_ESTIMATE",COUNT(*) "CNT2","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING" "CD_CREDIT_RATING",COUNT(*) "CNT3","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT" "CD_DEP_COUNT",COUNT(*) "CNT4","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT" "CD_DEP_EMPLOYED_COUNT",COUNT(*) "CNT5","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT" "CD_DEP_COLLEGE_COUNT",COUNT(*) "CNT6" FROM "TPCDS"."CUSTOMER" "C","TPCDS"."CUSTOMER_ADDRESS" "CA","TPCDS"."CUSTOMER_DEMOGRAPHICS" "CUSTOMER_DEMOGRAPHICS" WHERE "C"."C_CURRENT_ADDR_SK"="CA"."CA_ADDRESS_SK" AND "CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK"="C"."C_CURRENT_CDEMO_SK" AND ("CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County') AND  EXISTS (SELECT 0 FROM "TPCDS"."STORE_SALES" "SS","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="SS"."SS_CUSTOMER_SK" AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3 AND ( EXISTS (SELECT 0 FROM "TPCDS"."WEB_SALES" "WEB_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="WEB_SALES"."WS_BILL_CUSTOMER_SK" AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3) OR  EXISTS (SELECT 0 FROM "TPCDS"."CATALOG_SALES" "CATALOG_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="CATALOG_SALES"."CS_SHIP_CUSTOMER_SK" AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3))) GROUP BY "CUSTOMER_DEMOGRAPHICS"."CD_GENDER","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT" ORDER BY "CUSTOMER_DEMOGRAPHICS"."CD_GENDER","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT"
JE:[V2] Query block (0x7f0478a29c28) before join elimination:
SQL:******* UNPARSED QUERY IS *******
SELECT "CUSTOMER_DEMOGRAPHICS"."CD_GENDER" "CD_GENDER","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS" "CD_MARITAL_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS" "CD_EDUCATION_STATUS",COUNT(*) "CNT1","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE" "CD_PURCHASE_ESTIMATE",COUNT(*) "CNT2","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING" "CD_CREDIT_RATING",COUNT(*) "CNT3","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT" "CD_DEP_COUNT",COUNT(*) "CNT4","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT" "CD_DEP_EMPLOYED_COUNT",COUNT(*) "CNT5","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT" "CD_DEP_COLLEGE_COUNT",COUNT(*) "CNT6" FROM "TPCDS"."CUSTOMER" "C","TPCDS"."CUSTOMER_ADDRESS" "CA","TPCDS"."CUSTOMER_DEMOGRAPHICS" "CUSTOMER_DEMOGRAPHICS" WHERE "C"."C_CURRENT_ADDR_SK"="CA"."CA_ADDRESS_SK" AND "CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK"="C"."C_CURRENT_CDEMO_SK" AND ("CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County') AND  EXISTS (SELECT 0 FROM "TPCDS"."STORE_SALES" "SS","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="SS"."SS_CUSTOMER_SK" AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3 AND ( EXISTS (SELECT 0 FROM "TPCDS"."WEB_SALES" "WEB_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="WEB_SALES"."WS_BILL_CUSTOMER_SK" AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3) OR  EXISTS (SELECT 0 FROM "TPCDS"."CATALOG_SALES" "CATALOG_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="CATALOG_SALES"."CS_SHIP_CUSTOMER_SK" AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3))) GROUP BY "CUSTOMER_DEMOGRAPHICS"."CD_GENDER","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT" ORDER BY "CUSTOMER_DEMOGRAPHICS"."CD_GENDER","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT"
JE:[V2]: Try to eliminate CUSTOMER_DEMOGRAPHICS by ref. join elim using NTSID
JE:[V2]: Cannot eliminate CUSTOMER_DEMOGRAPHICS by ref. join elim - no constr. based join pred(s)
JE:[V2]: Try to eliminate CUSTOMER_DEMOGRAPHICS by ref. join elim using PRIMARY(CD_DEMO_SK) <- FOREIGN(C_CURRENT_CDEMO_SK)
JE:[V2]: Cannot eliminate CUSTOMER_DEMOGRAPHICS by ref. join elim - predicate column refs.
JE:[V2]: Try to eliminate CUSTOMER_DEMOGRAPHICS by ref. join elim using NTSID
JE:[V2]: Cannot eliminate CUSTOMER_DEMOGRAPHICS by ref. join elim - no constr. based join pred(s)
JE:[V2]: Try to eliminate CA by ref. join elim using NTSID
JE:[V2]: Cannot eliminate CA by ref. join elim - no constr. based join pred(s)
JE:[V2]: Try to eliminate CA by ref. join elim using PRIMARY(CA_ADDRESS_SK) <- FOREIGN(C_CURRENT_ADDR_SK)
JE:[V2]: Cannot eliminate CA by ref. join elim - predicate column refs.
JE:[V2]: Try to eliminate CA by ref. join elim using NTSID
JE:[V2]: Cannot eliminate CA by ref. join elim - no constr. based join pred(s)
JE:[V2]: Try to eliminate C by ref. join elim using NTSID
JE:[V2]: Cannot eliminate C by ref. join elim - no constr. based join pred(s)
JE:[V2]: Try to eliminate C by ref. join elim using NTSID
JE:[V2]: Cannot eliminate C by ref. join elim - no constr. based join pred(s)
JE:[V2] Query block (0x7f0478a29c28) after join elimination:
SQL:******* UNPARSED QUERY IS *******
SELECT "CUSTOMER_DEMOGRAPHICS"."CD_GENDER" "CD_GENDER","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS" "CD_MARITAL_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS" "CD_EDUCATION_STATUS",COUNT(*) "CNT1","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE" "CD_PURCHASE_ESTIMATE",COUNT(*) "CNT2","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING" "CD_CREDIT_RATING",COUNT(*) "CNT3","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT" "CD_DEP_COUNT",COUNT(*) "CNT4","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT" "CD_DEP_EMPLOYED_COUNT",COUNT(*) "CNT5","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT" "CD_DEP_COLLEGE_COUNT",COUNT(*) "CNT6" FROM "TPCDS"."CUSTOMER" "C","TPCDS"."CUSTOMER_ADDRESS" "CA","TPCDS"."CUSTOMER_DEMOGRAPHICS" "CUSTOMER_DEMOGRAPHICS" WHERE "C"."C_CURRENT_ADDR_SK"="CA"."CA_ADDRESS_SK" AND "CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK"="C"."C_CURRENT_CDEMO_SK" AND ("CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County') AND  EXISTS (SELECT 0 FROM "TPCDS"."STORE_SALES" "SS","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="SS"."SS_CUSTOMER_SK" AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3 AND ( EXISTS (SELECT 0 FROM "TPCDS"."WEB_SALES" "WEB_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="WEB_SALES"."WS_BILL_CUSTOMER_SK" AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3) OR  EXISTS (SELECT 0 FROM "TPCDS"."CATALOG_SALES" "CATALOG_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="CATALOG_SALES"."CS_SHIP_CUSTOMER_SK" AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3))) GROUP BY "CUSTOMER_DEMOGRAPHICS"."CD_GENDER","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT" ORDER BY "CUSTOMER_DEMOGRAPHICS"."CD_GENDER","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT"

PM: Considering predicate move-around in query block SEL$1 (#1)
**************************
Predicate Move-Around (PM)
**************************
PM:     PM bypassed: Outer query contains no views.
PM:     PM bypassed: Outer query contains no views.
kkqctdrvTD-start on query block SEL$1 (#1)
kkqctdrvTD-start: :
    call(in-use=69008, alloc=81816), compile(in-use=601200, alloc=614952), execution(in-use=10872, alloc=12144)

kkqctdrvTD-cleanup: transform(in-use=0, alloc=0) :
    call(in-use=69008, alloc=81816), compile(in-use=605336, alloc=614952), execution(in-use=10872, alloc=12144)

kkqctdrvTD-end:
    call(in-use=69008, alloc=81816), compile(in-use=609104, alloc=614952), execution(in-use=10872, alloc=12144)

isReduceGrByValid:   Group By Validation (Failed).
isReduceGrByValid:   Group By Validation (Failed).
isReduceGrByValid:   Group By Validation (Failed).
isReduceGrByValid:   Group By Validation (Passed).
isReduceGrByValid:   Group By Validation (Failed).
isReduceGrByValid:   Group By Validation (Failed).
isReduceGrByValid:   Group By Validation (Failed).
isReduceGrByValid:   Group By Validation (Passed).
kkqctdrvTD-start on query block SEL$1 (#1)
kkqctdrvTD-start: :
    call(in-use=69008, alloc=81816), compile(in-use=609208, alloc=614952), execution(in-use=10872, alloc=12144)

VT: Initial VT validity check for query block SEL$3 (#4)
VT: Bypassed: inmemory is disabled.
VT: Initial VT validity check for query block SEL$4 (#3)
VT: Bypassed: inmemory is disabled.
VT: Initial VT validity check for query block SEL$2 (#2)
VT: Bypassed: inmemory is disabled.
VT: Initial VT validity check for query block SEL$1 (#1)
VT: Bypassed: inmemory is disabled.
kkqctdrvTD-cleanup: transform(in-use=0, alloc=0) :
    call(in-use=69008, alloc=81816), compile(in-use=613248, alloc=614952), execution(in-use=10872, alloc=12144)

kkqctdrvTD-end:
    call(in-use=69008, alloc=81816), compile(in-use=617000, alloc=619096), execution(in-use=10872, alloc=12144)

kkqctdrvTD-start on query block SEL$1 (#1)
kkqctdrvTD-start: :
    call(in-use=69008, alloc=81816), compile(in-use=617000, alloc=619096), execution(in-use=10872, alloc=12144)

BJ: Checking validity for bushy join for query block SEL$3 (#4)
invalid because Not enabled by hint/parameter
BJ: Bypassed: Not enabled by hint/parameter.
BJ: Checking validity for bushy join for query block SEL$4 (#3)
invalid because Not enabled by hint/parameter
BJ: Bypassed: Not enabled by hint/parameter.
BJ: Checking validity for bushy join for query block SEL$2 (#2)
invalid because Not enabled by hint/parameter
BJ: Bypassed: Not enabled by hint/parameter.
BJ: Checking validity for bushy join for query block SEL$1 (#1)
invalid because Not enabled by hint/parameter
BJ: Bypassed: Not enabled by hint/parameter.
kkqctdrvTD-cleanup: transform(in-use=0, alloc=0) :
    call(in-use=69008, alloc=81816), compile(in-use=621024, alloc=623240), execution(in-use=10872, alloc=12144)

kkqctdrvTD-end:
    call(in-use=69008, alloc=81816), compile(in-use=624768, alloc=625072), execution(in-use=10872, alloc=12144)

kkqctdrvTD-start on query block SEL$1 (#1)
kkqctdrvTD-start: :
    call(in-use=69008, alloc=81816), compile(in-use=624768, alloc=625072), execution(in-use=10872, alloc=12144)

****************************************
 Cost-Based Group-By/Distinct Placement
****************************************
GBP/DP: Checking validity of GBP/DP for query block SEL$1 (#1)
GBP: Checking validity of group-by placement for query block SEL$1 (#1)

GBP: Using search type: exhaustive
GBP: Considering group-by placement on query block SEL$1 (#1)
GBP: Starting iteration 1, state space = (1,2,3) : (0,0,0)
GBP: Original query
******* UNPARSED QUERY IS *******
SELECT "CUSTOMER_DEMOGRAPHICS"."CD_GENDER" "CD_GENDER","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS" "CD_MARITAL_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS" "CD_EDUCATION_STATUS",COUNT(*) "CNT1","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE" "CD_PURCHASE_ESTIMATE",COUNT(*) "CNT2","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING" "CD_CREDIT_RATING",COUNT(*) "CNT3","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT" "CD_DEP_COUNT",COUNT(*) "CNT4","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT" "CD_DEP_EMPLOYED_COUNT",COUNT(*) "CNT5","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT" "CD_DEP_COLLEGE_COUNT",COUNT(*) "CNT6" FROM "TPCDS"."CUSTOMER" "C","TPCDS"."CUSTOMER_ADDRESS" "CA","TPCDS"."CUSTOMER_DEMOGRAPHICS" "CUSTOMER_DEMOGRAPHICS" WHERE "C"."C_CURRENT_ADDR_SK"="CA"."CA_ADDRESS_SK" AND "CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK"="C"."C_CURRENT_CDEMO_SK" AND ("CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County') AND  EXISTS (SELECT 0 FROM "TPCDS"."STORE_SALES" "SS","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="SS"."SS_CUSTOMER_SK" AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3 AND ( EXISTS (SELECT 0 FROM "TPCDS"."WEB_SALES" "WEB_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="WEB_SALES"."WS_BILL_CUSTOMER_SK" AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3) OR  EXISTS (SELECT 0 FROM "TPCDS"."CATALOG_SALES" "CATALOG_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="CATALOG_SALES"."CS_SHIP_CUSTOMER_SK" AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3))) GROUP BY "CUSTOMER_DEMOGRAPHICS"."CD_GENDER","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT" ORDER BY "CUSTOMER_DEMOGRAPHICS"."CD_GENDER","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT"
FPD: Considering simple filter push in query block SEL$1 (#1)
"C"."C_CURRENT_ADDR_SK"="CA"."CA_ADDRESS_SK" AND "CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK"="C"."C_CURRENT_CDEMO_SK" AND ("CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County') AND  EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM")
FPD: Considering simple filter push in query block SEL$2 (#2)
"SS"."SS_CUSTOMER_SK"=:B1 AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND ( EXISTS (SELECT 0 FROM "WEB_SALES" "WEB_SALES","DATE_DIM" "DATE_DIM") OR  EXISTS (SELECT 0 FROM "CATALOG_SALES" "CATALOG_SALES","DATE_DIM" "DATE_DIM"))
FPD: Considering simple filter push in query block SEL$3 (#4)
"WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B1 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4
try to generate transitive predicate from check constraints for query block SEL$3 (#4)
finally: "WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B1 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1

FPD:   transitive predicates are generated in query block SEL$3 (#4)
"WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B1 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1
FPD: Considering simple filter push in query block SEL$4 (#3)
"CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B1 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4
try to generate transitive predicate from check constraints for query block SEL$4 (#3)
finally: "CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B1 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1

FPD:   transitive predicates are generated in query block SEL$4 (#3)
"CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B1 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1
try to generate transitive predicate from check constraints for query block SEL$2 (#2)
finally: "SS"."SS_CUSTOMER_SK"=:B1 AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND ( EXISTS (SELECT 0 FROM "WEB_SALES" "WEB_SALES","DATE_DIM" "DATE_DIM") OR  EXISTS (SELECT 0 FROM "CATALOG_SALES" "CATALOG_SALES","DATE_DIM" "DATE_DIM"))

try to generate transitive predicate from check constraints for query block SEL$1 (#1)
finally: "C"."C_CURRENT_ADDR_SK"="CA"."CA_ADDRESS_SK" AND "CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK"="C"."C_CURRENT_CDEMO_SK" AND ("CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County') AND  EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM")

GBP: Costing transformed query.
*************************
First K Rows: Setup begin
kkoqbc: optimizing query block SEL$3 (#4)
        
        :
    call(in-use=74256, alloc=98184), compile(in-use=803216, alloc=807928), execution(in-use=12168, alloc=16200)

kkoqbc-subheap (create addr=0x7f04725139a8)
****************
QUERY BLOCK TEXT
****************
SELECT
                    *
                FROM
                    web_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = ws_bill_customer_sk
                    AND ws_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$3 nbfros=2 flg=0
  fro(0): flg=0 objn=74171 hint_alias="DATE_DIM"@"SEL$3"
  fro(1): flg=0 objn=74195 hint_alias="WEB_SALES"@"SEL$3"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3255 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: DATE_DIM  Alias: DATE_DIM
  #Rows: 73049  SSZ: 0  LGR: 0  #Blks:  1510  AvgRowLen:  128.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): D_DATE_SK(NUMBER)
    AvgLen: 6 NDV: 73049 Nulls: 0 Density: 0.000014 Min: 2415022.000000 Max: 2488070.000000
Index Stats::
  Index: D_DATE_PK_IDX  Col#: 1
  LVLS: 1  #LB: 163  #DK: 73049  LB/K: 1.00  DB/K: 1.00  CLUF: 1402.00  NRW: 73049.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table: WEB_SALES  Alias: WEB_SALES  (Using composite stats)
  #Rows: 35969200  SSZ: 0  LGR: 0  #Blks:  829566  AvgRowLen:  167.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
Index Stats::
  Index: WEB_SALES_IDX2  Col#: 5 1
  LVLS: 3  #LB: 130617  #DK: 2992994  LB/K: 1.00  DB/K: 12.00  CLUF: 35969159.00  NRW: 35969200.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
  Index: WEB_SALES_PK_IDX  Col#: 4 18
  LVLS: 2  #LB: 122502  #DK: 35304428  LB/K: 1.00  DB/K: 1.00  CLUF: 35300490.00  NRW: 35304428.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
try to generate single-table filter predicates from ORs for query block SEL$3 (#4)
finally: "WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B1 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4

=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$3 (#4)
Applicable DS directives:
   dirid = 4510913066701158191, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {(74195)[]; (74171)[]}
   dirid = 14910903719618111890, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74195)[5]}
   dirid = 13969931850241126217, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {C(74171)[7, 9]}
   dirid = 13683461771316641482, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74195)[5]; (74171)[7]}
Checking valid directives for the query block
  SPD: Return code in qosdDSDirSetup: NODIR, estType = QUERY_BLOCK
Return code in qosdSetupDirCtx4QB: EXISTS
=====================================
SPD: END context at query block level
=====================================
Access path analysis for WEB_SALES
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for WEB_SALES[WEB_SALES] 
  SPD: Return code in qosdDSDirSetup: NODIR, estType = TABLE

 kkecdn: Single Table Predicate:"WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B1
NOTE: ignoring histogram of column (WEB_SALES.WS_BILL_CUSTOMER_SK)
      used only for incremental stats maintenance
  Column (#5): WS_BILL_CUSTOMER_SK(NUMBER)
    AvgLen: 6 NDV: 973580 Nulls: 0 Density: 0.000001 Min: 2.000000 Max: 1079999.000000
  Estimated selectivity: 1.0271e-06 , col: #5 
  Table: WEB_SALES  Alias: WEB_SALES
    Card: Original: 35969200.000000  Rounded: 37  Computed: 36.945295  Non Adjusted: 36.945295
  Scan IO  Cost (Disk) =   224676.000000
  Scan CPU Cost (Disk) =   14180620495.040001
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000001 flag = 2048  ("WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B1)
  Total Scan IO  Cost  =   224676.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 35969200.000000 (#rows))
                       =   224676.000000
  Total Scan CPU  Cost =   14180620495.040001 (scan (Disk))
                         + 1798460000.000000 (cpu filter eval) (= 50.000000 (per row) * 35969200.000000 (#rows))
                       =   15979080495.040001
  Access Path: TableScan
    Cost:  225085.102964  Resp: 225085.102964  Degree: 0
      Cost_io: 224676.000000  Cost_cpu: 15979080495
      Resp_io: 224676.000000  Resp_cpu: 15979080495
  Access Path: index (index (FFS))
    Index: WEB_SALES_IDX2
    resc_io: 35377.000000  resc_cpu: 7044945128
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  35557.367571  Resp: 35557.367571  Degree: 1
      Cost_io: 35377.000000  Cost_cpu: 7044945128
      Resp_io: 35377.000000  Resp_cpu: 7044945128
 ****** Costing Index WEB_SALES_IDX2
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER

  Estimated selectivity: 1.0271e-06 , col: #5 
  Access Path: index (IndexOnly)
    Index: WEB_SALES_IDX2
    resc_io: 4.000000  resc_cpu: 35886
    ix_sel: 1.0271e-06  ix_sel_with_filters: 1.0271e-06 
    Cost: 4.000919  Resp: 4.000919  Degree: 1
  Best:: AccessPath: IndexRange
  Index: WEB_SALES_IDX2
         Cost: 4.000919  Degree: 1  Resp: 4.000919  Card: 36.945295  Bytes: 0.000000

Access path analysis for DATE_DIM
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for DATE_DIM[DATE_DIM] 
  SPD: Directive valid: dirid = 13969931850241126217, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {C(74171)[7, 9]}
  SPD: Return code in qosdDSDirSetup: EXISTS, estType = TABLE
  Column (#7): 
    NewDensity:0.000007, OldDensity:0.000007 BktCnt:73049.000000, PopBktCnt:73048.000000, PopValCnt:200, NDV:201
  Column (#7): D_YEAR(NUMBER)
    AvgLen: 4 NDV: 201 Nulls: 0 Density: 0.000007 Min: 1900.000000 Max: 2100.000000
    Histogram: Freq  #Bkts: 201  UncompBkts: 73049  EndPtVals: 201  ActualVal: yes
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 


 kkecdn: Single Table Predicate:"DATE_DIM"."D_YEAR"=2001
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY">=1
  Column (#9): 
    NewDensity:0.038666, OldDensity:0.000007 BktCnt:73049.000000, PopBktCnt:73049.000000, PopValCnt:12, NDV:12
  Column (#9): D_MOY(NUMBER)
    AvgLen: 3 NDV: 12 Nulls: 0 Density: 0.038666 Min: 1.000000 Max: 12.000000
    Histogram: Freq  #Bkts: 12  UncompBkts: 73049  EndPtVals: 12  ActualVal: yes
  Estimated selectivity: 1.000000 , endpoint value predicate, col: #9 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY"<=4
  Estimated selectivity: 0.329224 , endpoint value predicate, col: #9 
  Table: DATE_DIM  Alias: DATE_DIM
    Card: Original: 73049.000000  Rounded: 120  Computed: 120.166840  Non Adjusted: 120.166840
  Scan IO  Cost (Disk) =   411.000000
  Scan CPU Cost (Disk) =   33398564.400000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.004997 flag = 2048  ("DATE_DIM"."D_YEAR"=2001)
    io = NOCOST, cpu = 50.000000, sel = 0.329224 flag = 2048  ("DATE_DIM"."D_MOY"<=4)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("DATE_DIM"."D_MOY">=1)
  Total Scan IO  Cost  =   411.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 73049.000000 (#rows))
                       =   411.000000
  Total Scan CPU  Cost =   33398564.400000 (scan (Disk))
                         + 3676708.342003 (cpu filter eval) (= 50.332083 (per row) * 73049.000000 (#rows))
                       =   37075272.742003
  Access Path: TableScan
    Cost:  411.949216  Resp: 411.949216  Degree: 0
      Cost_io: 411.000000  Cost_cpu: 37075273
      Resp_io: 411.000000  Resp_cpu: 37075273
  Best:: AccessPath: TableScan
         Cost: 411.949216  Degree: 1  Resp: 411.949216  Card: 120.166840  Bytes: 0.000000

***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE: Checking validity of partial join eval on query block SEL$3 (#4)
PJE: Passed validity of partial join eval by query block SEL$3 (#4)
number: [0]
PJE: Partial join eval conversion for query block SEL$3 (#4).
PJE: Table marked for partial join eval: DATE_DIM[DATE_DIM]#1
***********************
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  WEB_SALES[WEB_SALES]#0  DATE_DIM[DATE_DIM]#1

***************
Now joining: DATE_DIM[DATE_DIM]#1
***************
NL Join
  Outer table: Card: 36.945295  Cost: 4.000919  Resp: 4.000919  Degree: 1  Bytes: 
Access path analysis for DATE_DIM
  Scan IO  Cost (Disk) =   409.000000
  Scan CPU Cost (Disk) =   33398564.400000
NOTE: ignoring histogram of column (WEB_SALES.WS_SOLD_DATE_SK)
      used only for incremental stats maintenance
  Column (#1): WS_SOLD_DATE_SK(NUMBER)
    AvgLen: 6 NDV: 1839 Nulls: 0 Density: 0.000544 Min: 2450816.000000 Max: 2452641.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.008264 flag = 2048  ("WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK")
    io = NOCOST, cpu = 50.000000, sel = 0.004997 flag = 2048  ("DATE_DIM"."D_YEAR"=2001)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("DATE_DIM"."D_MOY">=1)
    io = NOCOST, cpu = 50.000000, sel = 0.329224 flag = 2048  ("DATE_DIM"."D_MOY"<=4)
  Total Scan IO  Cost  =   409.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 73049.000000 (#rows))
                       =   409.000000
  Total Scan CPU  Cost =   33398564.400000 (scan (Disk))
                         + 3670900.482165 (cpu filter eval) (= 50.252577 (per row) * 73049.000000 (#rows))
                       =   37069464.882165
  Inner table: DATE_DIM  Alias: DATE_DIM
  Access Path: TableScan
    NL Join:  Cost: 15172.116421  Resp: 15172.116421  Degree: 1
      Cost_io: 15137.000000  Cost_cpu: 1371606086
      Resp_io: 15137.000000  Resp_cpu: 1371606086
 ****** Costing Index D_DATE_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: D_DATE_PK_IDX
    resc_io: 1.000000  resc_cpu: 9382
    ix_sel: 1.3689e-05  ix_sel_with_filters: 1.3689e-05 
    NL Join (ordered): Cost: 41.009806  Resp: 41.009806  Degree: 1
      Cost_io: 41.000000  Cost_cpu: 383011
      Resp_io: 41.000000  Resp_cpu: 383011
 ****** Costing Index D_DATE_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 
  Estimated selectivity: 1.000000 , endpoint value predicate, col: #9 
  Estimated selectivity: 0.329224 , endpoint value predicate, col: #9 
  Access Path: index (AllEqUnique)
    Index: D_DATE_PK_IDX
    resc_io: 1.000000  resc_cpu: 9382
    ix_sel: 1.3689e-05  ix_sel_with_filters: 1.3689e-05 
    NL Join (ordered): Cost: 41.009806  Resp: 41.009806  Degree: 1
      Cost_io: 41.000000  Cost_cpu: 383011
      Resp_io: 41.000000  Resp_cpu: 383011

  Best NL cost: 41.009806
          resc: 41.009806  resc_io: 41.000000  resc_cpu: 383011
          resp: 41.009806  resp_io: 41.000000  resc_cpu: 383011
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Capping Semi Join Card of HJ/SMJ by inner = 36.690903
Capping Semi Join Card of HJ/SMJ (no post filters) by inner = 36.690903
Capping Semi Join Card of NL by inner = 36.690903
Capping Semi Join Card of without POSQ by inner = 36.690903
Capping Semi Join Card of non adjusted NSQ by inner = 36.690903
Semi Join Card (capped by inner join):  36.690903 = outer (36.945295) * inner (120.166840) * sel (0.008264)
Join Card - Rounded: 37 Computed: 36.690903
  Outer table:  WEB_SALES  Alias: WEB_SALES
    resc: 4.000919  card 36.945295  bytes:   deg: 1  resp: 4.000919
  Inner table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card: 120.166840  bytes:   deg: 1  resp: 411.949216
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     25 Total Rows:            120
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39096166
      Total Temp space used: 0
  SM join: Resc: 416.951091  Resp: 416.951091  [multiMatchCost=0.000000]
SM Join
  SM cost: 416.951091 
     resc: 416.951091 resc_io: 415.000000 resc_cpu: 76207324
     resp: 416.951091 resp_io: 415.000000 resp_cpu: 76207324
  Outer table:  WEB_SALES  Alias: WEB_SALES
    resc: 4.000919  card 36.945295  bytes:   deg: 1  resp: 4.000919
  Inner table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card: 120.166840  bytes:   deg: 1  resp: 411.949216
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.015811  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 415.965946  Resp: 415.965946  [multiMatchCost=0.000000]
HA Join
  HA cost: 415.965946  
     resc: 415.965946 resc_io: 415.000000 resc_cpu: 37728709
     resp: 415.965946 resp_io: 415.000000 resp_cpu: 37728709
Best:: JoinMethod: NestedLoopSemi
       Cost: 41.009806  Degree: 1  Resp: 41.009806  Card: 36.690903 Bytes: 
***********************
Best so far:  Table#: 0  cost: 4.000919  card: 36.945295  bytes: 444.000000
              Table#: 1  cost: 41.009806  card: 36.690903  bytes: 925.000000
***********************

*********************************
Number of join permutations tried: 1
*********************************
*********************
PJE: Partial join eval conversion for query block SEL$3 (#4).
PJE: Table marked for partial join eval: DATE_DIM[DATE_DIM]#1
***********************
Enumerating distribution method (advanced)
--- Distribution method for 
join between WEB_SALES[WEB_SALES](serial) and DATE_DIM[DATE_DIM](serial); jm = 15; right side access path = IndexUnique
kkopqIsSerialJoin: serial NLJ: both inputs serial
---- serial NL-Join -> SERIAL

(newjo-save)    [1 0 ]
LORE: Or-Expansion validity checks failed on query block SEL$3 (#4) because Cost based OR expansion enabled
Transfer Optimizer annotations for query block SEL$3 (#4)
Final cost for query block SEL$3 (#4) - All Rows Plan:
  Best join order: 1
  Cost: 41.009806  Degree: 1  Card: 37.000000  Bytes: 925.000000
  Resc: 41.009806  Resc_io: 41.000000  Resc_cpu: 383011
  Resp: 41.009806  Resp_io: 41.000000  Resc_cpu: 383011
kkoqbc-subheap (delete addr=0x7f04725139a8, in-use=52808, alloc=65704)
kkoqbc-end:
        :
    call(in-use=114120, alloc=196808), compile(in-use=835704, alloc=837752), execution(in-use=12576, alloc=16200)

kkoqbc: finish optimizing query block SEL$3 (#4)
kkoqbc: optimizing query block SEL$4 (#3)
        
        :
    call(in-use=111912, alloc=196808), compile(in-use=842152, alloc=846040), execution(in-use=12752, alloc=16200)

kkoqbc-subheap (create addr=0x7f04725139a8)
****************
QUERY BLOCK TEXT
****************
SELECT
                    *
                FROM
                    catalog_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = cs_ship_customer_sk
                    AND cs_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$4 nbfros=2 flg=0
  fro(0): flg=0 objn=74185 hint_alias="CATALOG_SALES"@"SEL$4"
  fro(1): flg=0 objn=74171 hint_alias="DATE_DIM"@"SEL$4"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3255 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: DATE_DIM  Alias: DATE_DIM
  #Rows: 73049  SSZ: 0  LGR: 0  #Blks:  1510  AvgRowLen:  128.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): D_DATE_SK(NUMBER)
    AvgLen: 6 NDV: 73049 Nulls: 0 Density: 0.000014 Min: 2415022.000000 Max: 2488070.000000
Index Stats::
  Index: D_DATE_PK_IDX  Col#: 1
  LVLS: 1  #LB: 163  #DK: 73049  LB/K: 1.00  DB/K: 1.00  CLUF: 1402.00  NRW: 73049.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table: CATALOG_SALES  Alias: CATALOG_SALES  (Using composite stats)
  #Rows: 72077400  SSZ: 0  LGR: 0  #Blks:  1645494  AvgRowLen:  168.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
Index Stats::
  Index: CATALOG_SALES_IDX2  Col#: 8 1
  LVLS: 3  #LB: 261734  #DK: 5997411  LB/K: 1.00  DB/K: 12.00  CLUF: 72077362.00  NRW: 72077400.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
  Index: CATALOG_SALES_PK_IDX  Col#: 16 18
  LVLS: 2  #LB: 249644  #DK: 71913105  LB/K: 1.00  DB/K: 1.00  CLUF: 71898009.00  NRW: 71913105.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
try to generate single-table filter predicates from ORs for query block SEL$4 (#3)
finally: "CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B1 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4

=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$4 (#3)
Applicable DS directives:
   dirid = 11267665714990475542, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74185)[8]}
   dirid = 13969931850241126217, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {C(74171)[7, 9]}
   dirid = 2090373381697137251, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {(74185)[]; F(74171)[]}
   dirid = 14483145493039253896, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {(74185)[]; (74171)[]}
Checking valid directives for the query block
  SPD: Return code in qosdDSDirSetup: NODIR, estType = QUERY_BLOCK
Return code in qosdSetupDirCtx4QB: EXISTS
=====================================
SPD: END context at query block level
=====================================
Access path analysis for CATALOG_SALES
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for CATALOG_SALES[CATALOG_SALES] 
  SPD: Return code in qosdDSDirSetup: NODIR, estType = TABLE

 kkecdn: Single Table Predicate:"CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B1
NOTE: ignoring histogram of column (CATALOG_SALES.CS_SHIP_CUSTOMER_SK)
      used only for incremental stats maintenance
  Column (#8): CS_SHIP_CUSTOMER_SK(NUMBER)
    AvgLen: 6 NDV: 1037120 Nulls: 0 Density: 0.000001 Min: 1.000000 Max: 1079999.000000
  Estimated selectivity: 9.6421e-07 , col: #8 
  Table: CATALOG_SALES  Alias: CATALOG_SALES
    Card: Original: 72077400.000000  Rounded: 69  Computed: 69.497647  Non Adjusted: 69.497647
  Scan IO  Cost (Disk) =   445656.000000
  Scan CPU Cost (Disk) =   32620732791.360001
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000001 flag = 2048  ("CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B1)
  Total Scan IO  Cost  =   445656.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 72077400.000000 (#rows))
                       =   445656.000000
  Total Scan CPU  Cost =   32620732791.360001 (scan (Disk))
                         + 3603870000.000000 (cpu filter eval) (= 50.000000 (per row) * 72077400.000000 (#rows))
                       =   36224602791.360001
  Access Path: TableScan
    Cost:  446583.437120  Resp: 446583.437120  Degree: 0
      Cost_io: 445656.000000  Cost_cpu: 36224602791
      Resp_io: 445656.000000  Resp_cpu: 36224602791
  Access Path: index (index (FFS))
    Index: CATALOG_SALES_IDX2
    resc_io: 70888.000000  resc_cpu: 14117080977
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  71249.431290  Resp: 71249.431290  Degree: 1
      Cost_io: 70888.000000  Cost_cpu: 14117080977
      Resp_io: 70888.000000  Resp_cpu: 14117080977
 ****** Costing Index CATALOG_SALES_IDX2
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER

  Estimated selectivity: 9.6421e-07 , col: #8 
  Access Path: index (IndexOnly)
    Index: CATALOG_SALES_IDX2
    resc_io: 4.000000  resc_cpu: 42486
    ix_sel: 9.6421e-07  ix_sel_with_filters: 9.6421e-07 
    Cost: 4.001088  Resp: 4.001088  Degree: 1
  Best:: AccessPath: IndexRange
  Index: CATALOG_SALES_IDX2
         Cost: 4.001088  Degree: 1  Resp: 4.001088  Card: 69.497647  Bytes: 0.000000

Access path analysis for DATE_DIM
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for DATE_DIM[DATE_DIM] 
  SPD: Directive valid: dirid = 13969931850241126217, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {C(74171)[7, 9]}
  SPD: Return code in qosdDSDirSetup: EXISTS, estType = TABLE
  Column (#7): 
    NewDensity:0.000007, OldDensity:0.000007 BktCnt:73049.000000, PopBktCnt:73048.000000, PopValCnt:200, NDV:201
  Column (#7): D_YEAR(NUMBER)
    AvgLen: 4 NDV: 201 Nulls: 0 Density: 0.000007 Min: 1900.000000 Max: 2100.000000
    Histogram: Freq  #Bkts: 201  UncompBkts: 73049  EndPtVals: 201  ActualVal: yes
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 


 kkecdn: Single Table Predicate:"DATE_DIM"."D_YEAR"=2001
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY">=1
  Column (#9): 
    NewDensity:0.038666, OldDensity:0.000007 BktCnt:73049.000000, PopBktCnt:73049.000000, PopValCnt:12, NDV:12
  Column (#9): D_MOY(NUMBER)
    AvgLen: 3 NDV: 12 Nulls: 0 Density: 0.038666 Min: 1.000000 Max: 12.000000
    Histogram: Freq  #Bkts: 12  UncompBkts: 73049  EndPtVals: 12  ActualVal: yes
  Estimated selectivity: 1.000000 , endpoint value predicate, col: #9 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY"<=4
  Estimated selectivity: 0.329224 , endpoint value predicate, col: #9 
  Table: DATE_DIM  Alias: DATE_DIM
    Card: Original: 73049.000000  Rounded: 120  Computed: 120.166840  Non Adjusted: 120.166840
  Scan IO  Cost (Disk) =   411.000000
  Scan CPU Cost (Disk) =   33398564.400000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.004997 flag = 2048  ("DATE_DIM"."D_YEAR"=2001)
    io = NOCOST, cpu = 50.000000, sel = 0.329224 flag = 2048  ("DATE_DIM"."D_MOY"<=4)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("DATE_DIM"."D_MOY">=1)
  Total Scan IO  Cost  =   411.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 73049.000000 (#rows))
                       =   411.000000
  Total Scan CPU  Cost =   33398564.400000 (scan (Disk))
                         + 3676708.342003 (cpu filter eval) (= 50.332083 (per row) * 73049.000000 (#rows))
                       =   37075272.742003
  Access Path: TableScan
    Cost:  411.949216  Resp: 411.949216  Degree: 0
      Cost_io: 411.000000  Cost_cpu: 37075273
      Resp_io: 411.000000  Resp_cpu: 37075273
  Best:: AccessPath: TableScan
         Cost: 411.949216  Degree: 1  Resp: 411.949216  Card: 120.166840  Bytes: 0.000000

***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE: Checking validity of partial join eval on query block SEL$4 (#3)
PJE: Passed validity of partial join eval by query block SEL$4 (#3)
number: [0]
PJE: Partial join eval conversion for query block SEL$4 (#3).
PJE: Table marked for partial join eval: DATE_DIM[DATE_DIM]#1
***********************
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  CATALOG_SALES[CATALOG_SALES]#0  DATE_DIM[DATE_DIM]#1

***************
Now joining: DATE_DIM[DATE_DIM]#1
***************
NL Join
  Outer table: Card: 69.497647  Cost: 4.001088  Resp: 4.001088  Degree: 1  Bytes: 
Access path analysis for DATE_DIM
  Scan IO  Cost (Disk) =   408.985507
  Scan CPU Cost (Disk) =   33398564.400000
NOTE: ignoring histogram of column (CATALOG_SALES.CS_SOLD_DATE_SK)
      used only for incremental stats maintenance
  Column (#1): CS_SOLD_DATE_SK(NUMBER)
    AvgLen: 6 NDV: 1849 Nulls: 0 Density: 0.000541 Min: 2450815.000000 Max: 2452647.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.008264 flag = 2048  ("CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK")
    io = NOCOST, cpu = 50.000000, sel = 0.004997 flag = 2048  ("DATE_DIM"."D_YEAR"=2001)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("DATE_DIM"."D_MOY">=1)
    io = NOCOST, cpu = 50.000000, sel = 0.329224 flag = 2048  ("DATE_DIM"."D_MOY"<=4)
  Total Scan IO  Cost  =   408.985507 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 73049.000000 (#rows))
                       =   408.985507
  Total Scan CPU  Cost =   33398564.400000 (scan (Disk))
                         + 3670900.482165 (cpu filter eval) (= 50.252577 (per row) * 73049.000000 (#rows))
                       =   37069464.882165
  Inner table: DATE_DIM  Alias: DATE_DIM
  Access Path: TableScan
    NL Join:  Cost: 28289.486754  Resp: 28289.486754  Degree: 1
      Cost_io: 28224.000000  Cost_cpu: 2557835563
      Resp_io: 28224.000000  Resp_cpu: 2557835563
 ****** Costing Index D_DATE_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: D_DATE_PK_IDX
    resc_io: 1.000000  resc_cpu: 9382
    ix_sel: 1.3689e-05  ix_sel_with_filters: 1.3689e-05 
    NL Join (ordered): Cost: 73.017661  Resp: 73.017661  Degree: 1
      Cost_io: 73.000000  Cost_cpu: 689828
      Resp_io: 73.000000  Resp_cpu: 689828
 ****** Costing Index D_DATE_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 
  Estimated selectivity: 1.000000 , endpoint value predicate, col: #9 
  Estimated selectivity: 0.329224 , endpoint value predicate, col: #9 
  Access Path: index (AllEqUnique)
    Index: D_DATE_PK_IDX
    resc_io: 1.000000  resc_cpu: 9382
    ix_sel: 1.3689e-05  ix_sel_with_filters: 1.3689e-05 
    NL Join (ordered): Cost: 73.017661  Resp: 73.017661  Degree: 1
      Cost_io: 73.000000  Cost_cpu: 689828
      Resp_io: 73.000000  Resp_cpu: 689828

  Best NL cost: 73.017661
          resc: 73.017661  resc_io: 73.000000  resc_cpu: 689828
          resp: 73.017661  resp_io: 73.000000  resc_cpu: 689828
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Capping Semi Join Card of HJ/SMJ by inner = 69.019113
Capping Semi Join Card of HJ/SMJ (no post filters) by inner = 69.019113
Capping Semi Join Card of NL by inner = 69.019113
Capping Semi Join Card of without POSQ by inner = 69.019113
Capping Semi Join Card of non adjusted NSQ by inner = 69.019113
Semi Join Card (capped by inner join):  69.019113 = outer (69.497647) * inner (120.166840) * sel (0.008264)
Join Card - Rounded: 69 Computed: 69.019113
  Outer table:  CATALOG_SALES  Alias: CATALOG_SALES
    resc: 4.001088  card 69.497647  bytes:   deg: 1  resp: 4.001088
  Inner table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card: 120.166840  bytes:   deg: 1  resp: 411.949216
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     25 Total Rows:            120
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39096166
      Total Temp space used: 0
  SM join: Resc: 416.951260  Resp: 416.951260  [multiMatchCost=0.000000]
SM Join
  SM cost: 416.951260 
     resc: 416.951260 resc_io: 415.000000 resc_cpu: 76213924
     resp: 416.951260 resp_io: 415.000000 resp_cpu: 76213924
  Outer table:  CATALOG_SALES  Alias: CATALOG_SALES
    resc: 4.001088  card 69.497647  bytes:   deg: 1  resp: 4.001088
  Inner table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card: 120.166840  bytes:   deg: 1  resp: 411.949216
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.015934  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 415.966238  Resp: 415.966238  [multiMatchCost=0.000000]
HA Join
  HA cost: 415.966238  
     resc: 415.966238 resc_io: 415.000000 resc_cpu: 37740109
     resp: 415.966238 resp_io: 415.000000 resp_cpu: 37740109
Best:: JoinMethod: NestedLoopSemi
       Cost: 73.017661  Degree: 1  Resp: 73.017661  Card: 69.019113 Bytes: 
***********************
Best so far:  Table#: 0  cost: 4.001088  card: 69.497647  bytes: 828.000000
              Table#: 1  cost: 73.017661  card: 69.019113  bytes: 1725.000000
***********************

*********************************
Number of join permutations tried: 1
*********************************
*********************
PJE: Partial join eval conversion for query block SEL$4 (#3).
PJE: Table marked for partial join eval: DATE_DIM[DATE_DIM]#1
***********************
Enumerating distribution method (advanced)
--- Distribution method for 
join between CATALOG_SALES[CATALOG_SALES](serial) and DATE_DIM[DATE_DIM](serial); jm = 15; right side access path = IndexUnique
kkopqIsSerialJoin: serial NLJ: both inputs serial
---- serial NL-Join -> SERIAL

(newjo-save)    [1 0 ]
LORE: Or-Expansion validity checks failed on query block SEL$4 (#3) because Cost based OR expansion enabled
Transfer Optimizer annotations for query block SEL$4 (#3)
Final cost for query block SEL$4 (#3) - All Rows Plan:
  Best join order: 1
  Cost: 73.017661  Degree: 1  Card: 69.000000  Bytes: 1725.000000
  Resc: 73.017661  Resc_io: 73.000000  Resc_cpu: 689828
  Resp: 73.017661  Resp_io: 73.000000  Resc_cpu: 689828
kkoqbc-subheap (delete addr=0x7f04725139a8, in-use=52808, alloc=65704)
kkoqbc-end:
        :
    call(in-use=151064, alloc=229544), compile(in-use=874544, alloc=878152), execution(in-use=13160, alloc=16200)

kkoqbc: finish optimizing query block SEL$4 (#3)
kkoqbc: optimizing query block SEL$2 (#2)
        
        :
    call(in-use=148856, alloc=229544), compile(in-use=881072, alloc=881504), execution(in-use=13320, alloc=16200)

kkoqbc-subheap (create addr=0x7f04725139a8)
****************
QUERY BLOCK TEXT
****************
SELECT
            *
        FROM
            store_sales ss,
            date_dim
        WHERE
            c.c_customer_sk = ss.ss_customer_sk
            AND ss_sold_date_sk = d_date_sk
            AND d_year = 2001
            AND d_moy BETWEEN 1 AND 1 + 3
            AND ( EXISTS (
                SELECT
                    *
                FROM
                    web_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = ws_bill_customer_sk
                    AND ws_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            )
                  OR EXISTS (
                SELECT
                    *
                FROM
                    catalog_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = cs_ship_customer_sk
                    AND cs_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            ) )
    
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$2 nbfros=2 flg=0
  fro(0): flg=0 objn=74171 hint_alias="DATE_DIM"@"SEL$2"
  fro(1): flg=0 objn=74191 hint_alias="SS"@"SEL$2"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3255 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: DATE_DIM  Alias: DATE_DIM
  #Rows: 73049  SSZ: 0  LGR: 0  #Blks:  1510  AvgRowLen:  128.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): D_DATE_SK(NUMBER)
    AvgLen: 6 NDV: 73049 Nulls: 0 Density: 0.000014 Min: 2415022.000000 Max: 2488070.000000
Index Stats::
  Index: D_DATE_PK_IDX  Col#: 1
  LVLS: 1  #LB: 163  #DK: 73049  LB/K: 1.00  DB/K: 1.00  CLUF: 1402.00  NRW: 73049.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table: STORE_SALES  Alias: SS  (Using composite stats)
  #Rows: 144020200  SSZ: 0  LGR: 0  #Blks:  2304802  AvgRowLen:  117.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
Index Stats::
  Index: STORE_SALES_IDX2  Col#: 4 1
  LVLS: 3  #LB: 522970  #DK: 11965122  LB/K: 1.00  DB/K: 12.00  CLUF: 143898920.00  NRW: 144020200.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
  Index: STORE_SALES_PK_IDX  Col#: 3 10
  LVLS: 3  #LB: 497464  #DK: 141527398  LB/K: 1.00  DB/K: 1.00  CLUF: 141365556.00  NRW: 141527398.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
try to generate single-table filter predicates from ORs for query block SEL$2 (#2)
finally: "SS"."SS_CUSTOMER_SK"=:B1 AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND ( EXISTS (SELECT 0 FROM "WEB_SALES" "WEB_SALES","DATE_DIM" "DATE_DIM" WHERE "WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B2 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1) OR  EXISTS (SELECT 0 FROM "CATALOG_SALES" "CATALOG_SALES","DATE_DIM" "DATE_DIM" WHERE "CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B3 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1))

=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$2 (#2)
Applicable DS directives:
   dirid = 10827845680942532126, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {F(74191)[]; F(74171)[]}
   dirid = 7660518587836633700, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74191)[4]}
   dirid = 13969931850241126217, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {C(74171)[7, 9]}
   dirid = 2361553282592865451, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {(74191)[]; F(74171)[]}
   dirid = 12943986683386070018, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {(74191)[]; (74171)[]}
Checking valid directives for the query block
  SPD: Return code in qosdDSDirSetup: NODIR, estType = QUERY_BLOCK
Return code in qosdSetupDirCtx4QB: EXISTS
=====================================
SPD: END context at query block level
=====================================
Access path analysis for STORE_SALES
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for STORE_SALES[SS] 
  SPD: Return code in qosdDSDirSetup: NODIR, estType = TABLE

 kkecdn: Single Table Predicate:"SS"."SS_CUSTOMER_SK"=:B1
NOTE: ignoring histogram of column (STORE_SALES.SS_CUSTOMER_SK)
      used only for incremental stats maintenance
  Column (#4): SS_CUSTOMER_SK(NUMBER)
    AvgLen: 6 NDV: 1039371 Nulls: 0 Density: 0.000001 Min: 1.000000 Max: 1079999.000000
  Estimated selectivity: 9.6212e-07 , col: #4 
  Table: STORE_SALES  Alias: SS
    Card: Original: 144020200.000000  Rounded: 139  Computed: 138.564767  Non Adjusted: 138.564767
  Scan IO  Cost (Disk) =   624219.000000
  Scan CPU Cost (Disk) =   46657751154.880005
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000001 flag = 2048  ("SS"."SS_CUSTOMER_SK"=:B1)
  Total Scan IO  Cost  =   624219.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 144020200.000000 (#rows))
                       =   624219.000000
  Total Scan CPU  Cost =   46657751154.880005 (scan (Disk))
                         + 7201010000.000000 (cpu filter eval) (= 50.000000 (per row) * 144020200.000000 (#rows))
                       =   53858761154.880005
  Access Path: TableScan
    Cost:  625597.914066  Resp: 625597.914066  Degree: 0
      Cost_io: 624219.000000  Cost_cpu: 53858761155
      Resp_io: 624219.000000  Resp_cpu: 53858761155
  Access Path: index (index (FFS))
    Index: STORE_SALES_IDX2
    resc_io: 141639.000000  resc_cpu: 28207733477
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  142361.185947  Resp: 142361.185947  Degree: 1
      Cost_io: 141639.000000  Cost_cpu: 28207733477
      Resp_io: 141639.000000  Resp_cpu: 28207733477
 ****** Costing Index STORE_SALES_IDX2
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER

  Estimated selectivity: 9.6212e-07 , col: #4 
  Access Path: index (IndexOnly)
    Index: STORE_SALES_IDX2
    resc_io: 4.000000  resc_cpu: 56286
    ix_sel: 9.6212e-07  ix_sel_with_filters: 9.6212e-07 
    Cost: 4.001441  Resp: 4.001441  Degree: 1
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: IndexRange
  Index: STORE_SALES_IDX2
         Cost: 4.001441  Degree: 1  Resp: 4.001441  Card: 138.564767  Bytes: 0.000000

Access path analysis for DATE_DIM
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for DATE_DIM[DATE_DIM] 
  SPD: Directive valid: dirid = 13969931850241126217, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {C(74171)[7, 9]}
  SPD: Return code in qosdDSDirSetup: EXISTS, estType = TABLE
  Column (#7): 
    NewDensity:0.000007, OldDensity:0.000007 BktCnt:73049.000000, PopBktCnt:73048.000000, PopValCnt:200, NDV:201
  Column (#7): D_YEAR(NUMBER)
    AvgLen: 4 NDV: 201 Nulls: 0 Density: 0.000007 Min: 1900.000000 Max: 2100.000000
    Histogram: Freq  #Bkts: 201  UncompBkts: 73049  EndPtVals: 201  ActualVal: yes
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 


 kkecdn: Single Table Predicate:"DATE_DIM"."D_YEAR"=2001
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY">=1
  Column (#9): 
    NewDensity:0.038666, OldDensity:0.000007 BktCnt:73049.000000, PopBktCnt:73049.000000, PopValCnt:12, NDV:12
  Column (#9): D_MOY(NUMBER)
    AvgLen: 3 NDV: 12 Nulls: 0 Density: 0.038666 Min: 1.000000 Max: 12.000000
    Histogram: Freq  #Bkts: 12  UncompBkts: 73049  EndPtVals: 12  ActualVal: yes
  Estimated selectivity: 1.000000 , endpoint value predicate, col: #9 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY"<=4
  Estimated selectivity: 0.329224 , endpoint value predicate, col: #9 
  Table: DATE_DIM  Alias: DATE_DIM
    Card: Original: 73049.000000  Rounded: 120  Computed: 120.166840  Non Adjusted: 120.166840
  Scan IO  Cost (Disk) =   411.000000
  Scan CPU Cost (Disk) =   33398564.400000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.004997 flag = 2048  ("DATE_DIM"."D_YEAR"=2001)
    io = NOCOST, cpu = 50.000000, sel = 0.329224 flag = 2048  ("DATE_DIM"."D_MOY"<=4)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("DATE_DIM"."D_MOY">=1)
  Total Scan IO  Cost  =   411.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 73049.000000 (#rows))
                       =   411.000000
  Total Scan CPU  Cost =   33398564.400000 (scan (Disk))
                         + 3676708.342003 (cpu filter eval) (= 50.332083 (per row) * 73049.000000 (#rows))
                       =   37075272.742003
  Access Path: TableScan
    Cost:  411.949216  Resp: 411.949216  Degree: 0
      Cost_io: 411.000000  Cost_cpu: 37075273
      Resp_io: 411.000000  Resp_cpu: 37075273
  ****** trying bitmap/domain indexes ******
 ****** Costing Index D_DATE_PK_IDX
  Access Path: index (FullScan)
    Index: D_DATE_PK_IDX
    resc_io: 164.000000  resc_cpu: 15777716
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 164.403948  Resp: 164.403948  Degree: 0
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: TableScan
         Cost: 411.949216  Degree: 1  Resp: 411.949216  Card: 120.166840  Bytes: 0.000000

***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE: Checking validity of partial join eval on query block SEL$2 (#2)
PJE: Passed validity of partial join eval by query block SEL$2 (#2)
number: [0]
PJE: Partial join eval conversion for query block SEL$2 (#2).
PJE: Table marked for partial join eval: STORE_SALES[SS]#1
***********************
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  DATE_DIM[DATE_DIM]#0  STORE_SALES[SS]#1

***************
Now joining: STORE_SALES[SS]#1
***************
NL Join
  Outer table: Card: 120.166840  Cost: 411.949216  Resp: 411.949216  Degree: 1  Bytes: 
Access path analysis for STORE_SALES
  Scan IO  Cost (Disk) =   624217.216667
  Scan CPU Cost (Disk) =   46657751154.880005
NOTE: ignoring histogram of column (STORE_SALES.SS_SOLD_DATE_SK)
      used only for incremental stats maintenance
  Column (#1): SS_SOLD_DATE_SK(NUMBER)
    AvgLen: 6 NDV: 1849 Nulls: 0 Density: 0.000541 Min: 2450816.000000 Max: 2452651.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000001 flag = 2064  ("SS"."SS_CUSTOMER_SK"=:B1)
    io = NOCOST, cpu = 50.000000, sel = 0.007463 flag = 2048  ("SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK")
  Total Scan IO  Cost  =   624217.216667 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 144020200.000000 (#rows))
                       =   624217.216667
  Total Scan CPU  Cost =   46657751154.880005 (scan (Disk))
                         + 7201016928.238328 (cpu filter eval) (= 50.000048 (per row) * 144020200.000000 (#rows))
                       =   53858768083.118332
  Inner table: STORE_SALES  Alias: SS
  Access Path: TableScan
    NL Join:  Cost: 75071947.658387  Resp: 75071947.658387  Degree: 1
      Cost_io: 74906477.000000  Cost_cpu: 6463089245247
      Resp_io: 74906477.000000  Resp_cpu: 6463089245247
  Access Path: index (index (FFS))
    Index: STORE_SALES_IDX2
    resc_io: 141637.716667  resc_cpu: 28207740405
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: STORE_SALES  Alias: SS
  Access Path: index (FFS)
    NL Join:  Cost: 17083600.284196  Resp: 17083600.284196  Degree: 1
      Cost_io: 16996937.000000  Cost_cpu: 3384965923877
      Resp_io: 16996937.000000  Resp_cpu: 3384965923877
 ****** Costing Index STORE_SALES_IDX2
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  ColGroup (#1, Index) STORE_SALES_IDX2
    Col#: 1 4    CorStregth: 160.62
  ColGroup (#2, Index) STORE_SALES_PK_IDX
    Col#: 3 10    CorStregth: -1.00
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 8.3576e-08
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 8.3576e-08
  Estimated selectivity: 9.6212e-07 , col: #4 
  Access Path: index (AllEqJoinGuess)
    Index: STORE_SALES_IDX2
    resc_io: 3.000000  resc_cpu: 22414
    ix_sel: 6.9435e-09  ix_sel_with_filters: 6.9435e-09 
    NL Join : Cost: 772.018080  Resp: 772.018080  Degree: 1
      Cost_io: 771.000000  Cost_cpu: 39764991
      Resp_io: 771.000000  Resp_cpu: 39764991
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 772.018080
          resc: 772.018080  resc_io: 771.000000  resc_cpu: 39764991
          resp: 772.018080  resp_io: 771.000000  resc_cpu: 39764991
  SPD: Directive valid: dirid = 10827845680942532126, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {F(74191)[]; F(74171)[]}
  SPD: Return code in qosdDSDirSetup: EXISTS, estType = JOIN
Semi Join Card:  120.166840 = outer (120.166840) * sel (1.000000)
Join Card - Rounded: 120 Computed: 120.166840
  Outer table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card 120.166840  bytes:   deg: 1  resp: 411.949216
  Inner table:  STORE_SALES  Alias: SS
    resc: 4.001441  card: 138.564767  bytes:   deg: 1  resp: 4.001441
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     25 Total Rows:            120
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39096166
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     24 Total Rows:            139
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39103407
      Total Temp space used: 0
  SM join: Resc: 417.952755  Resp: 417.952755  [multiMatchCost=0.000000]
SM Join
  SM cost: 417.952755 
     resc: 417.952755 resc_io: 415.000000 resc_cpu: 115331131
     resp: 417.952755 resp_io: 415.000000 resp_cpu: 115331131
SM Join (with index on outer)
 ****** Costing Index D_DATE_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (FullScan)
    Index: D_DATE_PK_IDX
    resc_io: 1566.000000  resc_cpu: 52083873
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1567.333473  Resp: 1567.333473  Degree: 1
  Outer table:  DATE_DIM  Alias: DATE_DIM
    resc: 1567.333473  card 120.166840  bytes:   deg: 1  resp: 1567.333473
  Inner table:  STORE_SALES  Alias: SS
    resc: 4.001441  card: 138.564767  bytes:   deg: 1  resp: 4.001441
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     24 Total Rows:            139
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39103407
      Total Temp space used: 0
  SM join: Resc: 1572.336055  Resp: 1572.336055  [multiMatchCost=0.000000]
  Outer table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card 120.166840  bytes:   deg: 1  resp: 411.949216
  Inner table:  STORE_SALES  Alias: SS
    resc: 4.001441  card: 138.564767  bytes:   deg: 1  resp: 4.001441
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016178  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 415.966836  Resp: 415.966836  [multiMatchCost=0.000000]
HA Join
  HA cost: 415.966836  
     resc: 415.966836 resc_io: 415.000000 resc_cpu: 37763459
     resp: 415.966836 resp_io: 415.000000 resp_cpu: 37763459
Best:: JoinMethod: HashSemi
       Cost: 415.966836  Degree: 1  Resp: 415.966836  Card: 120.166840 Bytes: 
***********************
Best so far:  Table#: 0  cost: 411.949216  card: 120.166840  bytes: 1560.000000
              Table#: 1  cost: 415.966836  card: 120.166840  bytes: 3000.000000
***********************

*********************************
Number of join permutations tried: 1
*********************************
*********************
PJE: Partial join eval conversion for query block SEL$2 (#2).
PJE: Table marked for partial join eval: STORE_SALES[SS]#1
***********************
Enumerating distribution method (advanced)
--- Distribution method for 
join between DATE_DIM[DATE_DIM](serial) and SS[STORE_SALES](serial); jm = 2; right side access path = IndexRange
---- serial Hash-Join -> NONE

kkoaccsqf: Current query block SEL$2 (#2) is serial
kkoaccsqf: correlated subquery query block SEL$3 (#4) in filter               : serial
(newjo-save)    [0 1 ]
LORE: Or-Expansion validity checks failed on query block SEL$2 (#2) because Cost based OR expansion enabled
Transfer Optimizer annotations for query block SEL$2 (#2)
Final cost for query block SEL$2 (#2) - All Rows Plan:
  Best join order: 1
  Cost: 415.966836  Degree: 1  Card: 120.000000  Bytes: 3000.000000
  Resc: 415.966836  Resc_io: 415.000000  Resc_cpu: 37763459
  Resp: 415.966836  Resp_io: 415.000000  Resc_cpu: 37763459
kkoqbc-subheap (delete addr=0x7f04725139a8, in-use=63832, alloc=65704)
kkoqbc-end:
        :
    call(in-use=187648, alloc=262280), compile(in-use=920848, alloc=921928), execution(in-use=14136, alloc=16200)

kkoqbc: finish optimizing query block SEL$2 (#2)
kkoqbc: optimizing query block SEL$1 (#1)
        
        :
    call(in-use=185440, alloc=262280), compile(in-use=929440, alloc=930216), execution(in-use=14408, alloc=16200)

kkoqbc-subheap (create addr=0x7f04725139a8)
****************
QUERY BLOCK TEXT
****************
SELECT /*query10*/
    cd_gender,
    cd_marital_status,
    cd_education_status,
    COUNT(*) cnt1,
    cd_purchase_estimate,
    COUNT(*) cnt2,
    cd_credit_rating,
    COUNT(*) cnt3,
    cd_dep_count,
    COUNT(*) cnt4,
    cd_dep_employed_count,
    COUNT(*) cnt5,
    cd_dep_college_count,
    COUNT(*) cnt6
FROM
    customer c,
    customer_address ca,
    customer_demographics
WHERE
    -- join predicates
        c.c_current_addr_sk = ca.ca_address_sk
    AND cd_demo_sk = c.c_current_cdemo_sk
    -- filter predicates
    AND ca.ca_county IN (
        'Chouteau County',
        'Dixie County',
        'Harrisonburg city',
        'Lowndes County',
        'Dinwiddie County'
    )
    -- filter predicate (subquery)
    AND EXISTS (
        SELECT
            *
        FROM
            store_sales ss,
            date_dim
        WHERE
            c.c_customer_sk = ss.ss_customer_sk
            AND ss_sold_date_sk = d_date_sk
            AND d_year = 2001
            AND d_moy BETWEEN 1 AND 1 + 3
            AND ( EXISTS (
                SELECT
                    *
                FROM
                    web_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = ws_bill_customer_sk
                    AND ws_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            )
                  OR EXISTS (
                SELECT
                    *
                FROM
                    catalog_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = cs_ship_customer_sk
                    AND cs_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            ) )
    )
GROUP BY
    cd_gender,
    cd_marital_status,
    cd_education_status,
    cd_purchase_estimate,
    cd_credit_rating,
    cd_dep_count,
    cd_dep_employed_count,
    cd_dep_college_count

---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$1 nbfros=3 flg=0
  fro(0): flg=0 objn=74168 hint_alias="C"@"SEL$1"
  fro(1): flg=0 objn=74169 hint_alias="CA"@"SEL$1"
  fro(2): flg=0 objn=74170 hint_alias="CUSTOMER_DEMOGRAPHICS"@"SEL$1"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3255 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
  #Rows: 1920800  SSZ: 0  LGR: 0  #Blks:  17254  AvgRowLen:  54.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): CD_DEMO_SK(NUMBER)
    AvgLen: 6 NDV: 1920800 Nulls: 0 Density: 0.000001 Min: 1.000000 Max: 1920800.000000
Index Stats::
  Index: CD_DEMO_PK_IDX  Col#: 1
  LVLS: 2  #LB: 4138  #DK: 1920800  LB/K: 1.00  DB/K: 1.00  CLUF: 795806.00  NRW: 1920800.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table: CUSTOMER_ADDRESS  Alias: CA
  #Rows: 540000  SSZ: 0  LGR: 0  #Blks:  13174  AvgRowLen:  152.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): CA_ADDRESS_SK(NUMBER)
    AvgLen: 5 NDV: 540000 Nulls: 0 Density: 0.000002 Min: 1.000000 Max: 540000.000000
  Column (#8): CA_COUNTY(VARCHAR2)
    AvgLen: 16 NDV: 1877 Nulls: 0 Density: 0.000471
    Histogram: Hybrid  #Bkts: 254  UncompBkts: 5580  EndPtVals: 254  ActualVal: yes
Index Stats::
  Index: CA_ADDRESS_PK_IDX  Col#: 1
  LVLS: 2  #LB: 1127  #DK: 540000  LB/K: 1.00  DB/K: 1.00  CLUF: 12283.00  NRW: 540000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table: CUSTOMER  Alias:  C
  #Rows: 1080000  SSZ: 0  LGR: 0  #Blks:  23374  AvgRowLen:  138.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): C_CUSTOMER_SK(NUMBER)
    AvgLen: 6 NDV: 1080000 Nulls: 0 Density: 0.000001 Min: 1.000000 Max: 1080000.000000
  Column (#5): C_CURRENT_ADDR_SK(NUMBER)
    AvgLen: 5 NDV: 457472 Nulls: 0 Density: 0.000002 Min: 1.000000 Max: 539997.000000
  Column (#3): C_CURRENT_CDEMO_SK(NUMBER)
    AvgLen: 6 NDV: 772544 Nulls: 0 Density: 0.000001 Min: 18.000000 Max: 1920799.000000
Index Stats::
  Index: CUSTOMER_PK_IDX  Col#: 1
  LVLS: 2  #LB: 2266  #DK: 1080000  LB/K: 1.00  DB/K: 1.00  CLUF: 75684.00  NRW: 1080000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
  Column (#2): 
    NewDensity:0.249925, OldDensity:0.000000 BktCnt:1920800.000000, PopBktCnt:1920800.000000, PopValCnt:2, NDV:2
  Column (#2): CD_GENDER(CHARACTER)
    AvgLen: 2 NDV: 2 Nulls: 0 Density: 0.249925
    Histogram: Freq  #Bkts: 2  UncompBkts: 1920800  EndPtVals: 2  ActualVal: no 
  Column (#3): 
    NewDensity:0.098953, OldDensity:0.000000 BktCnt:1920800.000000, PopBktCnt:1920800.000000, PopValCnt:5, NDV:5
  Column (#3): CD_MARITAL_STATUS(CHARACTER)
    AvgLen: 2 NDV: 5 Nulls: 0 Density: 0.098953
    Histogram: Freq  #Bkts: 5  UncompBkts: 1920800  EndPtVals: 5  ActualVal: yes
  Column (#4): 
    NewDensity:0.070771, OldDensity:0.000000 BktCnt:1920800.000000, PopBktCnt:1920800.000000, PopValCnt:7, NDV:7
  Column (#4): CD_EDUCATION_STATUS(CHARACTER)
    AvgLen: 21 NDV: 7 Nulls: 0 Density: 0.070771
    Histogram: Freq  #Bkts: 7  UncompBkts: 1920800  EndPtVals: 7  ActualVal: yes
  Column (#5): CD_PURCHASE_ESTIMATE(NUMBER)
    AvgLen: 4 NDV: 9500 Nulls: 0 Density: 0.000105 Min: 500.000000 Max: 9999.000000
  Column (#6): CD_CREDIT_RATING(CHARACTER)
    AvgLen: 11 NDV: 4 Nulls: 0 Density: 0.250000
  Column (#7): CD_DEP_COUNT(NUMBER)
    AvgLen: 3 NDV: 6 Nulls: 0 Density: 0.166667 Min: 0.000000 Max: 5.000000
  Column (#8): CD_DEP_EMPLOYED_COUNT(NUMBER)
    AvgLen: 3 NDV: 6 Nulls: 0 Density: 0.166667 Min: 0.000000 Max: 5.000000
  Column (#9): CD_DEP_COLLEGE_COUNT(NUMBER)
    AvgLen: 3 NDV: 6 Nulls: 0 Density: 0.166667 Min: 0.000000 Max: 5.000000
try to generate single-table filter predicates from ORs for query block SEL$1 (#1)
finally: "C"."C_CURRENT_ADDR_SK"="CA"."CA_ADDRESS_SK" AND "CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK"="C"."C_CURRENT_CDEMO_SK" AND ("CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County') AND  EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM" WHERE "SS"."SS_CUSTOMER_SK"=:B1 AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND ( EXISTS (SELECT 0 FROM "WEB_SALES" "WEB_SALES","DATE_DIM" "DATE_DIM" WHERE "WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B2 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1) OR  EXISTS (SELECT 0 FROM "CATALOG_SALES" "CATALOG_SALES","DATE_DIM" "DATE_DIM" WHERE "CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B3 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1)))

=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$1 (#1)
Applicable DS directives:
   dirid = 5181560337004891843, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74169)[]; (74168)[3]}
   dirid = 9316027922818115912, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74168)[3, 5]}
   dirid = 18439699102505563871, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {EC(74169)[8]}
   dirid = 7754152966831092939, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {EC(74170)[3, 4]}
Checking valid directives for the query block
  SPD: Return code in qosdDSDirSetup: NODIR, estType = GROUP_BY
  SPD: Return code in qosdDSDirSetup: NODIR, estType = QUERY_BLOCK
Return code in qosdSetupDirCtx4QB: EXISTS
=====================================
SPD: END context at query block level
=====================================
Access path analysis for CUSTOMER
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for CUSTOMER[C] 
  SPD: Return code in qosdDSDirSetup: NODIR, estType = TABLE

 kkecdn: Single Table Predicate: EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM" WHERE "SS"."SS_CUSTOMER_SK"=:B1 AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND ( EXISTS (SELECT 0 FROM "WEB_SALES" "WEB_SALES","DATE_DIM" "DATE_DIM" WHERE "WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B2 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1) OR  EXISTS (SELECT 0 FROM "CATALOG_SALES" "CATALOG_SALES","DATE_DIM" "DATE_DIM" WHERE "CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B3 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1)))
  Column (#1): C_CUSTOMER_SK(NUMBER)
    AvgLen: 6 NDV: 1080000 Nulls: 0 Density: 0.000001 Min: 1.000000 Max: 1080000.000000
  Table: CUSTOMER  Alias: C
    Card: Original: 1080000.000000  Rounded: 1080000  Computed: 1080000.000000  Non Adjusted: 1080000.000000
  Scan IO  Cost (Disk) =   6332.000000
  Scan CPU Cost (Disk) =   414856538.560000
  Cost of predicates:
    io = NOCOST, cpu = 20.000000, sel = 0.050000 flag = 2562  ( EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM" WHERE "SS"."SS_CUSTOMER_SK"=:B1 AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND ( EXISTS (SELECT 0 FROM "WEB_SALES" "WEB_SALES","DATE_DIM" "DATE_DIM" WHERE "WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B2 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1) OR  EXISTS (SELECT 0 FROM "CATALOG_SALES" "CATALOG_SALES","DATE_DIM" "DATE_DIM" WHERE "CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B3 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1))))
  Total Scan IO  Cost  =   6332.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 1080000.000000 (#rows))
                       =   6332.000000
  Total Scan CPU  Cost =   414856538.560000 (scan (Disk))
                         + 21600000.000000 (cpu filter eval) (= 20.000000 (per row) * 1080000.000000 (#rows))
                       =   436456538.560000
  Access Path: TableScan
    Cost:  6343.174339  Resp: 6343.174339  Degree: 0
      Cost_io: 6332.000000  Cost_cpu: 436456539
      Resp_io: 6332.000000  Resp_cpu: 436456539
  ****** trying bitmap/domain indexes ******
 ****** Costing Index CUSTOMER_PK_IDX
  Access Path: index (FullScan)
    Index: CUSTOMER_PK_IDX
    resc_io: 2268.000000  resc_cpu: 232151426
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 2273.943636  Resp: 2273.943636  Degree: 0
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: TableScan
         Cost: 6343.174339  Degree: 1  Resp: 6343.174339  Card: 1080000.000000  Bytes: 0.000000

Access path analysis for CUSTOMER_ADDRESS
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for CUSTOMER_ADDRESS[CA] 
  SPD: Directive valid: dirid = 18439699102505563871, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {EC(74169)[8]}
  SPD: Return code in qosdDSDirSetup: EXISTS, estType = TABLE

 kkecdn: Single Table Predicate:"CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County'
  Using density: 4.7103e-04 of col #8 as selectivity of pred having unreasonably low value
  Using density: 4.7103e-04 of col #8 as selectivity of pred having unreasonably low value
  Using density: 4.7103e-04 of col #8 as selectivity of pred having unreasonably low value
  Using density: 4.7103e-04 of col #8 as selectivity of pred having unreasonably low value
  Estimated selectivity: 5.3763e-04 , endpoint value predicate, col: #8 
  Table: CUSTOMER_ADDRESS  Alias: CA
    Card: Original: 540000.000000  Rounded: 1308  Computed: 1307.756551  Non Adjusted: 1307.756551
  Scan IO  Cost (Disk) =   3570.000000
  Scan CPU Cost (Disk) =   250417850.560000
  Cost of predicates:
    io = 0.000000, cpu = 249.764594, sel = 0.002422 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Chouteau County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Dinwiddie County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Dixie County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Harrisonburg city')
      io = NOCOST, cpu = 50.000000, sel = 0.000538 flag = 2048  ("CA"."CA_COUNTY"='Lowndes County')
  Total Scan IO  Cost  =   3570.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 540000.000000 (#rows))
                       =   3570.000000
  Total Scan CPU  Cost =   250417850.560000 (scan (Disk))
                         + 134872880.645405 (cpu filter eval) (= 249.764594 (per row) * 540000.000000 (#rows))
                       =   385290731.205405
  Access Path: TableScan
    Cost:  3579.864371  Resp: 3579.864371  Degree: 0
      Cost_io: 3570.000000  Cost_cpu: 385290731
      Resp_io: 3570.000000  Resp_cpu: 385290731
  ****** trying bitmap/domain indexes ******
 ****** Costing Index CA_ADDRESS_PK_IDX
  Access Path: index (FullScan)
    Index: CA_ADDRESS_PK_IDX
    resc_io: 1129.000000  resc_cpu: 116040106
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1131.970906  Resp: 1131.970906  Degree: 0
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: TableScan
         Cost: 3579.864371  Degree: 1  Resp: 3579.864371  Card: 1307.756551  Bytes: 0.000000

Access path analysis for CUSTOMER_DEMOGRAPHICS
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS] 
  SPD: Return code in qosdDSDirSetup: NODIR, estType = TABLE
  Table: CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
    Card: Original: 1920800.000000  Rounded: 1920800  Computed: 1920800.000000  Non Adjusted: 1920800.000000
  Scan IO  Cost (Disk) =   4675.000000
  Scan CPU Cost (Disk) =   718321325.760000
  Total Scan IO  Cost  =   4675.000000 (scan (Disk))
                       =   4675.000000
  Total Scan CPU  Cost =   718321325.760000 (scan (Disk))
                       =   718321325.760000
  Access Path: TableScan
    Cost:  4693.390757  Resp: 4693.390757  Degree: 0
      Cost_io: 4675.000000  Cost_cpu: 718321326
      Resp_io: 4675.000000  Resp_cpu: 718321326
  ****** trying bitmap/domain indexes ******
 ****** Costing Index CD_DEMO_PK_IDX
  Access Path: index (FullScan)
    Index: CD_DEMO_PK_IDX
    resc_io: 4140.000000  resc_cpu: 413642762
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 4150.590251  Resp: 4150.590251  Degree: 0
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: TableScan
         Cost: 4693.390757  Degree: 1  Resp: 4693.390757  Card: 1920800.000000  Bytes: 0.000000

Grouping column cardinality [ CD_GENDER]    2
Grouping column cardinality [CD_MARITAL]    5
Grouping column cardinality [CD_EDUCATI]    7
Grouping column cardinality [CD_PURCHAS]    9500
Grouping column cardinality [CD_CREDIT_]    4
Grouping column cardinality [CD_DEP_COU]    6
Grouping column cardinality [CD_DEP_EMP]    6
Grouping column cardinality [CD_DEP_COL]    6
***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE:  Bypassed; QB is not duplicate insignificant SEL$1 (#1)
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  CUSTOMER_ADDRESS[CA]#0  CUSTOMER[C]#1  CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS]#2

***************
Now joining: CUSTOMER[C]#1
***************
NL Join
  Outer table: Card: 1307.756551  Cost: 3579.864371  Resp: 3579.864371  Degree: 1  Bytes: 
Access path analysis for CUSTOMER
  Scan IO  Cost (Disk) =   6330.459480
  Scan CPU Cost (Disk) =   414856538.560000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000002 flag = 2048  ("C"."C_CURRENT_ADDR_SK"="CA"."CA_ADDRESS_SK")
    io = NOCOST, cpu = 20.000000, sel = 0.050000 flag = 2562  ( EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM" WHERE "SS"."SS_CUSTOMER_SK"=:B1 AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND ( EXISTS (SELECT 0 FROM "WEB_SALES" "WEB_SALES","DATE_DIM" "DATE_DIM" WHERE "WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B2 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1) OR  EXISTS (SELECT 0 FROM "CATALOG_SALES" "CATALOG_SALES","DATE_DIM" "DATE_DIM" WHERE "CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B3 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1))))
  Total Scan IO  Cost  =   6330.459480 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 1080000.000000 (#rows))
                       =   6330.459480
  Total Scan CPU  Cost =   414856538.560000 (scan (Disk))
                         + 24300000.000000 (cpu filter eval) (= 22.500000 (per row) * 1080000.000000 (#rows))
                       =   439156538.560000
  Inner table: CUSTOMER  Alias: C
  Access Path: TableScan
    NL Join:  Cost: 8298527.317370  Resp: 8298527.317370  Degree: 1
      Cost_io: 8283811.000000  Cost_cpu: 574802043168
      Resp_io: 8283811.000000  Resp_cpu: 574802043168
  ****** trying bitmap/domain indexes ******
 ****** Costing Index CUSTOMER_PK_IDX
  Access Path: index (FullScan)
    Index: CUSTOMER_PK_IDX
    resc_io: 2268.000000  resc_cpu: 232151426
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 2273.943636  Resp: 2273.943636  Degree: 0
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 8298527.317370
          resc: 8298527.317370  resc_io: 8283811.000000  resc_cpu: 574802043168
          resp: 8298527.317370  resp_io: 8283811.000000  resc_cpu: 574802043168
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Join Card:  3087.351958 = outer (1307.756551) * inner (1080000.000000) * sel (2.1859e-06)
Join Card - Rounded: 3087 Computed: 3087.351958
Grouping column cardinality [ CD_GENDER]    2
Grouping column cardinality [CD_MARITAL]    5
Grouping column cardinality [CD_EDUCATI]    7
Grouping column cardinality [CD_PURCHAS]    9500
Grouping column cardinality [CD_CREDIT_]    4
Grouping column cardinality [CD_DEP_COU]    6
Grouping column cardinality [CD_DEP_EMP]    6
Grouping column cardinality [CD_DEP_COL]    6
  Outer table:  CUSTOMER_ADDRESS  Alias: CA
    resc: 3579.864371  card 1307.756551  bytes:   deg: 1  resp: 3579.864371
  Inner table:  CUSTOMER  Alias: C
    resc: 6343.174339  card: 1080000.000000  bytes:   deg: 1  resp: 6343.174339
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 6 Row size:     34 Total Rows:           1308
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39668949
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 3835 Row size:     29 Total Rows:        1080000
      Initial runs:   2 Merge passes:  1 IO Cost / pass:       2078
      Total IO sort cost: 5913.000000      Total CPU sort cost: 1108751040
      Total Temp space used: 60826000
  SM join: Resc: 15865.441029  Resp: 15865.441029  [multiMatchCost=0.000000]
SM Join
  SM cost: 15865.441029 
     resc: 15865.441029 resc_io: 15815.000000 resc_cpu: 1970167258
     resp: 15865.441029 resp_io: 15815.000000 resp_cpu: 1970167258
SM Join (with index on outer)
 ****** Costing Index CA_ADDRESS_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (FullScan)
    Index: CA_ADDRESS_PK_IDX
    resc_io: 13412.000000  resc_cpu: 494985634
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 13424.672825  Resp: 13424.672825  Degree: 1
  Outer table:  CUSTOMER_ADDRESS  Alias: CA
    resc: 13424.672825  card 1307.756551  bytes:   deg: 1  resp: 13424.672825
  Inner table:  CUSTOMER  Alias: C
    resc: 6343.174339  card: 1080000.000000  bytes:   deg: 1  resp: 6343.174339
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 3835 Row size:     29 Total Rows:        1080000
      Initial runs:   2 Merge passes:  1 IO Cost / pass:       2078
      Total IO sort cost: 5913.000000      Total CPU sort cost: 1108751040
      Total Temp space used: 60826000
  SM join: Resc: 25709.233862  Resp: 25709.233862  [multiMatchCost=0.000000]
  Outer table:  CUSTOMER_ADDRESS  Alias: CA
    resc: 3579.864371  card 1307.756551  bytes:   deg: 1  resp: 3579.864371
  Inner table:  CUSTOMER  Alias: C
    resc: 6343.174339  card: 1080000.000000  bytes:   deg: 1  resp: 6343.174339
    using dmeth: 2  #groups: 1
    Cost per ptn: 2.785445  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 6  probefrag: 3824  ppasses: 1
  Hash join: Resc: 9925.824155  Resp: 9925.824155  [multiMatchCost=0.000000]
HA Join
  HA cost: 9925.824155  
     resc: 9925.824155 resc_io: 9902.000000 resc_cpu: 930543470
     resp: 9925.824155 resp_io: 9902.000000 resp_cpu: 930543470
Best:: JoinMethod: Hash
       Cost: 9925.824155  Degree: 1  Resp: 9925.824155  Card: 3087.351958 Bytes: 

***************
Now joining: CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS]#2
***************
NL Join
  Outer table: Card: 3087.351958  Cost: 9925.824155  Resp: 9925.824155  Degree: 1  Bytes: 
Access path analysis for CUSTOMER_DEMOGRAPHICS
  Scan IO  Cost (Disk) =   4672.958860
  Scan CPU Cost (Disk) =   718321325.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000001 flag = 2048  ("CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK"="C"."C_CURRENT_CDEMO_SK")
  Total Scan IO  Cost  =   4672.958860 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 1920800.000000 (#rows))
                       =   4672.958860
  Total Scan CPU  Cost =   718321325.760000 (scan (Disk))
                         + 96040000.000000 (cpu filter eval) (= 50.000000 (per row) * 1920800.000000 (#rows))
                       =   814361325.760000
  Inner table: CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
  Access Path: TableScan
    NL Join:  Cost: 14499712.577189  Resp: 14499712.577189  Degree: 1
      Cost_io: 14435326.000000  Cost_cpu: 2514863956091
      Resp_io: 14435326.000000  Resp_cpu: 2514863956091
 ****** Costing Index CD_DEMO_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: CD_DEMO_PK_IDX
    resc_io: 2.000000  resc_cpu: 16453
    ix_sel: 5.2062e-07  ix_sel_with_filters: 5.2062e-07 
    NL Join : Cost: 16101.124503  Resp: 16101.124503  Degree: 1
      Cost_io: 16076.000000  Cost_cpu: 981333510
      Resp_io: 16076.000000  Resp_cpu: 981333510
 ****** Costing Index CD_DEMO_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: CD_DEMO_PK_IDX
    resc_io: 2.000000  resc_cpu: 16453
    ix_sel: 5.2062e-07  ix_sel_with_filters: 5.2062e-07 
    NL Join : Cost: 16101.124503  Resp: 16101.124503  Degree: 1
      Cost_io: 16076.000000  Cost_cpu: 981333510
      Resp_io: 16076.000000  Resp_cpu: 981333510
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 16101.124503
          resc: 16101.124503  resc_io: 16076.000000  resc_cpu: 981333510
          resp: 16101.124503  resp_io: 16076.000000  resc_cpu: 981333510
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Join Card:  3087.351958 = outer (3087.351958) * inner (1920800.000000) * sel (5.2062e-07)
Join Card - Rounded: 3087 Computed: 3087.351958
Grouping column cardinality [ CD_GENDER]    2
Grouping column cardinality [CD_MARITAL]    5
Grouping column cardinality [CD_EDUCATI]    7
Grouping column cardinality [CD_PURCHAS]    9500
Grouping column cardinality [CD_CREDIT_]    4
Grouping column cardinality [CD_DEP_COU]    6
Grouping column cardinality [CD_DEP_EMP]    6
Grouping column cardinality [CD_DEP_COL]    6
  Outer table:  CUSTOMER  Alias: C
    resc: 9925.824155  card 3087.351958  bytes:   deg: 1  resp: 9925.824155
  Inner table:  CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
    resc: 4693.390757  card: 1920800.000000  bytes:   deg: 1  resp: 4693.390757
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 20 Row size:     52 Total Rows:           3087
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 40671077
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 16462 Row size:     70 Total Rows:        1920800
      Initial runs:   2 Merge passes:  1 IO Cost / pass:       8918
      Total IO sort cost: 25380.000000      Total CPU sort cost: 2250842275
      Total Temp space used: 294134000
  SM join: Resc: 40057.883175  Resp: 40057.883175  [multiMatchCost=0.000000]
SM Join
  SM cost: 40057.883175 
     resc: 40057.883175 resc_io: 39957.000000 resc_cpu: 3940378148
     resp: 40057.883175 resp_io: 39957.000000 resp_cpu: 3940378148
  Outer table:  CUSTOMER  Alias: C
    resc: 9925.824155  card 3087.351958  bytes:   deg: 1  resp: 9925.824155
  Inner table:  CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
    resc: 4693.390757  card: 1920800.000000  bytes:   deg: 1  resp: 4693.390757
    using dmeth: 2  #groups: 1
    Cost per ptn: 4.944927  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 19  probefrag: 15476  ppasses: 1
  Hash join: Resc: 14624.159839  Resp: 14624.159839  [multiMatchCost=0.000000]
HA Join
  HA cost: 14624.159839  
     resc: 14624.159839 resc_io: 14577.000000 resc_cpu: 1842007846
     resp: 14624.159839 resp_io: 14577.000000 resp_cpu: 1842007846
GROUP BY sort

GROUP BY/Correlated Subquery Filter adjustment factor: 0.088388
GROUP BY cardinality:  3087.000000, TABLE cardinality:  3087.000000
Vector group by not costed because no SYS_OP_XLATE_USE in group by.
kdmoGByPushdownValid: more than one table in group by    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 43 Row size:     112 Total Rows:           3087
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 40671077
      Total Temp space used: 0
Best:: JoinMethod: Hash
       Cost: 14625.201117  Degree: 1  Resp: 14625.201117  Card: 3087.351958 Bytes: 
***********************
Best so far:  Table#: 0  cost: 3579.864371  card: 1307.756551  bytes: 27468.000000
              Table#: 1  cost: 9925.824155  card: 3087.351958  bytes: 117306.000000
              Table#: 2  cost: 14625.201117  card: 3087.351958  bytes: 284004.000000
***********************

*********************************
Number of join permutations tried: 1
*********************************
Enumerating distribution method (advanced)
--- Distribution method for 
join between CA[CUSTOMER_ADDRESS](serial) and C[CUSTOMER](serial); jm = 1; right side access path = TableScan
---- serial Hash-Join -> NONE
--- Distribution method for 
join between C[CUSTOMER](serial) and CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS](serial); jm = 1; right side access path = TableScan
---- serial Hash-Join -> NONE

kkoaccsqf: Current query block SEL$1 (#1) is serial
kkoaccsqf: correlated subquery query block SEL$2 (#2) in filter               : serial
Final adjusted join cardinality: 1.000000, sq. fil. factor: 1080000.000000
(newjo-save)    [1 2 0 ]

GROUP BY/Correlated Subquery Filter adjustment factor: 0.088388
GROUP BY cardinality:  1.000000, TABLE cardinality:  1.000000
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     112 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39058824
      Total Temp space used: 0
LORE: Or-Expansion validity checks failed on query block SEL$1 (#1) because Cost based OR expansion enabled
Transfer Optimizer annotations for query block SEL$1 (#1)
Final cost for query block SEL$1 (#1) - All Rows Plan:
  Best join order: 1
  Cost: 14625.201117  Degree: 1  Card: 1.000000  Bytes: 284004.000000
  Resc: 14625.201117  Resc_io: 14577.000000  Resc_cpu: 1882678923
  Resp: 14625.201117  Resp_io: 14577.000000  Resc_cpu: 1882678923
kkoqbc-subheap (delete addr=0x7f04725139a8, in-use=80960, alloc=98568)
kkoqbc-end:
        :
    call(in-use=234896, alloc=344328), compile(in-use=973320, alloc=974400), execution(in-use=16040, alloc=16200)

kkoqbc: finish optimizing query block SEL$1 (#1)
First K Rows: K = 1.00, N = 120.00
First K Rows: K = 1.00, N = 69.00
First K Rows: K = 1.00, N = 37.00
First K Rows: Setup end
***********************
CBQT: Looking for cost annotations for query block SEL$3, key = SEL$3_00010000_0
CBQT: Could not find stored cost annotations.
CBQT: Looking for cost annotations for query block SEL$4, key = SEL$4_00010000_0
CBQT: Could not find stored cost annotations.
kkoqbc: optimizing query block SEL$3 (#4)
        
        :
    call(in-use=232688, alloc=344328), compile(in-use=973856, alloc=974400), execution(in-use=16040, alloc=16200)

kkoqbc-subheap (create addr=0x7f04725139a8)
****************
QUERY BLOCK TEXT
****************
SELECT
                    *
                FROM
                    web_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = ws_bill_customer_sk
                    AND ws_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$3 nbfros=2 flg=0
  fro(0): flg=0 objn=74171 hint_alias="DATE_DIM"@"SEL$3"
  fro(1): flg=0 objn=74195 hint_alias="WEB_SALES"@"SEL$3"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3255 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: DATE_DIM  Alias: DATE_DIM
  #Rows: 73049  SSZ: 0  LGR: 0  #Blks:  1510  AvgRowLen:  128.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): D_DATE_SK(NUMBER)
    AvgLen: 6 NDV: 73049 Nulls: 0 Density: 0.000014 Min: 2415022.000000 Max: 2488070.000000
  Column (#7): D_YEAR(NUMBER)
    AvgLen: 4 NDV: 201 Nulls: 0 Density: 0.000007 Min: 1900.000000 Max: 2100.000000
    Histogram: Freq  #Bkts: 201  UncompBkts: 73049  EndPtVals: 201  ActualVal: yes
  Column (#9): D_MOY(NUMBER)
    AvgLen: 3 NDV: 12 Nulls: 0 Density: 0.038666 Min: 1.000000 Max: 12.000000
    Histogram: Freq  #Bkts: 12  UncompBkts: 73049  EndPtVals: 12  ActualVal: yes
Index Stats::
  Index: D_DATE_PK_IDX  Col#: 1
  LVLS: 1  #LB: 163  #DK: 73049  LB/K: 1.00  DB/K: 1.00  CLUF: 1402.00  NRW: 73049.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table: WEB_SALES  Alias: WEB_SALES  (Using composite stats)
  #Rows: 35969200  SSZ: 0  LGR: 0  #Blks:  829566  AvgRowLen:  167.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
Index Stats::
  Index: WEB_SALES_IDX2  Col#: 5 1
  LVLS: 3  #LB: 130617  #DK: 2992994  LB/K: 1.00  DB/K: 12.00  CLUF: 35969159.00  NRW: 35969200.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
  Index: WEB_SALES_PK_IDX  Col#: 4 18
  LVLS: 2  #LB: 122502  #DK: 35304428  LB/K: 1.00  DB/K: 1.00  CLUF: 35300490.00  NRW: 35304428.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
try to generate single-table filter predicates from ORs for query block SEL$3 (#4)
finally: "WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B1 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4

=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$3 (#4)
Applicable DS directives:
   dirid = 4510913066701158191, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {(74195)[]; (74171)[]}
   dirid = 14910903719618111890, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74195)[5]}
   dirid = 13969931850241126217, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {C(74171)[7, 9]}
   dirid = 13683461771316641482, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74195)[5]; (74171)[7]}
Checking valid directives for the query block
  SPD: Return code in qosdDSDirSetup: NODIR, estType = QUERY_BLOCK
Return code in qosdSetupDirCtx4QB: EXISTS
=====================================
SPD: END context at query block level
=====================================
Access path analysis for WEB_SALES
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for WEB_SALES[WEB_SALES] 
  SPD: Return code in qosdDSDirSetup: NODIR, estType = TABLE

 kkecdn: Single Table Predicate:"WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B1
NOTE: ignoring histogram of column (WEB_SALES.WS_BILL_CUSTOMER_SK)
      used only for incremental stats maintenance
  Column (#5): WS_BILL_CUSTOMER_SK(NUMBER)
    AvgLen: 6 NDV: 973580 Nulls: 0 Density: 0.000001 Min: 2.000000 Max: 1079999.000000
  Estimated selectivity: 1.0271e-06 , col: #5 
  Table: WEB_SALES  Alias: WEB_SALES
    Card: Original: 35969200.000000  Rounded: 37  Computed: 36.945295  Non Adjusted: 36.945295
  Scan IO  Cost (Disk) =   224676.000000
  Scan CPU Cost (Disk) =   14180620495.040001
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000001 flag = 2048  ("WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B1)
  Total Scan IO  Cost  =   224676.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 35969200.000000 (#rows))
                       =   224676.000000
  Total Scan CPU  Cost =   14180620495.040001 (scan (Disk))
                         + 1798460000.000000 (cpu filter eval) (= 50.000000 (per row) * 35969200.000000 (#rows))
                       =   15979080495.040001
  Access Path: TableScan
    Cost:  225085.102964  Resp: 225085.102964  Degree: 0
      Cost_io: 224676.000000  Cost_cpu: 15979080495
      Resp_io: 224676.000000  Resp_cpu: 15979080495
  Access Path: index (index (FFS))
    Index: WEB_SALES_IDX2
    resc_io: 35377.000000  resc_cpu: 7044945128
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  35557.367571  Resp: 35557.367571  Degree: 1
      Cost_io: 35377.000000  Cost_cpu: 7044945128
      Resp_io: 35377.000000  Resp_cpu: 7044945128
 ****** Costing Index WEB_SALES_IDX2
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER

  Estimated selectivity: 1.0271e-06 , col: #5 
  Access Path: index (IndexOnly)
    Index: WEB_SALES_IDX2
    resc_io: 4.000000  resc_cpu: 35886
    ix_sel: 1.0271e-06  ix_sel_with_filters: 1.0271e-06 
    Cost: 4.000919  Resp: 4.000919  Degree: 1
  Best:: AccessPath: IndexRange
  Index: WEB_SALES_IDX2
         Cost: 4.000919  Degree: 1  Resp: 4.000919  Card: 36.945295  Bytes: 0.000000

Access path analysis for DATE_DIM
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for DATE_DIM[DATE_DIM] 
  SPD: Directive valid: dirid = 13969931850241126217, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {C(74171)[7, 9]}
  SPD: Return code in qosdDSDirSetup: EXISTS, estType = TABLE
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 


 kkecdn: Single Table Predicate:"DATE_DIM"."D_YEAR"=2001
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY">=1
  Estimated selectivity: 1.000000 , endpoint value predicate, col: #9 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY"<=4
  Estimated selectivity: 0.329224 , endpoint value predicate, col: #9 
  Table: DATE_DIM  Alias: DATE_DIM
    Card: Original: 73049.000000  Rounded: 120  Computed: 120.166840  Non Adjusted: 120.166840
  Scan IO  Cost (Disk) =   411.000000
  Scan CPU Cost (Disk) =   33398564.400000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.004997 flag = 2048  ("DATE_DIM"."D_YEAR"=2001)
    io = NOCOST, cpu = 50.000000, sel = 0.329224 flag = 2048  ("DATE_DIM"."D_MOY"<=4)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("DATE_DIM"."D_MOY">=1)
  Total Scan IO  Cost  =   411.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 73049.000000 (#rows))
                       =   411.000000
  Total Scan CPU  Cost =   33398564.400000 (scan (Disk))
                         + 3676708.342003 (cpu filter eval) (= 50.332083 (per row) * 73049.000000 (#rows))
                       =   37075272.742003
  Access Path: TableScan
    Cost:  411.949216  Resp: 411.949216  Degree: 0
      Cost_io: 411.000000  Cost_cpu: 37075273
      Resp_io: 411.000000  Resp_cpu: 37075273
  Best:: AccessPath: TableScan
         Cost: 411.949216  Degree: 1  Resp: 411.949216  Card: 120.166840  Bytes: 0.000000

***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE: Checking validity of partial join eval on query block SEL$3 (#4)
PJE: Passed validity of partial join eval by query block SEL$3 (#4)
number: [0]
PJE: Partial join eval conversion for query block SEL$3 (#4).
PJE: Table marked for partial join eval: DATE_DIM[DATE_DIM]#1
***********************
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  WEB_SALES[WEB_SALES]#0  DATE_DIM[DATE_DIM]#1

***************
Now joining: DATE_DIM[DATE_DIM]#1
***************
NL Join
  Outer table: Card: 36.945295  Cost: 4.000919  Resp: 4.000919  Degree: 1  Bytes: 
Access path analysis for DATE_DIM
  Scan IO  Cost (Disk) =   409.000000
  Scan CPU Cost (Disk) =   33398564.400000
NOTE: ignoring histogram of column (WEB_SALES.WS_SOLD_DATE_SK)
      used only for incremental stats maintenance
  Column (#1): WS_SOLD_DATE_SK(NUMBER)
    AvgLen: 6 NDV: 1839 Nulls: 0 Density: 0.000544 Min: 2450816.000000 Max: 2452641.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.008264 flag = 2048  ("WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK")
    io = NOCOST, cpu = 50.000000, sel = 0.004997 flag = 2048  ("DATE_DIM"."D_YEAR"=2001)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("DATE_DIM"."D_MOY">=1)
    io = NOCOST, cpu = 50.000000, sel = 0.329224 flag = 2048  ("DATE_DIM"."D_MOY"<=4)
  Total Scan IO  Cost  =   409.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 73049.000000 (#rows))
                       =   409.000000
  Total Scan CPU  Cost =   33398564.400000 (scan (Disk))
                         + 3670900.482165 (cpu filter eval) (= 50.252577 (per row) * 73049.000000 (#rows))
                       =   37069464.882165
  Inner table: DATE_DIM  Alias: DATE_DIM
  Access Path: TableScan
    NL Join:  Cost: 15172.116421  Resp: 15172.116421  Degree: 1
      Cost_io: 15137.000000  Cost_cpu: 1371606086
      Resp_io: 15137.000000  Resp_cpu: 1371606086
 ****** Costing Index D_DATE_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: D_DATE_PK_IDX
    resc_io: 1.000000  resc_cpu: 9382
    ix_sel: 1.3689e-05  ix_sel_with_filters: 1.3689e-05 
    NL Join (ordered): Cost: 41.009806  Resp: 41.009806  Degree: 1
      Cost_io: 41.000000  Cost_cpu: 383011
      Resp_io: 41.000000  Resp_cpu: 383011
 ****** Costing Index D_DATE_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 
  Estimated selectivity: 1.000000 , endpoint value predicate, col: #9 
  Estimated selectivity: 0.329224 , endpoint value predicate, col: #9 
  Access Path: index (AllEqUnique)
    Index: D_DATE_PK_IDX
    resc_io: 1.000000  resc_cpu: 9382
    ix_sel: 1.3689e-05  ix_sel_with_filters: 1.3689e-05 
    NL Join (ordered): Cost: 41.009806  Resp: 41.009806  Degree: 1
      Cost_io: 41.000000  Cost_cpu: 383011
      Resp_io: 41.000000  Resp_cpu: 383011

  Best NL cost: 41.009806
          resc: 41.009806  resc_io: 41.000000  resc_cpu: 383011
          resp: 41.009806  resp_io: 41.000000  resc_cpu: 383011
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Capping Semi Join Card of HJ/SMJ by inner = 36.690903
Capping Semi Join Card of HJ/SMJ (no post filters) by inner = 36.690903
Capping Semi Join Card of NL by inner = 36.690903
Capping Semi Join Card of without POSQ by inner = 36.690903
Capping Semi Join Card of non adjusted NSQ by inner = 36.690903
Semi Join Card (capped by inner join):  36.690903 = outer (36.945295) * inner (120.166840) * sel (0.008264)
Join Card - Rounded: 37 Computed: 36.690903
  Outer table:  WEB_SALES  Alias: WEB_SALES
    resc: 4.000919  card 36.945295  bytes:   deg: 1  resp: 4.000919
  Inner table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card: 120.166840  bytes:   deg: 1  resp: 411.949216
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     25 Total Rows:            120
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39096166
      Total Temp space used: 0
  SM join: Resc: 416.951091  Resp: 416.951091  [multiMatchCost=0.000000]
SM Join
  SM cost: 416.951091 
     resc: 416.951091 resc_io: 415.000000 resc_cpu: 76207324
     resp: 416.951091 resp_io: 415.000000 resp_cpu: 76207324
  Outer table:  WEB_SALES  Alias: WEB_SALES
    resc: 4.000919  card 36.945295  bytes:   deg: 1  resp: 4.000919
  Inner table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card: 120.166840  bytes:   deg: 1  resp: 411.949216
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.015811  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 415.965946  Resp: 415.965946  [multiMatchCost=0.000000]
HA Join
  HA cost: 415.965946  
     resc: 415.965946 resc_io: 415.000000 resc_cpu: 37728709
     resp: 415.965946 resp_io: 415.000000 resp_cpu: 37728709
Best:: JoinMethod: NestedLoopSemi
       Cost: 41.009806  Degree: 1  Resp: 41.009806  Card: 36.690903 Bytes: 
***********************
Best so far:  Table#: 0  cost: 4.000919  card: 36.945295  bytes: 444.000000
              Table#: 1  cost: 41.009806  card: 36.690903  bytes: 925.000000
***********************
First K Rows: K = 1.00, N = 37.00
First K Rows: old pf = -1.0000000, new pf = 0.0541341
Access path analysis for WEB_SALES
***************************************
SINGLE TABLE ACCESS PATH (First K Rows)
  Single Table Cardinality Estimation for WEB_SALES[WEB_SALES] 
  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = TABLE

 kkecdn: Single Table Predicate:"WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B1
  Estimated selectivity: 1.1778e-06 , col: #5 
  Table: WEB_SALES  Alias: WEB_SALES
    Card: Original: 1947160.000000  Rounded: 2  Computed: 2.293429  Non Adjusted: 2.293429
  Scan IO  Cost (Disk) =   12164.000000
  Scan CPU Cost (Disk) =   767656427.520000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000001 flag = 2064  ("WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B1)
  Total Scan IO  Cost  =   12164.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 1947160.000000 (#rows))
                       =   12164.000000
  Total Scan CPU  Cost =   767656427.520000 (scan (Disk))
                         + 97358000.000000 (cpu filter eval) (= 50.000000 (per row) * 1947160.000000 (#rows))
                       =   865014427.520000
  Access Path: TableScan
    Cost:  12186.146454  Resp: 12186.146454  Degree: 0
      Cost_io: 12164.000000  Cost_cpu: 865014428
      Resp_io: 12164.000000  Resp_cpu: 865014428
  Access Path: index (index (FFS))
    Index: WEB_SALES_IDX2
    resc_io: 1917.000000  resc_cpu: 381372902
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  1926.764065  Resp: 1926.764065  Degree: 1
      Cost_io: 1917.000000  Cost_cpu: 381372902
      Resp_io: 1917.000000  Resp_cpu: 381372902
 ****** Costing Index WEB_SALES_IDX2
  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = INDEX_FILTER

  Estimated selectivity: 1.1778e-06 , col: #5 
  Access Path: index (IndexOnly)
    Index: WEB_SALES_IDX2
    resc_io: 4.000000  resc_cpu: 29086
    ix_sel: 1.1778e-06  ix_sel_with_filters: 1.1778e-06 
    Cost: 4.000745  Resp: 4.000745  Degree: 1
  Best:: AccessPath: IndexRange
  Index: WEB_SALES_IDX2
         Cost: 4.000745  Degree: 1  Resp: 4.000745  Card: 2.293429  Bytes: 0.000000

First K Rows: old pf = -1.0000000, new pf = 0.5034667
Access path analysis for DATE_DIM
***************************************
SINGLE TABLE ACCESS PATH (First K Rows)
  Single Table Cardinality Estimation for DATE_DIM[DATE_DIM] 
  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = TABLE
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 


 kkecdn: Single Table Predicate:"DATE_DIM"."D_YEAR"=2001
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY">=1
  Estimated selectivity: 1.000000 , endpoint value predicate, col: #9 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY"<=4
  Estimated selectivity: 0.329224 , endpoint value predicate, col: #9 
  Table: DATE_DIM  Alias: DATE_DIM
    Card: Original: 36778.000000  Rounded: 61  Computed: 60.500432  Non Adjusted: 60.500432
  Scan IO  Cost (Disk) =   208.000000
  Scan CPU Cost (Disk) =   16820595.840000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.004997 flag = 2048  ("DATE_DIM"."D_YEAR"=2001)
    io = NOCOST, cpu = 50.000000, sel = 0.329224 flag = 2048  ("DATE_DIM"."D_MOY"<=4)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("DATE_DIM"."D_MOY">=1)
  Total Scan IO  Cost  =   208.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 36778.000000 (#rows))
                       =   208.000000
  Total Scan CPU  Cost =   16820595.840000 (scan (Disk))
                         + 1851113.354080 (cpu filter eval) (= 50.332083 (per row) * 36778.000000 (#rows))
                       =   18671709.194080
  Access Path: TableScan
    Cost:  208.478041  Resp: 208.478041  Degree: 0
      Cost_io: 208.000000  Cost_cpu: 18671709
      Resp_io: 208.000000  Resp_cpu: 18671709
  Best:: AccessPath: TableScan
         Cost: 208.478041  Degree: 1  Resp: 208.478041  Card: 60.500432  Bytes: 0.000000

First K Rows: unchanged join prefix len = 1
Join order[1]:  WEB_SALES[WEB_SALES]#0  DATE_DIM[DATE_DIM]#1

***************
Now joining: DATE_DIM[DATE_DIM]#1
***************
NL Join
  Outer table: Card: 2.293429  Cost: 4.000745  Resp: 4.000745  Degree: 1  Bytes: 
Access path analysis for DATE_DIM
  Scan IO  Cost (Disk) =   207.000000
  Scan CPU Cost (Disk) =   16820595.840000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.008264 flag = 2064  ("WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK")
    io = NOCOST, cpu = 50.000000, sel = 0.004997 flag = 2048  ("DATE_DIM"."D_YEAR"=2001)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("DATE_DIM"."D_MOY">=1)
    io = NOCOST, cpu = 50.000000, sel = 0.329224 flag = 2048  ("DATE_DIM"."D_MOY"<=4)
  Total Scan IO  Cost  =   207.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 36778.000000 (#rows))
                       =   207.000000
  Total Scan CPU  Cost =   16820595.840000 (scan (Disk))
                         + 1848189.269300 (cpu filter eval) (= 50.252577 (per row) * 36778.000000 (#rows))
                       =   18668785.109300
  Inner table: DATE_DIM  Alias: DATE_DIM
  Access Path: TableScan
    NL Join:  Cost: 418.956676  Resp: 418.956676  Degree: 1
      Cost_io: 418.000000  Cost_cpu: 37366656
      Resp_io: 418.000000  Resp_cpu: 37366656
 ****** Costing Index D_DATE_PK_IDX
NOTE: ignoring histogram of column (WEB_SALES.WS_SOLD_DATE_SK)
      used only for incremental stats maintenance
  Column (#1): WS_SOLD_DATE_SK(NUMBER)
    AvgLen: 6 NDV: 1839 Nulls: 0 Density: 0.000544 Min: 2450816.000000 Max: 2452641.000000
  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: D_DATE_PK_IDX
    resc_io: 1.000000  resc_cpu: 9382
    ix_sel: 2.7190e-05  ix_sel_with_filters: 2.7190e-05 
    NL Join (ordered): Cost: 6.001225  Resp: 6.001225  Degree: 1
      Cost_io: 6.000000  Cost_cpu: 47849
      Resp_io: 6.000000  Resp_cpu: 47849
 ****** Costing Index D_DATE_PK_IDX
  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = INDEX_FILTER
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 
  Estimated selectivity: 1.000000 , endpoint value predicate, col: #9 
  Estimated selectivity: 0.329224 , endpoint value predicate, col: #9 
  Access Path: index (AllEqUnique)
    Index: D_DATE_PK_IDX
    resc_io: 1.000000  resc_cpu: 9382
    ix_sel: 2.7190e-05  ix_sel_with_filters: 2.7190e-05 
    NL Join (ordered): Cost: 6.001225  Resp: 6.001225  Degree: 1
      Cost_io: 6.000000  Cost_cpu: 47849
      Resp_io: 6.000000  Resp_cpu: 47849

  Best NL cost: 6.001225
          resc: 6.001225  resc_io: 6.000000  resc_cpu: 47849
          resp: 6.001225  resp_io: 6.000000  resc_cpu: 47849
  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = JOIN
Capping Semi Join Card of HJ/SMJ by inner = 2.274646
Capping Semi Join Card of HJ/SMJ (no post filters) by inner = 2.274646
Capping Semi Join Card of NL by inner = 2.274646
Capping Semi Join Card of without POSQ by inner = 2.274646
Capping Semi Join Card of non adjusted NSQ by inner = 2.274646
Semi Join Card (capped by inner join):  2.274646 = outer (2.293429) * inner (60.500432) * sel (0.016393)
Join Card - Rounded: 2 Computed: 2.274646
  Outer table:  WEB_SALES  Alias: WEB_SALES
    resc: 4.000745  card 2.293429  bytes:   deg: 1  resp: 4.000745
  Inner table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card: 120.166840  bytes:   deg: 1  resp: 411.949216
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     25 Total Rows:            120
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39096166
      Total Temp space used: 0
  SM join: Resc: 416.950917  Resp: 416.950917  [multiMatchCost=0.000000]
SM Join
  SM cost: 416.950917 
     resc: 416.950917 resc_io: 415.000000 resc_cpu: 76200524
     resp: 416.950917 resp_io: 415.000000 resp_cpu: 76200524
  Outer table:  WEB_SALES  Alias: WEB_SALES
    resc: 4.000919  card 36.945295  bytes:   deg: 1  resp: 4.000919
  Inner table:  DATE_DIM  Alias: DATE_DIM
    resc: 208.478041  card: 60.500432  bytes:   deg: 1  resp: 208.478041
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.015660  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 212.494619  Resp: 212.494619  [multiMatchCost=0.000000]
HA Join
  HA cost: 212.494619  
     resc: 212.494619 resc_io: 212.000000 resc_cpu: 19319245
     resp: 212.494619 resp_io: 212.000000 resp_cpu: 19319245
Best:: JoinMethod: NestedLoopSemi
       Cost: 6.001225  Degree: 1  Resp: 6.001225  Card: 2.274646 Bytes: 
***********************
Best so far:  Table#: 0  cost: 4.000745  card: 2.293429  bytes: 24.000000
              Table#: 1  cost: 6.001225  card: 2.274646  bytes: 50.000000
***********************
number: [1]
PJE: Partial join eval conversion for query block SEL$3 (#4).
PJE: Table marked for partial join eval: WEB_SALES[WEB_SALES]#0
***********************
number: [1]
PJE: Partial join eval conversion for query block SEL$3 (#4).
PJE: Table marked for partial join eval: WEB_SALES[WEB_SALES]#0
***********************
Join order[2]:  DATE_DIM[DATE_DIM]#1  WEB_SALES[WEB_SALES]#0

***************
Now joining: WEB_SALES[WEB_SALES]#0
***************
NL Join
  Outer table: Card: 120.166840  Cost: 411.949216  Resp: 411.949216  Degree: 1  Bytes: 
Access path analysis for WEB_SALES
  Scan IO  Cost (Disk) =   224674.133333
  Scan CPU Cost (Disk) =   14180620495.040001
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000001 flag = 2064  ("WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B1)
    io = NOCOST, cpu = 50.000000, sel = 0.008264 flag = 2064  ("WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK")
  Total Scan IO  Cost  =   224674.133333 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 35969200.000000 (#rows))
                       =   224674.133333
  Total Scan CPU  Cost =   14180620495.040001 (scan (Disk))
                         + 1798462118.285028 (cpu filter eval) (= 50.000059 (per row) * 35969200.000000 (#rows))
                       =   15979082613.325029
  Inner table: WEB_SALES  Alias: WEB_SALES
  Access Path: TableScan
    NL Join:  Cost: 27010400.311462  Resp: 27010400.311462  Degree: 1
      Cost_io: 26961307.000000  Cost_cpu: 1917526988872
      Resp_io: 26961307.000000  Resp_cpu: 1917526988872
  Access Path: index (index (FFS))
    Index: WEB_SALES_IDX2
    resc_io: 35375.450000  resc_cpu: 7044947247
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: WEB_SALES  Alias: WEB_SALES
  Access Path: index (FFS)
    NL Join:  Cost: 4267110.064252  Resp: 4267110.064252  Degree: 1
      Cost_io: 4245465.000000  Cost_cpu: 845430744885
      Resp_io: 4245465.000000  Resp_cpu: 845430744885
 ****** Costing Index WEB_SALES_IDX2
NOTE: ignoring histogram of column (WEB_SALES.WS_SOLD_DATE_SK)
      used only for incremental stats maintenance
  Column (#1): WS_SOLD_DATE_SK(NUMBER)
    AvgLen: 6 NDV: 1839 Nulls: 0 Density: 0.000544 Min: 2450816.000000 Max: 2452641.000000
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  ColGroup (#1, Index) WEB_SALES_IDX2
    Col#: 1 5    CorStregth: 598.20
  ColGroup (#2, Index) WEB_SALES_PK_IDX
    Col#: 4 18    CorStregth: -1.00
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 3.3411e-07
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 3.3411e-07
  Estimated selectivity: 1.0271e-06 , col: #5 
  Access Path: index (AllEqJoinGuess)
    Index: WEB_SALES_IDX2
    resc_io: 3.000000  resc_cpu: 22414
    ix_sel: 2.7802e-08  ix_sel_with_filters: 2.7802e-08 
    NL Join : Cost: 772.018080  Resp: 772.018080  Degree: 1
      Cost_io: 771.000000  Cost_cpu: 39764991
      Resp_io: 771.000000  Resp_cpu: 39764991

  Best NL cost: 772.018080
          resc: 772.018080  resc_io: 771.000000  resc_cpu: 39764991
          resp: 772.018080  resp_io: 771.000000  resc_cpu: 39764991
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Capping Semi Join Card of HJ/SMJ by inner = 36.690903
Capping Semi Join Card of HJ/SMJ (no post filters) by inner = 36.690903
Capping Semi Join Card of NL by inner = 36.690903
Capping Semi Join Card of without POSQ by inner = 36.690903
Capping Semi Join Card of non adjusted NSQ by inner = 36.690903
Semi Join Card (capped by inner join):  36.690903 = outer (120.166840) * inner (36.945295) * sel (0.008264)
Join Card - Rounded: 37 Computed: 36.690903
  Outer table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card 120.166840  bytes:   deg: 1  resp: 411.949216
  Inner table:  WEB_SALES  Alias: WEB_SALES
    resc: 4.000919  card: 36.945295  bytes:   deg: 1  resp: 4.000919
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     25 Total Rows:            120
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39096166
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     24 Total Rows:             37
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39067508
      Total Temp space used: 0
  SM join: Resc: 417.951313  Resp: 417.951313  [multiMatchCost=0.000000]
SM Join
  SM cost: 417.951313 
     resc: 417.951313 resc_io: 415.000000 resc_cpu: 115274832
     resp: 417.951313 resp_io: 415.000000 resp_cpu: 115274832
SM Join (with index on outer)
 ****** Costing Index D_DATE_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (FullScan)
    Index: D_DATE_PK_IDX
    resc_io: 1566.000000  resc_cpu: 52078066
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1567.333324  Resp: 1567.333324  Degree: 1
  Outer table:  DATE_DIM  Alias: DATE_DIM
    resc: 1567.333324  card 120.166840  bytes:   deg: 1  resp: 1567.333324
  Inner table:  WEB_SALES  Alias: WEB_SALES
    resc: 4.000919  card: 36.945295  bytes:   deg: 1  resp: 4.000919
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     24 Total Rows:             37
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39067508
      Total Temp space used: 0
  SM join: Resc: 1572.334465  Resp: 1572.334465  [multiMatchCost=0.000000]
  Outer table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card 120.166840  bytes:   deg: 1  resp: 411.949216
  Inner table:  WEB_SALES  Alias: WEB_SALES
    resc: 4.000919  card: 36.945295  bytes:   deg: 1  resp: 4.000919
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.015917  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 415.966052  Resp: 415.966052  [multiMatchCost=0.000000]
HA Join
  HA cost: 415.966052  
     resc: 415.966052 resc_io: 415.000000 resc_cpu: 37732859
     resp: 415.966052 resp_io: 415.000000 resp_cpu: 37732859
Best:: JoinMethod: HashSemi
       Cost: 415.966052  Degree: 1  Resp: 415.966052  Card: 36.690903 Bytes: 
***********************
Best so far:  Table#: 1  cost: 411.949216  card: 120.166840  bytes: 1560.000000
              Table#: 0  cost: 415.966052  card: 36.690903  bytes: 925.000000
***********************
First K Rows: K = 1.00, N = 37.00
First K Rows: old pf = 0.5034667, new pf = 0.0332871
Access path analysis for DATE_DIM
***************************************
SINGLE TABLE ACCESS PATH (First K Rows)
  Single Table Cardinality Estimation for DATE_DIM[DATE_DIM] 
  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = TABLE
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 


 kkecdn: Single Table Predicate:"DATE_DIM"."D_YEAR"=2001
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY">=1
  Estimated selectivity: 1.000000 , endpoint value predicate, col: #9 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY"<=4
  Estimated selectivity: 0.329224 , endpoint value predicate, col: #9 
  Table: DATE_DIM  Alias: DATE_DIM
    Card: Original: 2432.000000  Rounded: 4  Computed: 4.000681  Non Adjusted: 4.000681
  Scan IO  Cost (Disk) =   16.000000
  Scan CPU Cost (Disk) =   1117113.440000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.004997 flag = 2048  ("DATE_DIM"."D_YEAR"=2001)
    io = NOCOST, cpu = 50.000000, sel = 0.329224 flag = 2048  ("DATE_DIM"."D_MOY"<=4)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("DATE_DIM"."D_MOY">=1)
  Total Scan IO  Cost  =   16.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 2432.000000 (#rows))
                       =   16.000000
  Total Scan CPU  Cost =   1117113.440000 (scan (Disk))
                         + 122407.626220 (cpu filter eval) (= 50.332083 (per row) * 2432.000000 (#rows))
                       =   1239521.066220
  Access Path: TableScan
    Cost:  16.031735  Resp: 16.031735  Degree: 0
      Cost_io: 16.000000  Cost_cpu: 1239521
      Resp_io: 16.000000  Resp_cpu: 1239521
  Best:: AccessPath: TableScan
         Cost: 16.031735  Degree: 1  Resp: 16.031735  Card: 4.000681  Bytes: 0.000000

First K Rows: old pf = 0.0541341, new pf = 0.8187781
Access path analysis for WEB_SALES
***************************************
SINGLE TABLE ACCESS PATH (First K Rows)
  Single Table Cardinality Estimation for WEB_SALES[WEB_SALES] 
  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = TABLE

 kkecdn: Single Table Predicate:"WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B1
  Estimated selectivity: 1.0271e-06 , col: #5 
  Table: WEB_SALES  Alias: WEB_SALES
    Card: Original: 29450795.000000  Rounded: 30  Computed: 30.250000  Non Adjusted: 30.250000
  Scan IO  Cost (Disk) =   183960.000000
  Scan CPU Cost (Disk) =   11610785662.639999
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000001 flag = 2064  ("WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B1)
  Total Scan IO  Cost  =   183960.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 29450795.000000 (#rows))
                       =   183960.000000
  Total Scan CPU  Cost =   11610785662.639999 (scan (Disk))
                         + 1472539750.000000 (cpu filter eval) (= 50.000000 (per row) * 29450795.000000 (#rows))
                       =   13083325412.639999
  Access Path: TableScan
    Cost:  184294.964657  Resp: 184294.964657  Degree: 0
      Cost_io: 183960.000000  Cost_cpu: 13083325413
      Resp_io: 183960.000000  Resp_cpu: 13083325413
  Access Path: index (index (FFS))
    Index: WEB_SALES_IDX2
    resc_io: 28967.000000  resc_cpu: 5768251794
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  29114.681145  Resp: 29114.681145  Degree: 1
      Cost_io: 28967.000000  Cost_cpu: 5768251794
      Resp_io: 28967.000000  Resp_cpu: 5768251794
 ****** Costing Index WEB_SALES_IDX2
  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = INDEX_FILTER

  Estimated selectivity: 1.0271e-06 , col: #5 
  Access Path: index (IndexOnly)
    Index: WEB_SALES_IDX2
    resc_io: 4.000000  resc_cpu: 34686
    ix_sel: 1.0271e-06  ix_sel_with_filters: 1.0271e-06 
    Cost: 4.000888  Resp: 4.000888  Degree: 1
  Best:: AccessPath: IndexRange
  Index: WEB_SALES_IDX2
         Cost: 4.000888  Degree: 1  Resp: 4.000888  Card: 30.250000  Bytes: 0.000000

First K Rows: unchanged join prefix len = 1
Join order[2]:  DATE_DIM[DATE_DIM]#1  WEB_SALES[WEB_SALES]#0
Join order aborted: cost > best first K rows plan
***********************
(newjo-stop-1) k:0, spcnt:0, perm:2, maxperm:1000

*********************************
Number of join permutations tried: 2
*********************************
*********************
PJE: Partial join eval conversion for query block SEL$3 (#4).
PJE: Table marked for partial join eval: DATE_DIM[DATE_DIM]#1
***********************
Enumerating distribution method (advanced)
--- Distribution method for 
join between WEB_SALES[WEB_SALES](serial) and DATE_DIM[DATE_DIM](serial); jm = 15; right side access path = IndexUnique
kkopqIsSerialJoin: serial NLJ: both inputs serial
---- serial NL-Join -> SERIAL

(newjo-save)    [1 0 ]
LORE: Or-Expansion validity checks failed on query block SEL$3 (#4) because Cost based OR expansion enabled
Transfer Optimizer annotations for query block SEL$3 (#4)
Final cost for query block SEL$3 (#4) - First K Rows Plan:
  Best join order: 1
  Cost: 6.001225  Degree: 1  Card: 2.000000  Bytes: 975.000000
  Resc: 6.001225  Resc_io: 6.000000  Resc_cpu: 47849
  Resp: 6.001225  Resp_io: 6.000000  Resc_cpu: 47849
kkoqbc-subheap (delete addr=0x7f04725139a8, in-use=78176, alloc=82136)
kkoqbc-end:
        :
    call(in-use=260192, alloc=360592), compile(in-use=998360, alloc=1002208), execution(in-use=17128, alloc=20256)

kkoqbc: finish optimizing query block SEL$3 (#4)
kkoqbc: optimizing query block SEL$4 (#3)
        
        :
    call(in-use=260192, alloc=360592), compile(in-use=998360, alloc=1002208), execution(in-use=17128, alloc=20256)

kkoqbc-subheap (create addr=0x7f04725139a8)
****************
QUERY BLOCK TEXT
****************
SELECT
                    *
                FROM
                    catalog_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = cs_ship_customer_sk
                    AND cs_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$4 nbfros=2 flg=0
  fro(0): flg=0 objn=74185 hint_alias="CATALOG_SALES"@"SEL$4"
  fro(1): flg=0 objn=74171 hint_alias="DATE_DIM"@"SEL$4"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3255 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: DATE_DIM  Alias: DATE_DIM
  #Rows: 73049  SSZ: 0  LGR: 0  #Blks:  1510  AvgRowLen:  128.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): D_DATE_SK(NUMBER)
    AvgLen: 6 NDV: 73049 Nulls: 0 Density: 0.000014 Min: 2415022.000000 Max: 2488070.000000
  Column (#7): D_YEAR(NUMBER)
    AvgLen: 4 NDV: 201 Nulls: 0 Density: 0.000007 Min: 1900.000000 Max: 2100.000000
    Histogram: Freq  #Bkts: 201  UncompBkts: 73049  EndPtVals: 201  ActualVal: yes
  Column (#9): D_MOY(NUMBER)
    AvgLen: 3 NDV: 12 Nulls: 0 Density: 0.038666 Min: 1.000000 Max: 12.000000
    Histogram: Freq  #Bkts: 12  UncompBkts: 73049  EndPtVals: 12  ActualVal: yes
Index Stats::
  Index: D_DATE_PK_IDX  Col#: 1
  LVLS: 1  #LB: 163  #DK: 73049  LB/K: 1.00  DB/K: 1.00  CLUF: 1402.00  NRW: 73049.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table: CATALOG_SALES  Alias: CATALOG_SALES  (Using composite stats)
  #Rows: 72077400  SSZ: 0  LGR: 0  #Blks:  1645494  AvgRowLen:  168.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
Index Stats::
  Index: CATALOG_SALES_IDX2  Col#: 8 1
  LVLS: 3  #LB: 261734  #DK: 5997411  LB/K: 1.00  DB/K: 12.00  CLUF: 72077362.00  NRW: 72077400.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
  Index: CATALOG_SALES_PK_IDX  Col#: 16 18
  LVLS: 2  #LB: 249644  #DK: 71913105  LB/K: 1.00  DB/K: 1.00  CLUF: 71898009.00  NRW: 71913105.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
try to generate single-table filter predicates from ORs for query block SEL$4 (#3)
finally: "CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B1 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4

=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$4 (#3)
Applicable DS directives:
   dirid = 11267665714990475542, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74185)[8]}
   dirid = 13969931850241126217, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {C(74171)[7, 9]}
   dirid = 2090373381697137251, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {(74185)[]; F(74171)[]}
   dirid = 14483145493039253896, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {(74185)[]; (74171)[]}
Checking valid directives for the query block
  SPD: Return code in qosdDSDirSetup: NODIR, estType = QUERY_BLOCK
Return code in qosdSetupDirCtx4QB: EXISTS
=====================================
SPD: END context at query block level
=====================================
Access path analysis for CATALOG_SALES
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for CATALOG_SALES[CATALOG_SALES] 
  SPD: Return code in qosdDSDirSetup: NODIR, estType = TABLE

 kkecdn: Single Table Predicate:"CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B1
NOTE: ignoring histogram of column (CATALOG_SALES.CS_SHIP_CUSTOMER_SK)
      used only for incremental stats maintenance
  Column (#8): CS_SHIP_CUSTOMER_SK(NUMBER)
    AvgLen: 6 NDV: 1037120 Nulls: 0 Density: 0.000001 Min: 1.000000 Max: 1079999.000000
  Estimated selectivity: 9.6421e-07 , col: #8 
  Table: CATALOG_SALES  Alias: CATALOG_SALES
    Card: Original: 72077400.000000  Rounded: 69  Computed: 69.497647  Non Adjusted: 69.497647
  Scan IO  Cost (Disk) =   445656.000000
  Scan CPU Cost (Disk) =   32620732791.360001
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000001 flag = 2048  ("CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B1)
  Total Scan IO  Cost  =   445656.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 72077400.000000 (#rows))
                       =   445656.000000
  Total Scan CPU  Cost =   32620732791.360001 (scan (Disk))
                         + 3603870000.000000 (cpu filter eval) (= 50.000000 (per row) * 72077400.000000 (#rows))
                       =   36224602791.360001
  Access Path: TableScan
    Cost:  446583.437120  Resp: 446583.437120  Degree: 0
      Cost_io: 445656.000000  Cost_cpu: 36224602791
      Resp_io: 445656.000000  Resp_cpu: 36224602791
  Access Path: index (index (FFS))
    Index: CATALOG_SALES_IDX2
    resc_io: 70888.000000  resc_cpu: 14117080977
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  71249.431290  Resp: 71249.431290  Degree: 1
      Cost_io: 70888.000000  Cost_cpu: 14117080977
      Resp_io: 70888.000000  Resp_cpu: 14117080977
 ****** Costing Index CATALOG_SALES_IDX2
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER

  Estimated selectivity: 9.6421e-07 , col: #8 
  Access Path: index (IndexOnly)
    Index: CATALOG_SALES_IDX2
    resc_io: 4.000000  resc_cpu: 42486
    ix_sel: 9.6421e-07  ix_sel_with_filters: 9.6421e-07 
    Cost: 4.001088  Resp: 4.001088  Degree: 1
  Best:: AccessPath: IndexRange
  Index: CATALOG_SALES_IDX2
         Cost: 4.001088  Degree: 1  Resp: 4.001088  Card: 69.497647  Bytes: 0.000000

Access path analysis for DATE_DIM
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for DATE_DIM[DATE_DIM] 
  SPD: Directive valid: dirid = 13969931850241126217, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {C(74171)[7, 9]}
  SPD: Return code in qosdDSDirSetup: EXISTS, estType = TABLE
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 


 kkecdn: Single Table Predicate:"DATE_DIM"."D_YEAR"=2001
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY">=1
  Estimated selectivity: 1.000000 , endpoint value predicate, col: #9 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY"<=4
  Estimated selectivity: 0.329224 , endpoint value predicate, col: #9 
  Table: DATE_DIM  Alias: DATE_DIM
    Card: Original: 73049.000000  Rounded: 120  Computed: 120.166840  Non Adjusted: 120.166840
  Scan IO  Cost (Disk) =   411.000000
  Scan CPU Cost (Disk) =   33398564.400000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.004997 flag = 2048  ("DATE_DIM"."D_YEAR"=2001)
    io = NOCOST, cpu = 50.000000, sel = 0.329224 flag = 2048  ("DATE_DIM"."D_MOY"<=4)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("DATE_DIM"."D_MOY">=1)
  Total Scan IO  Cost  =   411.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 73049.000000 (#rows))
                       =   411.000000
  Total Scan CPU  Cost =   33398564.400000 (scan (Disk))
                         + 3676708.342003 (cpu filter eval) (= 50.332083 (per row) * 73049.000000 (#rows))
                       =   37075272.742003
  Access Path: TableScan
    Cost:  411.949216  Resp: 411.949216  Degree: 0
      Cost_io: 411.000000  Cost_cpu: 37075273
      Resp_io: 411.000000  Resp_cpu: 37075273
  Best:: AccessPath: TableScan
         Cost: 411.949216  Degree: 1  Resp: 411.949216  Card: 120.166840  Bytes: 0.000000

***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE: Checking validity of partial join eval on query block SEL$4 (#3)
PJE: Passed validity of partial join eval by query block SEL$4 (#3)
number: [0]
PJE: Partial join eval conversion for query block SEL$4 (#3).
PJE: Table marked for partial join eval: DATE_DIM[DATE_DIM]#1
***********************
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  CATALOG_SALES[CATALOG_SALES]#0  DATE_DIM[DATE_DIM]#1

***************
Now joining: DATE_DIM[DATE_DIM]#1
***************
NL Join
  Outer table: Card: 69.497647  Cost: 4.001088  Resp: 4.001088  Degree: 1  Bytes: 
Access path analysis for DATE_DIM
  Scan IO  Cost (Disk) =   408.985507
  Scan CPU Cost (Disk) =   33398564.400000
NOTE: ignoring histogram of column (CATALOG_SALES.CS_SOLD_DATE_SK)
      used only for incremental stats maintenance
  Column (#1): CS_SOLD_DATE_SK(NUMBER)
    AvgLen: 6 NDV: 1849 Nulls: 0 Density: 0.000541 Min: 2450815.000000 Max: 2452647.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.008264 flag = 2048  ("CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK")
    io = NOCOST, cpu = 50.000000, sel = 0.004997 flag = 2048  ("DATE_DIM"."D_YEAR"=2001)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("DATE_DIM"."D_MOY">=1)
    io = NOCOST, cpu = 50.000000, sel = 0.329224 flag = 2048  ("DATE_DIM"."D_MOY"<=4)
  Total Scan IO  Cost  =   408.985507 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 73049.000000 (#rows))
                       =   408.985507
  Total Scan CPU  Cost =   33398564.400000 (scan (Disk))
                         + 3670900.482165 (cpu filter eval) (= 50.252577 (per row) * 73049.000000 (#rows))
                       =   37069464.882165
  Inner table: DATE_DIM  Alias: DATE_DIM
  Access Path: TableScan
    NL Join:  Cost: 28289.486754  Resp: 28289.486754  Degree: 1
      Cost_io: 28224.000000  Cost_cpu: 2557835563
      Resp_io: 28224.000000  Resp_cpu: 2557835563
 ****** Costing Index D_DATE_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: D_DATE_PK_IDX
    resc_io: 1.000000  resc_cpu: 9382
    ix_sel: 1.3689e-05  ix_sel_with_filters: 1.3689e-05 
    NL Join (ordered): Cost: 73.017661  Resp: 73.017661  Degree: 1
      Cost_io: 73.000000  Cost_cpu: 689828
      Resp_io: 73.000000  Resp_cpu: 689828
 ****** Costing Index D_DATE_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 
  Estimated selectivity: 1.000000 , endpoint value predicate, col: #9 
  Estimated selectivity: 0.329224 , endpoint value predicate, col: #9 
  Access Path: index (AllEqUnique)
    Index: D_DATE_PK_IDX
    resc_io: 1.000000  resc_cpu: 9382
    ix_sel: 1.3689e-05  ix_sel_with_filters: 1.3689e-05 
    NL Join (ordered): Cost: 73.017661  Resp: 73.017661  Degree: 1
      Cost_io: 73.000000  Cost_cpu: 689828
      Resp_io: 73.000000  Resp_cpu: 689828

  Best NL cost: 73.017661
          resc: 73.017661  resc_io: 73.000000  resc_cpu: 689828
          resp: 73.017661  resp_io: 73.000000  resc_cpu: 689828
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Capping Semi Join Card of HJ/SMJ by inner = 69.019113
Capping Semi Join Card of HJ/SMJ (no post filters) by inner = 69.019113
Capping Semi Join Card of NL by inner = 69.019113
Capping Semi Join Card of without POSQ by inner = 69.019113
Capping Semi Join Card of non adjusted NSQ by inner = 69.019113
Semi Join Card (capped by inner join):  69.019113 = outer (69.497647) * inner (120.166840) * sel (0.008264)
Join Card - Rounded: 69 Computed: 69.019113
  Outer table:  CATALOG_SALES  Alias: CATALOG_SALES
    resc: 4.001088  card 69.497647  bytes:   deg: 1  resp: 4.001088
  Inner table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card: 120.166840  bytes:   deg: 1  resp: 411.949216
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     25 Total Rows:            120
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39096166
      Total Temp space used: 0
  SM join: Resc: 416.951260  Resp: 416.951260  [multiMatchCost=0.000000]
SM Join
  SM cost: 416.951260 
     resc: 416.951260 resc_io: 415.000000 resc_cpu: 76213924
     resp: 416.951260 resp_io: 415.000000 resp_cpu: 76213924
  Outer table:  CATALOG_SALES  Alias: CATALOG_SALES
    resc: 4.001088  card 69.497647  bytes:   deg: 1  resp: 4.001088
  Inner table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card: 120.166840  bytes:   deg: 1  resp: 411.949216
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.015934  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 415.966238  Resp: 415.966238  [multiMatchCost=0.000000]
HA Join
  HA cost: 415.966238  
     resc: 415.966238 resc_io: 415.000000 resc_cpu: 37740109
     resp: 415.966238 resp_io: 415.000000 resp_cpu: 37740109
Best:: JoinMethod: NestedLoopSemi
       Cost: 73.017661  Degree: 1  Resp: 73.017661  Card: 69.019113 Bytes: 
***********************
Best so far:  Table#: 0  cost: 4.001088  card: 69.497647  bytes: 828.000000
              Table#: 1  cost: 73.017661  card: 69.019113  bytes: 1725.000000
***********************
First K Rows: K = 1.00, N = 69.00
First K Rows: old pf = -1.0000000, new pf = 0.0431669
Access path analysis for CATALOG_SALES
***************************************
SINGLE TABLE ACCESS PATH (First K Rows)
  Single Table Cardinality Estimation for CATALOG_SALES[CATALOG_SALES] 
  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = TABLE

 kkecdn: Single Table Predicate:"CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B1
  Estimated selectivity: 1.0113e-06 , col: #8 
  Table: CATALOG_SALES  Alias: CATALOG_SALES
    Card: Original: 3111360.000000  Rounded: 3  Computed: 3.146554  Non Adjusted: 3.146554
  Scan IO  Cost (Disk) =   19239.000000
  Scan CPU Cost (Disk) =   1408137404.640000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000001 flag = 2064  ("CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B1)
  Total Scan IO  Cost  =   19239.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 3111360.000000 (#rows))
                       =   19239.000000
  Total Scan CPU  Cost =   1408137404.640000 (scan (Disk))
                         + 155568000.000000 (cpu filter eval) (= 50.000000 (per row) * 3111360.000000 (#rows))
                       =   1563705404.640000
  Access Path: TableScan
    Cost:  19279.034626  Resp: 19279.034626  Degree: 0
      Cost_io: 19239.000000  Cost_cpu: 1563705405
      Resp_io: 19239.000000  Resp_cpu: 1563705405
  Access Path: index (index (FFS))
    Index: CATALOG_SALES_IDX2
    resc_io: 3062.000000  resc_cpu: 609396351
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  3077.602015  Resp: 3077.602015  Degree: 1
      Cost_io: 3062.000000  Cost_cpu: 609396351
      Resp_io: 3062.000000  Resp_cpu: 609396351
 ****** Costing Index CATALOG_SALES_IDX2
  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = INDEX_FILTER

  Estimated selectivity: 1.0113e-06 , col: #8 
  Access Path: index (IndexOnly)
    Index: CATALOG_SALES_IDX2
    resc_io: 4.000000  resc_cpu: 29286
    ix_sel: 1.0113e-06  ix_sel_with_filters: 1.0113e-06 
    Cost: 4.000750  Resp: 4.000750  Degree: 1
  Best:: AccessPath: IndexRange
  Index: CATALOG_SALES_IDX2
         Cost: 4.000750  Degree: 1  Resp: 4.000750  Card: 3.146554  Bytes: 0.000000

First K Rows: old pf = -1.0000000, new pf = 0.6712889
Access path analysis for DATE_DIM
***************************************
SINGLE TABLE ACCESS PATH (First K Rows)
  Single Table Cardinality Estimation for DATE_DIM[DATE_DIM] 
  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = TABLE
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 


 kkecdn: Single Table Predicate:"DATE_DIM"."D_YEAR"=2001
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY">=1
  Estimated selectivity: 1.000000 , endpoint value predicate, col: #9 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY"<=4
  Estimated selectivity: 0.329224 , endpoint value predicate, col: #9 
  Table: DATE_DIM  Alias: DATE_DIM
    Card: Original: 49037.000000  Rounded: 81  Computed: 80.666694  Non Adjusted: 80.666694
  Scan IO  Cost (Disk) =   276.000000
  Scan CPU Cost (Disk) =   22422610.160000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.004997 flag = 2048  ("DATE_DIM"."D_YEAR"=2001)
    io = NOCOST, cpu = 50.000000, sel = 0.329224 flag = 2048  ("DATE_DIM"."D_MOY"<=4)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("DATE_DIM"."D_MOY">=1)
  Total Scan IO  Cost  =   276.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 49037.000000 (#rows))
                       =   276.000000
  Total Scan CPU  Cost =   22422610.160000 (scan (Disk))
                         + 2468134.361412 (cpu filter eval) (= 50.332083 (per row) * 49037.000000 (#rows))
                       =   24890744.521412
  Access Path: TableScan
    Cost:  276.637263  Resp: 276.637263  Degree: 0
      Cost_io: 276.000000  Cost_cpu: 24890745
      Resp_io: 276.000000  Resp_cpu: 24890745
  Best:: AccessPath: TableScan
         Cost: 276.637263  Degree: 1  Resp: 276.637263  Card: 80.666694  Bytes: 0.000000

First K Rows: unchanged join prefix len = 1
Join order[1]:  CATALOG_SALES[CATALOG_SALES]#0  DATE_DIM[DATE_DIM]#1

***************
Now joining: DATE_DIM[DATE_DIM]#1
***************
NL Join
  Outer table: Card: 3.146554  Cost: 4.000750  Resp: 4.000750  Degree: 1  Bytes: 
Access path analysis for DATE_DIM
  Scan IO  Cost (Disk) =   275.333333
  Scan CPU Cost (Disk) =   22422610.160000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.008264 flag = 2064  ("CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK")
    io = NOCOST, cpu = 50.000000, sel = 0.004997 flag = 2048  ("DATE_DIM"."D_YEAR"=2001)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("DATE_DIM"."D_MOY">=1)
    io = NOCOST, cpu = 50.000000, sel = 0.329224 flag = 2048  ("DATE_DIM"."D_MOY"<=4)
  Total Scan IO  Cost  =   275.333333 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 49037.000000 (#rows))
                       =   275.333333
  Total Scan CPU  Cost =   22422610.160000 (scan (Disk))
                         + 2464235.608207 (cpu filter eval) (= 50.252577 (per row) * 49037.000000 (#rows))
                       =   24886845.768207
  Inner table: DATE_DIM  Alias: DATE_DIM
  Access Path: TableScan
    NL Join:  Cost: 831.912239  Resp: 831.912239  Degree: 1
      Cost_io: 830.000000  Cost_cpu: 74689823
      Resp_io: 830.000000  Resp_cpu: 74689823
 ****** Costing Index D_DATE_PK_IDX
NOTE: ignoring histogram of column (CATALOG_SALES.CS_SOLD_DATE_SK)
      used only for incremental stats maintenance
  Column (#1): CS_SOLD_DATE_SK(NUMBER)
    AvgLen: 6 NDV: 1849 Nulls: 0 Density: 0.000541 Min: 2450815.000000 Max: 2452647.000000
  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: D_DATE_PK_IDX
    resc_io: 1.000000  resc_cpu: 9382
    ix_sel: 2.0393e-05  ix_sel_with_filters: 2.0393e-05 
    NL Join (ordered): Cost: 7.001470  Resp: 7.001470  Degree: 1
      Cost_io: 7.000000  Cost_cpu: 57431
      Resp_io: 7.000000  Resp_cpu: 57431
 ****** Costing Index D_DATE_PK_IDX
  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = INDEX_FILTER
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 
  Estimated selectivity: 1.000000 , endpoint value predicate, col: #9 
  Estimated selectivity: 0.329224 , endpoint value predicate, col: #9 
  Access Path: index (AllEqUnique)
    Index: D_DATE_PK_IDX
    resc_io: 1.000000  resc_cpu: 9382
    ix_sel: 2.0393e-05  ix_sel_with_filters: 2.0393e-05 
    NL Join (ordered): Cost: 7.001470  Resp: 7.001470  Degree: 1
      Cost_io: 7.000000  Cost_cpu: 57431
      Resp_io: 7.000000  Resp_cpu: 57431

  Best NL cost: 7.001470
          resc: 7.001470  resc_io: 7.000000  resc_cpu: 57431
          resp: 7.001470  resp_io: 7.000000  resc_cpu: 57431
  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = JOIN
Capping Semi Join Card of HJ/SMJ by inner = 3.133606
Capping Semi Join Card of HJ/SMJ (no post filters) by inner = 3.133606
Capping Semi Join Card of NL by inner = 3.133606
Capping Semi Join Card of without POSQ by inner = 3.133606
Capping Semi Join Card of non adjusted NSQ by inner = 3.133606
Semi Join Card (capped by inner join):  3.133606 = outer (3.146554) * inner (80.666694) * sel (0.012346)
Join Card - Rounded: 3 Computed: 3.133606
  Outer table:  CATALOG_SALES  Alias: CATALOG_SALES
    resc: 4.000750  card 3.146554  bytes:   deg: 1  resp: 4.000750
  Inner table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card: 120.166840  bytes:   deg: 1  resp: 411.949216
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     25 Total Rows:            120
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39096166
      Total Temp space used: 0
  SM join: Resc: 416.950922  Resp: 416.950922  [multiMatchCost=0.000000]
SM Join
  SM cost: 416.950922 
     resc: 416.950922 resc_io: 415.000000 resc_cpu: 76200724
     resp: 416.950922 resp_io: 415.000000 resp_cpu: 76200724
  Outer table:  CATALOG_SALES  Alias: CATALOG_SALES
    resc: 4.001088  card 69.497647  bytes:   deg: 1  resp: 4.001088
  Inner table:  DATE_DIM  Alias: DATE_DIM
    resc: 276.637263  card: 80.666694  bytes:   deg: 1  resp: 276.637263
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.015834  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 280.654185  Resp: 280.654185  [multiMatchCost=0.000000]
HA Join
  HA cost: 280.654185  
     resc: 280.654185 resc_io: 280.000000 resc_cpu: 25551680
     resp: 280.654185 resp_io: 280.000000 resp_cpu: 25551680
Best:: JoinMethod: NestedLoopSemi
       Cost: 7.001470  Degree: 1  Resp: 7.001470  Card: 3.133606 Bytes: 
***********************
Best so far:  Table#: 0  cost: 4.000750  card: 3.146554  bytes: 36.000000
              Table#: 1  cost: 7.001470  card: 3.133606  bytes: 75.000000
***********************
number: [1]
PJE: Partial join eval conversion for query block SEL$4 (#3).
PJE: Table marked for partial join eval: CATALOG_SALES[CATALOG_SALES]#0
***********************
number: [1]
PJE: Partial join eval conversion for query block SEL$4 (#3).
PJE: Table marked for partial join eval: CATALOG_SALES[CATALOG_SALES]#0
***********************
Join order[2]:  DATE_DIM[DATE_DIM]#1  CATALOG_SALES[CATALOG_SALES]#0

***************
Now joining: CATALOG_SALES[CATALOG_SALES]#0
***************
NL Join
  Outer table: Card: 120.166840  Cost: 411.949216  Resp: 411.949216  Degree: 1  Bytes: 
Access path analysis for CATALOG_SALES
  Scan IO  Cost (Disk) =   445654.633333
  Scan CPU Cost (Disk) =   32620732791.360001
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000001 flag = 2064  ("CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B1)
    io = NOCOST, cpu = 50.000000, sel = 0.008264 flag = 2064  ("CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK")
  Total Scan IO  Cost  =   445654.633333 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 72077400.000000 (#rows))
                       =   445654.633333
  Total Scan CPU  Cost =   32620732791.360001 (scan (Disk))
                         + 3603873644.635245 (cpu filter eval) (= 50.000051 (per row) * 72077400.000000 (#rows))
                       =   36224606435.995247
  Inner table: CATALOG_SALES  Alias: CATALOG_SALES
  Access Path: TableScan
    NL Join:  Cost: 53590260.414773  Resp: 53590260.414773  Degree: 1
      Cost_io: 53478967.000000  Cost_cpu: 4346989847592
      Resp_io: 53478967.000000  Resp_cpu: 4346989847592
  Access Path: index (index (FFS))
    Index: CATALOG_SALES_IDX2
    resc_io: 70886.300000  resc_cpu: 14117084622
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: CATALOG_SALES  Alias: CATALOG_SALES
  Access Path: index (FFS)
    NL Join:  Cost: 8550139.715222  Resp: 8550139.715222  Degree: 1
      Cost_io: 8506767.000000  Cost_cpu: 1694087229864
      Resp_io: 8506767.000000  Resp_cpu: 1694087229864
 ****** Costing Index CATALOG_SALES_IDX2
NOTE: ignoring histogram of column (CATALOG_SALES.CS_SOLD_DATE_SK)
      used only for incremental stats maintenance
  Column (#1): CS_SOLD_DATE_SK(NUMBER)
    AvgLen: 6 NDV: 1849 Nulls: 0 Density: 0.000541 Min: 2450815.000000 Max: 2452647.000000
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  ColGroup (#1, Index) CATALOG_SALES_IDX2
    Col#: 1 8    CorStregth: 319.74
  ColGroup (#2, Index) CATALOG_SALES_PK_IDX
    Col#: 16 18    CorStregth: -1.00
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 1.6674e-07
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 1.6674e-07
  Estimated selectivity: 9.6421e-07 , col: #8 
  Access Path: index (AllEqJoinGuess)
    Index: CATALOG_SALES_IDX2
    resc_io: 3.000000  resc_cpu: 22414
    ix_sel: 1.3874e-08  ix_sel_with_filters: 1.3874e-08 
    NL Join : Cost: 772.018080  Resp: 772.018080  Degree: 1
      Cost_io: 771.000000  Cost_cpu: 39764991
      Resp_io: 771.000000  Resp_cpu: 39764991

  Best NL cost: 772.018080
          resc: 772.018080  resc_io: 771.000000  resc_cpu: 39764991
          resp: 772.018080  resp_io: 771.000000  resc_cpu: 39764991
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Capping Semi Join Card of HJ/SMJ by inner = 69.019113
Capping Semi Join Card of HJ/SMJ (no post filters) by inner = 69.019113
Capping Semi Join Card of NL by inner = 69.019113
Capping Semi Join Card of without POSQ by inner = 69.019113
Capping Semi Join Card of non adjusted NSQ by inner = 69.019113
Semi Join Card (capped by inner join):  69.019113 = outer (120.166840) * inner (69.497647) * sel (0.008264)
Join Card - Rounded: 69 Computed: 69.019113
  Outer table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card 120.166840  bytes:   deg: 1  resp: 411.949216
  Inner table:  CATALOG_SALES  Alias: CATALOG_SALES
    resc: 4.001088  card: 69.497647  bytes:   deg: 1  resp: 4.001088
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     25 Total Rows:            120
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39096166
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     24 Total Rows:             69
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39077813
      Total Temp space used: 0
  SM join: Resc: 417.951746  Resp: 417.951746  [multiMatchCost=0.000000]
SM Join
  SM cost: 417.951746 
     resc: 417.951746 resc_io: 415.000000 resc_cpu: 115291738
     resp: 417.951746 resp_io: 415.000000 resp_cpu: 115291738
SM Join (with index on outer)
 ****** Costing Index D_DATE_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (FullScan)
    Index: D_DATE_PK_IDX
    resc_io: 1566.000000  resc_cpu: 52078066
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1567.333324  Resp: 1567.333324  Degree: 1
  Outer table:  DATE_DIM  Alias: DATE_DIM
    resc: 1567.333324  card 120.166840  bytes:   deg: 1  resp: 1567.333324
  Inner table:  CATALOG_SALES  Alias: CATALOG_SALES
    resc: 4.001088  card: 69.497647  bytes:   deg: 1  resp: 4.001088
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     24 Total Rows:             69
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39077813
      Total Temp space used: 0
  SM join: Resc: 1572.334898  Resp: 1572.334898  [multiMatchCost=0.000000]
  Outer table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card 120.166840  bytes:   deg: 1  resp: 411.949216
  Inner table:  CATALOG_SALES  Alias: CATALOG_SALES
    resc: 4.001088  card: 69.497647  bytes:   deg: 1  resp: 4.001088
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.015999  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 415.966303  Resp: 415.966303  [multiMatchCost=0.000000]
HA Join
  HA cost: 415.966303  
     resc: 415.966303 resc_io: 415.000000 resc_cpu: 37742659
     resp: 415.966303 resp_io: 415.000000 resp_cpu: 37742659
Best:: JoinMethod: HashSemi
       Cost: 415.966303  Degree: 1  Resp: 415.966303  Card: 69.019113 Bytes: 
***********************
Best so far:  Table#: 1  cost: 411.949216  card: 120.166840  bytes: 1560.000000
              Table#: 0  cost: 415.966303  card: 69.019113  bytes: 1725.000000
***********************
First K Rows: K = 1.00, N = 69.00
First K Rows: old pf = 0.6712889, new pf = 0.0332871
Access path analysis for DATE_DIM
***************************************
SINGLE TABLE ACCESS PATH (First K Rows)
  Single Table Cardinality Estimation for DATE_DIM[DATE_DIM] 
  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = TABLE
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 


 kkecdn: Single Table Predicate:"DATE_DIM"."D_YEAR"=2001
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY">=1
  Estimated selectivity: 1.000000 , endpoint value predicate, col: #9 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY"<=4
  Estimated selectivity: 0.329224 , endpoint value predicate, col: #9 
  Table: DATE_DIM  Alias: DATE_DIM
    Card: Original: 2432.000000  Rounded: 4  Computed: 4.000681  Non Adjusted: 4.000681
  Scan IO  Cost (Disk) =   16.000000
  Scan CPU Cost (Disk) =   1117113.440000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.004997 flag = 2048  ("DATE_DIM"."D_YEAR"=2001)
    io = NOCOST, cpu = 50.000000, sel = 0.329224 flag = 2048  ("DATE_DIM"."D_MOY"<=4)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("DATE_DIM"."D_MOY">=1)
  Total Scan IO  Cost  =   16.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 2432.000000 (#rows))
                       =   16.000000
  Total Scan CPU  Cost =   1117113.440000 (scan (Disk))
                         + 122407.626220 (cpu filter eval) (= 50.332083 (per row) * 2432.000000 (#rows))
                       =   1239521.066220
  Access Path: TableScan
    Cost:  16.031735  Resp: 16.031735  Degree: 0
      Cost_io: 16.000000  Cost_cpu: 1239521
      Resp_io: 16.000000  Resp_cpu: 1239521
  Best:: AccessPath: TableScan
         Cost: 16.031735  Degree: 1  Resp: 16.031735  Card: 4.000681  Bytes: 0.000000

First K Rows: old pf = 0.0431669, new pf = 0.8705331
Access path analysis for CATALOG_SALES
***************************************
SINGLE TABLE ACCESS PATH (First K Rows)
  Single Table Cardinality Estimation for CATALOG_SALES[CATALOG_SALES] 
  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = TABLE

 kkecdn: Single Table Predicate:"CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B1
  Estimated selectivity: 9.6421e-07 , col: #8 
  Table: CATALOG_SALES  Alias: CATALOG_SALES
    Card: Original: 62745761.000000  Rounded: 61  Computed: 60.500001  Non Adjusted: 60.500001
  Scan IO  Cost (Disk) =   387959.000000
  Scan CPU Cost (Disk) =   28397427268.080002
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000001 flag = 2064  ("CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B1)
  Total Scan IO  Cost  =   387959.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 62745761.000000 (#rows))
                       =   387959.000000
  Total Scan CPU  Cost =   28397427268.080002 (scan (Disk))
                         + 3137288050.000000 (cpu filter eval) (= 50.000000 (per row) * 62745761.000000 (#rows))
                       =   31534715318.080002
  Access Path: TableScan
    Cost:  388766.364699  Resp: 388766.364699  Degree: 0
      Cost_io: 387959.000000  Cost_cpu: 31534715318
      Resp_io: 387959.000000  Resp_cpu: 31534715318
  Access Path: index (index (FFS))
    Index: CATALOG_SALES_IDX2
    resc_io: 61711.000000  resc_cpu: 12289392353
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  62025.638057  Resp: 62025.638057  Degree: 1
      Cost_io: 61711.000000  Cost_cpu: 12289392353
      Resp_io: 61711.000000  Resp_cpu: 12289392353
 ****** Costing Index CATALOG_SALES_IDX2
  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = INDEX_FILTER

  Estimated selectivity: 9.6421e-07 , col: #8 
  Access Path: index (IndexOnly)
    Index: CATALOG_SALES_IDX2
    resc_io: 4.000000  resc_cpu: 40686
    ix_sel: 9.6421e-07  ix_sel_with_filters: 9.6421e-07 
    Cost: 4.001042  Resp: 4.001042  Degree: 1
  Best:: AccessPath: IndexRange
  Index: CATALOG_SALES_IDX2
         Cost: 4.001042  Degree: 1  Resp: 4.001042  Card: 60.500001  Bytes: 0.000000

First K Rows: unchanged join prefix len = 1
Join order[2]:  DATE_DIM[DATE_DIM]#1  CATALOG_SALES[CATALOG_SALES]#0
Join order aborted: cost > best first K rows plan
***********************
(newjo-stop-1) k:0, spcnt:0, perm:2, maxperm:1000

*********************************
Number of join permutations tried: 2
*********************************
*********************
PJE: Partial join eval conversion for query block SEL$4 (#3).
PJE: Table marked for partial join eval: DATE_DIM[DATE_DIM]#1
***********************
Enumerating distribution method (advanced)
--- Distribution method for 
join between CATALOG_SALES[CATALOG_SALES](serial) and DATE_DIM[DATE_DIM](serial); jm = 15; right side access path = IndexUnique
kkopqIsSerialJoin: serial NLJ: both inputs serial
---- serial NL-Join -> SERIAL

(newjo-save)    [1 0 ]
LORE: Or-Expansion validity checks failed on query block SEL$4 (#3) because Cost based OR expansion enabled
Transfer Optimizer annotations for query block SEL$4 (#3)
Final cost for query block SEL$4 (#3) - First K Rows Plan:
  Best join order: 1
  Cost: 7.001470  Degree: 1  Card: 3.000000  Bytes: 1800.000000
  Resc: 7.001470  Resc_io: 7.000000  Resc_cpu: 57431
  Resp: 7.001470  Resp_io: 7.000000  Resc_cpu: 57431
kkoqbc-subheap (delete addr=0x7f04725139a8, in-use=78176, alloc=82136)
kkoqbc-end:
        :
    call(in-use=287584, alloc=393328), compile(in-use=1022808, alloc=1025544), execution(in-use=18216, alloc=20256)

kkoqbc: finish optimizing query block SEL$4 (#3)
kkoqbc: optimizing query block SEL$2 (#2)
        
        :
    call(in-use=287584, alloc=393328), compile(in-use=1022808, alloc=1025544), execution(in-use=18216, alloc=20256)

kkoqbc-subheap (create addr=0x7f04725139a8)
****************
QUERY BLOCK TEXT
****************
SELECT
            *
        FROM
            store_sales ss,
            date_dim
        WHERE
            c.c_customer_sk = ss.ss_customer_sk
            AND ss_sold_date_sk = d_date_sk
            AND d_year = 2001
            AND d_moy BETWEEN 1 AND 1 + 3
            AND ( EXISTS (
                SELECT
                    *
                FROM
                    web_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = ws_bill_customer_sk
                    AND ws_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            )
                  OR EXISTS (
                SELECT
                    *
                FROM
                    catalog_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = cs_ship_customer_sk
                    AND cs_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            ) )
    
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$2 nbfros=2 flg=0
  fro(0): flg=0 objn=74171 hint_alias="DATE_DIM"@"SEL$2"
  fro(1): flg=0 objn=74191 hint_alias="SS"@"SEL$2"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3255 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: DATE_DIM  Alias: DATE_DIM
  #Rows: 73049  SSZ: 0  LGR: 0  #Blks:  1510  AvgRowLen:  128.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): D_DATE_SK(NUMBER)
    AvgLen: 6 NDV: 73049 Nulls: 0 Density: 0.000014 Min: 2415022.000000 Max: 2488070.000000
  Column (#7): D_YEAR(NUMBER)
    AvgLen: 4 NDV: 201 Nulls: 0 Density: 0.000007 Min: 1900.000000 Max: 2100.000000
    Histogram: Freq  #Bkts: 201  UncompBkts: 73049  EndPtVals: 201  ActualVal: yes
  Column (#9): D_MOY(NUMBER)
    AvgLen: 3 NDV: 12 Nulls: 0 Density: 0.038666 Min: 1.000000 Max: 12.000000
    Histogram: Freq  #Bkts: 12  UncompBkts: 73049  EndPtVals: 12  ActualVal: yes
Index Stats::
  Index: D_DATE_PK_IDX  Col#: 1
  LVLS: 1  #LB: 163  #DK: 73049  LB/K: 1.00  DB/K: 1.00  CLUF: 1402.00  NRW: 73049.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table: STORE_SALES  Alias: SS  (Using composite stats)
  #Rows: 144020200  SSZ: 0  LGR: 0  #Blks:  2304802  AvgRowLen:  117.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
Index Stats::
  Index: STORE_SALES_IDX2  Col#: 4 1
  LVLS: 3  #LB: 522970  #DK: 11965122  LB/K: 1.00  DB/K: 12.00  CLUF: 143898920.00  NRW: 144020200.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
  Index: STORE_SALES_PK_IDX  Col#: 3 10
  LVLS: 3  #LB: 497464  #DK: 141527398  LB/K: 1.00  DB/K: 1.00  CLUF: 141365556.00  NRW: 141527398.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
try to generate single-table filter predicates from ORs for query block SEL$2 (#2)
finally: "SS"."SS_CUSTOMER_SK"=:B1 AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND ( EXISTS (SELECT 0 FROM "WEB_SALES" "WEB_SALES","DATE_DIM" "DATE_DIM" WHERE "WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B2 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4) OR  EXISTS (SELECT 0 FROM "CATALOG_SALES" "CATALOG_SALES","DATE_DIM" "DATE_DIM" WHERE "CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B3 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4))

=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$2 (#2)
Applicable DS directives:
   dirid = 10827845680942532126, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {F(74191)[]; F(74171)[]}
   dirid = 7660518587836633700, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74191)[4]}
   dirid = 13969931850241126217, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {C(74171)[7, 9]}
   dirid = 2361553282592865451, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {(74191)[]; F(74171)[]}
   dirid = 12943986683386070018, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {(74191)[]; (74171)[]}
Checking valid directives for the query block
  SPD: Return code in qosdDSDirSetup: NODIR, estType = QUERY_BLOCK
Return code in qosdSetupDirCtx4QB: EXISTS
=====================================
SPD: END context at query block level
=====================================
Access path analysis for STORE_SALES
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for STORE_SALES[SS] 
  SPD: Return code in qosdDSDirSetup: NODIR, estType = TABLE

 kkecdn: Single Table Predicate:"SS"."SS_CUSTOMER_SK"=:B1
NOTE: ignoring histogram of column (STORE_SALES.SS_CUSTOMER_SK)
      used only for incremental stats maintenance
  Column (#4): SS_CUSTOMER_SK(NUMBER)
    AvgLen: 6 NDV: 1039371 Nulls: 0 Density: 0.000001 Min: 1.000000 Max: 1079999.000000
  Estimated selectivity: 9.6212e-07 , col: #4 
  Table: STORE_SALES  Alias: SS
    Card: Original: 144020200.000000  Rounded: 139  Computed: 138.564767  Non Adjusted: 138.564767
  Scan IO  Cost (Disk) =   624219.000000
  Scan CPU Cost (Disk) =   46657751154.880005
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000001 flag = 2048  ("SS"."SS_CUSTOMER_SK"=:B1)
  Total Scan IO  Cost  =   624219.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 144020200.000000 (#rows))
                       =   624219.000000
  Total Scan CPU  Cost =   46657751154.880005 (scan (Disk))
                         + 7201010000.000000 (cpu filter eval) (= 50.000000 (per row) * 144020200.000000 (#rows))
                       =   53858761154.880005
  Access Path: TableScan
    Cost:  625597.914066  Resp: 625597.914066  Degree: 0
      Cost_io: 624219.000000  Cost_cpu: 53858761155
      Resp_io: 624219.000000  Resp_cpu: 53858761155
  Access Path: index (index (FFS))
    Index: STORE_SALES_IDX2
    resc_io: 141639.000000  resc_cpu: 28207733477
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  142361.185947  Resp: 142361.185947  Degree: 1
      Cost_io: 141639.000000  Cost_cpu: 28207733477
      Resp_io: 141639.000000  Resp_cpu: 28207733477
 ****** Costing Index STORE_SALES_IDX2
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER

  Estimated selectivity: 9.6212e-07 , col: #4 
  Access Path: index (IndexOnly)
    Index: STORE_SALES_IDX2
    resc_io: 4.000000  resc_cpu: 56286
    ix_sel: 9.6212e-07  ix_sel_with_filters: 9.6212e-07 
    Cost: 4.001441  Resp: 4.001441  Degree: 1
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: IndexRange
  Index: STORE_SALES_IDX2
         Cost: 4.001441  Degree: 1  Resp: 4.001441  Card: 138.564767  Bytes: 0.000000

Access path analysis for DATE_DIM
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for DATE_DIM[DATE_DIM] 
  SPD: Directive valid: dirid = 13969931850241126217, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {C(74171)[7, 9]}
  SPD: Return code in qosdDSDirSetup: EXISTS, estType = TABLE
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 


 kkecdn: Single Table Predicate:"DATE_DIM"."D_YEAR"=2001
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY">=1
  Estimated selectivity: 1.000000 , endpoint value predicate, col: #9 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY"<=4
  Estimated selectivity: 0.329224 , endpoint value predicate, col: #9 
  Table: DATE_DIM  Alias: DATE_DIM
    Card: Original: 73049.000000  Rounded: 120  Computed: 120.166840  Non Adjusted: 120.166840
  Scan IO  Cost (Disk) =   411.000000
  Scan CPU Cost (Disk) =   33398564.400000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.004997 flag = 2048  ("DATE_DIM"."D_YEAR"=2001)
    io = NOCOST, cpu = 50.000000, sel = 0.329224 flag = 2048  ("DATE_DIM"."D_MOY"<=4)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("DATE_DIM"."D_MOY">=1)
  Total Scan IO  Cost  =   411.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 73049.000000 (#rows))
                       =   411.000000
  Total Scan CPU  Cost =   33398564.400000 (scan (Disk))
                         + 3676708.342003 (cpu filter eval) (= 50.332083 (per row) * 73049.000000 (#rows))
                       =   37075272.742003
  Access Path: TableScan
    Cost:  411.949216  Resp: 411.949216  Degree: 0
      Cost_io: 411.000000  Cost_cpu: 37075273
      Resp_io: 411.000000  Resp_cpu: 37075273
  ****** trying bitmap/domain indexes ******
 ****** Costing Index D_DATE_PK_IDX
  Access Path: index (FullScan)
    Index: D_DATE_PK_IDX
    resc_io: 164.000000  resc_cpu: 15777716
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 164.403948  Resp: 164.403948  Degree: 0
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: TableScan
         Cost: 411.949216  Degree: 1  Resp: 411.949216  Card: 120.166840  Bytes: 0.000000

***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE: Checking validity of partial join eval on query block SEL$2 (#2)
PJE: Passed validity of partial join eval by query block SEL$2 (#2)
number: [0]
PJE: Partial join eval conversion for query block SEL$2 (#2).
PJE: Table marked for partial join eval: STORE_SALES[SS]#1
***********************
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  DATE_DIM[DATE_DIM]#0  STORE_SALES[SS]#1

***************
Now joining: STORE_SALES[SS]#1
***************
NL Join
  Outer table: Card: 120.166840  Cost: 411.949216  Resp: 411.949216  Degree: 1  Bytes: 
Access path analysis for STORE_SALES
  Scan IO  Cost (Disk) =   624217.216667
  Scan CPU Cost (Disk) =   46657751154.880005
NOTE: ignoring histogram of column (STORE_SALES.SS_SOLD_DATE_SK)
      used only for incremental stats maintenance
  Column (#1): SS_SOLD_DATE_SK(NUMBER)
    AvgLen: 6 NDV: 1849 Nulls: 0 Density: 0.000541 Min: 2450816.000000 Max: 2452651.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000001 flag = 2064  ("SS"."SS_CUSTOMER_SK"=:B1)
    io = NOCOST, cpu = 50.000000, sel = 0.007463 flag = 2048  ("SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK")
  Total Scan IO  Cost  =   624217.216667 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 144020200.000000 (#rows))
                       =   624217.216667
  Total Scan CPU  Cost =   46657751154.880005 (scan (Disk))
                         + 7201016928.238328 (cpu filter eval) (= 50.000048 (per row) * 144020200.000000 (#rows))
                       =   53858768083.118332
  Inner table: STORE_SALES  Alias: SS
  Access Path: TableScan
    NL Join:  Cost: 75071947.658387  Resp: 75071947.658387  Degree: 1
      Cost_io: 74906477.000000  Cost_cpu: 6463089245247
      Resp_io: 74906477.000000  Resp_cpu: 6463089245247
  Access Path: index (index (FFS))
    Index: STORE_SALES_IDX2
    resc_io: 141637.716667  resc_cpu: 28207740405
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: STORE_SALES  Alias: SS
  Access Path: index (FFS)
    NL Join:  Cost: 17083600.284196  Resp: 17083600.284196  Degree: 1
      Cost_io: 16996937.000000  Cost_cpu: 3384965923877
      Resp_io: 16996937.000000  Resp_cpu: 3384965923877
 ****** Costing Index STORE_SALES_IDX2
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 8.3576e-08
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 8.3576e-08
  Estimated selectivity: 9.6212e-07 , col: #4 
  Access Path: index (AllEqJoinGuess)
    Index: STORE_SALES_IDX2
    resc_io: 3.000000  resc_cpu: 22414
    ix_sel: 6.9435e-09  ix_sel_with_filters: 6.9435e-09 
    NL Join : Cost: 772.018080  Resp: 772.018080  Degree: 1
      Cost_io: 771.000000  Cost_cpu: 39764991
      Resp_io: 771.000000  Resp_cpu: 39764991
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 772.018080
          resc: 772.018080  resc_io: 771.000000  resc_cpu: 39764991
          resp: 772.018080  resp_io: 771.000000  resc_cpu: 39764991
  SPD: Directive valid: dirid = 10827845680942532126, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {F(74191)[]; F(74171)[]}
  SPD: Return code in qosdDSDirSetup: EXISTS, estType = JOIN
Semi Join Card:  120.166840 = outer (120.166840) * sel (1.000000)
Join Card - Rounded: 120 Computed: 120.166840
  Outer table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card 120.166840  bytes:   deg: 1  resp: 411.949216
  Inner table:  STORE_SALES  Alias: SS
    resc: 4.001441  card: 138.564767  bytes:   deg: 1  resp: 4.001441
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     25 Total Rows:            120
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39096166
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     24 Total Rows:            139
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39103407
      Total Temp space used: 0
  SM join: Resc: 417.952755  Resp: 417.952755  [multiMatchCost=0.000000]
SM Join
  SM cost: 417.952755 
     resc: 417.952755 resc_io: 415.000000 resc_cpu: 115331131
     resp: 417.952755 resp_io: 415.000000 resp_cpu: 115331131
SM Join (with index on outer)
 ****** Costing Index D_DATE_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (FullScan)
    Index: D_DATE_PK_IDX
    resc_io: 1566.000000  resc_cpu: 52083873
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1567.333473  Resp: 1567.333473  Degree: 1
  Outer table:  DATE_DIM  Alias: DATE_DIM
    resc: 1567.333473  card 120.166840  bytes:   deg: 1  resp: 1567.333473
  Inner table:  STORE_SALES  Alias: SS
    resc: 4.001441  card: 138.564767  bytes:   deg: 1  resp: 4.001441
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     24 Total Rows:            139
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39103407
      Total Temp space used: 0
  SM join: Resc: 1572.336055  Resp: 1572.336055  [multiMatchCost=0.000000]
  Outer table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card 120.166840  bytes:   deg: 1  resp: 411.949216
  Inner table:  STORE_SALES  Alias: SS
    resc: 4.001441  card: 138.564767  bytes:   deg: 1  resp: 4.001441
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016178  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 415.966836  Resp: 415.966836  [multiMatchCost=0.000000]
HA Join
  HA cost: 415.966836  
     resc: 415.966836 resc_io: 415.000000 resc_cpu: 37763459
     resp: 415.966836 resp_io: 415.000000 resp_cpu: 37763459
Best:: JoinMethod: HashSemi
       Cost: 415.966836  Degree: 1  Resp: 415.966836  Card: 120.166840 Bytes: 
***********************
Best so far:  Table#: 0  cost: 411.949216  card: 120.166840  bytes: 1560.000000
              Table#: 1  cost: 415.966836  card: 120.166840  bytes: 3000.000000
***********************
kkoaccsqf: Current query block SEL$2 (#2) is serial
kkoaccsqf: correlated subquery query block SEL$3 (#4) in filter               : serial
First K Rows: K = 1.00, N = 120.00
First K Rows: old pf = -1.0000000, new pf = 0.0166435
Access path analysis for DATE_DIM
***************************************
SINGLE TABLE ACCESS PATH (First K Rows)
  Single Table Cardinality Estimation for DATE_DIM[DATE_DIM] 
  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = TABLE
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 


 kkecdn: Single Table Predicate:"DATE_DIM"."D_YEAR"=2001
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY">=1
  Estimated selectivity: 1.000000 , endpoint value predicate, col: #9 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY"<=4
  Estimated selectivity: 0.329224 , endpoint value predicate, col: #9 
  Table: DATE_DIM  Alias: DATE_DIM
    Card: Original: 1216.000000  Rounded: 2  Computed: 2.000341  Non Adjusted: 2.000341
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   562117.440000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.004997 flag = 2048  ("DATE_DIM"."D_YEAR"=2001)
    io = NOCOST, cpu = 50.000000, sel = 0.329224 flag = 2048  ("DATE_DIM"."D_MOY"<=4)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("DATE_DIM"."D_MOY">=1)
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 1216.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   562117.440000 (scan (Disk))
                         + 61203.813110 (cpu filter eval) (= 50.332083 (per row) * 1216.000000 (#rows))
                       =   623321.253110
  Access Path: TableScan
    Cost:  9.015959  Resp: 9.015959  Degree: 0
      Cost_io: 9.000000  Cost_cpu: 623321
      Resp_io: 9.000000  Resp_cpu: 623321
  ****** trying bitmap/domain indexes ******
 ****** Costing Index D_DATE_PK_IDX
  Access Path: index (FullScan)
    Index: D_DATE_PK_IDX
    resc_io: 4.000000  resc_cpu: 271686
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 4.006956  Resp: 4.006956  Degree: 0
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: TableScan
         Cost: 9.015959  Degree: 1  Resp: 9.015959  Card: 2.000341  Bytes: 0.000000

First K Rows: old pf = -1.0000000, new pf = 1.0000000
Access path analysis for STORE_SALES
***************************************
SINGLE TABLE ACCESS PATH (First K Rows)
  Single Table Cardinality Estimation for STORE_SALES[SS] 
  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = TABLE

 kkecdn: Single Table Predicate:"SS"."SS_CUSTOMER_SK"=:B1
  Estimated selectivity: 9.6212e-07 , col: #4 
  Table: STORE_SALES  Alias: SS
    Card: Original: 144020200.000000  Rounded: 139  Computed: 138.564767  Non Adjusted: 138.564767
  Scan IO  Cost (Disk) =   624219.000000
  Scan CPU Cost (Disk) =   46657751154.880005
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000001 flag = 2064  ("SS"."SS_CUSTOMER_SK"=:B1)
  Total Scan IO  Cost  =   624219.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 144020200.000000 (#rows))
                       =   624219.000000
  Total Scan CPU  Cost =   46657751154.880005 (scan (Disk))
                         + 7201010000.000000 (cpu filter eval) (= 50.000000 (per row) * 144020200.000000 (#rows))
                       =   53858761154.880005
  Access Path: TableScan
    Cost:  625597.914066  Resp: 625597.914066  Degree: 0
      Cost_io: 624219.000000  Cost_cpu: 53858761155
      Resp_io: 624219.000000  Resp_cpu: 53858761155
  Access Path: index (index (FFS))
    Index: STORE_SALES_IDX2
    resc_io: 141639.000000  resc_cpu: 28207733477
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  142361.185947  Resp: 142361.185947  Degree: 1
      Cost_io: 141639.000000  Cost_cpu: 28207733477
      Resp_io: 141639.000000  Resp_cpu: 28207733477
 ****** Costing Index STORE_SALES_IDX2
  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = INDEX_FILTER

  Estimated selectivity: 9.6212e-07 , col: #4 
  Access Path: index (IndexOnly)
    Index: STORE_SALES_IDX2
    resc_io: 4.000000  resc_cpu: 56286
    ix_sel: 9.6212e-07  ix_sel_with_filters: 9.6212e-07 
    Cost: 4.001441  Resp: 4.001441  Degree: 1
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: IndexRange
  Index: STORE_SALES_IDX2
         Cost: 4.001441  Degree: 1  Resp: 4.001441  Card: 138.564767  Bytes: 0.000000

First K Rows: unchanged join prefix len = 1
Join order[1]:  DATE_DIM[DATE_DIM]#0  STORE_SALES[SS]#1

***************
Now joining: STORE_SALES[SS]#1
***************
NL Join
  Outer table: Card: 2.000341  Cost: 9.015959  Resp: 9.015959  Degree: 1  Bytes: 
Access path analysis for STORE_SALES
  Scan IO  Cost (Disk) =   624218.000000
  Scan CPU Cost (Disk) =   46657751154.880005
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000001 flag = 2064  ("SS"."SS_CUSTOMER_SK"=:B1)
    io = NOCOST, cpu = 50.000000, sel = 0.007463 flag = 2064  ("SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK")
  Total Scan IO  Cost  =   624218.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 144020200.000000 (#rows))
                       =   624218.000000
  Total Scan CPU  Cost =   46657751154.880005 (scan (Disk))
                         + 7201016928.238328 (cpu filter eval) (= 50.000048 (per row) * 144020200.000000 (#rows))
                       =   53858768083.118332
  Inner table: STORE_SALES  Alias: SS
  Access Path: TableScan
    NL Join:  Cost: 1251202.844445  Resp: 1251202.844445  Degree: 1
      Cost_io: 1248445.000000  Cost_cpu: 107718159487
      Resp_io: 1248445.000000  Resp_cpu: 107718159487
  Access Path: index (index (FFS))
    Index: STORE_SALES_IDX2
    resc_io: 141638.500000  resc_cpu: 28207740405
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: STORE_SALES  Alias: SS
  Access Path: index (FFS)
    NL Join:  Cost: 284730.388208  Resp: 284730.388208  Degree: 1
      Cost_io: 283286.000000  Cost_cpu: 56416104131
      Resp_io: 283286.000000  Resp_cpu: 56416104131
 ****** Costing Index STORE_SALES_IDX2
NOTE: ignoring histogram of column (STORE_SALES.SS_SOLD_DATE_SK)
      used only for incremental stats maintenance
  Column (#1): SS_SOLD_DATE_SK(NUMBER)
    AvgLen: 6 NDV: 1849 Nulls: 0 Density: 0.000541 Min: 2450816.000000 Max: 2452651.000000
  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 8.3576e-08
  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 8.3576e-08
  Estimated selectivity: 9.6212e-07 , col: #4 
  Access Path: index (AllEqJoinGuess)
    Index: STORE_SALES_IDX2
    resc_io: 3.000000  resc_cpu: 22414
    ix_sel: 6.9435e-09  ix_sel_with_filters: 6.9435e-09 
    NL Join : Cost: 15.017106  Resp: 15.017106  Degree: 1
      Cost_io: 15.000000  Cost_cpu: 668150
      Resp_io: 15.000000  Resp_cpu: 668150
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 15.017106
          resc: 15.017106  resc_io: 15.000000  resc_cpu: 668150
          resp: 15.017106  resp_io: 15.000000  resc_cpu: 668150
  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = JOIN
Semi Join Card:  2.000341 = outer (2.000341) * sel (1.000000)
Join Card - Rounded: 2 Computed: 2.000341
  Outer table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card 120.166840  bytes:   deg: 1  resp: 411.949216
  Inner table:  STORE_SALES  Alias: SS
    resc: 4.001441  card: 138.564767  bytes:   deg: 1  resp: 4.001441
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     25 Total Rows:            120
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39096166
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     24 Total Rows:            139
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39103407
      Total Temp space used: 0
  SM join: Resc: 417.952755  Resp: 417.952755  [multiMatchCost=0.000000]
SM Join
  SM cost: 417.952755 
     resc: 417.952755 resc_io: 415.000000 resc_cpu: 115331131
     resp: 417.952755 resp_io: 415.000000 resp_cpu: 115331131
SM Join (with index on outer)
 ****** Costing Index D_DATE_PK_IDX
  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = INDEX_FILTER
  Access Path: index (FullScan)
    Index: D_DATE_PK_IDX
    resc_io: 28.000000  resc_cpu: 880764
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 28.022550  Resp: 28.022550  Degree: 1
  Outer table:  DATE_DIM  Alias: DATE_DIM
    resc: 28.022550  card 2.000341  bytes:   deg: 1  resp: 28.022550
  Inner table:  STORE_SALES  Alias: SS
    resc: 4.001441  card: 138.564767  bytes:   deg: 1  resp: 4.001441
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     24 Total Rows:            139
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39103407
      Total Temp space used: 0
  SM join: Resc: 33.025132  Resp: 33.025132  [multiMatchCost=0.000000]
  Outer table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card 120.166840  bytes:   deg: 1  resp: 411.949216
  Inner table:  STORE_SALES  Alias: SS
    resc: 4.001441  card: 138.564767  bytes:   deg: 1  resp: 4.001441
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016178  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 415.966836  Resp: 415.966836  [multiMatchCost=0.000000]
HA Join
  HA cost: 415.966836  
     resc: 415.966836 resc_io: 415.000000 resc_cpu: 37763459
     resp: 415.966836 resp_io: 415.000000 resp_cpu: 37763459
Best:: JoinMethod: NestedLoopSemi
       Cost: 15.017106  Degree: 1  Resp: 15.017106  Card: 2.000341 Bytes: 
***********************
Best so far:  Table#: 0  cost: 9.015959  card: 2.000341  bytes: 26.000000
              Table#: 1  cost: 15.017106  card: 2.000341  bytes: 50.000000
***********************
number: [1]
PJE: Partial join eval conversion for query block SEL$2 (#2).
PJE: Table marked for partial join eval: DATE_DIM[DATE_DIM]#0
***********************
number: [1]
PJE: Partial join eval conversion for query block SEL$2 (#2).
PJE: Table marked for partial join eval: DATE_DIM[DATE_DIM]#0
***********************
Join order[2]:  STORE_SALES[SS]#1  DATE_DIM[DATE_DIM]#0

***************
Now joining: DATE_DIM[DATE_DIM]#0
***************
NL Join
  Outer table: Card: 138.564767  Cost: 4.001441  Resp: 4.001441  Degree: 1  Bytes: 
Access path analysis for DATE_DIM
  Scan IO  Cost (Disk) =   408.971223
  Scan CPU Cost (Disk) =   33398564.400000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.007463 flag = 2064  ("SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK")
    io = NOCOST, cpu = 50.000000, sel = 0.004997 flag = 2048  ("DATE_DIM"."D_YEAR"=2001)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("DATE_DIM"."D_MOY">=1)
    io = NOCOST, cpu = 50.000000, sel = 0.329224 flag = 2048  ("DATE_DIM"."D_MOY"<=4)
  Total Scan IO  Cost  =   408.971223 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 73049.000000 (#rows))
                       =   408.971223
  Total Scan CPU  Cost =   33398564.400000 (scan (Disk))
                         + 3670881.032403 (cpu filter eval) (= 50.252311 (per row) * 73049.000000 (#rows))
                       =   37069445.432403
  Inner table: DATE_DIM  Alias: DATE_DIM
  Access Path: TableScan
    NL Join:  Cost: 56982.921772  Resp: 56982.921772  Degree: 1
      Cost_io: 56851.000000  Cost_cpu: 5152709201
      Resp_io: 56851.000000  Resp_cpu: 5152709201
 ****** Costing Index D_DATE_PK_IDX
NOTE: ignoring histogram of column (STORE_SALES.SS_SOLD_DATE_SK)
      used only for incremental stats maintenance
  Column (#1): SS_SOLD_DATE_SK(NUMBER)
    AvgLen: 6 NDV: 1849 Nulls: 0 Density: 0.000541 Min: 2450816.000000 Max: 2452651.000000
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: D_DATE_PK_IDX
    resc_io: 1.000000  resc_cpu: 9382
    ix_sel: 1.3689e-05  ix_sel_with_filters: 1.3689e-05 
    NL Join (ordered): Cost: 143.034828  Resp: 143.034828  Degree: 1
      Cost_io: 143.000000  Cost_cpu: 1360352
      Resp_io: 143.000000  Resp_cpu: 1360352
 ****** Costing Index D_DATE_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 
  Estimated selectivity: 1.000000 , endpoint value predicate, col: #9 
  Estimated selectivity: 0.329224 , endpoint value predicate, col: #9 
  Access Path: index (AllEqUnique)
    Index: D_DATE_PK_IDX
    resc_io: 1.000000  resc_cpu: 9382
    ix_sel: 1.3689e-05  ix_sel_with_filters: 1.3689e-05 
    NL Join (ordered): Cost: 143.034828  Resp: 143.034828  Degree: 1
      Cost_io: 143.000000  Cost_cpu: 1360352
      Resp_io: 143.000000  Resp_cpu: 1360352
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 143.034828
          resc: 143.034828  resc_io: 143.000000  resc_cpu: 1360352
          resp: 143.034828  resp_io: 143.000000  resc_cpu: 1360352
  SPD: Directive valid: dirid = 10827845680942532126, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {F(74191)[]; F(74171)[]}
  SPD: Return code in qosdDSDirSetup: EXISTS, estType = JOIN
Capping Semi Join Card of HJ/SMJ by inner = 124.260374
Capping Semi Join Card of HJ/SMJ (no post filters) by inner = 124.260374
Capping Semi Join Card of NL by inner = 124.260374
Capping Semi Join Card of without POSQ by inner = 124.260374
Capping Semi Join Card of non adjusted NSQ by inner = 124.260374
Semi Join Card (capped by inner join):  124.260374 = outer (138.564767) * inner (120.166840) * sel (0.007463)
Join Card - Rounded: 124 Computed: 124.260374
  Outer table:  STORE_SALES  Alias: SS
    resc: 4.001441  card 138.564767  bytes:   deg: 1  resp: 4.001441
  Inner table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card: 120.166840  bytes:   deg: 1  resp: 411.949216
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     25 Total Rows:            120
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39096166
      Total Temp space used: 0
  SM join: Resc: 416.951613  Resp: 416.951613  [multiMatchCost=0.000000]
SM Join
  SM cost: 416.951613 
     resc: 416.951613 resc_io: 415.000000 resc_cpu: 76227724
     resp: 416.951613 resp_io: 415.000000 resp_cpu: 76227724
  Outer table:  STORE_SALES  Alias: SS
    resc: 4.001441  card 138.564767  bytes:   deg: 1  resp: 4.001441
  Inner table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card: 120.166840  bytes:   deg: 1  resp: 411.949216
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016202  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 415.966860  Resp: 415.966860  [multiMatchCost=0.000000]
HA Join
  HA cost: 415.966860  
     resc: 415.966860 resc_io: 415.000000 resc_cpu: 37764409
     resp: 415.966860 resp_io: 415.000000 resp_cpu: 37764409
Best:: JoinMethod: NestedLoopSemi
       Cost: 143.034828  Degree: 1  Resp: 143.034828  Card: 124.260374 Bytes: 
***********************
Best so far:  Table#: 1  cost: 4.001441  card: 138.564767  bytes: 1668.000000
              Table#: 0  cost: 143.034828  card: 124.260374  bytes: 3100.000000
***********************
kkoaccsqf: Current query block SEL$2 (#2) is serial
kkoaccsqf: correlated subquery query block SEL$3 (#4) in filter               : serial
First K Rows: K = 1.00, N = 124.00
First K Rows: old pf = 1.0000000, new pf = 0.0216505
Access path analysis for STORE_SALES
***************************************
SINGLE TABLE ACCESS PATH (First K Rows)
  Single Table Cardinality Estimation for STORE_SALES[SS] 
  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = TABLE

 kkecdn: Single Table Predicate:"SS"."SS_CUSTOMER_SK"=:B1
  Estimated selectivity: 1.0108e-06 , col: #4 
  Table: STORE_SALES  Alias: SS
    Card: Original: 3118114.000000  Rounded: 3  Computed: 3.151835  Non Adjusted: 3.151835
  Scan IO  Cost (Disk) =   13517.000000
  Scan CPU Cost (Disk) =   1010170917.440000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000001 flag = 2064  ("SS"."SS_CUSTOMER_SK"=:B1)
  Total Scan IO  Cost  =   13517.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 3118114.000000 (#rows))
                       =   13517.000000
  Total Scan CPU  Cost =   1010170917.440000 (scan (Disk))
                         + 155905700.000000 (cpu filter eval) (= 50.000000 (per row) * 3118114.000000 (#rows))
                       =   1166076617.440000
  Access Path: TableScan
    Cost:  13546.854371  Resp: 13546.854371  Degree: 0
      Cost_io: 13517.000000  Cost_cpu: 1166076617
      Resp_io: 13517.000000  Resp_cpu: 1166076617
  Access Path: index (index (FFS))
    Index: STORE_SALES_IDX2
    resc_io: 3068.000000  resc_cpu: 610715445
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  3083.635787  Resp: 3083.635787  Degree: 1
      Cost_io: 3068.000000  Cost_cpu: 610715445
      Resp_io: 3068.000000  Resp_cpu: 610715445
 ****** Costing Index STORE_SALES_IDX2
  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = INDEX_FILTER

  Estimated selectivity: 1.0108e-06 , col: #4 
  Access Path: index (IndexOnly)
    Index: STORE_SALES_IDX2
    resc_io: 4.000000  resc_cpu: 29286
    ix_sel: 1.0108e-06  ix_sel_with_filters: 1.0108e-06 
    Cost: 4.000750  Resp: 4.000750  Degree: 1
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: IndexRange
  Index: STORE_SALES_IDX2
         Cost: 4.000750  Degree: 1  Resp: 4.000750  Card: 3.151835  Bytes: 0.000000

First K Rows: old pf = 0.0166435, new pf = 0.7434109
Access path analysis for DATE_DIM
***************************************
SINGLE TABLE ACCESS PATH (First K Rows)
  Single Table Cardinality Estimation for DATE_DIM[DATE_DIM] 
  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = TABLE
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 


 kkecdn: Single Table Predicate:"DATE_DIM"."D_YEAR"=2001
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY">=1
  Estimated selectivity: 1.000000 , endpoint value predicate, col: #9 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY"<=4
  Estimated selectivity: 0.329224 , endpoint value predicate, col: #9 
  Table: DATE_DIM  Alias: DATE_DIM
    Card: Original: 54306.000000  Rounded: 89  Computed: 89.334288  Non Adjusted: 89.334288
  Scan IO  Cost (Disk) =   306.000000
  Scan CPU Cost (Disk) =   24832237.120000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.004997 flag = 2048  ("DATE_DIM"."D_YEAR"=2001)
    io = NOCOST, cpu = 50.000000, sel = 0.329224 flag = 2048  ("DATE_DIM"."D_MOY"<=4)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("DATE_DIM"."D_MOY">=1)
  Total Scan IO  Cost  =   306.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 54306.000000 (#rows))
                       =   306.000000
  Total Scan CPU  Cost =   24832237.120000 (scan (Disk))
                         + 2733334.107528 (cpu filter eval) (= 50.332083 (per row) * 54306.000000 (#rows))
                       =   27565571.227528
  Access Path: TableScan
    Cost:  306.705745  Resp: 306.705745  Degree: 0
      Cost_io: 306.000000  Cost_cpu: 27565571
      Resp_io: 306.000000  Resp_cpu: 27565571
  ****** trying bitmap/domain indexes ******
 ****** Costing Index D_DATE_PK_IDX
  Access Path: index (FullScan)
    Index: D_DATE_PK_IDX
    resc_io: 123.000000  resc_cpu: 11737137
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 123.300499  Resp: 123.300499  Degree: 0
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: TableScan
         Cost: 306.705745  Degree: 1  Resp: 306.705745  Card: 89.334288  Bytes: 0.000000

First K Rows: unchanged join prefix len = 1
Join order[2]:  STORE_SALES[SS]#1  DATE_DIM[DATE_DIM]#0

***************
Now joining: DATE_DIM[DATE_DIM]#0
***************
NL Join
  Outer table: Card: 3.151835  Cost: 4.000750  Resp: 4.000750  Degree: 1  Bytes: 
Access path analysis for DATE_DIM
  Scan IO  Cost (Disk) =   304.666667
  Scan CPU Cost (Disk) =   24832237.120000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.007463 flag = 2064  ("SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK")
    io = NOCOST, cpu = 50.000000, sel = 0.004997 flag = 2048  ("DATE_DIM"."D_YEAR"=2001)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("DATE_DIM"."D_MOY">=1)
    io = NOCOST, cpu = 50.000000, sel = 0.329224 flag = 2048  ("DATE_DIM"."D_MOY"<=4)
  Total Scan IO  Cost  =   304.666667 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 54306.000000 (#rows))
                       =   304.666667
  Total Scan CPU  Cost =   24832237.120000 (scan (Disk))
                         + 2729001.976012 (cpu filter eval) (= 50.252311 (per row) * 54306.000000 (#rows))
                       =   27561239.096012
  Inner table: DATE_DIM  Alias: DATE_DIM
  Access Path: TableScan
    NL Join:  Cost: 920.117652  Resp: 920.117652  Degree: 1
      Cost_io: 918.000000  Cost_cpu: 82713003
      Resp_io: 918.000000  Resp_cpu: 82713003
 ****** Costing Index D_DATE_PK_IDX
NOTE: ignoring histogram of column (STORE_SALES.SS_SOLD_DATE_SK)
      used only for incremental stats maintenance
  Column (#1): SS_SOLD_DATE_SK(NUMBER)
    AvgLen: 6 NDV: 1849 Nulls: 0 Density: 0.000541 Min: 2450816.000000 Max: 2452651.000000
  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: D_DATE_PK_IDX
    resc_io: 1.000000  resc_cpu: 9382
    ix_sel: 1.8414e-05  ix_sel_with_filters: 1.8414e-05 
    NL Join (ordered): Cost: 7.001470  Resp: 7.001470  Degree: 1
      Cost_io: 7.000000  Cost_cpu: 57431
      Resp_io: 7.000000  Resp_cpu: 57431
 ****** Costing Index D_DATE_PK_IDX
  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = INDEX_FILTER
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 
  Estimated selectivity: 1.000000 , endpoint value predicate, col: #9 
  Estimated selectivity: 0.329224 , endpoint value predicate, col: #9 
  Access Path: index (AllEqUnique)
    Index: D_DATE_PK_IDX
    resc_io: 1.000000  resc_cpu: 9382
    ix_sel: 1.8415e-05  ix_sel_with_filters: 1.8415e-05 
    NL Join (ordered): Cost: 7.001470  Resp: 7.001470  Degree: 1
      Cost_io: 7.000000  Cost_cpu: 57431
      Resp_io: 7.000000  Resp_cpu: 57431
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 7.001470
          resc: 7.001470  resc_io: 7.000000  resc_cpu: 57431
          resp: 7.001470  resp_io: 7.000000  resc_cpu: 57431
  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = JOIN
Capping Semi Join Card of HJ/SMJ by inner = 3.128522
Capping Semi Join Card of HJ/SMJ (no post filters) by inner = 3.128522
Capping Semi Join Card of NL by inner = 3.128522
Capping Semi Join Card of without POSQ by inner = 3.128522
Capping Semi Join Card of non adjusted NSQ by inner = 3.128522
Semi Join Card (capped by inner join):  3.128522 = outer (3.151835) * inner (89.334288) * sel (0.011111)
Join Card - Rounded: 3 Computed: 3.128522
  Outer table:  STORE_SALES  Alias: SS
    resc: 4.000750  card 3.151835  bytes:   deg: 1  resp: 4.000750
  Inner table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card: 120.166840  bytes:   deg: 1  resp: 411.949216
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     25 Total Rows:            120
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39096166
      Total Temp space used: 0
  SM join: Resc: 416.950922  Resp: 416.950922  [multiMatchCost=0.000000]
SM Join
  SM cost: 416.950922 
     resc: 416.950922 resc_io: 415.000000 resc_cpu: 76200724
     resp: 416.950922 resp_io: 415.000000 resp_cpu: 76200724
  Outer table:  STORE_SALES  Alias: SS
    resc: 4.001441  card 138.564767  bytes:   deg: 1  resp: 4.001441
  Inner table:  DATE_DIM  Alias: DATE_DIM
    resc: 306.705745  card: 89.334288  bytes:   deg: 1  resp: 306.705745
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016123  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 310.723309  Resp: 310.723309  [multiMatchCost=0.000000]
HA Join
  HA cost: 310.723309  
     resc: 310.723309 resc_io: 310.000000 resc_cpu: 28251607
     resp: 310.723309 resp_io: 310.000000 resp_cpu: 28251607
Best:: JoinMethod: NestedLoopSemi
       Cost: 7.001470  Degree: 1  Resp: 7.001470  Card: 3.128522 Bytes: 
***********************
Best so far:  Table#: 1  cost: 4.000750  card: 3.151835  bytes: 36.000000
              Table#: 0  cost: 7.001470  card: 3.128522  bytes: 75.000000
***********************
(newjo-stop-1) k:0, spcnt:0, perm:2, maxperm:1000

*********************************
Number of join permutations tried: 2
*********************************
*********************
PJE: Partial join eval conversion for query block SEL$2 (#2).
PJE: Table marked for partial join eval: DATE_DIM[DATE_DIM]#0
***********************
Enumerating distribution method (advanced)
--- Distribution method for 
join between SS[STORE_SALES](serial) and DATE_DIM[DATE_DIM](serial); jm = 15; right side access path = IndexUnique
kkopqIsSerialJoin: serial NLJ: both inputs serial
---- serial NL-Join -> SERIAL

kkoaccsqf: Current query block SEL$2 (#2) is serial
kkoaccsqf: correlated subquery query block SEL$3 (#4) in filter               : serial
(newjo-save)    [1 0 ]
LORE: Or-Expansion validity checks failed on query block SEL$2 (#2) because Cost based OR expansion enabled
Transfer Optimizer annotations for query block SEL$2 (#2)
Final cost for query block SEL$2 (#2) - First K Rows Plan:
  Best join order: 2
  Cost: 13.002695  Degree: 1  Card: 3.000000  Bytes: 3075.000000
  Resc: 13.002695  Resc_io: 13.000000  Resc_cpu: 105280
  Resp: 13.002695  Resp_io: 13.000000  Resc_cpu: 105280
kkoqbc-subheap (delete addr=0x7f04725139a8, in-use=128432, alloc=144728)
kkoqbc-end:
        :
    call(in-use=317120, alloc=472408), compile(in-use=1055064, alloc=1055456), execution(in-use=19712, alloc=20256)

kkoqbc: finish optimizing query block SEL$2 (#2)
kkoqbc: optimizing query block SEL$1 (#1)
        
        :
    call(in-use=317120, alloc=472408), compile(in-use=1055064, alloc=1055456), execution(in-use=19712, alloc=20256)

kkoqbc-subheap (create addr=0x7f04725139a8)
****************
QUERY BLOCK TEXT
****************
SELECT /*query10*/
    cd_gender,
    cd_marital_status,
    cd_education_status,
    COUNT(*) cnt1,
    cd_purchase_estimate,
    COUNT(*) cnt2,
    cd_credit_rating,
    COUNT(*) cnt3,
    cd_dep_count,
    COUNT(*) cnt4,
    cd_dep_employed_count,
    COUNT(*) cnt5,
    cd_dep_college_count,
    COUNT(*) cnt6
FROM
    customer c,
    customer_address ca,
    customer_demographics
WHERE
    -- join predicates
        c.c_current_addr_sk = ca.ca_address_sk
    AND cd_demo_sk = c.c_current_cdemo_sk
    -- filter predicates
    AND ca.ca_county IN (
        'Chouteau County',
        'Dixie County',
        'Harrisonburg city',
        'Lowndes County',
        'Dinwiddie County'
    )
    -- filter predicate (subquery)
    AND EXISTS (
        SELECT
            *
        FROM
            store_sales ss,
            date_dim
        WHERE
            c.c_customer_sk = ss.ss_customer_sk
            AND ss_sold_date_sk = d_date_sk
            AND d_year = 2001
            AND d_moy BETWEEN 1 AND 1 + 3
            AND ( EXISTS (
                SELECT
                    *
                FROM
                    web_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = ws_bill_customer_sk
                    AND ws_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            )
                  OR EXISTS (
                SELECT
                    *
                FROM
                    catalog_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = cs_ship_customer_sk
                    AND cs_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            ) )
    )
GROUP BY
    cd_gender,
    cd_marital_status,
    cd_education_status,
    cd_purchase_estimate,
    cd_credit_rating,
    cd_dep_count,
    cd_dep_employed_count,
    cd_dep_college_count

---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$1 nbfros=3 flg=0
  fro(0): flg=0 objn=74168 hint_alias="C"@"SEL$1"
  fro(1): flg=0 objn=74169 hint_alias="CA"@"SEL$1"
  fro(2): flg=0 objn=74170 hint_alias="CUSTOMER_DEMOGRAPHICS"@"SEL$1"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3255 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
  #Rows: 1920800  SSZ: 0  LGR: 0  #Blks:  17254  AvgRowLen:  54.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#9): CD_DEP_COLLEGE_COUNT(NUMBER)
    AvgLen: 3 NDV: 6 Nulls: 0 Density: 0.166667 Min: 0.000000 Max: 5.000000
  Column (#8): CD_DEP_EMPLOYED_COUNT(NUMBER)
    AvgLen: 3 NDV: 6 Nulls: 0 Density: 0.166667 Min: 0.000000 Max: 5.000000
  Column (#7): CD_DEP_COUNT(NUMBER)
    AvgLen: 3 NDV: 6 Nulls: 0 Density: 0.166667 Min: 0.000000 Max: 5.000000
  Column (#6): CD_CREDIT_RATING(CHARACTER)
    AvgLen: 11 NDV: 4 Nulls: 0 Density: 0.250000
  Column (#5): CD_PURCHASE_ESTIMATE(NUMBER)
    AvgLen: 4 NDV: 9500 Nulls: 0 Density: 0.000105 Min: 500.000000 Max: 9999.000000
  Column (#4): CD_EDUCATION_STATUS(CHARACTER)
    AvgLen: 21 NDV: 7 Nulls: 0 Density: 0.070771
    Histogram: Freq  #Bkts: 7  UncompBkts: 1920800  EndPtVals: 7  ActualVal: yes
  Column (#3): CD_MARITAL_STATUS(CHARACTER)
    AvgLen: 2 NDV: 5 Nulls: 0 Density: 0.098953
    Histogram: Freq  #Bkts: 5  UncompBkts: 1920800  EndPtVals: 5  ActualVal: yes
  Column (#2): CD_GENDER(CHARACTER)
    AvgLen: 2 NDV: 2 Nulls: 0 Density: 0.249925
    Histogram: Freq  #Bkts: 2  UncompBkts: 1920800  EndPtVals: 2  ActualVal: no 
  Column (#1): CD_DEMO_SK(NUMBER)
    AvgLen: 6 NDV: 1920800 Nulls: 0 Density: 0.000001 Min: 1.000000 Max: 1920800.000000
Index Stats::
  Index: CD_DEMO_PK_IDX  Col#: 1
  LVLS: 2  #LB: 4138  #DK: 1920800  LB/K: 1.00  DB/K: 1.00  CLUF: 795806.00  NRW: 1920800.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table: CUSTOMER_ADDRESS  Alias: CA
  #Rows: 540000  SSZ: 0  LGR: 0  #Blks:  13174  AvgRowLen:  152.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): CA_ADDRESS_SK(NUMBER)
    AvgLen: 5 NDV: 540000 Nulls: 0 Density: 0.000002 Min: 1.000000 Max: 540000.000000
  Column (#8): CA_COUNTY(VARCHAR2)
    AvgLen: 16 NDV: 1877 Nulls: 0 Density: 0.000471
    Histogram: Hybrid  #Bkts: 254  UncompBkts: 5580  EndPtVals: 254  ActualVal: yes
Index Stats::
  Index: CA_ADDRESS_PK_IDX  Col#: 1
  LVLS: 2  #LB: 1127  #DK: 540000  LB/K: 1.00  DB/K: 1.00  CLUF: 12283.00  NRW: 540000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table: CUSTOMER  Alias:  C
  #Rows: 1080000  SSZ: 0  LGR: 0  #Blks:  23374  AvgRowLen:  138.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): C_CUSTOMER_SK(NUMBER)
    AvgLen: 6 NDV: 1080000 Nulls: 0 Density: 0.000001 Min: 1.000000 Max: 1080000.000000
  Column (#5): C_CURRENT_ADDR_SK(NUMBER)
    AvgLen: 5 NDV: 457472 Nulls: 0 Density: 0.000002 Min: 1.000000 Max: 539997.000000
  Column (#3): C_CURRENT_CDEMO_SK(NUMBER)
    AvgLen: 6 NDV: 772544 Nulls: 0 Density: 0.000001 Min: 18.000000 Max: 1920799.000000
Index Stats::
  Index: CUSTOMER_PK_IDX  Col#: 1
  LVLS: 2  #LB: 2266  #DK: 1080000  LB/K: 1.00  DB/K: 1.00  CLUF: 75684.00  NRW: 1080000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
try to generate single-table filter predicates from ORs for query block SEL$1 (#1)
finally: "C"."C_CURRENT_ADDR_SK"="CA"."CA_ADDRESS_SK" AND "CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK"="C"."C_CURRENT_CDEMO_SK" AND ("CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County') AND  EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM" WHERE "SS"."SS_CUSTOMER_SK"=:B1 AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND ( EXISTS (SELECT 0 FROM "WEB_SALES" "WEB_SALES","DATE_DIM" "DATE_DIM" WHERE "WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B2 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4) OR  EXISTS (SELECT 0 FROM "CATALOG_SALES" "CATALOG_SALES","DATE_DIM" "DATE_DIM" WHERE "CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B3 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4)))

=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$1 (#1)
Applicable DS directives:
   dirid = 5181560337004891843, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74169)[]; (74168)[3]}
   dirid = 9316027922818115912, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74168)[3, 5]}
   dirid = 18439699102505563871, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {EC(74169)[8]}
   dirid = 7754152966831092939, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {EC(74170)[3, 4]}
Checking valid directives for the query block
  SPD: Return code in qosdDSDirSetup: NODIR, estType = GROUP_BY
  SPD: Return code in qosdDSDirSetup: NODIR, estType = QUERY_BLOCK
Return code in qosdSetupDirCtx4QB: EXISTS
=====================================
SPD: END context at query block level
=====================================
Access path analysis for CUSTOMER
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for CUSTOMER[C] 
  SPD: Return code in qosdDSDirSetup: NODIR, estType = TABLE

 kkecdn: Single Table Predicate: EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM" WHERE "SS"."SS_CUSTOMER_SK"=:B1 AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND ( EXISTS (SELECT 0 FROM "WEB_SALES" "WEB_SALES","DATE_DIM" "DATE_DIM" WHERE "WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B2 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4) OR  EXISTS (SELECT 0 FROM "CATALOG_SALES" "CATALOG_SALES","DATE_DIM" "DATE_DIM" WHERE "CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B3 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4)))
  Table: CUSTOMER  Alias: C
    Card: Original: 1080000.000000  Rounded: 1080000  Computed: 1080000.000000  Non Adjusted: 1080000.000000
  Scan IO  Cost (Disk) =   6332.000000
  Scan CPU Cost (Disk) =   414856538.560000
  Cost of predicates:
    io = NOCOST, cpu = 20.000000, sel = 0.050000 flag = 2562  ( EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM" WHERE "SS"."SS_CUSTOMER_SK"=:B1 AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND ( EXISTS (SELECT 0 FROM "WEB_SALES" "WEB_SALES","DATE_DIM" "DATE_DIM" WHERE "WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B2 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4) OR  EXISTS (SELECT 0 FROM "CATALOG_SALES" "CATALOG_SALES","DATE_DIM" "DATE_DIM" WHERE "CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B3 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4))))
  Total Scan IO  Cost  =   6332.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 1080000.000000 (#rows))
                       =   6332.000000
  Total Scan CPU  Cost =   414856538.560000 (scan (Disk))
                         + 21600000.000000 (cpu filter eval) (= 20.000000 (per row) * 1080000.000000 (#rows))
                       =   436456538.560000
  Access Path: TableScan
    Cost:  6343.174339  Resp: 6343.174339  Degree: 0
      Cost_io: 6332.000000  Cost_cpu: 436456539
      Resp_io: 6332.000000  Resp_cpu: 436456539
  ****** trying bitmap/domain indexes ******
 ****** Costing Index CUSTOMER_PK_IDX
  Access Path: index (FullScan)
    Index: CUSTOMER_PK_IDX
    resc_io: 2268.000000  resc_cpu: 232151426
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 2273.943636  Resp: 2273.943636  Degree: 0
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: TableScan
         Cost: 6343.174339  Degree: 1  Resp: 6343.174339  Card: 1080000.000000  Bytes: 0.000000

Access path analysis for CUSTOMER_ADDRESS
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for CUSTOMER_ADDRESS[CA] 
  SPD: Directive valid: dirid = 18439699102505563871, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {EC(74169)[8]}
  SPD: Return code in qosdDSDirSetup: EXISTS, estType = TABLE

 kkecdn: Single Table Predicate:"CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County'
  Using density: 4.7103e-04 of col #8 as selectivity of pred having unreasonably low value
  Using density: 4.7103e-04 of col #8 as selectivity of pred having unreasonably low value
  Using density: 4.7103e-04 of col #8 as selectivity of pred having unreasonably low value
  Using density: 4.7103e-04 of col #8 as selectivity of pred having unreasonably low value
  Estimated selectivity: 5.3763e-04 , endpoint value predicate, col: #8 
  Table: CUSTOMER_ADDRESS  Alias: CA
    Card: Original: 540000.000000  Rounded: 1308  Computed: 1307.756551  Non Adjusted: 1307.756551
  Scan IO  Cost (Disk) =   3570.000000
  Scan CPU Cost (Disk) =   250417850.560000
  Cost of predicates:
    io = 0.000000, cpu = 249.764594, sel = 0.002422 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Chouteau County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Dinwiddie County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Dixie County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Harrisonburg city')
      io = NOCOST, cpu = 50.000000, sel = 0.000538 flag = 2048  ("CA"."CA_COUNTY"='Lowndes County')
  Total Scan IO  Cost  =   3570.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 540000.000000 (#rows))
                       =   3570.000000
  Total Scan CPU  Cost =   250417850.560000 (scan (Disk))
                         + 134872880.645405 (cpu filter eval) (= 249.764594 (per row) * 540000.000000 (#rows))
                       =   385290731.205405
  Access Path: TableScan
    Cost:  3579.864371  Resp: 3579.864371  Degree: 0
      Cost_io: 3570.000000  Cost_cpu: 385290731
      Resp_io: 3570.000000  Resp_cpu: 385290731
  ****** trying bitmap/domain indexes ******
 ****** Costing Index CA_ADDRESS_PK_IDX
  Access Path: index (FullScan)
    Index: CA_ADDRESS_PK_IDX
    resc_io: 1129.000000  resc_cpu: 116040106
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1131.970906  Resp: 1131.970906  Degree: 0
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: TableScan
         Cost: 3579.864371  Degree: 1  Resp: 3579.864371  Card: 1307.756551  Bytes: 0.000000

Access path analysis for CUSTOMER_DEMOGRAPHICS
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS] 
  SPD: Return code in qosdDSDirSetup: NODIR, estType = TABLE
  Table: CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
    Card: Original: 1920800.000000  Rounded: 1920800  Computed: 1920800.000000  Non Adjusted: 1920800.000000
  Scan IO  Cost (Disk) =   4675.000000
  Scan CPU Cost (Disk) =   718321325.760000
  Total Scan IO  Cost  =   4675.000000 (scan (Disk))
                       =   4675.000000
  Total Scan CPU  Cost =   718321325.760000 (scan (Disk))
                       =   718321325.760000
  Access Path: TableScan
    Cost:  4693.390757  Resp: 4693.390757  Degree: 0
      Cost_io: 4675.000000  Cost_cpu: 718321326
      Resp_io: 4675.000000  Resp_cpu: 718321326
  ****** trying bitmap/domain indexes ******
 ****** Costing Index CD_DEMO_PK_IDX
  Access Path: index (FullScan)
    Index: CD_DEMO_PK_IDX
    resc_io: 4140.000000  resc_cpu: 413642762
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 4150.590251  Resp: 4150.590251  Degree: 0
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: TableScan
         Cost: 4693.390757  Degree: 1  Resp: 4693.390757  Card: 1920800.000000  Bytes: 0.000000

Grouping column cardinality [ CD_GENDER]    2
Grouping column cardinality [CD_MARITAL]    5
Grouping column cardinality [CD_EDUCATI]    7
Grouping column cardinality [CD_PURCHAS]    9500
Grouping column cardinality [CD_CREDIT_]    4
Grouping column cardinality [CD_DEP_COU]    6
Grouping column cardinality [CD_DEP_EMP]    6
Grouping column cardinality [CD_DEP_COL]    6
***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE:  Bypassed; QB is not duplicate insignificant SEL$1 (#1)
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  CUSTOMER_ADDRESS[CA]#0  CUSTOMER[C]#1  CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS]#2

***************
Now joining: CUSTOMER[C]#1
***************
NL Join
  Outer table: Card: 1307.756551  Cost: 3579.864371  Resp: 3579.864371  Degree: 1  Bytes: 
Access path analysis for CUSTOMER
  Scan IO  Cost (Disk) =   6330.459480
  Scan CPU Cost (Disk) =   414856538.560000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000002 flag = 2048  ("C"."C_CURRENT_ADDR_SK"="CA"."CA_ADDRESS_SK")
    io = NOCOST, cpu = 20.000000, sel = 0.050000 flag = 2562  ( EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM" WHERE "SS"."SS_CUSTOMER_SK"=:B1 AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND ( EXISTS (SELECT 0 FROM "WEB_SALES" "WEB_SALES","DATE_DIM" "DATE_DIM" WHERE "WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B2 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4) OR  EXISTS (SELECT 0 FROM "CATALOG_SALES" "CATALOG_SALES","DATE_DIM" "DATE_DIM" WHERE "CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B3 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4))))
  Total Scan IO  Cost  =   6330.459480 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 1080000.000000 (#rows))
                       =   6330.459480
  Total Scan CPU  Cost =   414856538.560000 (scan (Disk))
                         + 24300000.000000 (cpu filter eval) (= 22.500000 (per row) * 1080000.000000 (#rows))
                       =   439156538.560000
  Inner table: CUSTOMER  Alias: C
  Access Path: TableScan
    NL Join:  Cost: 8298527.317370  Resp: 8298527.317370  Degree: 1
      Cost_io: 8283811.000000  Cost_cpu: 574802043168
      Resp_io: 8283811.000000  Resp_cpu: 574802043168
  ****** trying bitmap/domain indexes ******
 ****** Costing Index CUSTOMER_PK_IDX
  Access Path: index (FullScan)
    Index: CUSTOMER_PK_IDX
    resc_io: 2268.000000  resc_cpu: 232151426
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 2273.943636  Resp: 2273.943636  Degree: 0
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 8298527.317370
          resc: 8298527.317370  resc_io: 8283811.000000  resc_cpu: 574802043168
          resp: 8298527.317370  resp_io: 8283811.000000  resc_cpu: 574802043168
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Join Card:  3087.351958 = outer (1307.756551) * inner (1080000.000000) * sel (2.1859e-06)
Join Card - Rounded: 3087 Computed: 3087.351958
Grouping column cardinality [ CD_GENDER]    2
Grouping column cardinality [CD_MARITAL]    5
Grouping column cardinality [CD_EDUCATI]    7
Grouping column cardinality [CD_PURCHAS]    9500
Grouping column cardinality [CD_CREDIT_]    4
Grouping column cardinality [CD_DEP_COU]    6
Grouping column cardinality [CD_DEP_EMP]    6
Grouping column cardinality [CD_DEP_COL]    6
  Outer table:  CUSTOMER_ADDRESS  Alias: CA
    resc: 3579.864371  card 1307.756551  bytes:   deg: 1  resp: 3579.864371
  Inner table:  CUSTOMER  Alias: C
    resc: 6343.174339  card: 1080000.000000  bytes:   deg: 1  resp: 6343.174339
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 6 Row size:     34 Total Rows:           1308
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39668949
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 3835 Row size:     29 Total Rows:        1080000
      Initial runs:   2 Merge passes:  1 IO Cost / pass:       2078
      Total IO sort cost: 5913.000000      Total CPU sort cost: 1108751040
      Total Temp space used: 60826000
  SM join: Resc: 15865.441029  Resp: 15865.441029  [multiMatchCost=0.000000]
SM Join
  SM cost: 15865.441029 
     resc: 15865.441029 resc_io: 15815.000000 resc_cpu: 1970167258
     resp: 15865.441029 resp_io: 15815.000000 resp_cpu: 1970167258
SM Join (with index on outer)
 ****** Costing Index CA_ADDRESS_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (FullScan)
    Index: CA_ADDRESS_PK_IDX
    resc_io: 13412.000000  resc_cpu: 494985634
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 13424.672825  Resp: 13424.672825  Degree: 1
  Outer table:  CUSTOMER_ADDRESS  Alias: CA
    resc: 13424.672825  card 1307.756551  bytes:   deg: 1  resp: 13424.672825
  Inner table:  CUSTOMER  Alias: C
    resc: 6343.174339  card: 1080000.000000  bytes:   deg: 1  resp: 6343.174339
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 3835 Row size:     29 Total Rows:        1080000
      Initial runs:   2 Merge passes:  1 IO Cost / pass:       2078
      Total IO sort cost: 5913.000000      Total CPU sort cost: 1108751040
      Total Temp space used: 60826000
  SM join: Resc: 25709.233862  Resp: 25709.233862  [multiMatchCost=0.000000]
  Outer table:  CUSTOMER_ADDRESS  Alias: CA
    resc: 3579.864371  card 1307.756551  bytes:   deg: 1  resp: 3579.864371
  Inner table:  CUSTOMER  Alias: C
    resc: 6343.174339  card: 1080000.000000  bytes:   deg: 1  resp: 6343.174339
    using dmeth: 2  #groups: 1
    Cost per ptn: 2.785445  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 6  probefrag: 3824  ppasses: 1
  Hash join: Resc: 9925.824155  Resp: 9925.824155  [multiMatchCost=0.000000]
HA Join
  HA cost: 9925.824155  
     resc: 9925.824155 resc_io: 9902.000000 resc_cpu: 930543470
     resp: 9925.824155 resp_io: 9902.000000 resp_cpu: 930543470
Best:: JoinMethod: Hash
       Cost: 9925.824155  Degree: 1  Resp: 9925.824155  Card: 3087.351958 Bytes: 

***************
Now joining: CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS]#2
***************
NL Join
  Outer table: Card: 3087.351958  Cost: 9925.824155  Resp: 9925.824155  Degree: 1  Bytes: 
Access path analysis for CUSTOMER_DEMOGRAPHICS
  Scan IO  Cost (Disk) =   4672.958860
  Scan CPU Cost (Disk) =   718321325.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000001 flag = 2048  ("CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK"="C"."C_CURRENT_CDEMO_SK")
  Total Scan IO  Cost  =   4672.958860 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 1920800.000000 (#rows))
                       =   4672.958860
  Total Scan CPU  Cost =   718321325.760000 (scan (Disk))
                         + 96040000.000000 (cpu filter eval) (= 50.000000 (per row) * 1920800.000000 (#rows))
                       =   814361325.760000
  Inner table: CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
  Access Path: TableScan
    NL Join:  Cost: 14499712.577189  Resp: 14499712.577189  Degree: 1
      Cost_io: 14435326.000000  Cost_cpu: 2514863956091
      Resp_io: 14435326.000000  Resp_cpu: 2514863956091
 ****** Costing Index CD_DEMO_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: CD_DEMO_PK_IDX
    resc_io: 2.000000  resc_cpu: 16453
    ix_sel: 5.2062e-07  ix_sel_with_filters: 5.2062e-07 
    NL Join : Cost: 16101.124503  Resp: 16101.124503  Degree: 1
      Cost_io: 16076.000000  Cost_cpu: 981333510
      Resp_io: 16076.000000  Resp_cpu: 981333510
 ****** Costing Index CD_DEMO_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: CD_DEMO_PK_IDX
    resc_io: 2.000000  resc_cpu: 16453
    ix_sel: 5.2062e-07  ix_sel_with_filters: 5.2062e-07 
    NL Join : Cost: 16101.124503  Resp: 16101.124503  Degree: 1
      Cost_io: 16076.000000  Cost_cpu: 981333510
      Resp_io: 16076.000000  Resp_cpu: 981333510
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 16101.124503
          resc: 16101.124503  resc_io: 16076.000000  resc_cpu: 981333510
          resp: 16101.124503  resp_io: 16076.000000  resc_cpu: 981333510
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Join Card:  3087.351958 = outer (3087.351958) * inner (1920800.000000) * sel (5.2062e-07)
Join Card - Rounded: 3087 Computed: 3087.351958
Grouping column cardinality [ CD_GENDER]    2
Grouping column cardinality [CD_MARITAL]    5
Grouping column cardinality [CD_EDUCATI]    7
Grouping column cardinality [CD_PURCHAS]    9500
Grouping column cardinality [CD_CREDIT_]    4
Grouping column cardinality [CD_DEP_COU]    6
Grouping column cardinality [CD_DEP_EMP]    6
Grouping column cardinality [CD_DEP_COL]    6
  Outer table:  CUSTOMER  Alias: C
    resc: 9925.824155  card 3087.351958  bytes:   deg: 1  resp: 9925.824155
  Inner table:  CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
    resc: 4693.390757  card: 1920800.000000  bytes:   deg: 1  resp: 4693.390757
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 20 Row size:     52 Total Rows:           3087
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 40671077
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 16462 Row size:     70 Total Rows:        1920800
      Initial runs:   2 Merge passes:  1 IO Cost / pass:       8918
      Total IO sort cost: 25380.000000      Total CPU sort cost: 2250842275
      Total Temp space used: 294134000
  SM join: Resc: 40057.883175  Resp: 40057.883175  [multiMatchCost=0.000000]
SM Join
  SM cost: 40057.883175 
     resc: 40057.883175 resc_io: 39957.000000 resc_cpu: 3940378148
     resp: 40057.883175 resp_io: 39957.000000 resp_cpu: 3940378148
  Outer table:  CUSTOMER  Alias: C
    resc: 9925.824155  card 3087.351958  bytes:   deg: 1  resp: 9925.824155
  Inner table:  CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
    resc: 4693.390757  card: 1920800.000000  bytes:   deg: 1  resp: 4693.390757
    using dmeth: 2  #groups: 1
    Cost per ptn: 4.944927  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 19  probefrag: 15476  ppasses: 1
  Hash join: Resc: 14624.159839  Resp: 14624.159839  [multiMatchCost=0.000000]
HA Join
  HA cost: 14624.159839  
     resc: 14624.159839 resc_io: 14577.000000 resc_cpu: 1842007846
     resp: 14624.159839 resp_io: 14577.000000 resp_cpu: 1842007846
GROUP BY sort

GROUP BY/Correlated Subquery Filter adjustment factor: 0.088388
GROUP BY cardinality:  3087.000000, TABLE cardinality:  3087.000000
Vector group by not costed because no SYS_OP_XLATE_USE in group by.
kdmoGByPushdownValid: more than one table in group by    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 43 Row size:     112 Total Rows:           3087
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 40671077
      Total Temp space used: 0
Best:: JoinMethod: Hash
       Cost: 14625.201117  Degree: 1  Resp: 14625.201117  Card: 3087.351958 Bytes: 
***********************
Best so far:  Table#: 0  cost: 3579.864371  card: 1307.756551  bytes: 27468.000000
              Table#: 1  cost: 9925.824155  card: 3087.351958  bytes: 117306.000000
              Table#: 2  cost: 14625.201117  card: 3087.351958  bytes: 284004.000000
***********************
Join order[2]:  CUSTOMER_ADDRESS[CA]#0  CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS]#2  CUSTOMER[C]#1

***************
Now joining: CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS]#2
***************
NL Join
  Outer table: Card: 1307.756551  Cost: 3579.864371  Resp: 3579.864371  Degree: 1  Bytes: 
Access path analysis for CUSTOMER_DEMOGRAPHICS
  Scan IO  Cost (Disk) =   4672.959480
  Scan CPU Cost (Disk) =   718321325.760000
  Total Scan IO  Cost  =   4672.959480 (scan (Disk))
                       =   4672.959480
  Total Scan CPU  Cost =   718321325.760000 (scan (Disk))
                       =   718321325.760000
  Inner table: CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
  Access Path: TableScan
    NL Join:  Cost: 6139865.974310  Resp: 6139865.974310  Degree: 1
      Cost_io: 6115801.000000  Cost_cpu: 939949584825
      Resp_io: 6115801.000000  Resp_cpu: 939949584825
  ****** trying bitmap/domain indexes ******
 ****** Costing Index CD_DEMO_PK_IDX
  Access Path: index (FullScan)
    Index: CD_DEMO_PK_IDX
    resc_io: 4140.000000  resc_cpu: 413642762
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 4150.590251  Resp: 4150.590251  Degree: 0
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 6139865.974310
          resc: 6139865.974310  resc_io: 6115801.000000  resc_cpu: 939949584825
          resp: 6139865.974310  resp_io: 6115801.000000  resc_cpu: 939949584825
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Join Card:  2511938782.753941 = outer (1307.756551) * inner (1920800.000000) * sel (1.000000)
Join Card - Rounded: 2511938783 Computed: 2511938782.753941
Grouping column cardinality [ CD_GENDER]    2
Grouping column cardinality [CD_MARITAL]    5
Grouping column cardinality [CD_EDUCATI]    7
Grouping column cardinality [CD_PURCHAS]    9500
Grouping column cardinality [CD_CREDIT_]    4
Grouping column cardinality [CD_DEP_COU]    6
Grouping column cardinality [CD_DEP_EMP]    6
Grouping column cardinality [CD_DEP_COL]    6
Join order aborted: cost > best plan cost
***********************
Join order[3]:  CUSTOMER[C]#1  CUSTOMER_ADDRESS[CA]#0  CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS]#2

***************
Now joining: CUSTOMER_ADDRESS[CA]#0
***************
NL Join
  Outer table: Card: 1080000.000000  Cost: 6343.174339  Resp: 6343.174339  Degree: 1  Bytes: 
Access path analysis for CUSTOMER_ADDRESS
  Scan IO  Cost (Disk) =   3567.958334
  Scan CPU Cost (Disk) =   250417850.560000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000002 flag = 2048  ("C"."C_CURRENT_ADDR_SK"="CA"."CA_ADDRESS_SK")
    io = 0.000000, cpu = 249.764594, sel = 0.002422 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Chouteau County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Dinwiddie County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Dixie County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Harrisonburg city')
      io = NOCOST, cpu = 50.000000, sel = 0.000538 flag = 2048  ("CA"."CA_COUNTY"='Lowndes County')
  Total Scan IO  Cost  =   3567.958334 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 540000.000000 (#rows))
                       =   3567.958334
  Total Scan CPU  Cost =   250417850.560000 (scan (Disk))
                         + 27000294.822154 (cpu filter eval) (= 50.000546 (per row) * 540000.000000 (#rows))
                       =   277418145.382154
  Inner table: CUSTOMER_ADDRESS  Alias: CA
  Access Path: TableScan
    NL Join:  Cost: 3861072123.013520  Resp: 3861072123.013520  Degree: 1
      Cost_io: 3853401333.000000  Cost_cpu: 299612033469265
      Resp_io: 3853401333.000000  Resp_cpu: 299612033469265
 ****** Costing Index CA_ADDRESS_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: CA_ADDRESS_PK_IDX
    resc_io: 2.000000  resc_cpu: 16683
    ix_sel: 1.8519e-06  ix_sel_with_filters: 1.8519e-06 
    NL Join : Cost: 2166804.459512  Resp: 2166804.459512  Degree: 1
      Cost_io: 2166332.000000  Cost_cpu: 18453712700
      Resp_io: 2166332.000000  Resp_cpu: 18453712700
 ****** Costing Index CA_ADDRESS_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: CA_ADDRESS_PK_IDX
    resc_io: 2.000000  resc_cpu: 16683
    ix_sel: 1.8519e-06  ix_sel_with_filters: 1.8519e-06 
    NL Join : Cost: 2166804.459512  Resp: 2166804.459512  Degree: 1
      Cost_io: 2166332.000000  Cost_cpu: 18453712700
      Resp_io: 2166332.000000  Resp_cpu: 18453712700
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 2166804.459512
          resc: 2166804.459512  resc_io: 2166332.000000  resc_cpu: 18453712700
          resp: 2166804.459512  resp_io: 2166332.000000  resc_cpu: 18453712700
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Join Card:  3087.351958 = outer (1080000.000000) * inner (1307.756551) * sel (2.1859e-06)
Join Card - Rounded: 3087 Computed: 3087.351958
Grouping column cardinality [ CD_GENDER]    2
Grouping column cardinality [CD_MARITAL]    5
Grouping column cardinality [CD_EDUCATI]    7
Grouping column cardinality [CD_PURCHAS]    9500
Grouping column cardinality [CD_CREDIT_]    4
Grouping column cardinality [CD_DEP_COU]    6
Grouping column cardinality [CD_DEP_EMP]    6
Grouping column cardinality [CD_DEP_COL]    6
  Outer table:  CUSTOMER  Alias: C
    resc: 6343.174339  card 1080000.000000  bytes:   deg: 1  resp: 6343.174339
  Inner table:  CUSTOMER_ADDRESS  Alias: CA
    resc: 3579.864371  card: 1307.756551  bytes:   deg: 1  resp: 3579.864371
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 3835 Row size:     29 Total Rows:        1080000
      Initial runs:   2 Merge passes:  1 IO Cost / pass:       2078
      Total IO sort cost: 5913.000000      Total CPU sort cost: 1108751040
      Total Temp space used: 60826000
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 6 Row size:     34 Total Rows:           1308
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39668949
      Total Temp space used: 0
  SM join: Resc: 15865.441029  Resp: 15865.441029  [multiMatchCost=0.000000]
SM Join
  SM cost: 15865.441029 
     resc: 15865.441029 resc_io: 15815.000000 resc_cpu: 1970167258
     resp: 15865.441029 resp_io: 15815.000000 resp_cpu: 1970167258
  Outer table:  CUSTOMER  Alias: C
    resc: 6343.174339  card 1080000.000000  bytes:   deg: 1  resp: 6343.174339
  Inner table:  CUSTOMER_ADDRESS  Alias: CA
    resc: 3579.864371  card: 1307.756551  bytes:   deg: 1  resp: 3579.864371
    using dmeth: 2  #groups: 1
    Cost per ptn: 1487.571924  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 3824  probefrag: 6  ppasses: 1
  Hash join: Resc: 11410.615189  Resp: 11410.615189  [multiMatchCost=0.004555]
  Outer table:  CUSTOMER_ADDRESS  Alias: CA
    resc: 3579.864371  card 1307.756551  bytes:   deg: 1  resp: 3579.864371
  Inner table:  CUSTOMER  Alias: C
    resc: 6343.174339  card: 1080000.000000  bytes:   deg: 1  resp: 6343.174339
    using dmeth: 2  #groups: 1
    Cost per ptn: 2.785445  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 6  probefrag: 3824  ppasses: 1
  Hash join: Resc: 9925.824155  Resp: 9925.824155  [multiMatchCost=0.000000]
HA Join
  HA cost: 9925.824155 swapped 
     resc: 9925.824155 resc_io: 9902.000000 resc_cpu: 930543470
     resp: 9925.824155 resp_io: 9902.000000 resp_cpu: 930543470
Best:: JoinMethod: Hash
       Cost: 9925.824155  Degree: 1  Resp: 9925.824155  Card: 3087.351958 Bytes: 

***************
Now joining: CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS]#2
***************
NL Join
  Outer table: Card: 3087.351958  Cost: 9925.824155  Resp: 9925.824155  Degree: 1  Bytes: 
Access path analysis for CUSTOMER_DEMOGRAPHICS
  Scan IO  Cost (Disk) =   4672.958860
  Scan CPU Cost (Disk) =   718321325.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000001 flag = 2064  ("CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK"="C"."C_CURRENT_CDEMO_SK")
  Total Scan IO  Cost  =   4672.958860 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 1920800.000000 (#rows))
                       =   4672.958860
  Total Scan CPU  Cost =   718321325.760000 (scan (Disk))
                         + 96040000.000000 (cpu filter eval) (= 50.000000 (per row) * 1920800.000000 (#rows))
                       =   814361325.760000
  Inner table: CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
  Access Path: TableScan
    NL Join:  Cost: 14499712.577189  Resp: 14499712.577189  Degree: 1
      Cost_io: 14435326.000000  Cost_cpu: 2514863956091
      Resp_io: 14435326.000000  Resp_cpu: 2514863956091
 ****** Costing Index CD_DEMO_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: CD_DEMO_PK_IDX
    resc_io: 2.000000  resc_cpu: 16453
    ix_sel: 5.2062e-07  ix_sel_with_filters: 5.2062e-07 
    NL Join : Cost: 16101.124503  Resp: 16101.124503  Degree: 1
      Cost_io: 16076.000000  Cost_cpu: 981333510
      Resp_io: 16076.000000  Resp_cpu: 981333510
 ****** Costing Index CD_DEMO_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: CD_DEMO_PK_IDX
    resc_io: 2.000000  resc_cpu: 16453
    ix_sel: 5.2062e-07  ix_sel_with_filters: 5.2062e-07 
    NL Join : Cost: 16101.124503  Resp: 16101.124503  Degree: 1
      Cost_io: 16076.000000  Cost_cpu: 981333510
      Resp_io: 16076.000000  Resp_cpu: 981333510
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 16101.124503
          resc: 16101.124503  resc_io: 16076.000000  resc_cpu: 981333510
          resp: 16101.124503  resp_io: 16076.000000  resc_cpu: 981333510
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Join Card:  3087.351958 = outer (3087.351958) * inner (1920800.000000) * sel (5.2062e-07)
Join Card - Rounded: 3087 Computed: 3087.351958
Grouping column cardinality [ CD_GENDER]    2
Grouping column cardinality [CD_MARITAL]    5
Grouping column cardinality [CD_EDUCATI]    7
Grouping column cardinality [CD_PURCHAS]    9500
Grouping column cardinality [CD_CREDIT_]    4
Grouping column cardinality [CD_DEP_COU]    6
Grouping column cardinality [CD_DEP_EMP]    6
Grouping column cardinality [CD_DEP_COL]    6
  Outer table:  CUSTOMER_ADDRESS  Alias: CA
    resc: 9925.824155  card 3087.351958  bytes:   deg: 1  resp: 9925.824155
  Inner table:  CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
    resc: 4693.390757  card: 1920800.000000  bytes:   deg: 1  resp: 4693.390757
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 20 Row size:     52 Total Rows:           3087
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 40671077
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 16462 Row size:     70 Total Rows:        1920800
      Initial runs:   2 Merge passes:  1 IO Cost / pass:       8918
      Total IO sort cost: 25380.000000      Total CPU sort cost: 2250842275
      Total Temp space used: 294134000
  SM join: Resc: 40057.883175  Resp: 40057.883175  [multiMatchCost=0.000000]
SM Join
  SM cost: 40057.883175 
     resc: 40057.883175 resc_io: 39957.000000 resc_cpu: 3940378148
     resp: 40057.883175 resp_io: 39957.000000 resp_cpu: 3940378148
  Outer table:  CUSTOMER_ADDRESS  Alias: CA
    resc: 9925.824155  card 3087.351958  bytes:   deg: 1  resp: 9925.824155
  Inner table:  CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
    resc: 4693.390757  card: 1920800.000000  bytes:   deg: 1  resp: 4693.390757
    using dmeth: 2  #groups: 1
    Cost per ptn: 4.944927  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 19  probefrag: 15476  ppasses: 1
  Hash join: Resc: 14624.159839  Resp: 14624.159839  [multiMatchCost=0.000000]
HA Join
  HA cost: 14624.159839  
     resc: 14624.159839 resc_io: 14577.000000 resc_cpu: 1842007846
     resp: 14624.159839 resp_io: 14577.000000 resp_cpu: 1842007846
GROUP BY sort

GROUP BY/Correlated Subquery Filter adjustment factor: 0.088388
GROUP BY cardinality:  3087.000000, TABLE cardinality:  3087.000000
Vector group by not costed because no SYS_OP_XLATE_USE in group by.
kdmoGByPushdownValid: more than one table in group by    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 43 Row size:     112 Total Rows:           3087
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 40671077
      Total Temp space used: 0
Join order aborted: cost > best plan cost
***********************
Join order[4]:  CUSTOMER[C]#1  CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS]#2  CUSTOMER_ADDRESS[CA]#0

***************
Now joining: CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS]#2
***************
NL Join
  Outer table: Card: 1080000.000000  Cost: 6343.174339  Resp: 6343.174339  Degree: 1  Bytes: 
Access path analysis for CUSTOMER_DEMOGRAPHICS
  Scan IO  Cost (Disk) =   4672.958334
  Scan CPU Cost (Disk) =   718321325.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000001 flag = 2064  ("CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK"="C"."C_CURRENT_CDEMO_SK")
  Total Scan IO  Cost  =   4672.958334 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 1920800.000000 (#rows))
                       =   4672.958334
  Total Scan CPU  Cost =   718321325.760000 (scan (Disk))
                         + 96040000.000000 (cpu filter eval) (= 50.000000 (per row) * 1920800.000000 (#rows))
                       =   814361325.760000
  Inner table: CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
  Access Path: TableScan
    NL Join:  Cost: 5069318925.410715  Resp: 5069318925.410715  Degree: 1
      Cost_io: 5046801333.000000  Cost_cpu: 879510668277338
      Resp_io: 5046801333.000000  Resp_cpu: 879510668277338
 ****** Costing Index CD_DEMO_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: CD_DEMO_PK_IDX
    resc_io: 2.000000  resc_cpu: 16453
    ix_sel: 5.2062e-07  ix_sel_with_filters: 5.2062e-07 
    NL Join : Cost: 2166798.106382  Resp: 2166798.106382  Degree: 1
      Cost_io: 2166332.000000  Cost_cpu: 18205566939
      Resp_io: 2166332.000000  Resp_cpu: 18205566939
 ****** Costing Index CD_DEMO_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: CD_DEMO_PK_IDX
    resc_io: 2.000000  resc_cpu: 16453
    ix_sel: 5.2062e-07  ix_sel_with_filters: 5.2062e-07 
    NL Join : Cost: 2166798.106382  Resp: 2166798.106382  Degree: 1
      Cost_io: 2166332.000000  Cost_cpu: 18205566939
      Resp_io: 2166332.000000  Resp_cpu: 18205566939
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 2166798.106382
          resc: 2166798.106382  resc_io: 2166332.000000  resc_cpu: 18205566939
          resp: 2166798.106382  resp_io: 2166332.000000  resc_cpu: 18205566939
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Join Card:  1080000.000000 = outer (1080000.000000) * inner (1920800.000000) * sel (5.2062e-07)
Join Card - Rounded: 1080000 Computed: 1080000.000000
Grouping column cardinality [ CD_GENDER]    2
Grouping column cardinality [CD_MARITAL]    5
Grouping column cardinality [CD_EDUCATI]    7
Grouping column cardinality [CD_PURCHAS]    9500
Grouping column cardinality [CD_CREDIT_]    4
Grouping column cardinality [CD_DEP_COU]    6
Grouping column cardinality [CD_DEP_EMP]    6
Grouping column cardinality [CD_DEP_COL]    6
  Outer table:  CUSTOMER  Alias: C
    resc: 6343.174339  card 1080000.000000  bytes:   deg: 1  resp: 6343.174339
  Inner table:  CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
    resc: 4693.390757  card: 1920800.000000  bytes:   deg: 1  resp: 4693.390757
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 3835 Row size:     29 Total Rows:        1080000
      Initial runs:   2 Merge passes:  1 IO Cost / pass:       2078
      Total IO sort cost: 5913.000000      Total CPU sort cost: 1108751040
      Total Temp space used: 60826000
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 16462 Row size:     70 Total Rows:        1920800
      Initial runs:   2 Merge passes:  1 IO Cost / pass:       8918
      Total IO sort cost: 25380.000000      Total CPU sort cost: 2250842275
      Total Temp space used: 294134000
  SM join: Resc: 42415.578780  Resp: 42415.578780  [multiMatchCost=0.000000]
SM Join
  SM cost: 42415.578780 
     resc: 42415.578780 resc_io: 42300.000000 resc_cpu: 4514371179
     resp: 42415.578780 resp_io: 42300.000000 resp_cpu: 4514371179
  Outer table:  CUSTOMER  Alias: C
    resc: 6343.174339  card 1080000.000000  bytes:   deg: 1  resp: 6343.174339
  Inner table:  CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
    resc: 4693.390757  card: 1920800.000000  bytes:   deg: 1  resp: 4693.390757
    using dmeth: 2  #groups: 1
    Cost per ptn: 7488.025504  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 3824  probefrag: 15476  ppasses: 1
  Hash join: Resc: 18524.590599  Resp: 18524.590599  [multiMatchCost=0.000000]
HA Join
  HA cost: 18524.590599  
     resc: 18524.590599 resc_io: 18479.000000 resc_cpu: 1780715180
     resp: 18524.590599 resp_io: 18479.000000 resp_cpu: 1780715180
Join order aborted: cost > best plan cost
***********************
Join order[5]:  CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS]#2  CUSTOMER_ADDRESS[CA]#0  CUSTOMER[C]#1

***************
Now joining: CUSTOMER_ADDRESS[CA]#0
***************
NL Join
  Outer table: Card: 1920800.000000  Cost: 4693.390757  Resp: 4693.390757  Degree: 1  Bytes: 
Access path analysis for CUSTOMER_ADDRESS
  Scan IO  Cost (Disk) =   3567.958334
  Scan CPU Cost (Disk) =   250417850.560000
  Cost of predicates:
    io = 0.000000, cpu = 249.764594, sel = 0.002422 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Chouteau County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Dinwiddie County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Dixie County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Harrisonburg city')
      io = NOCOST, cpu = 50.000000, sel = 0.000538 flag = 2048  ("CA"."CA_COUNTY"='Lowndes County')
  Total Scan IO  Cost  =   3567.958334 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 540000.000000 (#rows))
                       =   3567.958334
  Total Scan CPU  Cost =   250417850.560000 (scan (Disk))
                         + 134872880.645405 (cpu filter eval) (= 249.764594 (per row) * 540000.000000 (#rows))
                       =   385290731.205405
  Inner table: CUSTOMER_ADDRESS  Alias: CA
  Access Path: TableScan
    NL Join:  Cost: 6872286545.457758  Resp: 6872286545.457758  Degree: 1
      Cost_io: 6853339043.000000  Cost_cpu: 740067154820668
      Resp_io: 6853339043.000000  Resp_cpu: 740067154820668
  ****** trying bitmap/domain indexes ******
 ****** Costing Index CA_ADDRESS_PK_IDX
  Access Path: index (FullScan)
    Index: CA_ADDRESS_PK_IDX
    resc_io: 1129.000000  resc_cpu: 116040106
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1131.970906  Resp: 1131.970906  Degree: 0
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 6872286545.457758
          resc: 6872286545.457758  resc_io: 6853339043.000000  resc_cpu: 740067154820668
          resp: 6872286545.457758  resp_io: 6853339043.000000  resc_cpu: 740067154820668
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Join Card:  2511938782.753941 = outer (1920800.000000) * inner (1307.756551) * sel (1.000000)
Join Card - Rounded: 2511938783 Computed: 2511938782.753941
Grouping column cardinality [ CD_GENDER]    2
Grouping column cardinality [CD_MARITAL]    5
Grouping column cardinality [CD_EDUCATI]    7
Grouping column cardinality [CD_PURCHAS]    9500
Grouping column cardinality [CD_CREDIT_]    4
Grouping column cardinality [CD_DEP_COU]    6
Grouping column cardinality [CD_DEP_EMP]    6
Grouping column cardinality [CD_DEP_COL]    6
Join order aborted: cost > best plan cost
***********************
Join order[6]:  CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS]#2  CUSTOMER[C]#1  CUSTOMER_ADDRESS[CA]#0

***************
Now joining: CUSTOMER[C]#1
***************
NL Join
  Outer table: Card: 1920800.000000  Cost: 4693.390757  Resp: 4693.390757  Degree: 1  Bytes: 
Access path analysis for CUSTOMER
  Scan IO  Cost (Disk) =   6330.458334
  Scan CPU Cost (Disk) =   414856538.560000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000001 flag = 2064  ("CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK"="C"."C_CURRENT_CDEMO_SK")
    io = NOCOST, cpu = 20.000000, sel = 0.050000 flag = 2562  ( EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM" WHERE "SS"."SS_CUSTOMER_SK"=:B1 AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND ( EXISTS (SELECT 0 FROM "WEB_SALES" "WEB_SALES","DATE_DIM" "DATE_DIM" WHERE "WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B2 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4) OR  EXISTS (SELECT 0 FROM "CATALOG_SALES" "CATALOG_SALES","DATE_DIM" "DATE_DIM" WHERE "CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B3 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4))))
  Total Scan IO  Cost  =   6330.458334 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 1080000.000000 (#rows))
                       =   6330.458334
  Total Scan CPU  Cost =   414856538.560000 (scan (Disk))
                         + 24300000.000000 (cpu filter eval) (= 22.500000 (per row) * 1080000.000000 (#rows))
                       =   439156538.560000
  Inner table: CUSTOMER  Alias: C
  Access Path: TableScan
    NL Join:  Cost: 12181145510.106905  Resp: 12181145510.106905  Degree: 1
      Cost_io: 12159549043.000000  Cost_cpu: 843532597587374
      Resp_io: 12159549043.000000  Resp_cpu: 843532597587374
  ****** trying bitmap/domain indexes ******
 ****** Costing Index CUSTOMER_PK_IDX
  Access Path: index (FullScan)
    Index: CUSTOMER_PK_IDX
    resc_io: 2268.000000  resc_cpu: 232151426
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 2273.943636  Resp: 2273.943636  Degree: 0
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 12181145510.106905
          resc: 12181145510.106905  resc_io: 12159549043.000000  resc_cpu: 843532597587374
          resp: 12181145510.106905  resp_io: 12159549043.000000  resc_cpu: 843532597587374
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Join Card:  1080000.000000 = outer (1920800.000000) * inner (1080000.000000) * sel (5.2062e-07)
Join Card - Rounded: 1080000 Computed: 1080000.000000
Grouping column cardinality [ CD_GENDER]    2
Grouping column cardinality [CD_MARITAL]    5
Grouping column cardinality [CD_EDUCATI]    7
Grouping column cardinality [CD_PURCHAS]    9500
Grouping column cardinality [CD_CREDIT_]    4
Grouping column cardinality [CD_DEP_COU]    6
Grouping column cardinality [CD_DEP_EMP]    6
Grouping column cardinality [CD_DEP_COL]    6
  Outer table:  CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
    resc: 4693.390757  card 1920800.000000  bytes:   deg: 1  resp: 4693.390757
  Inner table:  CUSTOMER  Alias: C
    resc: 6343.174339  card: 1080000.000000  bytes:   deg: 1  resp: 6343.174339
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 16462 Row size:     70 Total Rows:        1920800
      Initial runs:   2 Merge passes:  1 IO Cost / pass:       8918
      Total IO sort cost: 25380.000000      Total CPU sort cost: 2250842275
      Total Temp space used: 294134000
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 3835 Row size:     29 Total Rows:        1080000
      Initial runs:   2 Merge passes:  1 IO Cost / pass:       2078
      Total IO sort cost: 5913.000000      Total CPU sort cost: 1108751040
      Total Temp space used: 60826000
  SM join: Resc: 42415.578780  Resp: 42415.578780  [multiMatchCost=0.000000]
SM Join
  SM cost: 42415.578780 
     resc: 42415.578780 resc_io: 42300.000000 resc_cpu: 4514371179
     resp: 42415.578780 resp_io: 42300.000000 resp_cpu: 4514371179
SM Join (with index on outer)
 ****** Costing Index CD_DEMO_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (FullScan)
    Index: CD_DEMO_PK_IDX
    resc_io: 799946.000000  resc_cpu: 6772415442
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 800119.390154  Resp: 800119.390154  Degree: 1
  Outer table:  CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
    resc: 800119.390154  card 1920800.000000  bytes:   deg: 1  resp: 800119.390154
  Inner table:  CUSTOMER  Alias: C
    resc: 6343.174339  card: 1080000.000000  bytes:   deg: 1  resp: 6343.174339
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 3835 Row size:     29 Total Rows:        1080000
      Initial runs:   2 Merge passes:  1 IO Cost / pass:       2078
      Total IO sort cost: 5913.000000      Total CPU sort cost: 1108751040
      Total Temp space used: 60826000
  SM join: Resc: 812403.951192  Resp: 812403.951192  [multiMatchCost=0.000000]
  Outer table:  CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
    resc: 4693.390757  card 1920800.000000  bytes:   deg: 1  resp: 4693.390757
  Inner table:  CUSTOMER  Alias: C
    resc: 6343.174339  card: 1080000.000000  bytes:   deg: 1  resp: 6343.174339
    using dmeth: 2  #groups: 1
    Cost per ptn: 7486.949178  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 15476  probefrag: 3824  ppasses: 1
  Hash join: Resc: 18523.514274  Resp: 18523.514274  [multiMatchCost=0.000000]
  Outer table:  CUSTOMER  Alias: C
    resc: 6343.174339  card 1080000.000000  bytes:   deg: 1  resp: 6343.174339
  Inner table:  CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
    resc: 4693.390757  card: 1920800.000000  bytes:   deg: 1  resp: 4693.390757
    using dmeth: 2  #groups: 1
    Cost per ptn: 7488.025504  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 3824  probefrag: 15476  ppasses: 1
  Hash join: Resc: 18524.590599  Resp: 18524.590599  [multiMatchCost=0.000000]
HA Join
  HA cost: 18524.590599 swapped 
     resc: 18524.590599 resc_io: 18479.000000 resc_cpu: 1780715180
     resp: 18524.590599 resp_io: 18479.000000 resp_cpu: 1780715180
Join order aborted: cost > best plan cost
***********************
(newjo-stop-1) k:0, spcnt:0, perm:6, maxperm:2000

*********************************
Number of join permutations tried: 6
*********************************
Enumerating distribution method (advanced)
--- Distribution method for 
join between CA[CUSTOMER_ADDRESS](serial) and C[CUSTOMER](serial); jm = 1; right side access path = TableScan
---- serial Hash-Join -> NONE
--- Distribution method for 
join between C[CUSTOMER](serial) and CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS](serial); jm = 1; right side access path = TableScan
---- serial Hash-Join -> NONE

kkoaccsqf: Current query block SEL$1 (#1) is serial
kkoaccsqf: correlated subquery query block SEL$2 (#2) in filter               : serial
Final adjusted join cardinality: 1.000000, sq. fil. factor: 1080000.000000
(newjo-save)    [1 2 0 ]

GROUP BY/Correlated Subquery Filter adjustment factor: 0.088388
GROUP BY cardinality:  1.000000, TABLE cardinality:  1.000000
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     112 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39058824
      Total Temp space used: 0
LORE: Or-Expansion validity checks failed on query block SEL$1 (#1) because Cost based OR expansion enabled
Transfer Optimizer annotations for query block SEL$1 (#1)
Final cost for query block SEL$1 (#1) - All Rows Plan:
  Best join order: 1
  Cost: 34697.149716  Degree: 1  Card: 1.000000  Bytes: 284096.000000
  Resc: 34697.149716  Resc_io: 34644.787726  Resc_cpu: 2045197717
  Resp: 34697.149716  Resp_io: 34644.787726  Resc_cpu: 2045197717
kkoqbc-subheap (delete addr=0x7f04725139a8, in-use=107888, alloc=125296)
kkoqbc-end:
        :
    call(in-use=333512, alloc=469304), compile(in-use=1067552, alloc=1070728), execution(in-use=21776, alloc=24312)

kkoqbc: finish optimizing query block SEL$1 (#1)
CBQT: Saved costed qb# 4 (SEL$3), key = SEL$3_00010000_0
CBQT: Saved costed qb# 3 (SEL$4), key = SEL$4_00010000_0
CBQT: Saved costed qb# 2 (SEL$2), key = SEL$2_00010000_0
CBQT: Saved costed qb# 1 (SEL$1), key = SEL$1_00000000_0
GBP: Updated best state, Cost = 34697.149716
GBP: Starting iteration 2, state space = (1,2,3) : (F,F,0)
Registered qb: SEL$6B22DB24 0x7254ed78 (QUERY BLOCK TABLES CHANGED SEL$1)
---------------------
QUERY BLOCK SIGNATURE
---------------------
  signature (): qb_name=SEL$6B22DB24 nbfros=2 flg=0
    fro(0): flg=0 objn=74168 hint_alias="C"@"SEL$1"
    fro(1): flg=5 objn=0 hint_alias="VW_GBF_1"@"SEL$6B22DB24"

Registered qb: SEL$9AE0327A 0x7226aaf8 (SPLIT/MERGE QUERY BLOCKS SEL$6B22DB24)
---------------------
QUERY BLOCK SIGNATURE
---------------------
  signature (): qb_name=SEL$9AE0327A nbfros=2 flg=0
    fro(0): flg=0 objn=74169 hint_alias="CA"@"SEL$1"
    fro(1): flg=0 objn=74170 hint_alias="CUSTOMER_DEMOGRAPHICS"@"SEL$1"

Registered qb: SEL$B7DF437B 0x7254ed78 (UNKNOWN QUERY BLOCK ORIGIN SEL$1; SEL$1; LIST 1)
---------------------
QUERY BLOCK SIGNATURE
---------------------
  signature (): qb_name=SEL$B7DF437B nbfros=2 flg=0
    fro(0): flg=0 objn=74168 hint_alias="C"@"SEL$1"
    fro(1): flg=1 objn=0 hint_alias="VW_GBF_1"@"SEL$6B22DB24"

GBP: Transformed query
******* UNPARSED QUERY IS *******
SELECT "VW_GBF_1"."ITEM_9" "CD_GENDER","VW_GBF_1"."ITEM_10" "CD_MARITAL_STATUS","VW_GBF_1"."ITEM_11" "CD_EDUCATION_STATUS",SUM("VW_GBF_1"."ITEM_3") "CNT1","VW_GBF_1"."ITEM_12" "CD_PURCHASE_ESTIMATE",SUM("VW_GBF_1"."ITEM_4") "CNT2","VW_GBF_1"."ITEM_13" "CD_CREDIT_RATING",SUM("VW_GBF_1"."ITEM_5") "CNT3","VW_GBF_1"."ITEM_14" "CD_DEP_COUNT",SUM("VW_GBF_1"."ITEM_6") "CNT4","VW_GBF_1"."ITEM_15" "CD_DEP_EMPLOYED_COUNT",SUM("VW_GBF_1"."ITEM_7") "CNT5","VW_GBF_1"."ITEM_16" "CD_DEP_COLLEGE_COUNT",SUM("VW_GBF_1"."ITEM_8") "CNT6" FROM  (SELECT "CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK" "ITEM_1","CA"."CA_ADDRESS_SK" "ITEM_2",COUNT(*) "ITEM_3",COUNT(*) "ITEM_4",COUNT(*) "ITEM_5",COUNT(*) "ITEM_6",COUNT(*) "ITEM_7",COUNT(*) "ITEM_8","CUSTOMER_DEMOGRAPHICS"."CD_GENDER" "ITEM_9","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS" "ITEM_10","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS" "ITEM_11","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE" "ITEM_12","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING" "ITEM_13","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT" "ITEM_14","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT" "ITEM_15","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT" "ITEM_16" FROM "TPCDS"."CUSTOMER_DEMOGRAPHICS" "CUSTOMER_DEMOGRAPHICS","TPCDS"."CUSTOMER_ADDRESS" "CA" WHERE "CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County' GROUP BY "CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK","CA"."CA_ADDRESS_SK","CUSTOMER_DEMOGRAPHICS"."CD_GENDER","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT") "VW_GBF_1","TPCDS"."CUSTOMER" "C" WHERE "C"."C_CURRENT_ADDR_SK"="VW_GBF_1"."ITEM_2" AND "VW_GBF_1"."ITEM_1"="C"."C_CURRENT_CDEMO_SK" AND  EXISTS (SELECT 0 FROM "TPCDS"."STORE_SALES" "SS","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="SS"."SS_CUSTOMER_SK" AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3 AND ( EXISTS (SELECT 0 FROM "TPCDS"."WEB_SALES" "WEB_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="WEB_SALES"."WS_BILL_CUSTOMER_SK" AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3) OR  EXISTS (SELECT 0 FROM "TPCDS"."CATALOG_SALES" "CATALOG_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="CATALOG_SALES"."CS_SHIP_CUSTOMER_SK" AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3))) GROUP BY "VW_GBF_1"."ITEM_9","VW_GBF_1"."ITEM_10","VW_GBF_1"."ITEM_11","VW_GBF_1"."ITEM_12","VW_GBF_1"."ITEM_13","VW_GBF_1"."ITEM_14","VW_GBF_1"."ITEM_15","VW_GBF_1"."ITEM_16" ORDER BY "VW_GBF_1"."ITEM_9","VW_GBF_1"."ITEM_10","VW_GBF_1"."ITEM_11","VW_GBF_1"."ITEM_12","VW_GBF_1"."ITEM_13","VW_GBF_1"."ITEM_14","VW_GBF_1"."ITEM_15","VW_GBF_1"."ITEM_16"
FPD: Considering simple filter push in query block SEL$B7DF437B (#1)
"C"."C_CURRENT_ADDR_SK"="VW_GBF_1"."ITEM_2" AND "VW_GBF_1"."ITEM_1"="C"."C_CURRENT_CDEMO_SK" AND  EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM")
FPD: Considering simple filter push in query block SEL$2 (#2)
"SS"."SS_CUSTOMER_SK"=:B1 AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND ( EXISTS (SELECT 0 FROM "WEB_SALES" "WEB_SALES","DATE_DIM" "DATE_DIM") OR  EXISTS (SELECT 0 FROM "CATALOG_SALES" "CATALOG_SALES","DATE_DIM" "DATE_DIM"))
FPD: Considering simple filter push in query block SEL$3 (#4)
"WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B1 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4
try to generate transitive predicate from check constraints for query block SEL$3 (#4)
finally: "WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B1 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1

FPD:   transitive predicates are generated in query block SEL$3 (#4)
"WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B1 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1
FPD: Considering simple filter push in query block SEL$4 (#3)
"CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B1 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4
try to generate transitive predicate from check constraints for query block SEL$4 (#3)
finally: "CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B1 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1

FPD:   transitive predicates are generated in query block SEL$4 (#3)
"CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B1 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1
try to generate transitive predicate from check constraints for query block SEL$2 (#2)
finally: "SS"."SS_CUSTOMER_SK"=:B1 AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND ( EXISTS (SELECT 0 FROM "WEB_SALES" "WEB_SALES","DATE_DIM" "DATE_DIM") OR  EXISTS (SELECT 0 FROM "CATALOG_SALES" "CATALOG_SALES","DATE_DIM" "DATE_DIM"))

try to generate transitive predicate from check constraints for query block SEL$B7DF437B (#1)
finally: "C"."C_CURRENT_ADDR_SK"="VW_GBF_1"."ITEM_2" AND "VW_GBF_1"."ITEM_1"="C"."C_CURRENT_CDEMO_SK" AND  EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM")

FPD: Considering simple filter push in query block SEL$9AE0327A (#5)
"CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County'
try to generate transitive predicate from check constraints for query block SEL$9AE0327A (#5)
finally: "CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County'

OJE: Begin: find best directive for query block SEL$9AE0327A (#5)
OJE: End: finding best directive for query block SEL$9AE0327A (#5)
GBP: Costing transformed query.
*************************
First K Rows: Setup begin
kkoqbc: optimizing query block SEL$3 (#4)
        
        :
    call(in-use=340808, alloc=360176), compile(in-use=1237720, alloc=1240352), execution(in-use=23040, alloc=24312)

kkoqbc-subheap (create addr=0x7f0472562de8)
****************
QUERY BLOCK TEXT
****************
SELECT
                    *
                FROM
                    web_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = ws_bill_customer_sk
                    AND ws_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$3 nbfros=2 flg=0
  fro(0): flg=0 objn=74171 hint_alias="DATE_DIM"@"SEL$3"
  fro(1): flg=0 objn=74195 hint_alias="WEB_SALES"@"SEL$3"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3255 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: DATE_DIM  Alias: DATE_DIM
  #Rows: 73049  SSZ: 0  LGR: 0  #Blks:  1510  AvgRowLen:  128.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): D_DATE_SK(NUMBER)
    AvgLen: 6 NDV: 73049 Nulls: 0 Density: 0.000014 Min: 2415022.000000 Max: 2488070.000000
Index Stats::
  Index: D_DATE_PK_IDX  Col#: 1
  LVLS: 1  #LB: 163  #DK: 73049  LB/K: 1.00  DB/K: 1.00  CLUF: 1402.00  NRW: 73049.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table: WEB_SALES  Alias: WEB_SALES  (Using composite stats)
  #Rows: 35969200  SSZ: 0  LGR: 0  #Blks:  829566  AvgRowLen:  167.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
Index Stats::
  Index: WEB_SALES_IDX2  Col#: 5 1
  LVLS: 3  #LB: 130617  #DK: 2992994  LB/K: 1.00  DB/K: 12.00  CLUF: 35969159.00  NRW: 35969200.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
  Index: WEB_SALES_PK_IDX  Col#: 4 18
  LVLS: 2  #LB: 122502  #DK: 35304428  LB/K: 1.00  DB/K: 1.00  CLUF: 35300490.00  NRW: 35304428.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
try to generate single-table filter predicates from ORs for query block SEL$3 (#4)
finally: "WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B1 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4

=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$3 (#4)
Applicable DS directives:
   dirid = 4510913066701158191, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {(74195)[]; (74171)[]}
   dirid = 14910903719618111890, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74195)[5]}
   dirid = 13969931850241126217, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {C(74171)[7, 9]}
   dirid = 13683461771316641482, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74195)[5]; (74171)[7]}
Checking valid directives for the query block
  SPD: Return code in qosdDSDirSetup: NODIR, estType = QUERY_BLOCK
Return code in qosdSetupDirCtx4QB: EXISTS
=====================================
SPD: END context at query block level
=====================================
Access path analysis for WEB_SALES
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for WEB_SALES[WEB_SALES] 
  SPD: Return code in qosdDSDirSetup: NODIR, estType = TABLE

 kkecdn: Single Table Predicate:"WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B1
NOTE: ignoring histogram of column (WEB_SALES.WS_BILL_CUSTOMER_SK)
      used only for incremental stats maintenance
  Column (#5): WS_BILL_CUSTOMER_SK(NUMBER)
    AvgLen: 6 NDV: 973580 Nulls: 0 Density: 0.000001 Min: 2.000000 Max: 1079999.000000
  Estimated selectivity: 1.0271e-06 , col: #5 
  Table: WEB_SALES  Alias: WEB_SALES
    Card: Original: 35969200.000000  Rounded: 37  Computed: 36.945295  Non Adjusted: 36.945295
  Scan IO  Cost (Disk) =   224676.000000
  Scan CPU Cost (Disk) =   14180620495.040001
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000001 flag = 2048  ("WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B1)
  Total Scan IO  Cost  =   224676.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 35969200.000000 (#rows))
                       =   224676.000000
  Total Scan CPU  Cost =   14180620495.040001 (scan (Disk))
                         + 1798460000.000000 (cpu filter eval) (= 50.000000 (per row) * 35969200.000000 (#rows))
                       =   15979080495.040001
  Access Path: TableScan
    Cost:  225085.102964  Resp: 225085.102964  Degree: 0
      Cost_io: 224676.000000  Cost_cpu: 15979080495
      Resp_io: 224676.000000  Resp_cpu: 15979080495
  Access Path: index (index (FFS))
    Index: WEB_SALES_IDX2
    resc_io: 35377.000000  resc_cpu: 7044945128
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  35557.367571  Resp: 35557.367571  Degree: 1
      Cost_io: 35377.000000  Cost_cpu: 7044945128
      Resp_io: 35377.000000  Resp_cpu: 7044945128
 ****** Costing Index WEB_SALES_IDX2
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER

  Estimated selectivity: 1.0271e-06 , col: #5 
  Access Path: index (IndexOnly)
    Index: WEB_SALES_IDX2
    resc_io: 4.000000  resc_cpu: 35886
    ix_sel: 1.0271e-06  ix_sel_with_filters: 1.0271e-06 
    Cost: 4.000919  Resp: 4.000919  Degree: 1
  Best:: AccessPath: IndexRange
  Index: WEB_SALES_IDX2
         Cost: 4.000919  Degree: 1  Resp: 4.000919  Card: 36.945295  Bytes: 0.000000

Access path analysis for DATE_DIM
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for DATE_DIM[DATE_DIM] 
  SPD: Directive valid: dirid = 13969931850241126217, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {C(74171)[7, 9]}
  SPD: Return code in qosdDSDirSetup: EXISTS, estType = TABLE
  Column (#7): 
    NewDensity:0.000007, OldDensity:0.000007 BktCnt:73049.000000, PopBktCnt:73048.000000, PopValCnt:200, NDV:201
  Column (#7): D_YEAR(NUMBER)
    AvgLen: 4 NDV: 201 Nulls: 0 Density: 0.000007 Min: 1900.000000 Max: 2100.000000
    Histogram: Freq  #Bkts: 201  UncompBkts: 73049  EndPtVals: 201  ActualVal: yes
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 


 kkecdn: Single Table Predicate:"DATE_DIM"."D_YEAR"=2001
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY">=1
  Column (#9): 
    NewDensity:0.038666, OldDensity:0.000007 BktCnt:73049.000000, PopBktCnt:73049.000000, PopValCnt:12, NDV:12
  Column (#9): D_MOY(NUMBER)
    AvgLen: 3 NDV: 12 Nulls: 0 Density: 0.038666 Min: 1.000000 Max: 12.000000
    Histogram: Freq  #Bkts: 12  UncompBkts: 73049  EndPtVals: 12  ActualVal: yes
  Estimated selectivity: 1.000000 , endpoint value predicate, col: #9 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY"<=4
  Estimated selectivity: 0.329224 , endpoint value predicate, col: #9 
  Table: DATE_DIM  Alias: DATE_DIM
    Card: Original: 73049.000000  Rounded: 120  Computed: 120.166840  Non Adjusted: 120.166840
  Scan IO  Cost (Disk) =   411.000000
  Scan CPU Cost (Disk) =   33398564.400000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.004997 flag = 2048  ("DATE_DIM"."D_YEAR"=2001)
    io = NOCOST, cpu = 50.000000, sel = 0.329224 flag = 2048  ("DATE_DIM"."D_MOY"<=4)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("DATE_DIM"."D_MOY">=1)
  Total Scan IO  Cost  =   411.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 73049.000000 (#rows))
                       =   411.000000
  Total Scan CPU  Cost =   33398564.400000 (scan (Disk))
                         + 3676708.342003 (cpu filter eval) (= 50.332083 (per row) * 73049.000000 (#rows))
                       =   37075272.742003
  Access Path: TableScan
    Cost:  411.949216  Resp: 411.949216  Degree: 0
      Cost_io: 411.000000  Cost_cpu: 37075273
      Resp_io: 411.000000  Resp_cpu: 37075273
  Best:: AccessPath: TableScan
         Cost: 411.949216  Degree: 1  Resp: 411.949216  Card: 120.166840  Bytes: 0.000000

***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE: Checking validity of partial join eval on query block SEL$3 (#4)
PJE: Passed validity of partial join eval by query block SEL$3 (#4)
number: [0]
PJE: Partial join eval conversion for query block SEL$3 (#4).
PJE: Table marked for partial join eval: DATE_DIM[DATE_DIM]#1
***********************
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  WEB_SALES[WEB_SALES]#0  DATE_DIM[DATE_DIM]#1

***************
Now joining: DATE_DIM[DATE_DIM]#1
***************
NL Join
  Outer table: Card: 36.945295  Cost: 4.000919  Resp: 4.000919  Degree: 1  Bytes: 
Access path analysis for DATE_DIM
  Scan IO  Cost (Disk) =   409.000000
  Scan CPU Cost (Disk) =   33398564.400000
NOTE: ignoring histogram of column (WEB_SALES.WS_SOLD_DATE_SK)
      used only for incremental stats maintenance
  Column (#1): WS_SOLD_DATE_SK(NUMBER)
    AvgLen: 6 NDV: 1839 Nulls: 0 Density: 0.000544 Min: 2450816.000000 Max: 2452641.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.008264 flag = 2048  ("WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK")
    io = NOCOST, cpu = 50.000000, sel = 0.004997 flag = 2048  ("DATE_DIM"."D_YEAR"=2001)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("DATE_DIM"."D_MOY">=1)
    io = NOCOST, cpu = 50.000000, sel = 0.329224 flag = 2048  ("DATE_DIM"."D_MOY"<=4)
  Total Scan IO  Cost  =   409.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 73049.000000 (#rows))
                       =   409.000000
  Total Scan CPU  Cost =   33398564.400000 (scan (Disk))
                         + 3670900.482165 (cpu filter eval) (= 50.252577 (per row) * 73049.000000 (#rows))
                       =   37069464.882165
  Inner table: DATE_DIM  Alias: DATE_DIM
  Access Path: TableScan
    NL Join:  Cost: 15172.116421  Resp: 15172.116421  Degree: 1
      Cost_io: 15137.000000  Cost_cpu: 1371606086
      Resp_io: 15137.000000  Resp_cpu: 1371606086
 ****** Costing Index D_DATE_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: D_DATE_PK_IDX
    resc_io: 1.000000  resc_cpu: 9382
    ix_sel: 1.3689e-05  ix_sel_with_filters: 1.3689e-05 
    NL Join (ordered): Cost: 41.009806  Resp: 41.009806  Degree: 1
      Cost_io: 41.000000  Cost_cpu: 383011
      Resp_io: 41.000000  Resp_cpu: 383011
 ****** Costing Index D_DATE_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 
  Estimated selectivity: 1.000000 , endpoint value predicate, col: #9 
  Estimated selectivity: 0.329224 , endpoint value predicate, col: #9 
  Access Path: index (AllEqUnique)
    Index: D_DATE_PK_IDX
    resc_io: 1.000000  resc_cpu: 9382
    ix_sel: 1.3689e-05  ix_sel_with_filters: 1.3689e-05 
    NL Join (ordered): Cost: 41.009806  Resp: 41.009806  Degree: 1
      Cost_io: 41.000000  Cost_cpu: 383011
      Resp_io: 41.000000  Resp_cpu: 383011

  Best NL cost: 41.009806
          resc: 41.009806  resc_io: 41.000000  resc_cpu: 383011
          resp: 41.009806  resp_io: 41.000000  resc_cpu: 383011
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Capping Semi Join Card of HJ/SMJ by inner = 36.690903
Capping Semi Join Card of HJ/SMJ (no post filters) by inner = 36.690903
Capping Semi Join Card of NL by inner = 36.690903
Capping Semi Join Card of without POSQ by inner = 36.690903
Capping Semi Join Card of non adjusted NSQ by inner = 36.690903
Semi Join Card (capped by inner join):  36.690903 = outer (36.945295) * inner (120.166840) * sel (0.008264)
Join Card - Rounded: 37 Computed: 36.690903
  Outer table:  WEB_SALES  Alias: WEB_SALES
    resc: 4.000919  card 36.945295  bytes:   deg: 1  resp: 4.000919
  Inner table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card: 120.166840  bytes:   deg: 1  resp: 411.949216
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     25 Total Rows:            120
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39096166
      Total Temp space used: 0
  SM join: Resc: 416.951091  Resp: 416.951091  [multiMatchCost=0.000000]
SM Join
  SM cost: 416.951091 
     resc: 416.951091 resc_io: 415.000000 resc_cpu: 76207324
     resp: 416.951091 resp_io: 415.000000 resp_cpu: 76207324
  Outer table:  WEB_SALES  Alias: WEB_SALES
    resc: 4.000919  card 36.945295  bytes:   deg: 1  resp: 4.000919
  Inner table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card: 120.166840  bytes:   deg: 1  resp: 411.949216
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.015811  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 415.965946  Resp: 415.965946  [multiMatchCost=0.000000]
HA Join
  HA cost: 415.965946  
     resc: 415.965946 resc_io: 415.000000 resc_cpu: 37728709
     resp: 415.965946 resp_io: 415.000000 resp_cpu: 37728709
Best:: JoinMethod: NestedLoopSemi
       Cost: 41.009806  Degree: 1  Resp: 41.009806  Card: 36.690903 Bytes: 
***********************
Best so far:  Table#: 0  cost: 4.000919  card: 36.945295  bytes: 444.000000
              Table#: 1  cost: 41.009806  card: 36.690903  bytes: 925.000000
***********************

*********************************
Number of join permutations tried: 1
*********************************
*********************
PJE: Partial join eval conversion for query block SEL$3 (#4).
PJE: Table marked for partial join eval: DATE_DIM[DATE_DIM]#1
***********************
Enumerating distribution method (advanced)
--- Distribution method for 
join between WEB_SALES[WEB_SALES](serial) and DATE_DIM[DATE_DIM](serial); jm = 15; right side access path = IndexUnique
kkopqIsSerialJoin: serial NLJ: both inputs serial
---- serial NL-Join -> SERIAL

(newjo-save)    [1 0 ]
LORE: Or-Expansion validity checks failed on query block SEL$3 (#4) because Cost based OR expansion enabled
Transfer Optimizer annotations for query block SEL$3 (#4)
Final cost for query block SEL$3 (#4) - All Rows Plan:
  Best join order: 1
  Cost: 41.009806  Degree: 1  Card: 37.000000  Bytes: 925.000000
  Resc: 41.009806  Resc_io: 41.000000  Resc_cpu: 383011
  Resp: 41.009806  Resp_io: 41.000000  Resc_cpu: 383011
kkoqbc-subheap (delete addr=0x7f0472562de8, in-use=44952, alloc=49272)
kkoqbc-end:
        :
    call(in-use=380000, alloc=442328), compile(in-use=1270128, alloc=1272896), execution(in-use=23448, alloc=24312)

kkoqbc: finish optimizing query block SEL$3 (#4)
kkoqbc: optimizing query block SEL$4 (#3)
        
        :
    call(in-use=377792, alloc=442328), compile(in-use=1276544, alloc=1278832), execution(in-use=23624, alloc=24312)

kkoqbc-subheap (create addr=0x7f0472562de8)
****************
QUERY BLOCK TEXT
****************
SELECT
                    *
                FROM
                    catalog_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = cs_ship_customer_sk
                    AND cs_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$4 nbfros=2 flg=0
  fro(0): flg=0 objn=74185 hint_alias="CATALOG_SALES"@"SEL$4"
  fro(1): flg=0 objn=74171 hint_alias="DATE_DIM"@"SEL$4"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3255 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: DATE_DIM  Alias: DATE_DIM
  #Rows: 73049  SSZ: 0  LGR: 0  #Blks:  1510  AvgRowLen:  128.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): D_DATE_SK(NUMBER)
    AvgLen: 6 NDV: 73049 Nulls: 0 Density: 0.000014 Min: 2415022.000000 Max: 2488070.000000
Index Stats::
  Index: D_DATE_PK_IDX  Col#: 1
  LVLS: 1  #LB: 163  #DK: 73049  LB/K: 1.00  DB/K: 1.00  CLUF: 1402.00  NRW: 73049.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table: CATALOG_SALES  Alias: CATALOG_SALES  (Using composite stats)
  #Rows: 72077400  SSZ: 0  LGR: 0  #Blks:  1645494  AvgRowLen:  168.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
Index Stats::
  Index: CATALOG_SALES_IDX2  Col#: 8 1
  LVLS: 3  #LB: 261734  #DK: 5997411  LB/K: 1.00  DB/K: 12.00  CLUF: 72077362.00  NRW: 72077400.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
  Index: CATALOG_SALES_PK_IDX  Col#: 16 18
  LVLS: 2  #LB: 249644  #DK: 71913105  LB/K: 1.00  DB/K: 1.00  CLUF: 71898009.00  NRW: 71913105.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
try to generate single-table filter predicates from ORs for query block SEL$4 (#3)
finally: "CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B1 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4

=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$4 (#3)
Applicable DS directives:
   dirid = 11267665714990475542, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74185)[8]}
   dirid = 13969931850241126217, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {C(74171)[7, 9]}
   dirid = 2090373381697137251, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {(74185)[]; F(74171)[]}
   dirid = 14483145493039253896, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {(74185)[]; (74171)[]}
Checking valid directives for the query block
  SPD: Return code in qosdDSDirSetup: NODIR, estType = QUERY_BLOCK
Return code in qosdSetupDirCtx4QB: EXISTS
=====================================
SPD: END context at query block level
=====================================
Access path analysis for CATALOG_SALES
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for CATALOG_SALES[CATALOG_SALES] 
  SPD: Return code in qosdDSDirSetup: NODIR, estType = TABLE

 kkecdn: Single Table Predicate:"CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B1
NOTE: ignoring histogram of column (CATALOG_SALES.CS_SHIP_CUSTOMER_SK)
      used only for incremental stats maintenance
  Column (#8): CS_SHIP_CUSTOMER_SK(NUMBER)
    AvgLen: 6 NDV: 1037120 Nulls: 0 Density: 0.000001 Min: 1.000000 Max: 1079999.000000
  Estimated selectivity: 9.6421e-07 , col: #8 
  Table: CATALOG_SALES  Alias: CATALOG_SALES
    Card: Original: 72077400.000000  Rounded: 69  Computed: 69.497647  Non Adjusted: 69.497647
  Scan IO  Cost (Disk) =   445656.000000
  Scan CPU Cost (Disk) =   32620732791.360001
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000001 flag = 2048  ("CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B1)
  Total Scan IO  Cost  =   445656.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 72077400.000000 (#rows))
                       =   445656.000000
  Total Scan CPU  Cost =   32620732791.360001 (scan (Disk))
                         + 3603870000.000000 (cpu filter eval) (= 50.000000 (per row) * 72077400.000000 (#rows))
                       =   36224602791.360001
  Access Path: TableScan
    Cost:  446583.437120  Resp: 446583.437120  Degree: 0
      Cost_io: 445656.000000  Cost_cpu: 36224602791
      Resp_io: 445656.000000  Resp_cpu: 36224602791
  Access Path: index (index (FFS))
    Index: CATALOG_SALES_IDX2
    resc_io: 70888.000000  resc_cpu: 14117080977
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  71249.431290  Resp: 71249.431290  Degree: 1
      Cost_io: 70888.000000  Cost_cpu: 14117080977
      Resp_io: 70888.000000  Resp_cpu: 14117080977
 ****** Costing Index CATALOG_SALES_IDX2
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER

  Estimated selectivity: 9.6421e-07 , col: #8 
  Access Path: index (IndexOnly)
    Index: CATALOG_SALES_IDX2
    resc_io: 4.000000  resc_cpu: 42486
    ix_sel: 9.6421e-07  ix_sel_with_filters: 9.6421e-07 
    Cost: 4.001088  Resp: 4.001088  Degree: 1
  Best:: AccessPath: IndexRange
  Index: CATALOG_SALES_IDX2
         Cost: 4.001088  Degree: 1  Resp: 4.001088  Card: 69.497647  Bytes: 0.000000

Access path analysis for DATE_DIM
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for DATE_DIM[DATE_DIM] 
  SPD: Directive valid: dirid = 13969931850241126217, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {C(74171)[7, 9]}
  SPD: Return code in qosdDSDirSetup: EXISTS, estType = TABLE
  Column (#7): 
    NewDensity:0.000007, OldDensity:0.000007 BktCnt:73049.000000, PopBktCnt:73048.000000, PopValCnt:200, NDV:201
  Column (#7): D_YEAR(NUMBER)
    AvgLen: 4 NDV: 201 Nulls: 0 Density: 0.000007 Min: 1900.000000 Max: 2100.000000
    Histogram: Freq  #Bkts: 201  UncompBkts: 73049  EndPtVals: 201  ActualVal: yes
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 


 kkecdn: Single Table Predicate:"DATE_DIM"."D_YEAR"=2001
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY">=1
  Column (#9): 
    NewDensity:0.038666, OldDensity:0.000007 BktCnt:73049.000000, PopBktCnt:73049.000000, PopValCnt:12, NDV:12
  Column (#9): D_MOY(NUMBER)
    AvgLen: 3 NDV: 12 Nulls: 0 Density: 0.038666 Min: 1.000000 Max: 12.000000
    Histogram: Freq  #Bkts: 12  UncompBkts: 73049  EndPtVals: 12  ActualVal: yes
  Estimated selectivity: 1.000000 , endpoint value predicate, col: #9 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY"<=4
  Estimated selectivity: 0.329224 , endpoint value predicate, col: #9 
  Table: DATE_DIM  Alias: DATE_DIM
    Card: Original: 73049.000000  Rounded: 120  Computed: 120.166840  Non Adjusted: 120.166840
  Scan IO  Cost (Disk) =   411.000000
  Scan CPU Cost (Disk) =   33398564.400000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.004997 flag = 2048  ("DATE_DIM"."D_YEAR"=2001)
    io = NOCOST, cpu = 50.000000, sel = 0.329224 flag = 2048  ("DATE_DIM"."D_MOY"<=4)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("DATE_DIM"."D_MOY">=1)
  Total Scan IO  Cost  =   411.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 73049.000000 (#rows))
                       =   411.000000
  Total Scan CPU  Cost =   33398564.400000 (scan (Disk))
                         + 3676708.342003 (cpu filter eval) (= 50.332083 (per row) * 73049.000000 (#rows))
                       =   37075272.742003
  Access Path: TableScan
    Cost:  411.949216  Resp: 411.949216  Degree: 0
      Cost_io: 411.000000  Cost_cpu: 37075273
      Resp_io: 411.000000  Resp_cpu: 37075273
  Best:: AccessPath: TableScan
         Cost: 411.949216  Degree: 1  Resp: 411.949216  Card: 120.166840  Bytes: 0.000000

***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE: Checking validity of partial join eval on query block SEL$4 (#3)
PJE: Passed validity of partial join eval by query block SEL$4 (#3)
number: [0]
PJE: Partial join eval conversion for query block SEL$4 (#3).
PJE: Table marked for partial join eval: DATE_DIM[DATE_DIM]#1
***********************
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  CATALOG_SALES[CATALOG_SALES]#0  DATE_DIM[DATE_DIM]#1

***************
Now joining: DATE_DIM[DATE_DIM]#1
***************
NL Join
  Outer table: Card: 69.497647  Cost: 4.001088  Resp: 4.001088  Degree: 1  Bytes: 
Access path analysis for DATE_DIM
  Scan IO  Cost (Disk) =   408.985507
  Scan CPU Cost (Disk) =   33398564.400000
NOTE: ignoring histogram of column (CATALOG_SALES.CS_SOLD_DATE_SK)
      used only for incremental stats maintenance
  Column (#1): CS_SOLD_DATE_SK(NUMBER)
    AvgLen: 6 NDV: 1849 Nulls: 0 Density: 0.000541 Min: 2450815.000000 Max: 2452647.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.008264 flag = 2048  ("CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK")
    io = NOCOST, cpu = 50.000000, sel = 0.004997 flag = 2048  ("DATE_DIM"."D_YEAR"=2001)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("DATE_DIM"."D_MOY">=1)
    io = NOCOST, cpu = 50.000000, sel = 0.329224 flag = 2048  ("DATE_DIM"."D_MOY"<=4)
  Total Scan IO  Cost  =   408.985507 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 73049.000000 (#rows))
                       =   408.985507
  Total Scan CPU  Cost =   33398564.400000 (scan (Disk))
                         + 3670900.482165 (cpu filter eval) (= 50.252577 (per row) * 73049.000000 (#rows))
                       =   37069464.882165
  Inner table: DATE_DIM  Alias: DATE_DIM
  Access Path: TableScan
    NL Join:  Cost: 28289.486754  Resp: 28289.486754  Degree: 1
      Cost_io: 28224.000000  Cost_cpu: 2557835563
      Resp_io: 28224.000000  Resp_cpu: 2557835563
 ****** Costing Index D_DATE_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: D_DATE_PK_IDX
    resc_io: 1.000000  resc_cpu: 9382
    ix_sel: 1.3689e-05  ix_sel_with_filters: 1.3689e-05 
    NL Join (ordered): Cost: 73.017661  Resp: 73.017661  Degree: 1
      Cost_io: 73.000000  Cost_cpu: 689828
      Resp_io: 73.000000  Resp_cpu: 689828
 ****** Costing Index D_DATE_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 
  Estimated selectivity: 1.000000 , endpoint value predicate, col: #9 
  Estimated selectivity: 0.329224 , endpoint value predicate, col: #9 
  Access Path: index (AllEqUnique)
    Index: D_DATE_PK_IDX
    resc_io: 1.000000  resc_cpu: 9382
    ix_sel: 1.3689e-05  ix_sel_with_filters: 1.3689e-05 
    NL Join (ordered): Cost: 73.017661  Resp: 73.017661  Degree: 1
      Cost_io: 73.000000  Cost_cpu: 689828
      Resp_io: 73.000000  Resp_cpu: 689828

  Best NL cost: 73.017661
          resc: 73.017661  resc_io: 73.000000  resc_cpu: 689828
          resp: 73.017661  resp_io: 73.000000  resc_cpu: 689828
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Capping Semi Join Card of HJ/SMJ by inner = 69.019113
Capping Semi Join Card of HJ/SMJ (no post filters) by inner = 69.019113
Capping Semi Join Card of NL by inner = 69.019113
Capping Semi Join Card of without POSQ by inner = 69.019113
Capping Semi Join Card of non adjusted NSQ by inner = 69.019113
Semi Join Card (capped by inner join):  69.019113 = outer (69.497647) * inner (120.166840) * sel (0.008264)
Join Card - Rounded: 69 Computed: 69.019113
  Outer table:  CATALOG_SALES  Alias: CATALOG_SALES
    resc: 4.001088  card 69.497647  bytes:   deg: 1  resp: 4.001088
  Inner table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card: 120.166840  bytes:   deg: 1  resp: 411.949216
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     25 Total Rows:            120
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39096166
      Total Temp space used: 0
  SM join: Resc: 416.951260  Resp: 416.951260  [multiMatchCost=0.000000]
SM Join
  SM cost: 416.951260 
     resc: 416.951260 resc_io: 415.000000 resc_cpu: 76213924
     resp: 416.951260 resp_io: 415.000000 resp_cpu: 76213924
  Outer table:  CATALOG_SALES  Alias: CATALOG_SALES
    resc: 4.001088  card 69.497647  bytes:   deg: 1  resp: 4.001088
  Inner table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card: 120.166840  bytes:   deg: 1  resp: 411.949216
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.015934  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 415.966238  Resp: 415.966238  [multiMatchCost=0.000000]
HA Join
  HA cost: 415.966238  
     resc: 415.966238 resc_io: 415.000000 resc_cpu: 37740109
     resp: 415.966238 resp_io: 415.000000 resp_cpu: 37740109
Best:: JoinMethod: NestedLoopSemi
       Cost: 73.017661  Degree: 1  Resp: 73.017661  Card: 69.019113 Bytes: 
***********************
Best so far:  Table#: 0  cost: 4.001088  card: 69.497647  bytes: 828.000000
              Table#: 1  cost: 73.017661  card: 69.019113  bytes: 1725.000000
***********************

*********************************
Number of join permutations tried: 1
*********************************
*********************
PJE: Partial join eval conversion for query block SEL$4 (#3).
PJE: Table marked for partial join eval: DATE_DIM[DATE_DIM]#1
***********************
Enumerating distribution method (advanced)
--- Distribution method for 
join between CATALOG_SALES[CATALOG_SALES](serial) and DATE_DIM[DATE_DIM](serial); jm = 15; right side access path = IndexUnique
kkopqIsSerialJoin: serial NLJ: both inputs serial
---- serial NL-Join -> SERIAL

(newjo-save)    [1 0 ]
LORE: Or-Expansion validity checks failed on query block SEL$4 (#3) because Cost based OR expansion enabled
Transfer Optimizer annotations for query block SEL$4 (#3)
Final cost for query block SEL$4 (#3) - All Rows Plan:
  Best join order: 1
  Cost: 73.017661  Degree: 1  Card: 69.000000  Bytes: 1725.000000
  Resc: 73.017661  Resc_io: 73.000000  Resc_cpu: 689828
  Resp: 73.017661  Resp_io: 73.000000  Resc_cpu: 689828
kkoqbc-subheap (delete addr=0x7f0472562de8, in-use=52808, alloc=65704)
kkoqbc-end:
        :
    call(in-use=416912, alloc=491536), compile(in-use=1308952, alloc=1310456), execution(in-use=24032, alloc=24312)

kkoqbc: finish optimizing query block SEL$4 (#3)
kkoqbc: optimizing query block SEL$2 (#2)
        
        :
    call(in-use=414704, alloc=491536), compile(in-use=1315488, alloc=1318032), execution(in-use=24200, alloc=24312)

kkoqbc-subheap (create addr=0x7f0472562de8)
****************
QUERY BLOCK TEXT
****************
SELECT
            *
        FROM
            store_sales ss,
            date_dim
        WHERE
            c.c_customer_sk = ss.ss_customer_sk
            AND ss_sold_date_sk = d_date_sk
            AND d_year = 2001
            AND d_moy BETWEEN 1 AND 1 + 3
            AND ( EXISTS (
                SELECT
                    *
                FROM
                    web_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = ws_bill_customer_sk
                    AND ws_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            )
                  OR EXISTS (
                SELECT
                    *
                FROM
                    catalog_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = cs_ship_customer_sk
                    AND cs_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            ) )
    
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$2 nbfros=2 flg=0
  fro(0): flg=0 objn=74171 hint_alias="DATE_DIM"@"SEL$2"
  fro(1): flg=0 objn=74191 hint_alias="SS"@"SEL$2"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3255 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: DATE_DIM  Alias: DATE_DIM
  #Rows: 73049  SSZ: 0  LGR: 0  #Blks:  1510  AvgRowLen:  128.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): D_DATE_SK(NUMBER)
    AvgLen: 6 NDV: 73049 Nulls: 0 Density: 0.000014 Min: 2415022.000000 Max: 2488070.000000
Index Stats::
  Index: D_DATE_PK_IDX  Col#: 1
  LVLS: 1  #LB: 163  #DK: 73049  LB/K: 1.00  DB/K: 1.00  CLUF: 1402.00  NRW: 73049.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table: STORE_SALES  Alias: SS  (Using composite stats)
  #Rows: 144020200  SSZ: 0  LGR: 0  #Blks:  2304802  AvgRowLen:  117.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
Index Stats::
  Index: STORE_SALES_IDX2  Col#: 4 1
  LVLS: 3  #LB: 522970  #DK: 11965122  LB/K: 1.00  DB/K: 12.00  CLUF: 143898920.00  NRW: 144020200.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
  Index: STORE_SALES_PK_IDX  Col#: 3 10
  LVLS: 3  #LB: 497464  #DK: 141527398  LB/K: 1.00  DB/K: 1.00  CLUF: 141365556.00  NRW: 141527398.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
try to generate single-table filter predicates from ORs for query block SEL$2 (#2)
finally: "SS"."SS_CUSTOMER_SK"=:B1 AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND ( EXISTS (SELECT 0 FROM "WEB_SALES" "WEB_SALES","DATE_DIM" "DATE_DIM" WHERE "WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B2 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1) OR  EXISTS (SELECT 0 FROM "CATALOG_SALES" "CATALOG_SALES","DATE_DIM" "DATE_DIM" WHERE "CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B3 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1))

=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$2 (#2)
Applicable DS directives:
   dirid = 10827845680942532126, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {F(74191)[]; F(74171)[]}
   dirid = 7660518587836633700, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74191)[4]}
   dirid = 13969931850241126217, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {C(74171)[7, 9]}
   dirid = 2361553282592865451, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {(74191)[]; F(74171)[]}
   dirid = 12943986683386070018, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {(74191)[]; (74171)[]}
Checking valid directives for the query block
  SPD: Return code in qosdDSDirSetup: NODIR, estType = QUERY_BLOCK
Return code in qosdSetupDirCtx4QB: EXISTS
=====================================
SPD: END context at query block level
=====================================
Access path analysis for STORE_SALES
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for STORE_SALES[SS] 
  SPD: Return code in qosdDSDirSetup: NODIR, estType = TABLE

 kkecdn: Single Table Predicate:"SS"."SS_CUSTOMER_SK"=:B1
NOTE: ignoring histogram of column (STORE_SALES.SS_CUSTOMER_SK)
      used only for incremental stats maintenance
  Column (#4): SS_CUSTOMER_SK(NUMBER)
    AvgLen: 6 NDV: 1039371 Nulls: 0 Density: 0.000001 Min: 1.000000 Max: 1079999.000000
  Estimated selectivity: 9.6212e-07 , col: #4 
  Table: STORE_SALES  Alias: SS
    Card: Original: 144020200.000000  Rounded: 139  Computed: 138.564767  Non Adjusted: 138.564767
  Scan IO  Cost (Disk) =   624219.000000
  Scan CPU Cost (Disk) =   46657751154.880005
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000001 flag = 2048  ("SS"."SS_CUSTOMER_SK"=:B1)
  Total Scan IO  Cost  =   624219.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 144020200.000000 (#rows))
                       =   624219.000000
  Total Scan CPU  Cost =   46657751154.880005 (scan (Disk))
                         + 7201010000.000000 (cpu filter eval) (= 50.000000 (per row) * 144020200.000000 (#rows))
                       =   53858761154.880005
  Access Path: TableScan
    Cost:  625597.914066  Resp: 625597.914066  Degree: 0
      Cost_io: 624219.000000  Cost_cpu: 53858761155
      Resp_io: 624219.000000  Resp_cpu: 53858761155
  Access Path: index (index (FFS))
    Index: STORE_SALES_IDX2
    resc_io: 141639.000000  resc_cpu: 28207733477
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  142361.185947  Resp: 142361.185947  Degree: 1
      Cost_io: 141639.000000  Cost_cpu: 28207733477
      Resp_io: 141639.000000  Resp_cpu: 28207733477
 ****** Costing Index STORE_SALES_IDX2
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER

  Estimated selectivity: 9.6212e-07 , col: #4 
  Access Path: index (IndexOnly)
    Index: STORE_SALES_IDX2
    resc_io: 4.000000  resc_cpu: 56286
    ix_sel: 9.6212e-07  ix_sel_with_filters: 9.6212e-07 
    Cost: 4.001441  Resp: 4.001441  Degree: 1
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: IndexRange
  Index: STORE_SALES_IDX2
         Cost: 4.001441  Degree: 1  Resp: 4.001441  Card: 138.564767  Bytes: 0.000000

Access path analysis for DATE_DIM
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for DATE_DIM[DATE_DIM] 
  SPD: Directive valid: dirid = 13969931850241126217, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {C(74171)[7, 9]}
  SPD: Return code in qosdDSDirSetup: EXISTS, estType = TABLE
  Column (#7): 
    NewDensity:0.000007, OldDensity:0.000007 BktCnt:73049.000000, PopBktCnt:73048.000000, PopValCnt:200, NDV:201
  Column (#7): D_YEAR(NUMBER)
    AvgLen: 4 NDV: 201 Nulls: 0 Density: 0.000007 Min: 1900.000000 Max: 2100.000000
    Histogram: Freq  #Bkts: 201  UncompBkts: 73049  EndPtVals: 201  ActualVal: yes
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 


 kkecdn: Single Table Predicate:"DATE_DIM"."D_YEAR"=2001
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY">=1
  Column (#9): 
    NewDensity:0.038666, OldDensity:0.000007 BktCnt:73049.000000, PopBktCnt:73049.000000, PopValCnt:12, NDV:12
  Column (#9): D_MOY(NUMBER)
    AvgLen: 3 NDV: 12 Nulls: 0 Density: 0.038666 Min: 1.000000 Max: 12.000000
    Histogram: Freq  #Bkts: 12  UncompBkts: 73049  EndPtVals: 12  ActualVal: yes
  Estimated selectivity: 1.000000 , endpoint value predicate, col: #9 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY"<=4
  Estimated selectivity: 0.329224 , endpoint value predicate, col: #9 
  Table: DATE_DIM  Alias: DATE_DIM
    Card: Original: 73049.000000  Rounded: 120  Computed: 120.166840  Non Adjusted: 120.166840
  Scan IO  Cost (Disk) =   411.000000
  Scan CPU Cost (Disk) =   33398564.400000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.004997 flag = 2048  ("DATE_DIM"."D_YEAR"=2001)
    io = NOCOST, cpu = 50.000000, sel = 0.329224 flag = 2048  ("DATE_DIM"."D_MOY"<=4)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("DATE_DIM"."D_MOY">=1)
  Total Scan IO  Cost  =   411.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 73049.000000 (#rows))
                       =   411.000000
  Total Scan CPU  Cost =   33398564.400000 (scan (Disk))
                         + 3676708.342003 (cpu filter eval) (= 50.332083 (per row) * 73049.000000 (#rows))
                       =   37075272.742003
  Access Path: TableScan
    Cost:  411.949216  Resp: 411.949216  Degree: 0
      Cost_io: 411.000000  Cost_cpu: 37075273
      Resp_io: 411.000000  Resp_cpu: 37075273
  ****** trying bitmap/domain indexes ******
 ****** Costing Index D_DATE_PK_IDX
  Access Path: index (FullScan)
    Index: D_DATE_PK_IDX
    resc_io: 164.000000  resc_cpu: 15777716
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 164.403948  Resp: 164.403948  Degree: 0
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: TableScan
         Cost: 411.949216  Degree: 1  Resp: 411.949216  Card: 120.166840  Bytes: 0.000000

***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE: Checking validity of partial join eval on query block SEL$2 (#2)
PJE: Passed validity of partial join eval by query block SEL$2 (#2)
number: [0]
PJE: Partial join eval conversion for query block SEL$2 (#2).
PJE: Table marked for partial join eval: STORE_SALES[SS]#1
***********************
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  DATE_DIM[DATE_DIM]#0  STORE_SALES[SS]#1

***************
Now joining: STORE_SALES[SS]#1
***************
NL Join
  Outer table: Card: 120.166840  Cost: 411.949216  Resp: 411.949216  Degree: 1  Bytes: 
Access path analysis for STORE_SALES
  Scan IO  Cost (Disk) =   624217.216667
  Scan CPU Cost (Disk) =   46657751154.880005
NOTE: ignoring histogram of column (STORE_SALES.SS_SOLD_DATE_SK)
      used only for incremental stats maintenance
  Column (#1): SS_SOLD_DATE_SK(NUMBER)
    AvgLen: 6 NDV: 1849 Nulls: 0 Density: 0.000541 Min: 2450816.000000 Max: 2452651.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000001 flag = 2064  ("SS"."SS_CUSTOMER_SK"=:B1)
    io = NOCOST, cpu = 50.000000, sel = 0.007463 flag = 2048  ("SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK")
  Total Scan IO  Cost  =   624217.216667 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 144020200.000000 (#rows))
                       =   624217.216667
  Total Scan CPU  Cost =   46657751154.880005 (scan (Disk))
                         + 7201016928.238328 (cpu filter eval) (= 50.000048 (per row) * 144020200.000000 (#rows))
                       =   53858768083.118332
  Inner table: STORE_SALES  Alias: SS
  Access Path: TableScan
    NL Join:  Cost: 75071947.658387  Resp: 75071947.658387  Degree: 1
      Cost_io: 74906477.000000  Cost_cpu: 6463089245247
      Resp_io: 74906477.000000  Resp_cpu: 6463089245247
  Access Path: index (index (FFS))
    Index: STORE_SALES_IDX2
    resc_io: 141637.716667  resc_cpu: 28207740405
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: STORE_SALES  Alias: SS
  Access Path: index (FFS)
    NL Join:  Cost: 17083600.284196  Resp: 17083600.284196  Degree: 1
      Cost_io: 16996937.000000  Cost_cpu: 3384965923877
      Resp_io: 16996937.000000  Resp_cpu: 3384965923877
 ****** Costing Index STORE_SALES_IDX2
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 8.3576e-08
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 8.3576e-08
  Estimated selectivity: 9.6212e-07 , col: #4 
  Access Path: index (AllEqJoinGuess)
    Index: STORE_SALES_IDX2
    resc_io: 3.000000  resc_cpu: 22414
    ix_sel: 6.9435e-09  ix_sel_with_filters: 6.9435e-09 
    NL Join : Cost: 772.018080  Resp: 772.018080  Degree: 1
      Cost_io: 771.000000  Cost_cpu: 39764991
      Resp_io: 771.000000  Resp_cpu: 39764991
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 772.018080
          resc: 772.018080  resc_io: 771.000000  resc_cpu: 39764991
          resp: 772.018080  resp_io: 771.000000  resc_cpu: 39764991
  SPD: Directive valid: dirid = 10827845680942532126, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {F(74191)[]; F(74171)[]}
  SPD: Return code in qosdDSDirSetup: EXISTS, estType = JOIN
Semi Join Card:  120.166840 = outer (120.166840) * sel (1.000000)
Join Card - Rounded: 120 Computed: 120.166840
  Outer table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card 120.166840  bytes:   deg: 1  resp: 411.949216
  Inner table:  STORE_SALES  Alias: SS
    resc: 4.001441  card: 138.564767  bytes:   deg: 1  resp: 4.001441
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     25 Total Rows:            120
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39096166
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     24 Total Rows:            139
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39103407
      Total Temp space used: 0
  SM join: Resc: 417.952755  Resp: 417.952755  [multiMatchCost=0.000000]
SM Join
  SM cost: 417.952755 
     resc: 417.952755 resc_io: 415.000000 resc_cpu: 115331131
     resp: 417.952755 resp_io: 415.000000 resp_cpu: 115331131
SM Join (with index on outer)
 ****** Costing Index D_DATE_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (FullScan)
    Index: D_DATE_PK_IDX
    resc_io: 1566.000000  resc_cpu: 52083873
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1567.333473  Resp: 1567.333473  Degree: 1
  Outer table:  DATE_DIM  Alias: DATE_DIM
    resc: 1567.333473  card 120.166840  bytes:   deg: 1  resp: 1567.333473
  Inner table:  STORE_SALES  Alias: SS
    resc: 4.001441  card: 138.564767  bytes:   deg: 1  resp: 4.001441
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     24 Total Rows:            139
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39103407
      Total Temp space used: 0
  SM join: Resc: 1572.336055  Resp: 1572.336055  [multiMatchCost=0.000000]
  Outer table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card 120.166840  bytes:   deg: 1  resp: 411.949216
  Inner table:  STORE_SALES  Alias: SS
    resc: 4.001441  card: 138.564767  bytes:   deg: 1  resp: 4.001441
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016178  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 415.966836  Resp: 415.966836  [multiMatchCost=0.000000]
HA Join
  HA cost: 415.966836  
     resc: 415.966836 resc_io: 415.000000 resc_cpu: 37763459
     resp: 415.966836 resp_io: 415.000000 resp_cpu: 37763459
Best:: JoinMethod: HashSemi
       Cost: 415.966836  Degree: 1  Resp: 415.966836  Card: 120.166840 Bytes: 
***********************
Best so far:  Table#: 0  cost: 411.949216  card: 120.166840  bytes: 1560.000000
              Table#: 1  cost: 415.966836  card: 120.166840  bytes: 3000.000000
***********************

*********************************
Number of join permutations tried: 1
*********************************
*********************
PJE: Partial join eval conversion for query block SEL$2 (#2).
PJE: Table marked for partial join eval: STORE_SALES[SS]#1
***********************
Enumerating distribution method (advanced)
--- Distribution method for 
join between DATE_DIM[DATE_DIM](serial) and SS[STORE_SALES](serial); jm = 2; right side access path = IndexRange
---- serial Hash-Join -> NONE

kkoaccsqf: Current query block SEL$2 (#2) is serial
kkoaccsqf: correlated subquery query block SEL$3 (#4) in filter               : serial
(newjo-save)    [0 1 ]
LORE: Or-Expansion validity checks failed on query block SEL$2 (#2) because Cost based OR expansion enabled
Transfer Optimizer annotations for query block SEL$2 (#2)
Final cost for query block SEL$2 (#2) - All Rows Plan:
  Best join order: 1
  Cost: 415.966836  Degree: 1  Card: 120.000000  Bytes: 3000.000000
  Resc: 415.966836  Resc_io: 415.000000  Resc_cpu: 37763459
  Resp: 415.966836  Resp_io: 415.000000  Resc_cpu: 37763459
kkoqbc-subheap (delete addr=0x7f0472562de8, in-use=63832, alloc=65704)
kkoqbc-end:
        :
    call(in-use=453456, alloc=524272), compile(in-use=1350936, alloc=1354416), execution(in-use=25016, alloc=28368)

kkoqbc: finish optimizing query block SEL$2 (#2)
kkoqbc: optimizing query block SEL$9AE0327A (#5)
        
        :
    call(in-use=451248, alloc=524272), compile(in-use=1357496, alloc=1358560), execution(in-use=25208, alloc=28368)

kkoqbc-subheap (create addr=0x7f0472562de8)
****************
QUERY BLOCK TEXT
****************
Not available.
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$9AE0327A nbfros=2 flg=0
  fro(0): flg=0 objn=74169 hint_alias="CA"@"SEL$1"
  fro(1): flg=0 objn=74170 hint_alias="CUSTOMER_DEMOGRAPHICS"@"SEL$1"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3255 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: CUSTOMER_ADDRESS  Alias: CA
  #Rows: 540000  SSZ: 0  LGR: 0  #Blks:  13174  AvgRowLen:  152.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#8): CA_COUNTY(VARCHAR2)
    AvgLen: 16 NDV: 1877 Nulls: 0 Density: 0.000471
    Histogram: Hybrid  #Bkts: 254  UncompBkts: 5580  EndPtVals: 254  ActualVal: yes
Index Stats::
  Index: CA_ADDRESS_PK_IDX  Col#: 1
  LVLS: 2  #LB: 1127  #DK: 540000  LB/K: 1.00  DB/K: 1.00  CLUF: 12283.00  NRW: 540000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table: CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
  #Rows: 1920800  SSZ: 0  LGR: 0  #Blks:  17254  AvgRowLen:  54.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
Index Stats::
  Index: CD_DEMO_PK_IDX  Col#: 1
  LVLS: 2  #LB: 4138  #DK: 1920800  LB/K: 1.00  DB/K: 1.00  CLUF: 795806.00  NRW: 1920800.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
  Column (#1): CD_DEMO_SK(NUMBER)
    AvgLen: 6 NDV: 1920800 Nulls: 0 Density: 0.000001 Min: 1.000000 Max: 1920800.000000
  Column (#1): CA_ADDRESS_SK(NUMBER)
    AvgLen: 5 NDV: 540000 Nulls: 0 Density: 0.000002 Min: 1.000000 Max: 540000.000000
  Column (#2): 
    NewDensity:0.249925, OldDensity:0.000000 BktCnt:1920800.000000, PopBktCnt:1920800.000000, PopValCnt:2, NDV:2
  Column (#2): CD_GENDER(CHARACTER)
    AvgLen: 2 NDV: 2 Nulls: 0 Density: 0.249925
    Histogram: Freq  #Bkts: 2  UncompBkts: 1920800  EndPtVals: 2  ActualVal: no 
  Column (#3): 
    NewDensity:0.098953, OldDensity:0.000000 BktCnt:1920800.000000, PopBktCnt:1920800.000000, PopValCnt:5, NDV:5
  Column (#3): CD_MARITAL_STATUS(CHARACTER)
    AvgLen: 2 NDV: 5 Nulls: 0 Density: 0.098953
    Histogram: Freq  #Bkts: 5  UncompBkts: 1920800  EndPtVals: 5  ActualVal: yes
  Column (#4): 
    NewDensity:0.070771, OldDensity:0.000000 BktCnt:1920800.000000, PopBktCnt:1920800.000000, PopValCnt:7, NDV:7
  Column (#4): CD_EDUCATION_STATUS(CHARACTER)
    AvgLen: 21 NDV: 7 Nulls: 0 Density: 0.070771
    Histogram: Freq  #Bkts: 7  UncompBkts: 1920800  EndPtVals: 7  ActualVal: yes
  Column (#5): CD_PURCHASE_ESTIMATE(NUMBER)
    AvgLen: 4 NDV: 9500 Nulls: 0 Density: 0.000105 Min: 500.000000 Max: 9999.000000
  Column (#6): CD_CREDIT_RATING(CHARACTER)
    AvgLen: 11 NDV: 4 Nulls: 0 Density: 0.250000
  Column (#7): CD_DEP_COUNT(NUMBER)
    AvgLen: 3 NDV: 6 Nulls: 0 Density: 0.166667 Min: 0.000000 Max: 5.000000
  Column (#8): CD_DEP_EMPLOYED_COUNT(NUMBER)
    AvgLen: 3 NDV: 6 Nulls: 0 Density: 0.166667 Min: 0.000000 Max: 5.000000
  Column (#9): CD_DEP_COLLEGE_COUNT(NUMBER)
    AvgLen: 3 NDV: 6 Nulls: 0 Density: 0.166667 Min: 0.000000 Max: 5.000000
try to generate single-table filter predicates from ORs for query block SEL$9AE0327A (#5)
finally: "CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County'

=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$9AE0327A (#5)
Applicable DS directives:
   dirid = 7754152966831092939, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {EC(74170)[3, 4]}
   dirid = 18439699102505563871, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {EC(74169)[8]}
Checking valid directives for the query block
  SPD: Return code in qosdDSDirSetup: NODIR, estType = GROUP_BY
  SPD: Return code in qosdDSDirSetup: NODIR, estType = QUERY_BLOCK
Return code in qosdSetupDirCtx4QB: EXISTS
=====================================
SPD: END context at query block level
=====================================
Access path analysis for CUSTOMER_DEMOGRAPHICS
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS] 
  SPD: Return code in qosdDSDirSetup: NODIR, estType = TABLE
  Table: CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
    Card: Original: 1920800.000000  Rounded: 1920800  Computed: 1920800.000000  Non Adjusted: 1920800.000000
  Scan IO  Cost (Disk) =   4675.000000
  Scan CPU Cost (Disk) =   718321325.760000
  Total Scan IO  Cost  =   4675.000000 (scan (Disk))
                       =   4675.000000
  Total Scan CPU  Cost =   718321325.760000 (scan (Disk))
                       =   718321325.760000
  Access Path: TableScan
    Cost:  4693.390757  Resp: 4693.390757  Degree: 0
      Cost_io: 4675.000000  Cost_cpu: 718321326
      Resp_io: 4675.000000  Resp_cpu: 718321326
  ****** trying bitmap/domain indexes ******
 ****** Costing Index CD_DEMO_PK_IDX
  Access Path: index (FullScan)
    Index: CD_DEMO_PK_IDX
    resc_io: 4140.000000  resc_cpu: 413642762
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 4150.590251  Resp: 4150.590251  Degree: 0
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: TableScan
         Cost: 4693.390757  Degree: 1  Resp: 4693.390757  Card: 1920800.000000  Bytes: 0.000000

Access path analysis for CUSTOMER_ADDRESS
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for CUSTOMER_ADDRESS[CA] 
  SPD: Directive valid: dirid = 18439699102505563871, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {EC(74169)[8]}
  SPD: Return code in qosdDSDirSetup: EXISTS, estType = TABLE

 kkecdn: Single Table Predicate:"CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County'
  Using density: 4.7103e-04 of col #8 as selectivity of pred having unreasonably low value
  Using density: 4.7103e-04 of col #8 as selectivity of pred having unreasonably low value
  Using density: 4.7103e-04 of col #8 as selectivity of pred having unreasonably low value
  Using density: 4.7103e-04 of col #8 as selectivity of pred having unreasonably low value
  Estimated selectivity: 5.3763e-04 , endpoint value predicate, col: #8 
  Table: CUSTOMER_ADDRESS  Alias: CA
    Card: Original: 540000.000000  Rounded: 1308  Computed: 1307.756551  Non Adjusted: 1307.756551
  Scan IO  Cost (Disk) =   3570.000000
  Scan CPU Cost (Disk) =   250417850.560000
  Cost of predicates:
    io = 0.000000, cpu = 249.764594, sel = 0.002422 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Chouteau County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Dinwiddie County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Dixie County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Harrisonburg city')
      io = NOCOST, cpu = 50.000000, sel = 0.000538 flag = 2048  ("CA"."CA_COUNTY"='Lowndes County')
  Total Scan IO  Cost  =   3570.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 540000.000000 (#rows))
                       =   3570.000000
  Total Scan CPU  Cost =   250417850.560000 (scan (Disk))
                         + 134872880.645405 (cpu filter eval) (= 249.764594 (per row) * 540000.000000 (#rows))
                       =   385290731.205405
  Access Path: TableScan
    Cost:  3579.864371  Resp: 3579.864371  Degree: 0
      Cost_io: 3570.000000  Cost_cpu: 385290731
      Resp_io: 3570.000000  Resp_cpu: 385290731
  ****** trying bitmap/domain indexes ******
 ****** Costing Index CA_ADDRESS_PK_IDX
  Access Path: index (FullScan)
    Index: CA_ADDRESS_PK_IDX
    resc_io: 1129.000000  resc_cpu: 116040106
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1131.970906  Resp: 1131.970906  Degree: 0
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: TableScan
         Cost: 3579.864371  Degree: 1  Resp: 3579.864371  Card: 1307.756551  Bytes: 0.000000

Grouping column cardinality [CD_DEMO_SK]    1920800
Grouping column cardinality [CA_ADDRESS]    1308
Grouping column cardinality [ CD_GENDER]    2
Grouping column cardinality [CD_MARITAL]    5
Grouping column cardinality [CD_EDUCATI]    7
Grouping column cardinality [CD_PURCHAS]    9500
Grouping column cardinality [CD_CREDIT_]    4
Grouping column cardinality [CD_DEP_COU]    6
Grouping column cardinality [CD_DEP_EMP]    6
Grouping column cardinality [CD_DEP_COL]    6
***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE:  Bypassed; QB is not duplicate insignificant SEL$9AE0327A (#5)
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  CUSTOMER_ADDRESS[CA]#0  CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS]#1

***************
Now joining: CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS]#1
***************
NL Join
  Outer table: Card: 1307.756551  Cost: 3579.864371  Resp: 3579.864371  Degree: 1  Bytes: 
Access path analysis for CUSTOMER_DEMOGRAPHICS
  Scan IO  Cost (Disk) =   4672.959480
  Scan CPU Cost (Disk) =   718321325.760000
  Total Scan IO  Cost  =   4672.959480 (scan (Disk))
                       =   4672.959480
  Total Scan CPU  Cost =   718321325.760000 (scan (Disk))
                       =   718321325.760000
  Inner table: CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
  Access Path: TableScan
    NL Join:  Cost: 6139865.974310  Resp: 6139865.974310  Degree: 1
      Cost_io: 6115801.000000  Cost_cpu: 939949584825
      Resp_io: 6115801.000000  Resp_cpu: 939949584825
  ****** trying bitmap/domain indexes ******
 ****** Costing Index CD_DEMO_PK_IDX
  Access Path: index (FullScan)
    Index: CD_DEMO_PK_IDX
    resc_io: 4140.000000  resc_cpu: 413642762
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 4150.590251  Resp: 4150.590251  Degree: 0
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 6139865.974310
          resc: 6139865.974310  resc_io: 6115801.000000  resc_cpu: 939949584825
          resp: 6139865.974310  resp_io: 6115801.000000  resc_cpu: 939949584825
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Join Card:  2511938782.753941 = outer (1307.756551) * inner (1920800.000000) * sel (1.000000)
Join Card - Rounded: 2511938783 Computed: 2511938782.753941
Grouping column cardinality [CD_DEMO_SK]    1920800
Grouping column cardinality [CA_ADDRESS]    1308
Grouping column cardinality [ CD_GENDER]    2
Grouping column cardinality [CD_MARITAL]    5
Grouping column cardinality [CD_EDUCATI]    7
Grouping column cardinality [CD_PURCHAS]    9500
Grouping column cardinality [CD_CREDIT_]    4
Grouping column cardinality [CD_DEP_COU]    6
Grouping column cardinality [CD_DEP_EMP]    6
Grouping column cardinality [CD_DEP_COL]    6
GROUP BY sort

GROUP BY/Correlated Subquery Filter adjustment factor: 0.044194
GROUP BY cardinality:  2511938783.000000, TABLE cardinality:  2511938783.000000
Vector group by not costed because no SYS_OP_XLATE_USE in group by.
kdmoGByPushdownValid: more than one table in group by    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 28600675 Row size:     93 Total Rows:     2511938783
      Initial runs:   2228 Merge passes:  2 IO Cost / pass:    15492034
      Total IO sort cost: 59584743.000000      Total CPU sort cost: 4590517954039
      Total Temp space used: 254046979000
Best:: JoinMethod: NestedLoop
       Cost: 65842137.295423  Degree: 1  Resp: 65842137.295423  Card: 2511938782.753941 Bytes: 
***********************
Best so far:  Table#: 0  cost: 3579.864371  card: 1307.756551  bytes: 27468.000000
              Table#: 1  cost: 65842137.295423  card: 2511938782.753941  bytes: 188395408725.000000
***********************

*********************************
Number of join permutations tried: 1
*********************************
Enumerating distribution method (advanced)
--- Distribution method for 
join between CA[CUSTOMER_ADDRESS](serial) and CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS](serial); jm = 14; right side access path = TableScan
---- serial Hash-Join -> NONE

(newjo-save)    [0 1 ]

GROUP BY/Correlated Subquery Filter adjustment factor: 0.044194
GROUP BY cardinality:  2511938783.000000, TABLE cardinality:  2511938783.000000
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 28600675 Row size:     93 Total Rows:     2511938783
      Initial runs:   2228 Merge passes:  2 IO Cost / pass:    15492034
      Total IO sort cost: 59584743.000000      Total CPU sort cost: 4590517954039
      Total Temp space used: 254046979000
LORE: Or-Expansion validity checks failed on query block SEL$9AE0327A (#5) because Cost based OR expansion enabled
Transfer Optimizer annotations for query block SEL$9AE0327A (#5)
Final cost for query block SEL$9AE0327A (#5) - All Rows Plan:
  Best join order: 1
  Cost: 65842137.295423  Degree: 1  Card: 2511938783.000000  Bytes: 188395408725.000000
  Resc: 65842137.295423  Resc_io: 65700544.000000  Resc_cpu: 5530467538865
  Resp: 65842137.295423  Resp_io: 65700544.000000  Resc_cpu: 5530467538865
kkoqbc-subheap (delete addr=0x7f0472562de8, in-use=46248, alloc=65704)
kkoqbc-end:
        :
    call(in-use=493208, alloc=573376), compile(in-use=1393504, alloc=1394736), execution(in-use=25208, alloc=28368)

kkoqbc: finish optimizing query block SEL$9AE0327A (#5)
kkoqbc: optimizing query block SEL$B7DF437B (#1)
        
        :
    call(in-use=491000, alloc=573376), compile(in-use=1399680, alloc=1403024), execution(in-use=25368, alloc=28368)

kkoqbc-subheap (create addr=0x7f0472562de8)
****************
QUERY BLOCK TEXT
****************
SELECT /*query10*/
    cd_gender,
    cd_marital_status,
    cd_education_status,
    COUNT(*) cnt1,
    cd_purchase_estimate,
    COUNT(*) cnt2,
    cd_credit_rating,
    COUNT(*) cnt3,
    cd_dep_count,
    COUNT(*) cnt4,
    cd_dep_employed_count,
    COUNT(*) cnt5,
    cd_dep_college_count,
    COUNT(*) cnt6
FROM
    customer c,
    customer_address ca,
    customer_demographics
WHERE
    -- join predicates
        c.c_current_addr_sk = ca.ca_address_sk
    AND cd_demo_sk = c.c_current_cdemo_sk
    -- filter predicates
    AND ca.ca_county IN (
        'Chouteau County',
        'Dixie County',
        'Harrisonburg city',
        'Lowndes County',
        'Dinwiddie County'
    )
    -- filter predicate (subquery)
    AND EXISTS (
        SELECT
            *
        FROM
            store_sales ss,
            date_dim
        WHERE
            c.c_customer_sk = ss.ss_customer_sk
            AND ss_sold_date_sk = d_date_sk
            AND d_year = 2001
            AND d_moy BETWEEN 1 AND 1 + 3
            AND ( EXISTS (
                SELECT
                    *
                FROM
                    web_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = ws_bill_customer_sk
                    AND ws_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            )
                  OR EXISTS (
                SELECT
                    *
                FROM
                    catalog_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = cs_ship_customer_sk
                    AND cs_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            ) )
    )
GROUP BY
    cd_gender,
    cd_marital_status,
    cd_education_status,
    cd_purchase_estimate,
    cd_credit_rating,
    cd_dep_count,
    cd_dep_employed_count,
    cd_dep_college_count

---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$B7DF437B nbfros=2 flg=0
  fro(0): flg=0 objn=74168 hint_alias="C"@"SEL$1"
  fro(1): flg=1 objn=0 hint_alias="VW_GBF_1"@"SEL$6B22DB24"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3255 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: CUSTOMER  Alias:  C
  #Rows: 1080000  SSZ: 0  LGR: 0  #Blks:  23374  AvgRowLen:  138.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): C_CUSTOMER_SK(NUMBER)
    AvgLen: 6 NDV: 1080000 Nulls: 0 Density: 0.000001 Min: 1.000000 Max: 1080000.000000
  Column (#5): C_CURRENT_ADDR_SK(NUMBER)
    AvgLen: 5 NDV: 457472 Nulls: 0 Density: 0.000002 Min: 1.000000 Max: 539997.000000
  Column (#3): C_CURRENT_CDEMO_SK(NUMBER)
    AvgLen: 6 NDV: 772544 Nulls: 0 Density: 0.000001 Min: 18.000000 Max: 1920799.000000
Index Stats::
  Index: CUSTOMER_PK_IDX  Col#: 1
  LVLS: 2  #LB: 2266  #DK: 1080000  LB/K: 1.00  DB/K: 1.00  CLUF: 75684.00  NRW: 1080000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table: VW_GBF_1  Alias: VW_GBF_1  (NOT ANALYZED)
  #Rows: 0  SSZ: 0  LGR: 0  #Blks:  0  AvgRowLen:  0.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 0
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#9): ITEM_9(CHARACTER)
    AvgLen: 2 NDV: 2 Nulls: 0 Density: 0.249925
    Histogram: Freq  #Bkts: 2  UncompBkts: 1920800  EndPtVals: 2  ActualVal: no 
  Column (#10): ITEM_10(CHARACTER)
    AvgLen: 2 NDV: 5 Nulls: 0 Density: 0.098953
    Histogram: Freq  #Bkts: 5  UncompBkts: 1920800  EndPtVals: 5  ActualVal: yes
  Column (#11): ITEM_11(CHARACTER)
    AvgLen: 21 NDV: 7 Nulls: 0 Density: 0.070771
    Histogram: Freq  #Bkts: 7  UncompBkts: 1920800  EndPtVals: 7  ActualVal: yes
  Column (#12): ITEM_12(NUMBER)
    AvgLen: 4 NDV: 9500 Nulls: 0 Density: 0.000105 Min: 500.000000 Max: 9999.000000
  Column (#13): ITEM_13(CHARACTER)
    AvgLen: 11 NDV: 4 Nulls: 0 Density: 0.250000
  Column (#14): ITEM_14(NUMBER)
    AvgLen: 3 NDV: 6 Nulls: 0 Density: 0.166667 Min: 0.000000 Max: 5.000000
  Column (#15): ITEM_15(NUMBER)
    AvgLen: 3 NDV: 6 Nulls: 0 Density: 0.166667 Min: 0.000000 Max: 5.000000
  Column (#16): ITEM_16(NUMBER)
    AvgLen: 3 NDV: 6 Nulls: 0 Density: 0.166667 Min: 0.000000 Max: 5.000000
  Column (#2): ITEM_2(NUMBER)
    AvgLen: 5 NDV: 540000 Nulls: 0 Density: 0.000002 Min: 1.000000 Max: 540000.000000
  Column (#1): ITEM_1(NUMBER)
    AvgLen: 6 NDV: 1920800 Nulls: 0 Density: 0.000001 Min: 1.000000 Max: 1920800.000000
try to generate single-table filter predicates from ORs for query block SEL$B7DF437B (#1)
finally: "C"."C_CURRENT_ADDR_SK"="VW_GBF_1"."ITEM_2" AND "VW_GBF_1"."ITEM_1"="C"."C_CURRENT_CDEMO_SK" AND  EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM" WHERE "SS"."SS_CUSTOMER_SK"=:B1 AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND ( EXISTS (SELECT 0 FROM "WEB_SALES" "WEB_SALES","DATE_DIM" "DATE_DIM" WHERE "WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B2 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1) OR  EXISTS (SELECT 0 FROM "CATALOG_SALES" "CATALOG_SALES","DATE_DIM" "DATE_DIM" WHERE "CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B3 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1)))

=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$B7DF437B (#1)
Applicable DS directives:
   dirid = 9316027922818115912, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74168)[3, 5]}
Checking valid directives for the query block
  SPD: Return code in qosdDSDirSetup: NODIR, estType = GROUP_BY
  SPD: Return code in qosdDSDirSetup: NODIR, estType = QUERY_BLOCK
Return code in qosdSetupDirCtx4QB: EXISTS
=====================================
SPD: END context at query block level
=====================================
Access path analysis for VW_GBF_1

Access path analysis for CUSTOMER
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for CUSTOMER[C] 
  SPD: Return code in qosdDSDirSetup: NODIR, estType = TABLE

 kkecdn: Single Table Predicate: EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM" WHERE "SS"."SS_CUSTOMER_SK"=:B1 AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND ( EXISTS (SELECT 0 FROM "WEB_SALES" "WEB_SALES","DATE_DIM" "DATE_DIM" WHERE "WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B2 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1) OR  EXISTS (SELECT 0 FROM "CATALOG_SALES" "CATALOG_SALES","DATE_DIM" "DATE_DIM" WHERE "CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B3 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1)))
  Column (#1): C_CUSTOMER_SK(NUMBER)
    AvgLen: 6 NDV: 1080000 Nulls: 0 Density: 0.000001 Min: 1.000000 Max: 1080000.000000
  Table: CUSTOMER  Alias: C
    Card: Original: 1080000.000000  Rounded: 1080000  Computed: 1080000.000000  Non Adjusted: 1080000.000000
  Scan IO  Cost (Disk) =   6332.000000
  Scan CPU Cost (Disk) =   414856538.560000
  Cost of predicates:
    io = NOCOST, cpu = 20.000000, sel = 0.050000 flag = 2562  ( EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM" WHERE "SS"."SS_CUSTOMER_SK"=:B1 AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND ( EXISTS (SELECT 0 FROM "WEB_SALES" "WEB_SALES","DATE_DIM" "DATE_DIM" WHERE "WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B2 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1) OR  EXISTS (SELECT 0 FROM "CATALOG_SALES" "CATALOG_SALES","DATE_DIM" "DATE_DIM" WHERE "CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B3 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1))))
  Total Scan IO  Cost  =   6332.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 1080000.000000 (#rows))
                       =   6332.000000
  Total Scan CPU  Cost =   414856538.560000 (scan (Disk))
                         + 21600000.000000 (cpu filter eval) (= 20.000000 (per row) * 1080000.000000 (#rows))
                       =   436456538.560000
  Access Path: TableScan
    Cost:  6343.174339  Resp: 6343.174339  Degree: 0
      Cost_io: 6332.000000  Cost_cpu: 436456539
      Resp_io: 6332.000000  Resp_cpu: 436456539
  Best:: AccessPath: TableScan
         Cost: 6343.174339  Degree: 1  Resp: 6343.174339  Card: 1080000.000000  Bytes: 0.000000

Grouping column cardinality [    ITEM_9]    2
Grouping column cardinality [   ITEM_10]    5
Grouping column cardinality [   ITEM_11]    7
Grouping column cardinality [   ITEM_12]    9500
Grouping column cardinality [   ITEM_13]    4
Grouping column cardinality [   ITEM_14]    6
Grouping column cardinality [   ITEM_15]    6
Grouping column cardinality [   ITEM_16]    6
Join ColGroups for CUSTOMER[C] and <unnamed>[] : Using cdn sanity check
***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE:  Bypassed; QB is not duplicate insignificant SEL$B7DF437B (#1)
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  CUSTOMER[C]#0  VW_GBF_1[VW_GBF_1]#1

***************
Now joining: VW_GBF_1[VW_GBF_1]#1
***************
NL Join
  Outer table: Card: 1080000.000000  Cost: 6343.174339  Resp: 6343.174339  Degree: 1  Bytes: 
Access path analysis for VW_GBF_1
  Inner table: VW_GBF_1  Alias: VW_GBF_1
  Access Path: TableScan
    NL Join:  Cost: 6343.174339  Resp: 6343.174339  Degree: 1
      Cost_io: 6332.000000  Cost_cpu: 436456539
      Resp_io: 6332.000000  Resp_cpu: 436456539

  Best NL cost: 6343.174339
          resc: 6343.174339  resc_io: 6332.000000  resc_cpu: 436456539
          resp: 6343.174339  resp_io: 6332.000000  resc_cpu: 436456539
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
ColGroup cardinality sanity check: ndv for  CUSTOMER[C] = 1080000.000000 
Join selectivity using 1 ColGroups: 9.2593e-07 (sel1 = 0.000000, sel2 = 0.000000)
Join Card:  2511938783.000000 = outer (1080000.000000) * inner (2511938783.000000) * sel (9.2593e-07)
Join Card - Rounded: 2511938783 Computed: 2511938783.000000
Grouping column cardinality [    ITEM_9]    2
Grouping column cardinality [   ITEM_10]    5
Grouping column cardinality [   ITEM_11]    7
Grouping column cardinality [   ITEM_12]    9500
Grouping column cardinality [   ITEM_13]    4
Grouping column cardinality [   ITEM_14]    6
Grouping column cardinality [   ITEM_15]    6
Grouping column cardinality [   ITEM_16]    6
  Outer table:  CUSTOMER  Alias: C
    resc: 6343.174339  card 1080000.000000  bytes:   deg: 1  resp: 6343.174339
  Inner table:  VW_GBF_1  Alias: VW_GBF_1
    resc: 0.000000  card: 2511938783.000000  bytes:   deg: 0  resp: 0.000000
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 3835 Row size:     29 Total Rows:        1080000
      Initial runs:   2 Merge passes:  1 IO Cost / pass:       2078
      Total IO sort cost: 5913.000000      Total CPU sort cost: 1108751040
      Total Temp space used: 60826000
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 49820530 Row size:     162 Total Rows:     2511938783
      Initial runs:   3881 Merge passes:  2 IO Cost / pass:    26986122
      Total IO sort cost: 103792774.000000      Total CPU sort cost: 5374358177884
      Total Temp space used: 894687118000
  SM join: Resc: 103942655.080652  Resp: 103942655.080652  [multiMatchCost=0.000000]
SM Join
  SM cost: 103942655.080652 
     resc: 103942655.080652 resc_io: 103805019.000000 resc_cpu: 5375903385463
     resp: 103942655.080652 resp_io: 103805019.000000 resp_cpu: 5375903385463
  Outer table:  CUSTOMER  Alias: C
    resc: 6343.174339  card 1080000.000000  bytes:   deg: 1  resp: 6343.174339
  Inner table:  VW_GBF_1  Alias: VW_GBF_1
    resc: 0.000000  card: 2511938783.000000  bytes:   deg: 0  resp: 0.000000
    using dmeth: 2  #groups: 1
    Cost per ptn: 17823684.875488  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 3824  probefrag: 45994973  ppasses: 1
  Hash join: Resc: 17830028.049827  Resp: 17830028.049827  [multiMatchCost=0.000000]
HA Join
  HA cost: 17830028.049827  
     resc: 17830028.049827 resc_io: 17812319.000000 resc_cpu: 691694652083
     resp: 17830028.049827 resp_io: 17812319.000000 resp_cpu: 691694652083
GROUP BY sort
GROUP BY/Correlated Subquery Filter adjustment factor: 0.088388
GROUP BY cardinality:  50784410.000000, TABLE cardinality:  2511938783.000000
Vector group by not costed because no SYS_OP_XLATE_USE in group by.
kdmoGByPushdownValid: more than one table in group by    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 55663678 Row size:     181 Total Rows:     2511938783
      Initial runs:   4336 Merge passes:  2 IO Cost / pass:    30151160
      Total IO sort cost: 61427685.000000      Total CPU sort cost: 4918667973887
      Total Temp space used: 489947743000
Best:: JoinMethod: Hash
       Cost: 79383642.802171  Degree: 1  Resp: 79383642.802171  Card: 2511938783.000000 Bytes: 
***********************
Best so far:  Table#: 0  cost: 6343.174339  card: 1080000.000000  bytes: 18360000.000000
              Table#: 1  cost: 79383642.802171  card: 2511938783.000000  bytes: 389350511365.000000
***********************

*********************************
Number of join permutations tried: 1
*********************************
Enumerating distribution method (advanced)
--- Distribution method for 
join between C[CUSTOMER](serial) and VW_GBF_1[VW_GBF_1](serial); jm = 1; right side access path = TableScan
---- serial Hash-Join -> NONE

kkoaccsqf: Current query block SEL$B7DF437B (#1) is serial
kkoaccsqf: correlated subquery query block SEL$2 (#2) in filter               : serial
Final adjusted join cardinality: 2326.000000, sq. fil. factor: 1080000.000000
(newjo-save)    [0 1 ]
GROUP BY/Correlated Subquery Filter adjustment factor: 0.088388
GROUP BY cardinality:  2326.000000, TABLE cardinality:  2326.000000
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 52 Row size:     181 Total Rows:           2326
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 40230834
      Total Temp space used: 0
LORE: Or-Expansion validity checks failed on query block SEL$B7DF437B (#1) because Cost based OR expansion enabled
Transfer Optimizer annotations for query block SEL$B7DF437B (#1)
Final cost for query block SEL$B7DF437B (#1) - All Rows Plan:
  Best join order: 1
  Cost: 79383642.802171  Degree: 1  Card: 2326.000000  Bytes: 389350511365.000000
  Resc: 79383642.802171  Resc_io: 79240004.000000  Resc_cpu: 5610362625970
  Resp: 79383642.802171  Resp_io: 79240004.000000  Resc_cpu: 5610362625970
kkoqbc-subheap (delete addr=0x7f0472562de8, in-use=45200, alloc=49272)
kkoqbc-end:
        :
    call(in-use=511792, alloc=573272), compile(in-use=1408456, alloc=1411312), execution(in-use=27104, alloc=28368)

kkoqbc: finish optimizing query block SEL$B7DF437B (#1)
First K Rows: K = 1.00, N = 120.00
First K Rows: K = 1.00, N = 69.00
First K Rows: K = 1.00, N = 37.00
First K Rows: Setup end
***********************
CBQT: Looking for cost annotations for query block SEL$3, key = SEL$3_00010000_0
CBQT: Replaced cost annotations in query block SEL$3.
CBQT: Looking for cost annotations for query block SEL$4, key = SEL$4_00010000_0
CBQT: Replaced cost annotations in query block SEL$4.
CBQT: Looking for cost annotations for query block SEL$2, key = SEL$2_00010000_0
CBQT: Replaced cost annotations in query block SEL$2.
CBQT: Looking for cost annotations for query block SEL$9AE0327A, key = SEL$9AE0327A_00008040_2
CBQT: Could not find stored cost annotations.
kkoqbc: optimizing query block SEL$3 (#4)
        
        :
    call(in-use=509584, alloc=573272), compile(in-use=1409432, alloc=1411312), execution(in-use=27104, alloc=28368)

kkoqbc-end:
        :
    call(in-use=509584, alloc=573272), compile(in-use=1409432, alloc=1411312), execution(in-use=27104, alloc=28368)

kkoqbc: finish optimizing query block SEL$3 (#4)
kkoqbc: optimizing query block SEL$4 (#3)
        
        :
    call(in-use=509584, alloc=573272), compile(in-use=1409528, alloc=1411312), execution(in-use=27104, alloc=28368)

kkoqbc-end:
        :
    call(in-use=509584, alloc=573272), compile(in-use=1409528, alloc=1411312), execution(in-use=27104, alloc=28368)

kkoqbc: finish optimizing query block SEL$4 (#3)
kkoqbc: optimizing query block SEL$2 (#2)
        
        :
    call(in-use=509584, alloc=573272), compile(in-use=1409624, alloc=1411312), execution(in-use=27104, alloc=28368)

kkoqbc-end:
        :
    call(in-use=509584, alloc=573272), compile(in-use=1409624, alloc=1411312), execution(in-use=27104, alloc=28368)

kkoqbc: finish optimizing query block SEL$2 (#2)
kkoqbc: optimizing query block SEL$9AE0327A (#5)
        
        :
    call(in-use=509584, alloc=573272), compile(in-use=1409664, alloc=1411312), execution(in-use=27104, alloc=28368)

kkoqbc-subheap (create addr=0x7f0472562de8)
****************
QUERY BLOCK TEXT
****************
Not available.
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$9AE0327A nbfros=2 flg=0
  fro(0): flg=0 objn=74169 hint_alias="CA"@"SEL$1"
  fro(1): flg=0 objn=74170 hint_alias="CUSTOMER_DEMOGRAPHICS"@"SEL$1"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3255 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: CUSTOMER_ADDRESS  Alias: CA
  #Rows: 540000  SSZ: 0  LGR: 0  #Blks:  13174  AvgRowLen:  152.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): CA_ADDRESS_SK(NUMBER)
    AvgLen: 5 NDV: 540000 Nulls: 0 Density: 0.000002 Min: 1.000000 Max: 540000.000000
  Column (#8): CA_COUNTY(VARCHAR2)
    AvgLen: 16 NDV: 1877 Nulls: 0 Density: 0.000471
    Histogram: Hybrid  #Bkts: 254  UncompBkts: 5580  EndPtVals: 254  ActualVal: yes
Index Stats::
  Index: CA_ADDRESS_PK_IDX  Col#: 1
  LVLS: 2  #LB: 1127  #DK: 540000  LB/K: 1.00  DB/K: 1.00  CLUF: 12283.00  NRW: 540000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table: CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
  #Rows: 1920800  SSZ: 0  LGR: 0  #Blks:  17254  AvgRowLen:  54.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#9): CD_DEP_COLLEGE_COUNT(NUMBER)
    AvgLen: 3 NDV: 6 Nulls: 0 Density: 0.166667 Min: 0.000000 Max: 5.000000
  Column (#8): CD_DEP_EMPLOYED_COUNT(NUMBER)
    AvgLen: 3 NDV: 6 Nulls: 0 Density: 0.166667 Min: 0.000000 Max: 5.000000
  Column (#7): CD_DEP_COUNT(NUMBER)
    AvgLen: 3 NDV: 6 Nulls: 0 Density: 0.166667 Min: 0.000000 Max: 5.000000
  Column (#6): CD_CREDIT_RATING(CHARACTER)
    AvgLen: 11 NDV: 4 Nulls: 0 Density: 0.250000
  Column (#5): CD_PURCHASE_ESTIMATE(NUMBER)
    AvgLen: 4 NDV: 9500 Nulls: 0 Density: 0.000105 Min: 500.000000 Max: 9999.000000
  Column (#4): CD_EDUCATION_STATUS(CHARACTER)
    AvgLen: 21 NDV: 7 Nulls: 0 Density: 0.070771
    Histogram: Freq  #Bkts: 7  UncompBkts: 1920800  EndPtVals: 7  ActualVal: yes
  Column (#3): CD_MARITAL_STATUS(CHARACTER)
    AvgLen: 2 NDV: 5 Nulls: 0 Density: 0.098953
    Histogram: Freq  #Bkts: 5  UncompBkts: 1920800  EndPtVals: 5  ActualVal: yes
  Column (#2): CD_GENDER(CHARACTER)
    AvgLen: 2 NDV: 2 Nulls: 0 Density: 0.249925
    Histogram: Freq  #Bkts: 2  UncompBkts: 1920800  EndPtVals: 2  ActualVal: no 
  Column (#1): CD_DEMO_SK(NUMBER)
    AvgLen: 6 NDV: 1920800 Nulls: 0 Density: 0.000001 Min: 1.000000 Max: 1920800.000000
Index Stats::
  Index: CD_DEMO_PK_IDX  Col#: 1
  LVLS: 2  #LB: 4138  #DK: 1920800  LB/K: 1.00  DB/K: 1.00  CLUF: 795806.00  NRW: 1920800.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
try to generate single-table filter predicates from ORs for query block SEL$9AE0327A (#5)
finally: "CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County'

=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$9AE0327A (#5)
Applicable DS directives:
   dirid = 7754152966831092939, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {EC(74170)[3, 4]}
   dirid = 18439699102505563871, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {EC(74169)[8]}
Checking valid directives for the query block
  SPD: Return code in qosdDSDirSetup: NODIR, estType = GROUP_BY
  SPD: Return code in qosdDSDirSetup: NODIR, estType = QUERY_BLOCK
Return code in qosdSetupDirCtx4QB: EXISTS
=====================================
SPD: END context at query block level
=====================================
Access path analysis for CUSTOMER_DEMOGRAPHICS
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS] 
  SPD: Return code in qosdDSDirSetup: NODIR, estType = TABLE
  Table: CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
    Card: Original: 1920800.000000  Rounded: 1920800  Computed: 1920800.000000  Non Adjusted: 1920800.000000
  Scan IO  Cost (Disk) =   4675.000000
  Scan CPU Cost (Disk) =   718321325.760000
  Total Scan IO  Cost  =   4675.000000 (scan (Disk))
                       =   4675.000000
  Total Scan CPU  Cost =   718321325.760000 (scan (Disk))
                       =   718321325.760000
  Access Path: TableScan
    Cost:  4693.390757  Resp: 4693.390757  Degree: 0
      Cost_io: 4675.000000  Cost_cpu: 718321326
      Resp_io: 4675.000000  Resp_cpu: 718321326
  ****** trying bitmap/domain indexes ******
 ****** Costing Index CD_DEMO_PK_IDX
  Access Path: index (FullScan)
    Index: CD_DEMO_PK_IDX
    resc_io: 4140.000000  resc_cpu: 413642762
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 4150.590251  Resp: 4150.590251  Degree: 0
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: TableScan
         Cost: 4693.390757  Degree: 1  Resp: 4693.390757  Card: 1920800.000000  Bytes: 0.000000

Access path analysis for CUSTOMER_ADDRESS
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for CUSTOMER_ADDRESS[CA] 
  SPD: Directive valid: dirid = 18439699102505563871, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {EC(74169)[8]}
  SPD: Return code in qosdDSDirSetup: EXISTS, estType = TABLE

 kkecdn: Single Table Predicate:"CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County'
  Using density: 4.7103e-04 of col #8 as selectivity of pred having unreasonably low value
  Using density: 4.7103e-04 of col #8 as selectivity of pred having unreasonably low value
  Using density: 4.7103e-04 of col #8 as selectivity of pred having unreasonably low value
  Using density: 4.7103e-04 of col #8 as selectivity of pred having unreasonably low value
  Estimated selectivity: 5.3763e-04 , endpoint value predicate, col: #8 
  Table: CUSTOMER_ADDRESS  Alias: CA
    Card: Original: 540000.000000  Rounded: 1308  Computed: 1307.756551  Non Adjusted: 1307.756551
  Scan IO  Cost (Disk) =   3570.000000
  Scan CPU Cost (Disk) =   250417850.560000
  Cost of predicates:
    io = 0.000000, cpu = 249.764594, sel = 0.002422 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Chouteau County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Dinwiddie County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Dixie County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Harrisonburg city')
      io = NOCOST, cpu = 50.000000, sel = 0.000538 flag = 2048  ("CA"."CA_COUNTY"='Lowndes County')
  Total Scan IO  Cost  =   3570.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 540000.000000 (#rows))
                       =   3570.000000
  Total Scan CPU  Cost =   250417850.560000 (scan (Disk))
                         + 134872880.645405 (cpu filter eval) (= 249.764594 (per row) * 540000.000000 (#rows))
                       =   385290731.205405
  Access Path: TableScan
    Cost:  3579.864371  Resp: 3579.864371  Degree: 0
      Cost_io: 3570.000000  Cost_cpu: 385290731
      Resp_io: 3570.000000  Resp_cpu: 385290731
  ****** trying bitmap/domain indexes ******
 ****** Costing Index CA_ADDRESS_PK_IDX
  Access Path: index (FullScan)
    Index: CA_ADDRESS_PK_IDX
    resc_io: 1129.000000  resc_cpu: 116040106
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1131.970906  Resp: 1131.970906  Degree: 0
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: TableScan
         Cost: 3579.864371  Degree: 1  Resp: 3579.864371  Card: 1307.756551  Bytes: 0.000000

Grouping column cardinality [CD_DEMO_SK]    1920800
Grouping column cardinality [CA_ADDRESS]    1308
Grouping column cardinality [ CD_GENDER]    2
Grouping column cardinality [CD_MARITAL]    5
Grouping column cardinality [CD_EDUCATI]    7
Grouping column cardinality [CD_PURCHAS]    9500
Grouping column cardinality [CD_CREDIT_]    4
Grouping column cardinality [CD_DEP_COU]    6
Grouping column cardinality [CD_DEP_EMP]    6
Grouping column cardinality [CD_DEP_COL]    6
***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE:  Bypassed; QB is not duplicate insignificant SEL$9AE0327A (#5)
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  CUSTOMER_ADDRESS[CA]#0  CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS]#1

***************
Now joining: CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS]#1
***************
NL Join
  Outer table: Card: 1307.756551  Cost: 3579.864371  Resp: 3579.864371  Degree: 1  Bytes: 
Access path analysis for CUSTOMER_DEMOGRAPHICS
  Scan IO  Cost (Disk) =   4672.959480
  Scan CPU Cost (Disk) =   718321325.760000
  Total Scan IO  Cost  =   4672.959480 (scan (Disk))
                       =   4672.959480
  Total Scan CPU  Cost =   718321325.760000 (scan (Disk))
                       =   718321325.760000
  Inner table: CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
  Access Path: TableScan
    NL Join:  Cost: 6139865.974310  Resp: 6139865.974310  Degree: 1
      Cost_io: 6115801.000000  Cost_cpu: 939949584825
      Resp_io: 6115801.000000  Resp_cpu: 939949584825
  ****** trying bitmap/domain indexes ******
 ****** Costing Index CD_DEMO_PK_IDX
  Access Path: index (FullScan)
    Index: CD_DEMO_PK_IDX
    resc_io: 4140.000000  resc_cpu: 413642762
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 4150.590251  Resp: 4150.590251  Degree: 0
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 6139865.974310
          resc: 6139865.974310  resc_io: 6115801.000000  resc_cpu: 939949584825
          resp: 6139865.974310  resp_io: 6115801.000000  resc_cpu: 939949584825
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Join Card:  2511938782.753941 = outer (1307.756551) * inner (1920800.000000) * sel (1.000000)
Join Card - Rounded: 2511938783 Computed: 2511938782.753941
Grouping column cardinality [CD_DEMO_SK]    1920800
Grouping column cardinality [CA_ADDRESS]    1308
Grouping column cardinality [ CD_GENDER]    2
Grouping column cardinality [CD_MARITAL]    5
Grouping column cardinality [CD_EDUCATI]    7
Grouping column cardinality [CD_PURCHAS]    9500
Grouping column cardinality [CD_CREDIT_]    4
Grouping column cardinality [CD_DEP_COU]    6
Grouping column cardinality [CD_DEP_EMP]    6
Grouping column cardinality [CD_DEP_COL]    6
GROUP BY sort

GROUP BY/Correlated Subquery Filter adjustment factor: 0.044194
GROUP BY cardinality:  2511938783.000000, TABLE cardinality:  2511938783.000000
Vector group by not costed because no SYS_OP_XLATE_USE in group by.
kdmoGByPushdownValid: more than one table in group by    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 28600675 Row size:     93 Total Rows:     2511938783
      Initial runs:   2228 Merge passes:  2 IO Cost / pass:    15492034
      Total IO sort cost: 59584743.000000      Total CPU sort cost: 4590517954039
      Total Temp space used: 254046979000
Best:: JoinMethod: NestedLoop
       Cost: 65842137.295423  Degree: 1  Resp: 65842137.295423  Card: 2511938782.753941 Bytes: 
***********************
Best so far:  Table#: 0  cost: 3579.864371  card: 1307.756551  bytes: 27468.000000
              Table#: 1  cost: 65842137.295423  card: 2511938782.753941  bytes: 188395408725.000000
***********************
Join order[2]:  CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS]#1  CUSTOMER_ADDRESS[CA]#0

***************
Now joining: CUSTOMER_ADDRESS[CA]#0
***************
NL Join
  Outer table: Card: 1920800.000000  Cost: 4693.390757  Resp: 4693.390757  Degree: 1  Bytes: 
Access path analysis for CUSTOMER_ADDRESS
  Scan IO  Cost (Disk) =   3567.958334
  Scan CPU Cost (Disk) =   250417850.560000
  Cost of predicates:
    io = 0.000000, cpu = 249.764594, sel = 0.002422 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Chouteau County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Dinwiddie County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Dixie County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Harrisonburg city')
      io = NOCOST, cpu = 50.000000, sel = 0.000538 flag = 2048  ("CA"."CA_COUNTY"='Lowndes County')
  Total Scan IO  Cost  =   3567.958334 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 540000.000000 (#rows))
                       =   3567.958334
  Total Scan CPU  Cost =   250417850.560000 (scan (Disk))
                         + 134872880.645405 (cpu filter eval) (= 249.764594 (per row) * 540000.000000 (#rows))
                       =   385290731.205405
  Inner table: CUSTOMER_ADDRESS  Alias: CA
  Access Path: TableScan
    NL Join:  Cost: 6872286545.457758  Resp: 6872286545.457758  Degree: 1
      Cost_io: 6853339043.000000  Cost_cpu: 740067154820668
      Resp_io: 6853339043.000000  Resp_cpu: 740067154820668
  ****** trying bitmap/domain indexes ******
 ****** Costing Index CA_ADDRESS_PK_IDX
  Access Path: index (FullScan)
    Index: CA_ADDRESS_PK_IDX
    resc_io: 1129.000000  resc_cpu: 116040106
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1131.970906  Resp: 1131.970906  Degree: 0
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 6872286545.457758
          resc: 6872286545.457758  resc_io: 6853339043.000000  resc_cpu: 740067154820668
          resp: 6872286545.457758  resp_io: 6853339043.000000  resc_cpu: 740067154820668
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Join Card:  2511938782.753941 = outer (1920800.000000) * inner (1307.756551) * sel (1.000000)
Join Card - Rounded: 2511938783 Computed: 2511938782.753941
Grouping column cardinality [CD_DEMO_SK]    1920800
Grouping column cardinality [CA_ADDRESS]    1308
Grouping column cardinality [ CD_GENDER]    2
Grouping column cardinality [CD_MARITAL]    5
Grouping column cardinality [CD_EDUCATI]    7
Grouping column cardinality [CD_PURCHAS]    9500
Grouping column cardinality [CD_CREDIT_]    4
Grouping column cardinality [CD_DEP_COU]    6
Grouping column cardinality [CD_DEP_EMP]    6
Grouping column cardinality [CD_DEP_COL]    6
GROUP BY sort

GROUP BY/Correlated Subquery Filter adjustment factor: 0.044194
GROUP BY cardinality:  2511938783.000000, TABLE cardinality:  2511938783.000000
Vector group by not costed because no SYS_OP_XLATE_USE in group by.
kdmoGByPushdownValid: more than one table in group by    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 28600675 Row size:     93 Total Rows:     2511938783
      Initial runs:   2228 Merge passes:  2 IO Cost / pass:    15492034
      Total IO sort cost: 59584743.000000      Total CPU sort cost: 4590517954039
      Total Temp space used: 212142334000
Join order aborted: cost > best plan cost
***********************
(newjo-stop-1) k:0, spcnt:0, perm:2, maxperm:2000

*********************************
Number of join permutations tried: 2
*********************************
Enumerating distribution method (advanced)
--- Distribution method for 
join between CA[CUSTOMER_ADDRESS](serial) and CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS](serial); jm = 14; right side access path = TableScan
---- serial Hash-Join -> NONE

(newjo-save)    [0 1 ]

GROUP BY/Correlated Subquery Filter adjustment factor: 0.044194
GROUP BY cardinality:  2511938783.000000, TABLE cardinality:  2511938783.000000
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 28600675 Row size:     93 Total Rows:     2511938783
      Initial runs:   2228 Merge passes:  2 IO Cost / pass:    15492034
      Total IO sort cost: 59584743.000000      Total CPU sort cost: 4590517954039
      Total Temp space used: 254046979000
LORE: Or-Expansion validity checks failed on query block SEL$9AE0327A (#5) because Cost based OR expansion enabled
Transfer Optimizer annotations for query block SEL$9AE0327A (#5)
Final cost for query block SEL$9AE0327A (#5) - All Rows Plan:
  Best join order: 1
  Cost: 65842137.295423  Degree: 1  Card: 2511938783.000000  Bytes: 376790817450.000000
  Resc: 65842137.295423  Resc_io: 65700544.000000  Resc_cpu: 5530467538865
  Resp: 65842137.295423  Resp_io: 65700544.000000  Resc_cpu: 5530467538865
kkoqbc-subheap (delete addr=0x7f0472562de8, in-use=69872, alloc=89328)
kkoqbc-end:
        :
    call(in-use=519216, alloc=629776), compile(in-use=1417408, alloc=1418296), execution(in-use=27104, alloc=28368)

kkoqbc: finish optimizing query block SEL$9AE0327A (#5)
kkoqbc: optimizing query block SEL$B7DF437B (#1)
        
        :
    call(in-use=519216, alloc=629776), compile(in-use=1417408, alloc=1418296), execution(in-use=27104, alloc=28368)

kkoqbc-subheap (create addr=0x7f0472562de8)
****************
QUERY BLOCK TEXT
****************
SELECT /*query10*/
    cd_gender,
    cd_marital_status,
    cd_education_status,
    COUNT(*) cnt1,
    cd_purchase_estimate,
    COUNT(*) cnt2,
    cd_credit_rating,
    COUNT(*) cnt3,
    cd_dep_count,
    COUNT(*) cnt4,
    cd_dep_employed_count,
    COUNT(*) cnt5,
    cd_dep_college_count,
    COUNT(*) cnt6
FROM
    customer c,
    customer_address ca,
    customer_demographics
WHERE
    -- join predicates
        c.c_current_addr_sk = ca.ca_address_sk
    AND cd_demo_sk = c.c_current_cdemo_sk
    -- filter predicates
    AND ca.ca_county IN (
        'Chouteau County',
        'Dixie County',
        'Harrisonburg city',
        'Lowndes County',
        'Dinwiddie County'
    )
    -- filter predicate (subquery)
    AND EXISTS (
        SELECT
            *
        FROM
            store_sales ss,
            date_dim
        WHERE
            c.c_customer_sk = ss.ss_customer_sk
            AND ss_sold_date_sk = d_date_sk
            AND d_year = 2001
            AND d_moy BETWEEN 1 AND 1 + 3
            AND ( EXISTS (
                SELECT
                    *
                FROM
                    web_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = ws_bill_customer_sk
                    AND ws_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            )
                  OR EXISTS (
                SELECT
                    *
                FROM
                    catalog_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = cs_ship_customer_sk
                    AND cs_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            ) )
    )
GROUP BY
    cd_gender,
    cd_marital_status,
    cd_education_status,
    cd_purchase_estimate,
    cd_credit_rating,
    cd_dep_count,
    cd_dep_employed_count,
    cd_dep_college_count

---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$B7DF437B nbfros=2 flg=0
  fro(0): flg=0 objn=74168 hint_alias="C"@"SEL$1"
  fro(1): flg=1 objn=0 hint_alias="VW_GBF_1"@"SEL$6B22DB24"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3255 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: CUSTOMER  Alias:  C
  #Rows: 1080000  SSZ: 0  LGR: 0  #Blks:  23374  AvgRowLen:  138.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): C_CUSTOMER_SK(NUMBER)
    AvgLen: 6 NDV: 1080000 Nulls: 0 Density: 0.000001 Min: 1.000000 Max: 1080000.000000
  Column (#5): C_CURRENT_ADDR_SK(NUMBER)
    AvgLen: 5 NDV: 457472 Nulls: 0 Density: 0.000002 Min: 1.000000 Max: 539997.000000
  Column (#3): C_CURRENT_CDEMO_SK(NUMBER)
    AvgLen: 6 NDV: 772544 Nulls: 0 Density: 0.000001 Min: 18.000000 Max: 1920799.000000
Index Stats::
  Index: CUSTOMER_PK_IDX  Col#: 1
  LVLS: 2  #LB: 2266  #DK: 1080000  LB/K: 1.00  DB/K: 1.00  CLUF: 75684.00  NRW: 1080000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table: VW_GBF_1  Alias: VW_GBF_1  (NOT ANALYZED)
  #Rows: 0  SSZ: 0  LGR: 0  #Blks:  0  AvgRowLen:  0.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 0
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#9): ITEM_9(CHARACTER)
    AvgLen: 2 NDV: 2 Nulls: 0 Density: 0.249925
    Histogram: Freq  #Bkts: 2  UncompBkts: 1920800  EndPtVals: 2  ActualVal: no 
  Column (#10): ITEM_10(CHARACTER)
    AvgLen: 2 NDV: 5 Nulls: 0 Density: 0.098953
    Histogram: Freq  #Bkts: 5  UncompBkts: 1920800  EndPtVals: 5  ActualVal: yes
  Column (#11): ITEM_11(CHARACTER)
    AvgLen: 21 NDV: 7 Nulls: 0 Density: 0.070771
    Histogram: Freq  #Bkts: 7  UncompBkts: 1920800  EndPtVals: 7  ActualVal: yes
  Column (#12): ITEM_12(NUMBER)
    AvgLen: 4 NDV: 9500 Nulls: 0 Density: 0.000105 Min: 500.000000 Max: 9999.000000
  Column (#13): ITEM_13(CHARACTER)
    AvgLen: 11 NDV: 4 Nulls: 0 Density: 0.250000
  Column (#14): ITEM_14(NUMBER)
    AvgLen: 3 NDV: 6 Nulls: 0 Density: 0.166667 Min: 0.000000 Max: 5.000000
  Column (#15): ITEM_15(NUMBER)
    AvgLen: 3 NDV: 6 Nulls: 0 Density: 0.166667 Min: 0.000000 Max: 5.000000
  Column (#16): ITEM_16(NUMBER)
    AvgLen: 3 NDV: 6 Nulls: 0 Density: 0.166667 Min: 0.000000 Max: 5.000000
  Column (#2): ITEM_2(NUMBER)
    AvgLen: 5 NDV: 540000 Nulls: 0 Density: 0.000002 Min: 1.000000 Max: 540000.000000
  Column (#1): ITEM_1(NUMBER)
    AvgLen: 6 NDV: 1920800 Nulls: 0 Density: 0.000001 Min: 1.000000 Max: 1920800.000000
try to generate single-table filter predicates from ORs for query block SEL$B7DF437B (#1)
finally: "C"."C_CURRENT_ADDR_SK"="VW_GBF_1"."ITEM_2" AND "VW_GBF_1"."ITEM_1"="C"."C_CURRENT_CDEMO_SK" AND  EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM")

=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$B7DF437B (#1)
Applicable DS directives:
   dirid = 9316027922818115912, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74168)[3, 5]}
Checking valid directives for the query block
  SPD: Return code in qosdDSDirSetup: NODIR, estType = GROUP_BY
  SPD: Return code in qosdDSDirSetup: NODIR, estType = QUERY_BLOCK
Return code in qosdSetupDirCtx4QB: EXISTS
=====================================
SPD: END context at query block level
=====================================
Access path analysis for VW_GBF_1

Access path analysis for CUSTOMER
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for CUSTOMER[C] 
  SPD: Return code in qosdDSDirSetup: NODIR, estType = TABLE

 kkecdn: Single Table Predicate: EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM")
  Table: CUSTOMER  Alias: C
    Card: Original: 1080000.000000  Rounded: 1080000  Computed: 1080000.000000  Non Adjusted: 1080000.000000
  Scan IO  Cost (Disk) =   6332.000000
  Scan CPU Cost (Disk) =   414856538.560000
  Cost of predicates:
    io = NOCOST, cpu = 20.000000, sel = 0.050000 flag = 2562  ( EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM"))
  Total Scan IO  Cost  =   6332.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 1080000.000000 (#rows))
                       =   6332.000000
  Total Scan CPU  Cost =   414856538.560000 (scan (Disk))
                         + 21600000.000000 (cpu filter eval) (= 20.000000 (per row) * 1080000.000000 (#rows))
                       =   436456538.560000
  Access Path: TableScan
    Cost:  6343.174339  Resp: 6343.174339  Degree: 0
      Cost_io: 6332.000000  Cost_cpu: 436456539
      Resp_io: 6332.000000  Resp_cpu: 436456539
  Best:: AccessPath: TableScan
         Cost: 6343.174339  Degree: 1  Resp: 6343.174339  Card: 1080000.000000  Bytes: 0.000000

Grouping column cardinality [    ITEM_9]    2
Grouping column cardinality [   ITEM_10]    5
Grouping column cardinality [   ITEM_11]    7
Grouping column cardinality [   ITEM_12]    9500
Grouping column cardinality [   ITEM_13]    4
Grouping column cardinality [   ITEM_14]    6
Grouping column cardinality [   ITEM_15]    6
Grouping column cardinality [   ITEM_16]    6
Join ColGroups for CUSTOMER[C] and <unnamed>[] : Using cdn sanity check
***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE:  Bypassed; QB is not duplicate insignificant SEL$B7DF437B (#1)
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  CUSTOMER[C]#0  VW_GBF_1[VW_GBF_1]#1

***************
Now joining: VW_GBF_1[VW_GBF_1]#1
***************
NL Join
  Outer table: Card: 1080000.000000  Cost: 6343.174339  Resp: 6343.174339  Degree: 1  Bytes: 
Access path analysis for VW_GBF_1
  Inner table: VW_GBF_1  Alias: VW_GBF_1
  Access Path: TableScan
    NL Join:  Cost: 71109508285399.734375  Resp: 71109508285399.734375  Degree: 1
      Cost_io: 70956587526332.000000  Cost_cpu: 5972904942410159104
      Resp_io: 70956587526332.000000  Resp_cpu: 5972904942410159104

  Best NL cost: 71109508285399.734375
          resc: 71109508285399.734375  resc_io: 70956587526332.000000  resc_cpu: 5972904942410159104
          resp: 71109508285399.734375  resp_io: 70956587526332.000000  resc_cpu: 5972904942410159104
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
ColGroup cardinality sanity check: ndv for  CUSTOMER[C] = 1080000.000000 
Join selectivity using 1 ColGroups: 9.2593e-07 (sel1 = 0.000000, sel2 = 0.000000)
Join Card:  2511938783.000000 = outer (1080000.000000) * inner (2511938783.000000) * sel (9.2593e-07)
Join Card - Rounded: 2511938783 Computed: 2511938783.000000
Grouping column cardinality [    ITEM_9]    2
Grouping column cardinality [   ITEM_10]    5
Grouping column cardinality [   ITEM_11]    7
Grouping column cardinality [   ITEM_12]    9500
Grouping column cardinality [   ITEM_13]    4
Grouping column cardinality [   ITEM_14]    6
Grouping column cardinality [   ITEM_15]    6
Grouping column cardinality [   ITEM_16]    6
  Outer table:  CUSTOMER  Alias: C
    resc: 6343.174339  card 1080000.000000  bytes:   deg: 1  resp: 6343.174339
  Inner table:  VW_GBF_1  Alias: VW_GBF_1
    resc: 65842137.295423  card: 2511938783.000000  bytes:   deg: 1  resp: 65842137.295423
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 3835 Row size:     29 Total Rows:        1080000
      Initial runs:   2 Merge passes:  1 IO Cost / pass:       2078
      Total IO sort cost: 5913.000000      Total CPU sort cost: 1108751040
      Total Temp space used: 60826000
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 49820530 Row size:     162 Total Rows:     2511938783
      Initial runs:   3881 Merge passes:  2 IO Cost / pass:    26986122
      Total IO sort cost: 103792774.000000      Total CPU sort cost: 5374358177884
      Total Temp space used: 894687118000
  SM join: Resc: 169784792.376075  Resp: 169784792.376075  [multiMatchCost=0.000000]
SM Join
  SM cost: 169784792.376075 
     resc: 169784792.376075 resc_io: 169505563.000000 resc_cpu: 10906370924327
     resp: 169784792.376075 resp_io: 169505563.000000 resp_cpu: 10906370924327
  Outer table:  CUSTOMER  Alias: C
    resc: 6343.174339  card 1080000.000000  bytes:   deg: 1  resp: 6343.174339
  Inner table:  VW_GBF_1  Alias: VW_GBF_1
    resc: 65842137.295423  card: 2511938783.000000  bytes:   deg: 1  resp: 65842137.295423
    using dmeth: 2  #groups: 1
    Cost per ptn: 17823684.875488  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 3824  probefrag: 45994973  ppasses: 1
  Hash join: Resc: 83672165.345250  Resp: 83672165.345250  [multiMatchCost=0.000000]
HA Join
  HA cost: 83672165.345250  
     resc: 83672165.345250 resc_io: 83512863.000000 resc_cpu: 6222162190947
     resp: 83672165.345250 resp_io: 83512863.000000 resp_cpu: 6222162190947
GROUP BY sort
GROUP BY/Correlated Subquery Filter adjustment factor: 0.088388
GROUP BY cardinality:  50784410.000000, TABLE cardinality:  2511938783.000000
Vector group by not costed because no SYS_OP_XLATE_USE in group by.
kdmoGByPushdownValid: more than one table in group by    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 55663678 Row size:     181 Total Rows:     2511938783
      Initial runs:   4336 Merge passes:  2 IO Cost / pass:    30151160
      Total IO sort cost: 61427685.000000      Total CPU sort cost: 4918667973887
      Total Temp space used: 489947743000
Best:: JoinMethod: Hash
       Cost: 145225780.097594  Degree: 1  Resp: 145225780.097594  Card: 2511938783.000000 Bytes: 
***********************
Best so far:  Table#: 0  cost: 6343.174339  card: 1080000.000000  bytes: 18360000.000000
              Table#: 1  cost: 145225780.097594  card: 2511938783.000000  bytes: 389350511365.000000
***********************
Join order[2]:  VW_GBF_1[VW_GBF_1]#1  CUSTOMER[C]#0

***************
Now joining: CUSTOMER[C]#0
***************
NL Join
  Outer table: Card: 2511938783.000000  Cost: 65842137.295423  Resp: 65842137.295423  Degree: 1  Bytes: 
Access path analysis for CUSTOMER
  Scan IO  Cost (Disk) =   6330.458333
  Scan CPU Cost (Disk) =   414856538.560000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000002 flag = 2048  ("C"."C_CURRENT_ADDR_SK"="VW_GBF_1"."ITEM_2")
    io = NOCOST, cpu = 50.000000, sel = 0.000001 flag = 2048  ("VW_GBF_1"."ITEM_1"="C"."C_CURRENT_CDEMO_SK")
    io = NOCOST, cpu = 20.000000, sel = 0.050000 flag = 2562  ( EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM"))
  Total Scan IO  Cost  =   6330.458333 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 1080000.000000 (#rows))
                       =   6330.458333
  Total Scan CPU  Cost =   414856538.560000 (scan (Disk))
                         + 24300001.405664 (cpu filter eval) (= 22.500001 (per row) * 1080000.000000 (#rows))
                       =   439156539.965664
  Inner table: CUSTOMER  Alias: C
  Access Path: TableScan
    NL Join:  Cost: 15930032541179.767578  Resp: 15930032541179.767578  Degree: 1
      Cost_io: 15901789502211.000000  Cost_cpu: 1103139875015380480
      Resp_io: 15901789502211.000000  Resp_cpu: 1103139875015380480

  Best NL cost: 15930032541179.767578
          resc: 15930032541179.767578  resc_io: 15901789502211.000000  resc_cpu: 1103139875015380480
          resp: 15930032541179.767578  resp_io: 15901789502211.000000  resc_cpu: 1103139875015380480
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
ColGroup cardinality sanity check: ndv for  CUSTOMER[C] = 1080000.000000 
Join selectivity using 1 ColGroups: 9.2593e-07 (sel1 = 0.000000, sel2 = 0.000000)
Join Card:  2511938783.000000 = outer (2511938783.000000) * inner (1080000.000000) * sel (9.2593e-07)
Join Card - Rounded: 2511938783 Computed: 2511938783.000000
Grouping column cardinality [    ITEM_9]    2
Grouping column cardinality [   ITEM_10]    5
Grouping column cardinality [   ITEM_11]    7
Grouping column cardinality [   ITEM_12]    9500
Grouping column cardinality [   ITEM_13]    4
Grouping column cardinality [   ITEM_14]    6
Grouping column cardinality [   ITEM_15]    6
Grouping column cardinality [   ITEM_16]    6
  Outer table:  VW_GBF_1  Alias: VW_GBF_1
    resc: 65842137.295423  card 2511938783.000000  bytes:   deg: 1  resp: 65842137.295423
  Inner table:  CUSTOMER  Alias: C
    resc: 6343.174339  card: 1080000.000000  bytes:   deg: 1  resp: 6343.174339
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 49820530 Row size:     162 Total Rows:     2511938783
      Initial runs:   3881 Merge passes:  2 IO Cost / pass:    26986122
      Total IO sort cost: 103792774.000000      Total CPU sort cost: 5374358177884
      Total Temp space used: 894687118000
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 3835 Row size:     29 Total Rows:        1080000
      Initial runs:   2 Merge passes:  1 IO Cost / pass:       2078
      Total IO sort cost: 5913.000000      Total CPU sort cost: 1108751040
      Total Temp space used: 60826000
  SM join: Resc: 169784792.376075  Resp: 169784792.376075  [multiMatchCost=0.000000]
SM Join
  SM cost: 169784792.376075 
     resc: 169784792.376075 resc_io: 169505563.000000 resc_cpu: 10906370924327
     resp: 169784792.376075 resp_io: 169505563.000000 resp_cpu: 10906370924327
  Outer table:  VW_GBF_1  Alias: VW_GBF_1
    resc: 65842137.295423  card 2511938783.000000  bytes:   deg: 1  resp: 65842137.295423
  Inner table:  CUSTOMER  Alias: C
    resc: 6343.174339  card: 1080000.000000  bytes:   deg: 1  resp: 6343.174339
    using dmeth: 2  #groups: 1
    Cost per ptn: 17830157.338628  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 45994973  probefrag: 3824  ppasses: 1
  Hash join: Resc: 83685066.211900  Resp: 83685066.211900  [multiMatchCost=6428.403511]
  Outer table:  CUSTOMER  Alias: C
    resc: 6343.174339  card 1080000.000000  bytes:   deg: 1  resp: 6343.174339
  Inner table:  VW_GBF_1  Alias: VW_GBF_1
    resc: 65842137.295423  card: 2511938783.000000  bytes:   deg: 1  resp: 65842137.295423
    using dmeth: 2  #groups: 1
    Cost per ptn: 17823684.875488  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 3824  probefrag: 45994973  ppasses: 1
  Hash join: Resc: 83672165.345250  Resp: 83672165.345250  [multiMatchCost=0.000000]
HA Join
  HA cost: 83672165.345250 swapped 
     resc: 83672165.345250 resc_io: 83512863.000000 resc_cpu: 6222162190947
     resp: 83672165.345250 resp_io: 83512863.000000 resp_cpu: 6222162190947
GROUP BY sort
GROUP BY/Correlated Subquery Filter adjustment factor: 0.088388
GROUP BY cardinality:  50784410.000000, TABLE cardinality:  2511938783.000000
Vector group by not costed because no SYS_OP_XLATE_USE in group by.
kdmoGByPushdownValid: more than one table in group by    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 55663678 Row size:     181 Total Rows:     2511938783
      Initial runs:   4336 Merge passes:  2 IO Cost / pass:    30151160
      Total IO sort cost: 61427685.000000      Total CPU sort cost: 4918667973887
      Total Temp space used: 428704277000
Join order aborted: cost > best plan cost
***********************
(newjo-stop-1) k:0, spcnt:0, perm:2, maxperm:2000

*********************************
Number of join permutations tried: 2
*********************************
Enumerating distribution method (advanced)
--- Distribution method for 
join between C[CUSTOMER](serial) and VW_GBF_1[VW_GBF_1](serial); jm = 1; right side access path = TableScan
---- serial Hash-Join -> NONE

kkoaccsqf: Current query block SEL$B7DF437B (#1) is serial
kkoaccsqf: correlated subquery query block SEL$2 (#2) in filter               : serial
Final adjusted join cardinality: 2326.000000, sq. fil. factor: 1080000.000000
(newjo-save)    [0 1 ]
GROUP BY/Correlated Subquery Filter adjustment factor: 0.088388
GROUP BY cardinality:  2326.000000, TABLE cardinality:  2326.000000
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 52 Row size:     181 Total Rows:           2326
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 40230834
      Total Temp space used: 0
LORE: Or-Expansion validity checks failed on query block SEL$B7DF437B (#1) because Cost based OR expansion enabled
Transfer Optimizer annotations for query block SEL$B7DF437B (#1)
Final cost for query block SEL$B7DF437B (#1) - All Rows Plan:
  Best join order: 1
  Cost: 32524183139.616695  Degree: 1  Card: 2326.000000  Bytes: 389350871895.000000
  Resc: 32524183139.616695  Resc_io: 32517185817.731400  Resc_cpu: 273307160696315
  Resp: 32524183139.616695  Resp_io: 32517185817.731400  Resc_cpu: 273307160696315
kkoqbc-subheap (delete addr=0x7f0472562de8, in-use=45200, alloc=49272)
kkoqbc-end:
        :
    call(in-use=537712, alloc=606008), compile(in-use=1422504, alloc=1426200), execution(in-use=27104, alloc=28368)

kkoqbc: finish optimizing query block SEL$B7DF437B (#1)
CBQT: Saved costed qb# 4 (SEL$3), key = SEL$3_00010000_0
CBQT: Saved costed qb# 3 (SEL$4), key = SEL$4_00010000_0
CBQT: Saved costed qb# 2 (SEL$2), key = SEL$2_00010000_0
CBQT: Saved costed qb# 1 (SEL$B7DF437B), key = SEL$B7DF437B_00000040_0
GBP: Not update best state, Cost = 32524183139.616695
GBP: Starting iteration 3, state space = (1,2,3) : (F,F,C)
Registered qb: SEL$F67CBA62 0x722893b8 (QUERY BLOCK TABLES CHANGED SEL$1)
---------------------
QUERY BLOCK SIGNATURE
---------------------
  signature (): qb_name=SEL$F67CBA62 nbfros=3 flg=0
    fro(0): flg=0 objn=74169 hint_alias="CA"@"SEL$1"
    fro(1): flg=0 objn=74170 hint_alias="CUSTOMER_DEMOGRAPHICS"@"SEL$1"
    fro(2): flg=5 objn=0 hint_alias="VW_GBC_2"@"SEL$F67CBA62"

Registered qb: SEL$F5B72DD9 0x722e75d0 (SPLIT/MERGE QUERY BLOCKS SEL$F67CBA62)
---------------------
QUERY BLOCK SIGNATURE
---------------------
  signature (): qb_name=SEL$F5B72DD9 nbfros=1 flg=0
    fro(0): flg=0 objn=74168 hint_alias="C"@"SEL$1"

Registered qb: SEL$F13E154C 0x722893b8 (QUERY BLOCK TABLES CHANGED SEL$F67CBA62)
---------------------
QUERY BLOCK SIGNATURE
---------------------
  signature (): qb_name=SEL$F13E154C nbfros=2 flg=0
    fro(0): flg=5 objn=0 hint_alias="VW_GBF_3"@"SEL$F13E154C"
    fro(1): flg=1 objn=0 hint_alias="VW_GBC_2"@"SEL$F67CBA62"

Registered qb: SEL$D869EBF0 0x722efcd0 (SPLIT/MERGE QUERY BLOCKS SEL$F13E154C)
---------------------
QUERY BLOCK SIGNATURE
---------------------
  signature (): qb_name=SEL$D869EBF0 nbfros=2 flg=0
    fro(0): flg=0 objn=74169 hint_alias="CA"@"SEL$1"
    fro(1): flg=0 objn=74170 hint_alias="CUSTOMER_DEMOGRAPHICS"@"SEL$1"

QB before group-by removal:******* UNPARSED QUERY IS *******
SELECT "C"."C_CURRENT_CDEMO_SK" "ITEM_1","C"."C_CURRENT_ADDR_SK" "ITEM_2",COUNT(*) "ITEM_3",COUNT(*) "ITEM_4",COUNT(*) "ITEM_5",COUNT(*) "ITEM_6",COUNT(*) "ITEM_7",COUNT(*) "ITEM_8" FROM "TPCDS"."CUSTOMER" "C" WHERE  EXISTS (SELECT 0 FROM "TPCDS"."STORE_SALES" "SS","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="SS"."SS_CUSTOMER_SK" AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3 AND ( EXISTS (SELECT 0 FROM "TPCDS"."WEB_SALES" "WEB_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="WEB_SALES"."WS_BILL_CUSTOMER_SK" AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3) OR  EXISTS (SELECT 0 FROM "TPCDS"."CATALOG_SALES" "CATALOG_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="CATALOG_SALES"."CS_SHIP_CUSTOMER_SK" AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3))) GROUP BY "C"."C_CURRENT_CDEMO_SK","C"."C_CURRENT_ADDR_SK"
Registered qb: SEL$F7BA66FC 0x722893b8 (UNKNOWN QUERY BLOCK ORIGIN SEL$1; SEL$1; LIST LIST 2)
---------------------
QUERY BLOCK SIGNATURE
---------------------
  signature (): qb_name=SEL$F7BA66FC nbfros=2 flg=0
    fro(0): flg=1 objn=0 hint_alias="VW_GBF_3"@"SEL$F13E154C"
    fro(1): flg=1 objn=0 hint_alias="VW_GBC_2"@"SEL$F67CBA62"

GBP: Transformed query
******* UNPARSED QUERY IS *******
SELECT "VW_GBF_3"."ITEM_9" "CD_GENDER","VW_GBF_3"."ITEM_10" "CD_MARITAL_STATUS","VW_GBF_3"."ITEM_11" "CD_EDUCATION_STATUS",NVL(SUM("VW_GBC_2"."ITEM_3"*"VW_GBF_3"."ITEM_3"),0) "CNT1","VW_GBF_3"."ITEM_12" "CD_PURCHASE_ESTIMATE",NVL(SUM("VW_GBC_2"."ITEM_4"*"VW_GBF_3"."ITEM_4"),0) "CNT2","VW_GBF_3"."ITEM_13" "CD_CREDIT_RATING",NVL(SUM("VW_GBC_2"."ITEM_5"*"VW_GBF_3"."ITEM_5"),0) "CNT3","VW_GBF_3"."ITEM_14" "CD_DEP_COUNT",NVL(SUM("VW_GBC_2"."ITEM_6"*"VW_GBF_3"."ITEM_6"),0) "CNT4","VW_GBF_3"."ITEM_15" "CD_DEP_EMPLOYED_COUNT",NVL(SUM("VW_GBC_2"."ITEM_7"*"VW_GBF_3"."ITEM_7"),0) "CNT5","VW_GBF_3"."ITEM_16" "CD_DEP_COLLEGE_COUNT",NVL(SUM("VW_GBC_2"."ITEM_8"*"VW_GBF_3"."ITEM_8"),0) "CNT6" FROM  (SELECT "CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK" "ITEM_1","CA"."CA_ADDRESS_SK" "ITEM_2",COUNT(*) "ITEM_3",COUNT(*) "ITEM_4",COUNT(*) "ITEM_5",COUNT(*) "ITEM_6",COUNT(*) "ITEM_7",COUNT(*) "ITEM_8","CUSTOMER_DEMOGRAPHICS"."CD_GENDER" "ITEM_9","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS" "ITEM_10","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS" "ITEM_11","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE" "ITEM_12","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING" "ITEM_13","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT" "ITEM_14","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT" "ITEM_15","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT" "ITEM_16" FROM "TPCDS"."CUSTOMER_DEMOGRAPHICS" "CUSTOMER_DEMOGRAPHICS","TPCDS"."CUSTOMER_ADDRESS" "CA" WHERE "CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County' GROUP BY "CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK","CA"."CA_ADDRESS_SK","CUSTOMER_DEMOGRAPHICS"."CD_GENDER","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT") "VW_GBF_3", (SELECT "C"."C_CURRENT_CDEMO_SK" "ITEM_1","C"."C_CURRENT_ADDR_SK" "ITEM_2",COUNT(*) "ITEM_3",COUNT(*) "ITEM_4",COUNT(*) "ITEM_5",COUNT(*) "ITEM_6",COUNT(*) "ITEM_7",COUNT(*) "ITEM_8" FROM "TPCDS"."CUSTOMER" "C" WHERE  EXISTS (SELECT 0 FROM "TPCDS"."STORE_SALES" "SS","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="SS"."SS_CUSTOMER_SK" AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3 AND ( EXISTS (SELECT 0 FROM "TPCDS"."WEB_SALES" "WEB_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="WEB_SALES"."WS_BILL_CUSTOMER_SK" AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3) OR  EXISTS (SELECT 0 FROM "TPCDS"."CATALOG_SALES" "CATALOG_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="CATALOG_SALES"."CS_SHIP_CUSTOMER_SK" AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3))) GROUP BY "C"."C_CURRENT_CDEMO_SK","C"."C_CURRENT_ADDR_SK") "VW_GBC_2" WHERE "VW_GBC_2"."ITEM_2"="VW_GBF_3"."ITEM_2" AND "VW_GBF_3"."ITEM_1"="VW_GBC_2"."ITEM_1" GROUP BY "VW_GBF_3"."ITEM_9","VW_GBF_3"."ITEM_10","VW_GBF_3"."ITEM_11","VW_GBF_3"."ITEM_12","VW_GBF_3"."ITEM_13","VW_GBF_3"."ITEM_14","VW_GBF_3"."ITEM_15","VW_GBF_3"."ITEM_16" ORDER BY "VW_GBF_3"."ITEM_9","VW_GBF_3"."ITEM_10","VW_GBF_3"."ITEM_11","VW_GBF_3"."ITEM_12","VW_GBF_3"."ITEM_13","VW_GBF_3"."ITEM_14","VW_GBF_3"."ITEM_15","VW_GBF_3"."ITEM_16"
  Column (#3): C_CURRENT_CDEMO_SK(NUMBER)
    AvgLen: 6 NDV: 772544 Nulls: 0 Density: 0.000001 Min: 18.000000 Max: 1920799.000000
  Column (#5): C_CURRENT_ADDR_SK(NUMBER)
    AvgLen: 5 NDV: 457472 Nulls: 0 Density: 0.000002 Min: 1.000000 Max: 539997.000000
FPD: Considering simple filter push in query block SEL$F7BA66FC (#1)
"VW_GBC_2"."ITEM_2"="VW_GBF_3"."ITEM_2" AND "VW_GBF_3"."ITEM_1"="VW_GBC_2"."ITEM_1"
try to generate transitive predicate from check constraints for query block SEL$F7BA66FC (#1)
finally: "VW_GBC_2"."ITEM_2"="VW_GBF_3"."ITEM_2" AND "VW_GBF_3"."ITEM_1"="VW_GBC_2"."ITEM_1"

FPD: Considering simple filter push in query block SEL$D869EBF0 (#7)
"CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County'
try to generate transitive predicate from check constraints for query block SEL$D869EBF0 (#7)
finally: "CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County'

OJE: Begin: find best directive for query block SEL$D869EBF0 (#7)
OJE: End: finding best directive for query block SEL$D869EBF0 (#7)
FPD: Considering simple filter push in query block SEL$F5B72DD9 (#6)
 EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM")
FPD: Considering simple filter push in query block SEL$2 (#2)
"SS"."SS_CUSTOMER_SK"=:B1 AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND ( EXISTS (SELECT 0 FROM "WEB_SALES" "WEB_SALES","DATE_DIM" "DATE_DIM") OR  EXISTS (SELECT 0 FROM "CATALOG_SALES" "CATALOG_SALES","DATE_DIM" "DATE_DIM"))
FPD: Considering simple filter push in query block SEL$3 (#4)
"WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B1 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4
try to generate transitive predicate from check constraints for query block SEL$3 (#4)
finally: "WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B1 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1

FPD:   transitive predicates are generated in query block SEL$3 (#4)
"WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B1 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1
FPD: Considering simple filter push in query block SEL$4 (#3)
"CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B1 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4
try to generate transitive predicate from check constraints for query block SEL$4 (#3)
finally: "CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B1 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1

FPD:   transitive predicates are generated in query block SEL$4 (#3)
"CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B1 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1
try to generate transitive predicate from check constraints for query block SEL$2 (#2)
finally: "SS"."SS_CUSTOMER_SK"=:B1 AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND ( EXISTS (SELECT 0 FROM "WEB_SALES" "WEB_SALES","DATE_DIM" "DATE_DIM") OR  EXISTS (SELECT 0 FROM "CATALOG_SALES" "CATALOG_SALES","DATE_DIM" "DATE_DIM"))

try to generate transitive predicate from check constraints for query block SEL$F5B72DD9 (#6)
finally:  EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM")

OJE: Begin: find best directive for query block SEL$F5B72DD9 (#6)
OJE: End: finding best directive for query block SEL$F5B72DD9 (#6)
GBP: Costing transformed query.
*************************
First K Rows: Setup begin
kkoqbc: optimizing query block SEL$3 (#4)
        
        :
    call(in-use=544024, alloc=573064), compile(in-use=1608864, alloc=1611584), execution(in-use=28392, alloc=32424)

kkoqbc-subheap (create addr=0x7f0472244de0)
****************
QUERY BLOCK TEXT
****************
SELECT
                    *
                FROM
                    web_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = ws_bill_customer_sk
                    AND ws_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$3 nbfros=2 flg=0
  fro(0): flg=0 objn=74171 hint_alias="DATE_DIM"@"SEL$3"
  fro(1): flg=0 objn=74195 hint_alias="WEB_SALES"@"SEL$3"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3255 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: DATE_DIM  Alias: DATE_DIM
  #Rows: 73049  SSZ: 0  LGR: 0  #Blks:  1510  AvgRowLen:  128.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): D_DATE_SK(NUMBER)
    AvgLen: 6 NDV: 73049 Nulls: 0 Density: 0.000014 Min: 2415022.000000 Max: 2488070.000000
Index Stats::
  Index: D_DATE_PK_IDX  Col#: 1
  LVLS: 1  #LB: 163  #DK: 73049  LB/K: 1.00  DB/K: 1.00  CLUF: 1402.00  NRW: 73049.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table: WEB_SALES  Alias: WEB_SALES  (Using composite stats)
  #Rows: 35969200  SSZ: 0  LGR: 0  #Blks:  829566  AvgRowLen:  167.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
Index Stats::
  Index: WEB_SALES_IDX2  Col#: 5 1
  LVLS: 3  #LB: 130617  #DK: 2992994  LB/K: 1.00  DB/K: 12.00  CLUF: 35969159.00  NRW: 35969200.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
  Index: WEB_SALES_PK_IDX  Col#: 4 18
  LVLS: 2  #LB: 122502  #DK: 35304428  LB/K: 1.00  DB/K: 1.00  CLUF: 35300490.00  NRW: 35304428.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
try to generate single-table filter predicates from ORs for query block SEL$3 (#4)
finally: "WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B1 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4

=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$3 (#4)
Applicable DS directives:
   dirid = 4510913066701158191, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {(74195)[]; (74171)[]}
   dirid = 14910903719618111890, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74195)[5]}
   dirid = 13969931850241126217, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {C(74171)[7, 9]}
   dirid = 13683461771316641482, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74195)[5]; (74171)[7]}
Checking valid directives for the query block
  SPD: Return code in qosdDSDirSetup: NODIR, estType = QUERY_BLOCK
Return code in qosdSetupDirCtx4QB: EXISTS
=====================================
SPD: END context at query block level
=====================================
Access path analysis for WEB_SALES
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for WEB_SALES[WEB_SALES] 
  SPD: Return code in qosdDSDirSetup: NODIR, estType = TABLE

 kkecdn: Single Table Predicate:"WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B1
NOTE: ignoring histogram of column (WEB_SALES.WS_BILL_CUSTOMER_SK)
      used only for incremental stats maintenance
  Column (#5): WS_BILL_CUSTOMER_SK(NUMBER)
    AvgLen: 6 NDV: 973580 Nulls: 0 Density: 0.000001 Min: 2.000000 Max: 1079999.000000
  Estimated selectivity: 1.0271e-06 , col: #5 
  Table: WEB_SALES  Alias: WEB_SALES
    Card: Original: 35969200.000000  Rounded: 37  Computed: 36.945295  Non Adjusted: 36.945295
  Scan IO  Cost (Disk) =   224676.000000
  Scan CPU Cost (Disk) =   14180620495.040001
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000001 flag = 2048  ("WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B1)
  Total Scan IO  Cost  =   224676.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 35969200.000000 (#rows))
                       =   224676.000000
  Total Scan CPU  Cost =   14180620495.040001 (scan (Disk))
                         + 1798460000.000000 (cpu filter eval) (= 50.000000 (per row) * 35969200.000000 (#rows))
                       =   15979080495.040001
  Access Path: TableScan
    Cost:  225085.102964  Resp: 225085.102964  Degree: 0
      Cost_io: 224676.000000  Cost_cpu: 15979080495
      Resp_io: 224676.000000  Resp_cpu: 15979080495
  Access Path: index (index (FFS))
    Index: WEB_SALES_IDX2
    resc_io: 35377.000000  resc_cpu: 7044945128
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  35557.367571  Resp: 35557.367571  Degree: 1
      Cost_io: 35377.000000  Cost_cpu: 7044945128
      Resp_io: 35377.000000  Resp_cpu: 7044945128
 ****** Costing Index WEB_SALES_IDX2
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER

  Estimated selectivity: 1.0271e-06 , col: #5 
  Access Path: index (IndexOnly)
    Index: WEB_SALES_IDX2
    resc_io: 4.000000  resc_cpu: 35886
    ix_sel: 1.0271e-06  ix_sel_with_filters: 1.0271e-06 
    Cost: 4.000919  Resp: 4.000919  Degree: 1
  Best:: AccessPath: IndexRange
  Index: WEB_SALES_IDX2
         Cost: 4.000919  Degree: 1  Resp: 4.000919  Card: 36.945295  Bytes: 0.000000

Access path analysis for DATE_DIM
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for DATE_DIM[DATE_DIM] 
  SPD: Directive valid: dirid = 13969931850241126217, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {C(74171)[7, 9]}
  SPD: Return code in qosdDSDirSetup: EXISTS, estType = TABLE
  Column (#7): 
    NewDensity:0.000007, OldDensity:0.000007 BktCnt:73049.000000, PopBktCnt:73048.000000, PopValCnt:200, NDV:201
  Column (#7): D_YEAR(NUMBER)
    AvgLen: 4 NDV: 201 Nulls: 0 Density: 0.000007 Min: 1900.000000 Max: 2100.000000
    Histogram: Freq  #Bkts: 201  UncompBkts: 73049  EndPtVals: 201  ActualVal: yes
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 


 kkecdn: Single Table Predicate:"DATE_DIM"."D_YEAR"=2001
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY">=1
  Column (#9): 
    NewDensity:0.038666, OldDensity:0.000007 BktCnt:73049.000000, PopBktCnt:73049.000000, PopValCnt:12, NDV:12
  Column (#9): D_MOY(NUMBER)
    AvgLen: 3 NDV: 12 Nulls: 0 Density: 0.038666 Min: 1.000000 Max: 12.000000
    Histogram: Freq  #Bkts: 12  UncompBkts: 73049  EndPtVals: 12  ActualVal: yes
  Estimated selectivity: 1.000000 , endpoint value predicate, col: #9 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY"<=4
  Estimated selectivity: 0.329224 , endpoint value predicate, col: #9 
  Table: DATE_DIM  Alias: DATE_DIM
    Card: Original: 73049.000000  Rounded: 120  Computed: 120.166840  Non Adjusted: 120.166840
  Scan IO  Cost (Disk) =   411.000000
  Scan CPU Cost (Disk) =   33398564.400000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.004997 flag = 2048  ("DATE_DIM"."D_YEAR"=2001)
    io = NOCOST, cpu = 50.000000, sel = 0.329224 flag = 2048  ("DATE_DIM"."D_MOY"<=4)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("DATE_DIM"."D_MOY">=1)
  Total Scan IO  Cost  =   411.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 73049.000000 (#rows))
                       =   411.000000
  Total Scan CPU  Cost =   33398564.400000 (scan (Disk))
                         + 3676708.342003 (cpu filter eval) (= 50.332083 (per row) * 73049.000000 (#rows))
                       =   37075272.742003
  Access Path: TableScan
    Cost:  411.949216  Resp: 411.949216  Degree: 0
      Cost_io: 411.000000  Cost_cpu: 37075273
      Resp_io: 411.000000  Resp_cpu: 37075273
  Best:: AccessPath: TableScan
         Cost: 411.949216  Degree: 1  Resp: 411.949216  Card: 120.166840  Bytes: 0.000000

***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE: Checking validity of partial join eval on query block SEL$3 (#4)
PJE: Passed validity of partial join eval by query block SEL$3 (#4)
number: [0]
PJE: Partial join eval conversion for query block SEL$3 (#4).
PJE: Table marked for partial join eval: DATE_DIM[DATE_DIM]#1
***********************
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  WEB_SALES[WEB_SALES]#0  DATE_DIM[DATE_DIM]#1

***************
Now joining: DATE_DIM[DATE_DIM]#1
***************
NL Join
  Outer table: Card: 36.945295  Cost: 4.000919  Resp: 4.000919  Degree: 1  Bytes: 
Access path analysis for DATE_DIM
  Scan IO  Cost (Disk) =   409.000000
  Scan CPU Cost (Disk) =   33398564.400000
NOTE: ignoring histogram of column (WEB_SALES.WS_SOLD_DATE_SK)
      used only for incremental stats maintenance
  Column (#1): WS_SOLD_DATE_SK(NUMBER)
    AvgLen: 6 NDV: 1839 Nulls: 0 Density: 0.000544 Min: 2450816.000000 Max: 2452641.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.008264 flag = 2048  ("WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK")
    io = NOCOST, cpu = 50.000000, sel = 0.004997 flag = 2048  ("DATE_DIM"."D_YEAR"=2001)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("DATE_DIM"."D_MOY">=1)
    io = NOCOST, cpu = 50.000000, sel = 0.329224 flag = 2048  ("DATE_DIM"."D_MOY"<=4)
  Total Scan IO  Cost  =   409.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 73049.000000 (#rows))
                       =   409.000000
  Total Scan CPU  Cost =   33398564.400000 (scan (Disk))
                         + 3670900.482165 (cpu filter eval) (= 50.252577 (per row) * 73049.000000 (#rows))
                       =   37069464.882165
  Inner table: DATE_DIM  Alias: DATE_DIM
  Access Path: TableScan
    NL Join:  Cost: 15172.116421  Resp: 15172.116421  Degree: 1
      Cost_io: 15137.000000  Cost_cpu: 1371606086
      Resp_io: 15137.000000  Resp_cpu: 1371606086
 ****** Costing Index D_DATE_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: D_DATE_PK_IDX
    resc_io: 1.000000  resc_cpu: 9382
    ix_sel: 1.3689e-05  ix_sel_with_filters: 1.3689e-05 
    NL Join (ordered): Cost: 41.009806  Resp: 41.009806  Degree: 1
      Cost_io: 41.000000  Cost_cpu: 383011
      Resp_io: 41.000000  Resp_cpu: 383011
 ****** Costing Index D_DATE_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 
  Estimated selectivity: 1.000000 , endpoint value predicate, col: #9 
  Estimated selectivity: 0.329224 , endpoint value predicate, col: #9 
  Access Path: index (AllEqUnique)
    Index: D_DATE_PK_IDX
    resc_io: 1.000000  resc_cpu: 9382
    ix_sel: 1.3689e-05  ix_sel_with_filters: 1.3689e-05 
    NL Join (ordered): Cost: 41.009806  Resp: 41.009806  Degree: 1
      Cost_io: 41.000000  Cost_cpu: 383011
      Resp_io: 41.000000  Resp_cpu: 383011

  Best NL cost: 41.009806
          resc: 41.009806  resc_io: 41.000000  resc_cpu: 383011
          resp: 41.009806  resp_io: 41.000000  resc_cpu: 383011
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Capping Semi Join Card of HJ/SMJ by inner = 36.690903
Capping Semi Join Card of HJ/SMJ (no post filters) by inner = 36.690903
Capping Semi Join Card of NL by inner = 36.690903
Capping Semi Join Card of without POSQ by inner = 36.690903
Capping Semi Join Card of non adjusted NSQ by inner = 36.690903
Semi Join Card (capped by inner join):  36.690903 = outer (36.945295) * inner (120.166840) * sel (0.008264)
Join Card - Rounded: 37 Computed: 36.690903
  Outer table:  WEB_SALES  Alias: WEB_SALES
    resc: 4.000919  card 36.945295  bytes:   deg: 1  resp: 4.000919
  Inner table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card: 120.166840  bytes:   deg: 1  resp: 411.949216
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     25 Total Rows:            120
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39096166
      Total Temp space used: 0
  SM join: Resc: 416.951091  Resp: 416.951091  [multiMatchCost=0.000000]
SM Join
  SM cost: 416.951091 
     resc: 416.951091 resc_io: 415.000000 resc_cpu: 76207324
     resp: 416.951091 resp_io: 415.000000 resp_cpu: 76207324
  Outer table:  WEB_SALES  Alias: WEB_SALES
    resc: 4.000919  card 36.945295  bytes:   deg: 1  resp: 4.000919
  Inner table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card: 120.166840  bytes:   deg: 1  resp: 411.949216
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.015811  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 415.965946  Resp: 415.965946  [multiMatchCost=0.000000]
HA Join
  HA cost: 415.965946  
     resc: 415.965946 resc_io: 415.000000 resc_cpu: 37728709
     resp: 415.965946 resp_io: 415.000000 resp_cpu: 37728709
Best:: JoinMethod: NestedLoopSemi
       Cost: 41.009806  Degree: 1  Resp: 41.009806  Card: 36.690903 Bytes: 
***********************
Best so far:  Table#: 0  cost: 4.000919  card: 36.945295  bytes: 444.000000
              Table#: 1  cost: 41.009806  card: 36.690903  bytes: 925.000000
***********************

*********************************
Number of join permutations tried: 1
*********************************
*********************
PJE: Partial join eval conversion for query block SEL$3 (#4).
PJE: Table marked for partial join eval: DATE_DIM[DATE_DIM]#1
***********************
Enumerating distribution method (advanced)
--- Distribution method for 
join between WEB_SALES[WEB_SALES](serial) and DATE_DIM[DATE_DIM](serial); jm = 15; right side access path = IndexUnique
kkopqIsSerialJoin: serial NLJ: both inputs serial
---- serial NL-Join -> SERIAL

(newjo-save)    [1 0 ]
LORE: Or-Expansion validity checks failed on query block SEL$3 (#4) because Cost based OR expansion enabled
Transfer Optimizer annotations for query block SEL$3 (#4)
Final cost for query block SEL$3 (#4) - All Rows Plan:
  Best join order: 1
  Cost: 41.009806  Degree: 1  Card: 37.000000  Bytes: 925.000000
  Resc: 41.009806  Resc_io: 41.000000  Resc_cpu: 383011
  Resp: 41.009806  Resp_io: 41.000000  Resc_cpu: 383011
kkoqbc-subheap (delete addr=0x7f0472244de0, in-use=44952, alloc=49272)
kkoqbc-end:
        :
    call(in-use=587416, alloc=655216), compile(in-use=1641232, alloc=1643128), execution(in-use=28800, alloc=32424)

kkoqbc: finish optimizing query block SEL$3 (#4)
kkoqbc: optimizing query block SEL$4 (#3)
        
        :
    call(in-use=585208, alloc=655216), compile(in-use=1647656, alloc=1651416), execution(in-use=28976, alloc=32424)

kkoqbc-subheap (create addr=0x7f0472244de0)
****************
QUERY BLOCK TEXT
****************
SELECT
                    *
                FROM
                    catalog_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = cs_ship_customer_sk
                    AND cs_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$4 nbfros=2 flg=0
  fro(0): flg=0 objn=74185 hint_alias="CATALOG_SALES"@"SEL$4"
  fro(1): flg=0 objn=74171 hint_alias="DATE_DIM"@"SEL$4"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3255 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: DATE_DIM  Alias: DATE_DIM
  #Rows: 73049  SSZ: 0  LGR: 0  #Blks:  1510  AvgRowLen:  128.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): D_DATE_SK(NUMBER)
    AvgLen: 6 NDV: 73049 Nulls: 0 Density: 0.000014 Min: 2415022.000000 Max: 2488070.000000
Index Stats::
  Index: D_DATE_PK_IDX  Col#: 1
  LVLS: 1  #LB: 163  #DK: 73049  LB/K: 1.00  DB/K: 1.00  CLUF: 1402.00  NRW: 73049.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table: CATALOG_SALES  Alias: CATALOG_SALES  (Using composite stats)
  #Rows: 72077400  SSZ: 0  LGR: 0  #Blks:  1645494  AvgRowLen:  168.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
Index Stats::
  Index: CATALOG_SALES_IDX2  Col#: 8 1
  LVLS: 3  #LB: 261734  #DK: 5997411  LB/K: 1.00  DB/K: 12.00  CLUF: 72077362.00  NRW: 72077400.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
  Index: CATALOG_SALES_PK_IDX  Col#: 16 18
  LVLS: 2  #LB: 249644  #DK: 71913105  LB/K: 1.00  DB/K: 1.00  CLUF: 71898009.00  NRW: 71913105.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
try to generate single-table filter predicates from ORs for query block SEL$4 (#3)
finally: "CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B1 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4

=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$4 (#3)
Applicable DS directives:
   dirid = 11267665714990475542, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74185)[8]}
   dirid = 13969931850241126217, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {C(74171)[7, 9]}
   dirid = 2090373381697137251, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {(74185)[]; F(74171)[]}
   dirid = 14483145493039253896, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {(74185)[]; (74171)[]}
Checking valid directives for the query block
  SPD: Return code in qosdDSDirSetup: NODIR, estType = QUERY_BLOCK
Return code in qosdSetupDirCtx4QB: EXISTS
=====================================
SPD: END context at query block level
=====================================
Access path analysis for CATALOG_SALES
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for CATALOG_SALES[CATALOG_SALES] 
  SPD: Return code in qosdDSDirSetup: NODIR, estType = TABLE

 kkecdn: Single Table Predicate:"CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B1
NOTE: ignoring histogram of column (CATALOG_SALES.CS_SHIP_CUSTOMER_SK)
      used only for incremental stats maintenance
  Column (#8): CS_SHIP_CUSTOMER_SK(NUMBER)
    AvgLen: 6 NDV: 1037120 Nulls: 0 Density: 0.000001 Min: 1.000000 Max: 1079999.000000
  Estimated selectivity: 9.6421e-07 , col: #8 
  Table: CATALOG_SALES  Alias: CATALOG_SALES
    Card: Original: 72077400.000000  Rounded: 69  Computed: 69.497647  Non Adjusted: 69.497647
  Scan IO  Cost (Disk) =   445656.000000
  Scan CPU Cost (Disk) =   32620732791.360001
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000001 flag = 2048  ("CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B1)
  Total Scan IO  Cost  =   445656.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 72077400.000000 (#rows))
                       =   445656.000000
  Total Scan CPU  Cost =   32620732791.360001 (scan (Disk))
                         + 3603870000.000000 (cpu filter eval) (= 50.000000 (per row) * 72077400.000000 (#rows))
                       =   36224602791.360001
  Access Path: TableScan
    Cost:  446583.437120  Resp: 446583.437120  Degree: 0
      Cost_io: 445656.000000  Cost_cpu: 36224602791
      Resp_io: 445656.000000  Resp_cpu: 36224602791
  Access Path: index (index (FFS))
    Index: CATALOG_SALES_IDX2
    resc_io: 70888.000000  resc_cpu: 14117080977
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  71249.431290  Resp: 71249.431290  Degree: 1
      Cost_io: 70888.000000  Cost_cpu: 14117080977
      Resp_io: 70888.000000  Resp_cpu: 14117080977
 ****** Costing Index CATALOG_SALES_IDX2
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER

  Estimated selectivity: 9.6421e-07 , col: #8 
  Access Path: index (IndexOnly)
    Index: CATALOG_SALES_IDX2
    resc_io: 4.000000  resc_cpu: 42486
    ix_sel: 9.6421e-07  ix_sel_with_filters: 9.6421e-07 
    Cost: 4.001088  Resp: 4.001088  Degree: 1
  Best:: AccessPath: IndexRange
  Index: CATALOG_SALES_IDX2
         Cost: 4.001088  Degree: 1  Resp: 4.001088  Card: 69.497647  Bytes: 0.000000

Access path analysis for DATE_DIM
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for DATE_DIM[DATE_DIM] 
  SPD: Directive valid: dirid = 13969931850241126217, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {C(74171)[7, 9]}
  SPD: Return code in qosdDSDirSetup: EXISTS, estType = TABLE
  Column (#7): 
    NewDensity:0.000007, OldDensity:0.000007 BktCnt:73049.000000, PopBktCnt:73048.000000, PopValCnt:200, NDV:201
  Column (#7): D_YEAR(NUMBER)
    AvgLen: 4 NDV: 201 Nulls: 0 Density: 0.000007 Min: 1900.000000 Max: 2100.000000
    Histogram: Freq  #Bkts: 201  UncompBkts: 73049  EndPtVals: 201  ActualVal: yes
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 


 kkecdn: Single Table Predicate:"DATE_DIM"."D_YEAR"=2001
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY">=1
  Column (#9): 
    NewDensity:0.038666, OldDensity:0.000007 BktCnt:73049.000000, PopBktCnt:73049.000000, PopValCnt:12, NDV:12
  Column (#9): D_MOY(NUMBER)
    AvgLen: 3 NDV: 12 Nulls: 0 Density: 0.038666 Min: 1.000000 Max: 12.000000
    Histogram: Freq  #Bkts: 12  UncompBkts: 73049  EndPtVals: 12  ActualVal: yes
  Estimated selectivity: 1.000000 , endpoint value predicate, col: #9 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY"<=4
  Estimated selectivity: 0.329224 , endpoint value predicate, col: #9 
  Table: DATE_DIM  Alias: DATE_DIM
    Card: Original: 73049.000000  Rounded: 120  Computed: 120.166840  Non Adjusted: 120.166840
  Scan IO  Cost (Disk) =   411.000000
  Scan CPU Cost (Disk) =   33398564.400000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.004997 flag = 2048  ("DATE_DIM"."D_YEAR"=2001)
    io = NOCOST, cpu = 50.000000, sel = 0.329224 flag = 2048  ("DATE_DIM"."D_MOY"<=4)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("DATE_DIM"."D_MOY">=1)
  Total Scan IO  Cost  =   411.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 73049.000000 (#rows))
                       =   411.000000
  Total Scan CPU  Cost =   33398564.400000 (scan (Disk))
                         + 3676708.342003 (cpu filter eval) (= 50.332083 (per row) * 73049.000000 (#rows))
                       =   37075272.742003
  Access Path: TableScan
    Cost:  411.949216  Resp: 411.949216  Degree: 0
      Cost_io: 411.000000  Cost_cpu: 37075273
      Resp_io: 411.000000  Resp_cpu: 37075273
  Best:: AccessPath: TableScan
         Cost: 411.949216  Degree: 1  Resp: 411.949216  Card: 120.166840  Bytes: 0.000000

***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE: Checking validity of partial join eval on query block SEL$4 (#3)
PJE: Passed validity of partial join eval by query block SEL$4 (#3)
number: [0]
PJE: Partial join eval conversion for query block SEL$4 (#3).
PJE: Table marked for partial join eval: DATE_DIM[DATE_DIM]#1
***********************
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  CATALOG_SALES[CATALOG_SALES]#0  DATE_DIM[DATE_DIM]#1

***************
Now joining: DATE_DIM[DATE_DIM]#1
***************
NL Join
  Outer table: Card: 69.497647  Cost: 4.001088  Resp: 4.001088  Degree: 1  Bytes: 
Access path analysis for DATE_DIM
  Scan IO  Cost (Disk) =   408.985507
  Scan CPU Cost (Disk) =   33398564.400000
NOTE: ignoring histogram of column (CATALOG_SALES.CS_SOLD_DATE_SK)
      used only for incremental stats maintenance
  Column (#1): CS_SOLD_DATE_SK(NUMBER)
    AvgLen: 6 NDV: 1849 Nulls: 0 Density: 0.000541 Min: 2450815.000000 Max: 2452647.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.008264 flag = 2048  ("CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK")
    io = NOCOST, cpu = 50.000000, sel = 0.004997 flag = 2048  ("DATE_DIM"."D_YEAR"=2001)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("DATE_DIM"."D_MOY">=1)
    io = NOCOST, cpu = 50.000000, sel = 0.329224 flag = 2048  ("DATE_DIM"."D_MOY"<=4)
  Total Scan IO  Cost  =   408.985507 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 73049.000000 (#rows))
                       =   408.985507
  Total Scan CPU  Cost =   33398564.400000 (scan (Disk))
                         + 3670900.482165 (cpu filter eval) (= 50.252577 (per row) * 73049.000000 (#rows))
                       =   37069464.882165
  Inner table: DATE_DIM  Alias: DATE_DIM
  Access Path: TableScan
    NL Join:  Cost: 28289.486754  Resp: 28289.486754  Degree: 1
      Cost_io: 28224.000000  Cost_cpu: 2557835563
      Resp_io: 28224.000000  Resp_cpu: 2557835563
 ****** Costing Index D_DATE_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: D_DATE_PK_IDX
    resc_io: 1.000000  resc_cpu: 9382
    ix_sel: 1.3689e-05  ix_sel_with_filters: 1.3689e-05 
    NL Join (ordered): Cost: 73.017661  Resp: 73.017661  Degree: 1
      Cost_io: 73.000000  Cost_cpu: 689828
      Resp_io: 73.000000  Resp_cpu: 689828
 ****** Costing Index D_DATE_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 
  Estimated selectivity: 1.000000 , endpoint value predicate, col: #9 
  Estimated selectivity: 0.329224 , endpoint value predicate, col: #9 
  Access Path: index (AllEqUnique)
    Index: D_DATE_PK_IDX
    resc_io: 1.000000  resc_cpu: 9382
    ix_sel: 1.3689e-05  ix_sel_with_filters: 1.3689e-05 
    NL Join (ordered): Cost: 73.017661  Resp: 73.017661  Degree: 1
      Cost_io: 73.000000  Cost_cpu: 689828
      Resp_io: 73.000000  Resp_cpu: 689828

  Best NL cost: 73.017661
          resc: 73.017661  resc_io: 73.000000  resc_cpu: 689828
          resp: 73.017661  resp_io: 73.000000  resc_cpu: 689828
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Capping Semi Join Card of HJ/SMJ by inner = 69.019113
Capping Semi Join Card of HJ/SMJ (no post filters) by inner = 69.019113
Capping Semi Join Card of NL by inner = 69.019113
Capping Semi Join Card of without POSQ by inner = 69.019113
Capping Semi Join Card of non adjusted NSQ by inner = 69.019113
Semi Join Card (capped by inner join):  69.019113 = outer (69.497647) * inner (120.166840) * sel (0.008264)
Join Card - Rounded: 69 Computed: 69.019113
  Outer table:  CATALOG_SALES  Alias: CATALOG_SALES
    resc: 4.001088  card 69.497647  bytes:   deg: 1  resp: 4.001088
  Inner table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card: 120.166840  bytes:   deg: 1  resp: 411.949216
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     25 Total Rows:            120
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39096166
      Total Temp space used: 0
  SM join: Resc: 416.951260  Resp: 416.951260  [multiMatchCost=0.000000]
SM Join
  SM cost: 416.951260 
     resc: 416.951260 resc_io: 415.000000 resc_cpu: 76213924
     resp: 416.951260 resp_io: 415.000000 resp_cpu: 76213924
  Outer table:  CATALOG_SALES  Alias: CATALOG_SALES
    resc: 4.001088  card 69.497647  bytes:   deg: 1  resp: 4.001088
  Inner table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card: 120.166840  bytes:   deg: 1  resp: 411.949216
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.015934  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 415.966238  Resp: 415.966238  [multiMatchCost=0.000000]
HA Join
  HA cost: 415.966238  
     resc: 415.966238 resc_io: 415.000000 resc_cpu: 37740109
     resp: 415.966238 resp_io: 415.000000 resp_cpu: 37740109
Best:: JoinMethod: NestedLoopSemi
       Cost: 73.017661  Degree: 1  Resp: 73.017661  Card: 69.019113 Bytes: 
***********************
Best so far:  Table#: 0  cost: 4.001088  card: 69.497647  bytes: 828.000000
              Table#: 1  cost: 73.017661  card: 69.019113  bytes: 1725.000000
***********************

*********************************
Number of join permutations tried: 1
*********************************
*********************
PJE: Partial join eval conversion for query block SEL$4 (#3).
PJE: Table marked for partial join eval: DATE_DIM[DATE_DIM]#1
***********************
Enumerating distribution method (advanced)
--- Distribution method for 
join between CATALOG_SALES[CATALOG_SALES](serial) and DATE_DIM[DATE_DIM](serial); jm = 15; right side access path = IndexUnique
kkopqIsSerialJoin: serial NLJ: both inputs serial
---- serial NL-Join -> SERIAL

(newjo-save)    [1 0 ]
LORE: Or-Expansion validity checks failed on query block SEL$4 (#3) because Cost based OR expansion enabled
Transfer Optimizer annotations for query block SEL$4 (#3)
Final cost for query block SEL$4 (#3) - All Rows Plan:
  Best join order: 1
  Cost: 73.017661  Degree: 1  Card: 69.000000  Bytes: 1725.000000
  Resc: 73.017661  Resc_io: 73.000000  Resc_cpu: 689828
  Resp: 73.017661  Resp_io: 73.000000  Resc_cpu: 689828
kkoqbc-subheap (delete addr=0x7f0472244de0, in-use=52808, alloc=65704)
kkoqbc-end:
        :
    call(in-use=624280, alloc=704424), compile(in-use=1680080, alloc=1683144), execution(in-use=29384, alloc=32424)

kkoqbc: finish optimizing query block SEL$4 (#3)
kkoqbc: optimizing query block SEL$2 (#2)
        
        :
    call(in-use=622072, alloc=704424), compile(in-use=1686592, alloc=1687288), execution(in-use=29544, alloc=32424)

kkoqbc-subheap (create addr=0x7f0472244de0)
****************
QUERY BLOCK TEXT
****************
SELECT
            *
        FROM
            store_sales ss,
            date_dim
        WHERE
            c.c_customer_sk = ss.ss_customer_sk
            AND ss_sold_date_sk = d_date_sk
            AND d_year = 2001
            AND d_moy BETWEEN 1 AND 1 + 3
            AND ( EXISTS (
                SELECT
                    *
                FROM
                    web_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = ws_bill_customer_sk
                    AND ws_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            )
                  OR EXISTS (
                SELECT
                    *
                FROM
                    catalog_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = cs_ship_customer_sk
                    AND cs_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            ) )
    
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$2 nbfros=2 flg=0
  fro(0): flg=0 objn=74171 hint_alias="DATE_DIM"@"SEL$2"
  fro(1): flg=0 objn=74191 hint_alias="SS"@"SEL$2"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3255 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: DATE_DIM  Alias: DATE_DIM
  #Rows: 73049  SSZ: 0  LGR: 0  #Blks:  1510  AvgRowLen:  128.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): D_DATE_SK(NUMBER)
    AvgLen: 6 NDV: 73049 Nulls: 0 Density: 0.000014 Min: 2415022.000000 Max: 2488070.000000
Index Stats::
  Index: D_DATE_PK_IDX  Col#: 1
  LVLS: 1  #LB: 163  #DK: 73049  LB/K: 1.00  DB/K: 1.00  CLUF: 1402.00  NRW: 73049.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table: STORE_SALES  Alias: SS  (Using composite stats)
  #Rows: 144020200  SSZ: 0  LGR: 0  #Blks:  2304802  AvgRowLen:  117.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
Index Stats::
  Index: STORE_SALES_IDX2  Col#: 4 1
  LVLS: 3  #LB: 522970  #DK: 11965122  LB/K: 1.00  DB/K: 12.00  CLUF: 143898920.00  NRW: 144020200.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
  Index: STORE_SALES_PK_IDX  Col#: 3 10
  LVLS: 3  #LB: 497464  #DK: 141527398  LB/K: 1.00  DB/K: 1.00  CLUF: 141365556.00  NRW: 141527398.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
try to generate single-table filter predicates from ORs for query block SEL$2 (#2)
finally: "SS"."SS_CUSTOMER_SK"=:B1 AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND ( EXISTS (SELECT 0 FROM "WEB_SALES" "WEB_SALES","DATE_DIM" "DATE_DIM" WHERE "WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B2 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1) OR  EXISTS (SELECT 0 FROM "CATALOG_SALES" "CATALOG_SALES","DATE_DIM" "DATE_DIM" WHERE "CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B3 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1))

=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$2 (#2)
Applicable DS directives:
   dirid = 10827845680942532126, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {F(74191)[]; F(74171)[]}
   dirid = 7660518587836633700, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74191)[4]}
   dirid = 13969931850241126217, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {C(74171)[7, 9]}
   dirid = 2361553282592865451, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {(74191)[]; F(74171)[]}
   dirid = 12943986683386070018, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {(74191)[]; (74171)[]}
Checking valid directives for the query block
  SPD: Return code in qosdDSDirSetup: NODIR, estType = QUERY_BLOCK
Return code in qosdSetupDirCtx4QB: EXISTS
=====================================
SPD: END context at query block level
=====================================
Access path analysis for STORE_SALES
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for STORE_SALES[SS] 
  SPD: Return code in qosdDSDirSetup: NODIR, estType = TABLE

 kkecdn: Single Table Predicate:"SS"."SS_CUSTOMER_SK"=:B1
NOTE: ignoring histogram of column (STORE_SALES.SS_CUSTOMER_SK)
      used only for incremental stats maintenance
  Column (#4): SS_CUSTOMER_SK(NUMBER)
    AvgLen: 6 NDV: 1039371 Nulls: 0 Density: 0.000001 Min: 1.000000 Max: 1079999.000000
  Estimated selectivity: 9.6212e-07 , col: #4 
  Table: STORE_SALES  Alias: SS
    Card: Original: 144020200.000000  Rounded: 139  Computed: 138.564767  Non Adjusted: 138.564767
  Scan IO  Cost (Disk) =   624219.000000
  Scan CPU Cost (Disk) =   46657751154.880005
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000001 flag = 2048  ("SS"."SS_CUSTOMER_SK"=:B1)
  Total Scan IO  Cost  =   624219.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 144020200.000000 (#rows))
                       =   624219.000000
  Total Scan CPU  Cost =   46657751154.880005 (scan (Disk))
                         + 7201010000.000000 (cpu filter eval) (= 50.000000 (per row) * 144020200.000000 (#rows))
                       =   53858761154.880005
  Access Path: TableScan
    Cost:  625597.914066  Resp: 625597.914066  Degree: 0
      Cost_io: 624219.000000  Cost_cpu: 53858761155
      Resp_io: 624219.000000  Resp_cpu: 53858761155
  Access Path: index (index (FFS))
    Index: STORE_SALES_IDX2
    resc_io: 141639.000000  resc_cpu: 28207733477
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  142361.185947  Resp: 142361.185947  Degree: 1
      Cost_io: 141639.000000  Cost_cpu: 28207733477
      Resp_io: 141639.000000  Resp_cpu: 28207733477
 ****** Costing Index STORE_SALES_IDX2
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER

  Estimated selectivity: 9.6212e-07 , col: #4 
  Access Path: index (IndexOnly)
    Index: STORE_SALES_IDX2
    resc_io: 4.000000  resc_cpu: 56286
    ix_sel: 9.6212e-07  ix_sel_with_filters: 9.6212e-07 
    Cost: 4.001441  Resp: 4.001441  Degree: 1
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: IndexRange
  Index: STORE_SALES_IDX2
         Cost: 4.001441  Degree: 1  Resp: 4.001441  Card: 138.564767  Bytes: 0.000000

Access path analysis for DATE_DIM
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for DATE_DIM[DATE_DIM] 
  SPD: Directive valid: dirid = 13969931850241126217, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {C(74171)[7, 9]}
  SPD: Return code in qosdDSDirSetup: EXISTS, estType = TABLE
  Column (#7): 
    NewDensity:0.000007, OldDensity:0.000007 BktCnt:73049.000000, PopBktCnt:73048.000000, PopValCnt:200, NDV:201
  Column (#7): D_YEAR(NUMBER)
    AvgLen: 4 NDV: 201 Nulls: 0 Density: 0.000007 Min: 1900.000000 Max: 2100.000000
    Histogram: Freq  #Bkts: 201  UncompBkts: 73049  EndPtVals: 201  ActualVal: yes
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 


 kkecdn: Single Table Predicate:"DATE_DIM"."D_YEAR"=2001
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY">=1
  Column (#9): 
    NewDensity:0.038666, OldDensity:0.000007 BktCnt:73049.000000, PopBktCnt:73049.000000, PopValCnt:12, NDV:12
  Column (#9): D_MOY(NUMBER)
    AvgLen: 3 NDV: 12 Nulls: 0 Density: 0.038666 Min: 1.000000 Max: 12.000000
    Histogram: Freq  #Bkts: 12  UncompBkts: 73049  EndPtVals: 12  ActualVal: yes
  Estimated selectivity: 1.000000 , endpoint value predicate, col: #9 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY"<=4
  Estimated selectivity: 0.329224 , endpoint value predicate, col: #9 
  Table: DATE_DIM  Alias: DATE_DIM
    Card: Original: 73049.000000  Rounded: 120  Computed: 120.166840  Non Adjusted: 120.166840
  Scan IO  Cost (Disk) =   411.000000
  Scan CPU Cost (Disk) =   33398564.400000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.004997 flag = 2048  ("DATE_DIM"."D_YEAR"=2001)
    io = NOCOST, cpu = 50.000000, sel = 0.329224 flag = 2048  ("DATE_DIM"."D_MOY"<=4)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("DATE_DIM"."D_MOY">=1)
  Total Scan IO  Cost  =   411.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 73049.000000 (#rows))
                       =   411.000000
  Total Scan CPU  Cost =   33398564.400000 (scan (Disk))
                         + 3676708.342003 (cpu filter eval) (= 50.332083 (per row) * 73049.000000 (#rows))
                       =   37075272.742003
  Access Path: TableScan
    Cost:  411.949216  Resp: 411.949216  Degree: 0
      Cost_io: 411.000000  Cost_cpu: 37075273
      Resp_io: 411.000000  Resp_cpu: 37075273
  ****** trying bitmap/domain indexes ******
 ****** Costing Index D_DATE_PK_IDX
  Access Path: index (FullScan)
    Index: D_DATE_PK_IDX
    resc_io: 164.000000  resc_cpu: 15777716
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 164.403948  Resp: 164.403948  Degree: 0
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: TableScan
         Cost: 411.949216  Degree: 1  Resp: 411.949216  Card: 120.166840  Bytes: 0.000000

***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE: Checking validity of partial join eval on query block SEL$2 (#2)
PJE: Passed validity of partial join eval by query block SEL$2 (#2)
number: [0]
PJE: Partial join eval conversion for query block SEL$2 (#2).
PJE: Table marked for partial join eval: STORE_SALES[SS]#1
***********************
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  DATE_DIM[DATE_DIM]#0  STORE_SALES[SS]#1

***************
Now joining: STORE_SALES[SS]#1
***************
NL Join
  Outer table: Card: 120.166840  Cost: 411.949216  Resp: 411.949216  Degree: 1  Bytes: 
Access path analysis for STORE_SALES
  Scan IO  Cost (Disk) =   624217.216667
  Scan CPU Cost (Disk) =   46657751154.880005
NOTE: ignoring histogram of column (STORE_SALES.SS_SOLD_DATE_SK)
      used only for incremental stats maintenance
  Column (#1): SS_SOLD_DATE_SK(NUMBER)
    AvgLen: 6 NDV: 1849 Nulls: 0 Density: 0.000541 Min: 2450816.000000 Max: 2452651.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000001 flag = 2064  ("SS"."SS_CUSTOMER_SK"=:B1)
    io = NOCOST, cpu = 50.000000, sel = 0.007463 flag = 2048  ("SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK")
  Total Scan IO  Cost  =   624217.216667 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 144020200.000000 (#rows))
                       =   624217.216667
  Total Scan CPU  Cost =   46657751154.880005 (scan (Disk))
                         + 7201016928.238328 (cpu filter eval) (= 50.000048 (per row) * 144020200.000000 (#rows))
                       =   53858768083.118332
  Inner table: STORE_SALES  Alias: SS
  Access Path: TableScan
    NL Join:  Cost: 75071947.658387  Resp: 75071947.658387  Degree: 1
      Cost_io: 74906477.000000  Cost_cpu: 6463089245247
      Resp_io: 74906477.000000  Resp_cpu: 6463089245247
  Access Path: index (index (FFS))
    Index: STORE_SALES_IDX2
    resc_io: 141637.716667  resc_cpu: 28207740405
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: STORE_SALES  Alias: SS
  Access Path: index (FFS)
    NL Join:  Cost: 17083600.284196  Resp: 17083600.284196  Degree: 1
      Cost_io: 16996937.000000  Cost_cpu: 3384965923877
      Resp_io: 16996937.000000  Resp_cpu: 3384965923877
 ****** Costing Index STORE_SALES_IDX2
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 8.3576e-08
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 8.3576e-08
  Estimated selectivity: 9.6212e-07 , col: #4 
  Access Path: index (AllEqJoinGuess)
    Index: STORE_SALES_IDX2
    resc_io: 3.000000  resc_cpu: 22414
    ix_sel: 6.9435e-09  ix_sel_with_filters: 6.9435e-09 
    NL Join : Cost: 772.018080  Resp: 772.018080  Degree: 1
      Cost_io: 771.000000  Cost_cpu: 39764991
      Resp_io: 771.000000  Resp_cpu: 39764991
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 772.018080
          resc: 772.018080  resc_io: 771.000000  resc_cpu: 39764991
          resp: 772.018080  resp_io: 771.000000  resc_cpu: 39764991
  SPD: Directive valid: dirid = 10827845680942532126, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {F(74191)[]; F(74171)[]}
  SPD: Return code in qosdDSDirSetup: EXISTS, estType = JOIN
Semi Join Card:  120.166840 = outer (120.166840) * sel (1.000000)
Join Card - Rounded: 120 Computed: 120.166840
  Outer table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card 120.166840  bytes:   deg: 1  resp: 411.949216
  Inner table:  STORE_SALES  Alias: SS
    resc: 4.001441  card: 138.564767  bytes:   deg: 1  resp: 4.001441
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     25 Total Rows:            120
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39096166
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     24 Total Rows:            139
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39103407
      Total Temp space used: 0
  SM join: Resc: 417.952755  Resp: 417.952755  [multiMatchCost=0.000000]
SM Join
  SM cost: 417.952755 
     resc: 417.952755 resc_io: 415.000000 resc_cpu: 115331131
     resp: 417.952755 resp_io: 415.000000 resp_cpu: 115331131
SM Join (with index on outer)
 ****** Costing Index D_DATE_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (FullScan)
    Index: D_DATE_PK_IDX
    resc_io: 1566.000000  resc_cpu: 52083873
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1567.333473  Resp: 1567.333473  Degree: 1
  Outer table:  DATE_DIM  Alias: DATE_DIM
    resc: 1567.333473  card 120.166840  bytes:   deg: 1  resp: 1567.333473
  Inner table:  STORE_SALES  Alias: SS
    resc: 4.001441  card: 138.564767  bytes:   deg: 1  resp: 4.001441
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     24 Total Rows:            139
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39103407
      Total Temp space used: 0
  SM join: Resc: 1572.336055  Resp: 1572.336055  [multiMatchCost=0.000000]
  Outer table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card 120.166840  bytes:   deg: 1  resp: 411.949216
  Inner table:  STORE_SALES  Alias: SS
    resc: 4.001441  card: 138.564767  bytes:   deg: 1  resp: 4.001441
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016178  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 415.966836  Resp: 415.966836  [multiMatchCost=0.000000]
HA Join
  HA cost: 415.966836  
     resc: 415.966836 resc_io: 415.000000 resc_cpu: 37763459
     resp: 415.966836 resp_io: 415.000000 resp_cpu: 37763459
Best:: JoinMethod: HashSemi
       Cost: 415.966836  Degree: 1  Resp: 415.966836  Card: 120.166840 Bytes: 
***********************
Best so far:  Table#: 0  cost: 411.949216  card: 120.166840  bytes: 1560.000000
              Table#: 1  cost: 415.966836  card: 120.166840  bytes: 3000.000000
***********************

*********************************
Number of join permutations tried: 1
*********************************
*********************
PJE: Partial join eval conversion for query block SEL$2 (#2).
PJE: Table marked for partial join eval: STORE_SALES[SS]#1
***********************
Enumerating distribution method (advanced)
--- Distribution method for 
join between DATE_DIM[DATE_DIM](serial) and SS[STORE_SALES](serial); jm = 2; right side access path = IndexRange
---- serial Hash-Join -> NONE

kkoaccsqf: Current query block SEL$2 (#2) is serial
kkoaccsqf: correlated subquery query block SEL$3 (#4) in filter               : serial
(newjo-save)    [0 1 ]
LORE: Or-Expansion validity checks failed on query block SEL$2 (#2) because Cost based OR expansion enabled
Transfer Optimizer annotations for query block SEL$2 (#2)
Final cost for query block SEL$2 (#2) - All Rows Plan:
  Best join order: 1
  Cost: 415.966836  Degree: 1  Card: 120.000000  Bytes: 3000.000000
  Resc: 415.966836  Resc_io: 415.000000  Resc_cpu: 37763459
  Resp: 415.966836  Resp_io: 415.000000  Resc_cpu: 37763459
kkoqbc-subheap (delete addr=0x7f0472244de0, in-use=63832, alloc=65704)
kkoqbc-end:
        :
    call(in-use=660784, alloc=737160), compile(in-use=1722040, alloc=1723464), execution(in-use=30360, alloc=32424)

kkoqbc: finish optimizing query block SEL$2 (#2)
kkoqbc: optimizing query block SEL$F5B72DD9 (#6)
        
        :
    call(in-use=658576, alloc=737160), compile(in-use=1726144, alloc=1727608), execution(in-use=30440, alloc=32424)

kkoqbc-subheap (create addr=0x7f0472244de0)
****************
QUERY BLOCK TEXT
****************
Not available.
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$F5B72DD9 nbfros=1 flg=0
  fro(0): flg=0 objn=74168 hint_alias="C"@"SEL$1"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3255 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: CUSTOMER  Alias:  C
  #Rows: 1080000  SSZ: 0  LGR: 0  #Blks:  23374  AvgRowLen:  138.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#5): C_CURRENT_ADDR_SK(NUMBER)
    AvgLen: 5 NDV: 457472 Nulls: 0 Density: 0.000002 Min: 1.000000 Max: 539997.000000
  Column (#3): C_CURRENT_CDEMO_SK(NUMBER)
    AvgLen: 6 NDV: 772544 Nulls: 0 Density: 0.000001 Min: 18.000000 Max: 1920799.000000
  Column (#1): C_CUSTOMER_SK(NUMBER)
    AvgLen: 6 NDV: 1080000 Nulls: 0 Density: 0.000001 Min: 1.000000 Max: 1080000.000000
Index Stats::
  Index: CUSTOMER_PK_IDX  Col#: 1
  LVLS: 2  #LB: 2266  #DK: 1080000  LB/K: 1.00  DB/K: 1.00  CLUF: 75684.00  NRW: 1080000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
try to generate single-table filter predicates from ORs for query block SEL$F5B72DD9 (#6)
finally:  EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM" WHERE "SS"."SS_CUSTOMER_SK"=:B1 AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND ( EXISTS (SELECT 0 FROM "WEB_SALES" "WEB_SALES","DATE_DIM" "DATE_DIM" WHERE "WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B2 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1) OR  EXISTS (SELECT 0 FROM "CATALOG_SALES" "CATALOG_SALES","DATE_DIM" "DATE_DIM" WHERE "CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B3 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1)))

=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$F5B72DD9 (#6)
Applicable DS directives:
   dirid = 9316027922818115912, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74168)[3, 5]}
Checking valid directives for the query block
  SPD: Directive valid: dirid = 9316027922818115912, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74168)[3, 5]}
  SPD: Return code in qosdDSDirSetup: EXISTS, estType = GROUP_BY
  SPD: Return code in qosdDSDirSetup: NODIR, estType = QUERY_BLOCK
Return code in qosdSetupDirCtx4QB: EXISTS
=====================================
SPD: END context at query block level
=====================================
Access path analysis for CUSTOMER
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for CUSTOMER[C] 
  SPD: Return code in qosdDSDirSetup: NODIR, estType = TABLE

 kkecdn: Single Table Predicate: EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM" WHERE "SS"."SS_CUSTOMER_SK"=:B1 AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND ( EXISTS (SELECT 0 FROM "WEB_SALES" "WEB_SALES","DATE_DIM" "DATE_DIM" WHERE "WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B2 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1) OR  EXISTS (SELECT 0 FROM "CATALOG_SALES" "CATALOG_SALES","DATE_DIM" "DATE_DIM" WHERE "CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B3 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1)))
  Column (#1): C_CUSTOMER_SK(NUMBER)
    AvgLen: 6 NDV: 1080000 Nulls: 0 Density: 0.000001 Min: 1.000000 Max: 1080000.000000
  Table: CUSTOMER  Alias: C
    Card: Original: 1080000.000000  Rounded: 1080000  Computed: 1080000.000000  Non Adjusted: 1080000.000000
  Scan IO  Cost (Disk) =   6332.000000
  Scan CPU Cost (Disk) =   414856538.560000
  Cost of predicates:
    io = NOCOST, cpu = 20.000000, sel = 0.050000 flag = 2562  ( EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM" WHERE "SS"."SS_CUSTOMER_SK"=:B1 AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND ( EXISTS (SELECT 0 FROM "WEB_SALES" "WEB_SALES","DATE_DIM" "DATE_DIM" WHERE "WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B2 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1) OR  EXISTS (SELECT 0 FROM "CATALOG_SALES" "CATALOG_SALES","DATE_DIM" "DATE_DIM" WHERE "CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B3 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1))))
  Total Scan IO  Cost  =   6332.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 1080000.000000 (#rows))
                       =   6332.000000
  Total Scan CPU  Cost =   414856538.560000 (scan (Disk))
                         + 21600000.000000 (cpu filter eval) (= 20.000000 (per row) * 1080000.000000 (#rows))
                       =   436456538.560000
  Access Path: TableScan
    Cost:  6343.174339  Resp: 6343.174339  Degree: 0
      Cost_io: 6332.000000  Cost_cpu: 436456539
      Resp_io: 6332.000000  Resp_cpu: 436456539
  Best:: AccessPath: TableScan
         Cost: 6343.174339  Degree: 1  Resp: 6343.174339  Card: 1080000.000000  Bytes: 0.000000

Grouping column cardinality [C_CURRENT_]    772544
Grouping column cardinality [C_CURRENT_]    457472
***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE:  Bypassed; QB has a single table SEL$F5B72DD9 (#6)
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  CUSTOMER[C]#0
GROUP BY sort

GROUP BY/Correlated Subquery Filter adjustment factor: 0.707107
GROUP BY cardinality:  1080000.000000, TABLE cardinality:  1080000.000000
Vector group by not costed because no SYS_OP_XLATE_USE in group by.
kdmoGByPushdownValid: table is not in memory    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 3835 Row size:     29 Total Rows:        1080000
      Initial runs:   2 Merge passes:  1 IO Cost / pass:       2078
      Total IO sort cost: 5913.000000      Total CPU sort cost: 1108751040
      Total Temp space used: 30417000
***********************
Best so far:  Table#: 0  cost: 12284.561037  card: 1080000.000000  bytes: 18360000.000000
***********************

*********************************
Number of join permutations tried: 1
*********************************
Enumerating distribution method (advanced)

kkoaccsqf: Current query block SEL$F5B72DD9 (#6) is serial
kkoaccsqf: correlated subquery query block SEL$2 (#2) in filter               : serial
Final adjusted join cardinality: 1.000000, sq. fil. factor: 1080000.000000

GROUP BY/Correlated Subquery Filter adjustment factor: 0.707107
GROUP BY cardinality:  1.000000, TABLE cardinality:  1.000000
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     29 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39058824
      Total Temp space used: 0
LORE: Or-Expansion validity checks failed on query block SEL$F5B72DD9 (#6) because Cost based OR expansion enabled
Transfer Optimizer annotations for query block SEL$F5B72DD9 (#6)
Final cost for query block SEL$F5B72DD9 (#6) - All Rows Plan:
  Best join order: 1
  Cost: 12284.561037  Degree: 1  Card: 1.000000  Bytes: 18360000.000000
  Resc: 12284.561037  Resc_io: 12245.000000  Resc_cpu: 1545207578
  Resp: 12284.561037  Resp_io: 12245.000000  Resc_cpu: 1545207578
kkoqbc-subheap (delete addr=0x7f0472244de0, in-use=26928, alloc=32840)
kkoqbc-end:
        :
    call(in-use=666784, alloc=720584), compile(in-use=1728232, alloc=1730960), execution(in-use=31664, alloc=32424)

kkoqbc: finish optimizing query block SEL$F5B72DD9 (#6)
kkoqbc: optimizing query block SEL$D869EBF0 (#7)
        
        :
    call(in-use=664576, alloc=720584), compile(in-use=1734736, alloc=1735104), execution(in-use=31856, alloc=32424)

kkoqbc-subheap (create addr=0x7f0472244de0)
****************
QUERY BLOCK TEXT
****************
Not available.
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$D869EBF0 nbfros=2 flg=0
  fro(0): flg=0 objn=74169 hint_alias="CA"@"SEL$1"
  fro(1): flg=0 objn=74170 hint_alias="CUSTOMER_DEMOGRAPHICS"@"SEL$1"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3255 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: CUSTOMER_ADDRESS  Alias: CA
  #Rows: 540000  SSZ: 0  LGR: 0  #Blks:  13174  AvgRowLen:  152.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#8): CA_COUNTY(VARCHAR2)
    AvgLen: 16 NDV: 1877 Nulls: 0 Density: 0.000471
    Histogram: Hybrid  #Bkts: 254  UncompBkts: 5580  EndPtVals: 254  ActualVal: yes
Index Stats::
  Index: CA_ADDRESS_PK_IDX  Col#: 1
  LVLS: 2  #LB: 1127  #DK: 540000  LB/K: 1.00  DB/K: 1.00  CLUF: 12283.00  NRW: 540000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table: CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
  #Rows: 1920800  SSZ: 0  LGR: 0  #Blks:  17254  AvgRowLen:  54.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
Index Stats::
  Index: CD_DEMO_PK_IDX  Col#: 1
  LVLS: 2  #LB: 4138  #DK: 1920800  LB/K: 1.00  DB/K: 1.00  CLUF: 795806.00  NRW: 1920800.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
  Column (#1): CD_DEMO_SK(NUMBER)
    AvgLen: 6 NDV: 1920800 Nulls: 0 Density: 0.000001 Min: 1.000000 Max: 1920800.000000
  Column (#1): CA_ADDRESS_SK(NUMBER)
    AvgLen: 5 NDV: 540000 Nulls: 0 Density: 0.000002 Min: 1.000000 Max: 540000.000000
  Column (#2): 
    NewDensity:0.249925, OldDensity:0.000000 BktCnt:1920800.000000, PopBktCnt:1920800.000000, PopValCnt:2, NDV:2
  Column (#2): CD_GENDER(CHARACTER)
    AvgLen: 2 NDV: 2 Nulls: 0 Density: 0.249925
    Histogram: Freq  #Bkts: 2  UncompBkts: 1920800  EndPtVals: 2  ActualVal: no 
  Column (#3): 
    NewDensity:0.098953, OldDensity:0.000000 BktCnt:1920800.000000, PopBktCnt:1920800.000000, PopValCnt:5, NDV:5
  Column (#3): CD_MARITAL_STATUS(CHARACTER)
    AvgLen: 2 NDV: 5 Nulls: 0 Density: 0.098953
    Histogram: Freq  #Bkts: 5  UncompBkts: 1920800  EndPtVals: 5  ActualVal: yes
  Column (#4): 
    NewDensity:0.070771, OldDensity:0.000000 BktCnt:1920800.000000, PopBktCnt:1920800.000000, PopValCnt:7, NDV:7
  Column (#4): CD_EDUCATION_STATUS(CHARACTER)
    AvgLen: 21 NDV: 7 Nulls: 0 Density: 0.070771
    Histogram: Freq  #Bkts: 7  UncompBkts: 1920800  EndPtVals: 7  ActualVal: yes
  Column (#5): CD_PURCHASE_ESTIMATE(NUMBER)
    AvgLen: 4 NDV: 9500 Nulls: 0 Density: 0.000105 Min: 500.000000 Max: 9999.000000
  Column (#6): CD_CREDIT_RATING(CHARACTER)
    AvgLen: 11 NDV: 4 Nulls: 0 Density: 0.250000
  Column (#7): CD_DEP_COUNT(NUMBER)
    AvgLen: 3 NDV: 6 Nulls: 0 Density: 0.166667 Min: 0.000000 Max: 5.000000
  Column (#8): CD_DEP_EMPLOYED_COUNT(NUMBER)
    AvgLen: 3 NDV: 6 Nulls: 0 Density: 0.166667 Min: 0.000000 Max: 5.000000
  Column (#9): CD_DEP_COLLEGE_COUNT(NUMBER)
    AvgLen: 3 NDV: 6 Nulls: 0 Density: 0.166667 Min: 0.000000 Max: 5.000000
try to generate single-table filter predicates from ORs for query block SEL$D869EBF0 (#7)
finally: "CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County'

=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$D869EBF0 (#7)
Applicable DS directives:
   dirid = 7754152966831092939, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {EC(74170)[3, 4]}
   dirid = 18439699102505563871, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {EC(74169)[8]}
Checking valid directives for the query block
  SPD: Return code in qosdDSDirSetup: NODIR, estType = GROUP_BY
  SPD: Return code in qosdDSDirSetup: NODIR, estType = QUERY_BLOCK
Return code in qosdSetupDirCtx4QB: EXISTS
=====================================
SPD: END context at query block level
=====================================
Access path analysis for CUSTOMER_DEMOGRAPHICS
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS] 
  SPD: Return code in qosdDSDirSetup: NODIR, estType = TABLE
  Table: CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
    Card: Original: 1920800.000000  Rounded: 1920800  Computed: 1920800.000000  Non Adjusted: 1920800.000000
  Scan IO  Cost (Disk) =   4675.000000
  Scan CPU Cost (Disk) =   718321325.760000
  Total Scan IO  Cost  =   4675.000000 (scan (Disk))
                       =   4675.000000
  Total Scan CPU  Cost =   718321325.760000 (scan (Disk))
                       =   718321325.760000
  Access Path: TableScan
    Cost:  4693.390757  Resp: 4693.390757  Degree: 0
      Cost_io: 4675.000000  Cost_cpu: 718321326
      Resp_io: 4675.000000  Resp_cpu: 718321326
  ****** trying bitmap/domain indexes ******
 ****** Costing Index CD_DEMO_PK_IDX
  Access Path: index (FullScan)
    Index: CD_DEMO_PK_IDX
    resc_io: 4140.000000  resc_cpu: 413642762
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 4150.590251  Resp: 4150.590251  Degree: 0
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: TableScan
         Cost: 4693.390757  Degree: 1  Resp: 4693.390757  Card: 1920800.000000  Bytes: 0.000000

Access path analysis for CUSTOMER_ADDRESS
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for CUSTOMER_ADDRESS[CA] 
  SPD: Directive valid: dirid = 18439699102505563871, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {EC(74169)[8]}
  SPD: Return code in qosdDSDirSetup: EXISTS, estType = TABLE

 kkecdn: Single Table Predicate:"CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County'
  Using density: 4.7103e-04 of col #8 as selectivity of pred having unreasonably low value
  Using density: 4.7103e-04 of col #8 as selectivity of pred having unreasonably low value
  Using density: 4.7103e-04 of col #8 as selectivity of pred having unreasonably low value
  Using density: 4.7103e-04 of col #8 as selectivity of pred having unreasonably low value
  Estimated selectivity: 5.3763e-04 , endpoint value predicate, col: #8 
  Table: CUSTOMER_ADDRESS  Alias: CA
    Card: Original: 540000.000000  Rounded: 1308  Computed: 1307.756551  Non Adjusted: 1307.756551
  Scan IO  Cost (Disk) =   3570.000000
  Scan CPU Cost (Disk) =   250417850.560000
  Cost of predicates:
    io = 0.000000, cpu = 249.764594, sel = 0.002422 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Chouteau County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Dinwiddie County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Dixie County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Harrisonburg city')
      io = NOCOST, cpu = 50.000000, sel = 0.000538 flag = 2048  ("CA"."CA_COUNTY"='Lowndes County')
  Total Scan IO  Cost  =   3570.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 540000.000000 (#rows))
                       =   3570.000000
  Total Scan CPU  Cost =   250417850.560000 (scan (Disk))
                         + 134872880.645405 (cpu filter eval) (= 249.764594 (per row) * 540000.000000 (#rows))
                       =   385290731.205405
  Access Path: TableScan
    Cost:  3579.864371  Resp: 3579.864371  Degree: 0
      Cost_io: 3570.000000  Cost_cpu: 385290731
      Resp_io: 3570.000000  Resp_cpu: 385290731
  ****** trying bitmap/domain indexes ******
 ****** Costing Index CA_ADDRESS_PK_IDX
  Access Path: index (FullScan)
    Index: CA_ADDRESS_PK_IDX
    resc_io: 1129.000000  resc_cpu: 116040106
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1131.970906  Resp: 1131.970906  Degree: 0
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: TableScan
         Cost: 3579.864371  Degree: 1  Resp: 3579.864371  Card: 1307.756551  Bytes: 0.000000

Grouping column cardinality [CD_DEMO_SK]    1920800
Grouping column cardinality [CA_ADDRESS]    1308
Grouping column cardinality [ CD_GENDER]    2
Grouping column cardinality [CD_MARITAL]    5
Grouping column cardinality [CD_EDUCATI]    7
Grouping column cardinality [CD_PURCHAS]    9500
Grouping column cardinality [CD_CREDIT_]    4
Grouping column cardinality [CD_DEP_COU]    6
Grouping column cardinality [CD_DEP_EMP]    6
Grouping column cardinality [CD_DEP_COL]    6
***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE:  Bypassed; QB is not duplicate insignificant SEL$D869EBF0 (#7)
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  CUSTOMER_ADDRESS[CA]#0  CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS]#1

***************
Now joining: CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS]#1
***************
NL Join
  Outer table: Card: 1307.756551  Cost: 3579.864371  Resp: 3579.864371  Degree: 1  Bytes: 
Access path analysis for CUSTOMER_DEMOGRAPHICS
  Scan IO  Cost (Disk) =   4672.959480
  Scan CPU Cost (Disk) =   718321325.760000
  Total Scan IO  Cost  =   4672.959480 (scan (Disk))
                       =   4672.959480
  Total Scan CPU  Cost =   718321325.760000 (scan (Disk))
                       =   718321325.760000
  Inner table: CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
  Access Path: TableScan
    NL Join:  Cost: 6139865.974310  Resp: 6139865.974310  Degree: 1
      Cost_io: 6115801.000000  Cost_cpu: 939949584825
      Resp_io: 6115801.000000  Resp_cpu: 939949584825
  ****** trying bitmap/domain indexes ******
 ****** Costing Index CD_DEMO_PK_IDX
  Access Path: index (FullScan)
    Index: CD_DEMO_PK_IDX
    resc_io: 4140.000000  resc_cpu: 413642762
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 4150.590251  Resp: 4150.590251  Degree: 0
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 6139865.974310
          resc: 6139865.974310  resc_io: 6115801.000000  resc_cpu: 939949584825
          resp: 6139865.974310  resp_io: 6115801.000000  resc_cpu: 939949584825
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Join Card:  2511938782.753941 = outer (1307.756551) * inner (1920800.000000) * sel (1.000000)
Join Card - Rounded: 2511938783 Computed: 2511938782.753941
Grouping column cardinality [CD_DEMO_SK]    1920800
Grouping column cardinality [CA_ADDRESS]    1308
Grouping column cardinality [ CD_GENDER]    2
Grouping column cardinality [CD_MARITAL]    5
Grouping column cardinality [CD_EDUCATI]    7
Grouping column cardinality [CD_PURCHAS]    9500
Grouping column cardinality [CD_CREDIT_]    4
Grouping column cardinality [CD_DEP_COU]    6
Grouping column cardinality [CD_DEP_EMP]    6
Grouping column cardinality [CD_DEP_COL]    6
GROUP BY sort

GROUP BY/Correlated Subquery Filter adjustment factor: 0.044194
GROUP BY cardinality:  2511938783.000000, TABLE cardinality:  2511938783.000000
Vector group by not costed because no SYS_OP_XLATE_USE in group by.
kdmoGByPushdownValid: more than one table in group by    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 28600675 Row size:     93 Total Rows:     2511938783
      Initial runs:   2228 Merge passes:  2 IO Cost / pass:    15492034
      Total IO sort cost: 59584743.000000      Total CPU sort cost: 4590517954039
      Total Temp space used: 254046979000
Best:: JoinMethod: NestedLoop
       Cost: 65842137.295423  Degree: 1  Resp: 65842137.295423  Card: 2511938782.753941 Bytes: 
***********************
Best so far:  Table#: 0  cost: 3579.864371  card: 1307.756551  bytes: 27468.000000
              Table#: 1  cost: 65842137.295423  card: 2511938782.753941  bytes: 188395408725.000000
***********************

*********************************
Number of join permutations tried: 1
*********************************
Enumerating distribution method (advanced)
--- Distribution method for 
join between CA[CUSTOMER_ADDRESS](serial) and CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS](serial); jm = 14; right side access path = TableScan
---- serial Hash-Join -> NONE

(newjo-save)    [0 1 ]

GROUP BY/Correlated Subquery Filter adjustment factor: 0.044194
GROUP BY cardinality:  2511938783.000000, TABLE cardinality:  2511938783.000000
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 28600675 Row size:     93 Total Rows:     2511938783
      Initial runs:   2228 Merge passes:  2 IO Cost / pass:    15492034
      Total IO sort cost: 59584743.000000      Total CPU sort cost: 4590517954039
      Total Temp space used: 254046979000
LORE: Or-Expansion validity checks failed on query block SEL$D869EBF0 (#7) because Cost based OR expansion enabled
Transfer Optimizer annotations for query block SEL$D869EBF0 (#7)
Final cost for query block SEL$D869EBF0 (#7) - All Rows Plan:
  Best join order: 1
  Cost: 65842137.295423  Degree: 1  Card: 2511938783.000000  Bytes: 188395408725.000000
  Resc: 65842137.295423  Resc_io: 65700544.000000  Resc_cpu: 5530467538865
  Resp: 65842137.295423  Resp_io: 65700544.000000  Resc_cpu: 5530467538865
kkoqbc-subheap (delete addr=0x7f0472244de0, in-use=46248, alloc=65704)
kkoqbc-end:
        :
    call(in-use=706576, alloc=786264), compile(in-use=1770800, alloc=1771712), execution(in-use=31856, alloc=32424)

kkoqbc: finish optimizing query block SEL$D869EBF0 (#7)
kkoqbc: optimizing query block SEL$F7BA66FC (#1)
        
        :
    call(in-use=704368, alloc=786264), compile(in-use=1776944, alloc=1779288), execution(in-use=32016, alloc=32424)

kkoqbc-subheap (create addr=0x7f0472244de0)
****************
QUERY BLOCK TEXT
****************
SELECT /*query10*/
    cd_gender,
    cd_marital_status,
    cd_education_status,
    COUNT(*) cnt1,
    cd_purchase_estimate,
    COUNT(*) cnt2,
    cd_credit_rating,
    COUNT(*) cnt3,
    cd_dep_count,
    COUNT(*) cnt4,
    cd_dep_employed_count,
    COUNT(*) cnt5,
    cd_dep_college_count,
    COUNT(*) cnt6
FROM
    customer c,
    customer_address ca,
    customer_demographics
WHERE
    -- join predicates
        c.c_current_addr_sk = ca.ca_address_sk
    AND cd_demo_sk = c.c_current_cdemo_sk
    -- filter predicates
    AND ca.ca_county IN (
        'Chouteau County',
        'Dixie County',
        'Harrisonburg city',
        'Lowndes County',
        'Dinwiddie County'
    )
    -- filter predicate (subquery)
    AND EXISTS (
        SELECT
            *
        FROM
            store_sales ss,
            date_dim
        WHERE
            c.c_customer_sk = ss.ss_customer_sk
            AND ss_sold_date_sk = d_date_sk
            AND d_year = 2001
            AND d_moy BETWEEN 1 AND 1 + 3
            AND ( EXISTS (
                SELECT
                    *
                FROM
                    web_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = ws_bill_customer_sk
                    AND ws_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            )
                  OR EXISTS (
                SELECT
                    *
                FROM
                    catalog_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = cs_ship_customer_sk
                    AND cs_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            ) )
    )
GROUP BY
    cd_gender,
    cd_marital_status,
    cd_education_status,
    cd_purchase_estimate,
    cd_credit_rating,
    cd_dep_count,
    cd_dep_employed_count,
    cd_dep_college_count

---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$F7BA66FC nbfros=2 flg=0
  fro(0): flg=1 objn=0 hint_alias="VW_GBF_3"@"SEL$F13E154C"
  fro(1): flg=1 objn=0 hint_alias="VW_GBC_2"@"SEL$F67CBA62"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3255 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: VW_GBC_2  Alias: VW_GBC_2  (NOT ANALYZED)
  #Rows: 0  SSZ: 0  LGR: 0  #Blks:  0  AvgRowLen:  0.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 0
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
***********************
Table Stats::
  Table: VW_GBF_3  Alias: VW_GBF_3  (NOT ANALYZED)
  #Rows: 0  SSZ: 0  LGR: 0  #Blks:  0  AvgRowLen:  0.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 0
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#9): ITEM_9(CHARACTER)
    AvgLen: 2 NDV: 2 Nulls: 0 Density: 0.249925
    Histogram: Freq  #Bkts: 2  UncompBkts: 1920800  EndPtVals: 2  ActualVal: no 
  Column (#10): ITEM_10(CHARACTER)
    AvgLen: 2 NDV: 5 Nulls: 0 Density: 0.098953
    Histogram: Freq  #Bkts: 5  UncompBkts: 1920800  EndPtVals: 5  ActualVal: yes
  Column (#11): ITEM_11(CHARACTER)
    AvgLen: 21 NDV: 7 Nulls: 0 Density: 0.070771
    Histogram: Freq  #Bkts: 7  UncompBkts: 1920800  EndPtVals: 7  ActualVal: yes
  Column (#12): ITEM_12(NUMBER)
    AvgLen: 4 NDV: 9500 Nulls: 0 Density: 0.000105 Min: 500.000000 Max: 9999.000000
  Column (#13): ITEM_13(CHARACTER)
    AvgLen: 11 NDV: 4 Nulls: 0 Density: 0.250000
  Column (#14): ITEM_14(NUMBER)
    AvgLen: 3 NDV: 6 Nulls: 0 Density: 0.166667 Min: 0.000000 Max: 5.000000
  Column (#15): ITEM_15(NUMBER)
    AvgLen: 3 NDV: 6 Nulls: 0 Density: 0.166667 Min: 0.000000 Max: 5.000000
  Column (#16): ITEM_16(NUMBER)
    AvgLen: 3 NDV: 6 Nulls: 0 Density: 0.166667 Min: 0.000000 Max: 5.000000
  Column (#2): ITEM_2(NUMBER)
    AvgLen: 5 NDV: 457472 Nulls: 0 Density: 0.000002 Min: 1.000000 Max: 539997.000000
  Column (#2): ITEM_2(NUMBER)
    AvgLen: 5 NDV: 540000 Nulls: 0 Density: 0.000002 Min: 1.000000 Max: 540000.000000
  Column (#1): ITEM_1(NUMBER)
    AvgLen: 6 NDV: 1920800 Nulls: 0 Density: 0.000001 Min: 1.000000 Max: 1920800.000000
  Column (#1): ITEM_1(NUMBER)
    AvgLen: 6 NDV: 772544 Nulls: 0 Density: 0.000001 Min: 18.000000 Max: 1920799.000000
try to generate single-table filter predicates from ORs for query block SEL$F7BA66FC (#1)
finally: "VW_GBC_2"."ITEM_2"="VW_GBF_3"."ITEM_2" AND "VW_GBF_3"."ITEM_1"="VW_GBC_2"."ITEM_1"

=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$F7BA66FC (#1)
Applicable DS directives:
Return code in qosdSetupDirCtx4QB: NODIR
=====================================
SPD: END context at query block level
=====================================
Access path analysis for VW_GBF_3

Access path analysis for VW_GBC_2

Grouping column cardinality [    ITEM_9]    2
Grouping column cardinality [   ITEM_10]    5
Grouping column cardinality [   ITEM_11]    7
Grouping column cardinality [   ITEM_12]    9500
Grouping column cardinality [   ITEM_13]    4
Grouping column cardinality [   ITEM_14]    6
Grouping column cardinality [   ITEM_15]    6
Grouping column cardinality [   ITEM_16]    6
Join ColGroups for CUSTOMER[C] and <unnamed>[] : Using cdn sanity check
***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE:  Bypassed; QB is not duplicate insignificant SEL$F7BA66FC (#1)
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  VW_GBC_2[VW_GBC_2]#0  VW_GBF_3[VW_GBF_3]#1

***************
Now joining: VW_GBF_3[VW_GBF_3]#1
***************
NL Join
  Outer table: Card: 1.000000  Cost: 5.000000  Resp: 0.000000  Degree: 0  Bytes: 
Access path analysis for VW_GBF_3
  Inner table: VW_GBF_3  Alias: VW_GBF_3
  Access Path: TableScan
    NL Join:  Cost: 0.000000  Resp: 0.000000  Degree: 0
      Cost_io: 0.000000  Cost_cpu: 0
      Resp_io: 0.000000  Resp_cpu: 0

  Best NL cost: 0.000000
          resc: 0.000000  resc_io: 0.000000  resc_cpu: 0
          resp: 0.000000  resp_io: 0.000000  resc_cpu: 0
  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = JOIN
ColGroup cardinality sanity check: ndv for  CUSTOMER[C] = 1080000.000000 
Join selectivity using 1 ColGroups: 3.9802e-10 (sel1 = 0.000000, sel2 = 0.000000)
Join Card:  0.999814 = outer (1.000000) * inner (2511938783.000000) * sel (3.9802e-10)
Join Card - Rounded: 1 Computed: 0.999814
Grouping column cardinality [    ITEM_9]    2
Grouping column cardinality [   ITEM_10]    5
Grouping column cardinality [   ITEM_11]    7
Grouping column cardinality [   ITEM_12]    9500
Grouping column cardinality [   ITEM_13]    4
Grouping column cardinality [   ITEM_14]    6
Grouping column cardinality [   ITEM_15]    6
Grouping column cardinality [   ITEM_16]    6
  Outer table:  VW_GBC_2  Alias: VW_GBC_2
    resc: 0.000000  card 1.000000  bytes:   deg: 0  resp: 0.000000
  Inner table:  VW_GBF_3  Alias: VW_GBF_3
    resc: 0.000000  card: 2511938783.000000  bytes:   deg: 0  resp: 0.000000
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     108 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39058824
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 49820530 Row size:     162 Total Rows:     2511938783
      Initial runs:   3881 Merge passes:  2 IO Cost / pass:    26986122
      Total IO sort cost: 103792774.000000      Total CPU sort cost: 5374358177884
      Total Temp space used: 894687118000
  SM join: Resc: 103930371.519615  Resp: 103930371.519615  [multiMatchCost=0.000000]
SM Join
  SM cost: 103930371.519615 
     resc: 103930371.519615 resc_io: 103792774.000000 resc_cpu: 5374397236708
     resp: 103930371.519615 resp_io: 103792774.000000 resp_cpu: 5374397236708
  Outer table:  VW_GBC_2  Alias: VW_GBC_2
    resc: 0.000000  card 1.000000  bytes:   deg: 0  resp: 0.000000
  Inner table:  VW_GBF_3  Alias: VW_GBF_3
    resc: 0.000000  card: 2511938783.000000  bytes:   deg: 0  resp: 0.000000
    using dmeth: 2  #groups: 1
    Cost per ptn: 6431.183936  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 1  probefrag: 45994973  ppasses: 1
  Hash join: Resc: 6431.183936  Resp: 6431.183936  [multiMatchCost=0.000000]
HA Join
  HA cost: 6431.183936  
     resc: 6431.183936 resc_io: 0.000000 resc_cpu: 251194478450
     resp: 6431.183936 resp_io: 0.000000 resp_cpu: 251194478450
GROUP BY sort
GROUP BY/Correlated Subquery Filter adjustment factor: 0.088388
GROUP BY cardinality:  1.000000, TABLE cardinality:  1.000000
Vector group by not costed because no SYS_OP_XLATE_USE in group by.
kdmoGByPushdownValid: more than one table in group by    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     260 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39058824
      Total Temp space used: 0
Best:: JoinMethod: Hash
       Cost: 6432.183936  Degree: 0  Resp: 6432.183936  Card: 0.999814 Bytes: 
***********************
Best so far:  Table#: 0  cost: 5.000000  card: 1.000000  bytes: 89.000000
              Table#: 1  cost: 6432.183936  card: 0.999814  bytes: 227.000000
***********************

*********************************
Number of join permutations tried: 1
*********************************
Enumerating distribution method (advanced)
--- Distribution method for 
join between VW_GBC_2[VW_GBC_2](serial) and VW_GBF_3[VW_GBF_3](serial); jm = 1; right side access path = TableScan
---- serial Hash-Join -> NONE

(newjo-save)    [0 1 ]
GROUP BY/Correlated Subquery Filter adjustment factor: 0.088388
GROUP BY cardinality:  1.000000, TABLE cardinality:  1.000000
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     260 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39058824
      Total Temp space used: 0
LORE: Or-Expansion validity checks failed on query block SEL$F7BA66FC (#1) because Cost based OR expansion enabled
Transfer Optimizer annotations for query block SEL$F7BA66FC (#1)
Final cost for query block SEL$F7BA66FC (#1) - All Rows Plan:
  Best join order: 1
  Cost: 6432.183936  Degree: 0  Card: 1.000000  Bytes: 227.000000
  Resc: 6432.183936  Resc_io: 0.000000  Resc_cpu: 251233537274
  Resp: 6432.183936  Resp_io: 0.000000  Resc_cpu: 251233537274
kkoqbc-subheap (delete addr=0x7f0472244de0, in-use=42544, alloc=49272)
kkoqbc-end:
        :
    call(in-use=723176, alloc=786160), compile(in-use=1782136, alloc=1783432), execution(in-use=32416, alloc=36480)

kkoqbc: finish optimizing query block SEL$F7BA66FC (#1)
First K Rows: K = 1.00, N = 120.00
First K Rows: K = 1.00, N = 69.00
First K Rows: K = 1.00, N = 37.00
First K Rows: Setup end
***********************
CBQT: Looking for cost annotations for query block SEL$3, key = SEL$3_00010000_0
CBQT: Replaced cost annotations in query block SEL$3.
CBQT: Looking for cost annotations for query block SEL$4, key = SEL$4_00010000_0
CBQT: Replaced cost annotations in query block SEL$4.
CBQT: Looking for cost annotations for query block SEL$2, key = SEL$2_00010000_0
CBQT: Replaced cost annotations in query block SEL$2.
CBQT: Looking for cost annotations for query block SEL$F5B72DD9, key = SEL$F5B72DD9_00008040_2
CBQT: Could not find stored cost annotations.
CBQT: Looking for cost annotations for query block SEL$D869EBF0, key = SEL$D869EBF0_00008040_2
CBQT: Could not find stored cost annotations.
kkoqbc: optimizing query block SEL$3 (#4)
        
        :
    call(in-use=720968, alloc=786160), compile(in-use=1783360, alloc=1787576), execution(in-use=32416, alloc=36480)

kkoqbc-end:
        :
    call(in-use=720968, alloc=786160), compile(in-use=1783360, alloc=1787576), execution(in-use=32416, alloc=36480)

kkoqbc: finish optimizing query block SEL$3 (#4)
kkoqbc: optimizing query block SEL$4 (#3)
        
        :
    call(in-use=720968, alloc=786160), compile(in-use=1783456, alloc=1787576), execution(in-use=32416, alloc=36480)

kkoqbc-end:
        :
    call(in-use=720968, alloc=786160), compile(in-use=1783456, alloc=1787576), execution(in-use=32416, alloc=36480)

kkoqbc: finish optimizing query block SEL$4 (#3)
kkoqbc: optimizing query block SEL$2 (#2)
        
        :
    call(in-use=720968, alloc=786160), compile(in-use=1783552, alloc=1787576), execution(in-use=32416, alloc=36480)

kkoqbc-end:
        :
    call(in-use=720968, alloc=786160), compile(in-use=1783552, alloc=1787576), execution(in-use=32416, alloc=36480)

kkoqbc: finish optimizing query block SEL$2 (#2)
kkoqbc: optimizing query block SEL$F5B72DD9 (#6)
        
        :
    call(in-use=720968, alloc=786160), compile(in-use=1783552, alloc=1787576), execution(in-use=32416, alloc=36480)

kkoqbc-subheap (create addr=0x7f0472244de0)
****************
QUERY BLOCK TEXT
****************
Not available.
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$F5B72DD9 nbfros=1 flg=0
  fro(0): flg=0 objn=74168 hint_alias="C"@"SEL$1"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3255 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: CUSTOMER  Alias:  C
  #Rows: 1080000  SSZ: 0  LGR: 0  #Blks:  23374  AvgRowLen:  138.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#5): C_CURRENT_ADDR_SK(NUMBER)
    AvgLen: 5 NDV: 457472 Nulls: 0 Density: 0.000002 Min: 1.000000 Max: 539997.000000
  Column (#3): C_CURRENT_CDEMO_SK(NUMBER)
    AvgLen: 6 NDV: 772544 Nulls: 0 Density: 0.000001 Min: 18.000000 Max: 1920799.000000
  Column (#1): C_CUSTOMER_SK(NUMBER)
    AvgLen: 6 NDV: 1080000 Nulls: 0 Density: 0.000001 Min: 1.000000 Max: 1080000.000000
Index Stats::
  Index: CUSTOMER_PK_IDX  Col#: 1
  LVLS: 2  #LB: 2266  #DK: 1080000  LB/K: 1.00  DB/K: 1.00  CLUF: 75684.00  NRW: 1080000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
try to generate single-table filter predicates from ORs for query block SEL$F5B72DD9 (#6)
finally:  EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM")

=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$F5B72DD9 (#6)
Applicable DS directives:
   dirid = 9316027922818115912, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74168)[3, 5]}
Checking valid directives for the query block
  SPD: Directive valid: dirid = 9316027922818115912, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74168)[3, 5]}
  SPD: Return code in qosdDSDirSetup: EXISTS, estType = GROUP_BY
  SPD: Return code in qosdDSDirSetup: NODIR, estType = QUERY_BLOCK
Return code in qosdSetupDirCtx4QB: EXISTS
=====================================
SPD: END context at query block level
=====================================
Access path analysis for CUSTOMER
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for CUSTOMER[C] 
  SPD: Return code in qosdDSDirSetup: NODIR, estType = TABLE

 kkecdn: Single Table Predicate: EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM")
  Table: CUSTOMER  Alias: C
    Card: Original: 1080000.000000  Rounded: 1080000  Computed: 1080000.000000  Non Adjusted: 1080000.000000
  Scan IO  Cost (Disk) =   6332.000000
  Scan CPU Cost (Disk) =   414856538.560000
  Cost of predicates:
    io = NOCOST, cpu = 20.000000, sel = 0.050000 flag = 2562  ( EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM"))
  Total Scan IO  Cost  =   6332.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 1080000.000000 (#rows))
                       =   6332.000000
  Total Scan CPU  Cost =   414856538.560000 (scan (Disk))
                         + 21600000.000000 (cpu filter eval) (= 20.000000 (per row) * 1080000.000000 (#rows))
                       =   436456538.560000
  Access Path: TableScan
    Cost:  6343.174339  Resp: 6343.174339  Degree: 0
      Cost_io: 6332.000000  Cost_cpu: 436456539
      Resp_io: 6332.000000  Resp_cpu: 436456539
  Best:: AccessPath: TableScan
         Cost: 6343.174339  Degree: 1  Resp: 6343.174339  Card: 1080000.000000  Bytes: 0.000000

Grouping column cardinality [C_CURRENT_]    772544
Grouping column cardinality [C_CURRENT_]    457472
***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE:  Bypassed; QB has a single table SEL$F5B72DD9 (#6)
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  CUSTOMER[C]#0
GROUP BY sort

GROUP BY/Correlated Subquery Filter adjustment factor: 0.707107
GROUP BY cardinality:  1080000.000000, TABLE cardinality:  1080000.000000
Vector group by not costed because no SYS_OP_XLATE_USE in group by.
kdmoGByPushdownValid: table is not in memory    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 3835 Row size:     29 Total Rows:        1080000
      Initial runs:   2 Merge passes:  1 IO Cost / pass:       2078
      Total IO sort cost: 5913.000000      Total CPU sort cost: 1108751040
      Total Temp space used: 30417000
***********************
Best so far:  Table#: 0  cost: 12284.561037  card: 1080000.000000  bytes: 18360000.000000
***********************
(newjo-stop-1) k:0, spcnt:0, perm:1, maxperm:2000

*********************************
Number of join permutations tried: 1
*********************************
Enumerating distribution method (advanced)

kkoaccsqf: Current query block SEL$F5B72DD9 (#6) is serial
kkoaccsqf: correlated subquery query block SEL$2 (#2) in filter               : serial
Final adjusted join cardinality: 1.000000, sq. fil. factor: 1080000.000000

GROUP BY/Correlated Subquery Filter adjustment factor: 0.707107
GROUP BY cardinality:  1.000000, TABLE cardinality:  1.000000
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     29 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39058824
      Total Temp space used: 0
LORE: Or-Expansion validity checks failed on query block SEL$F5B72DD9 (#6) because Cost based OR expansion enabled
Transfer Optimizer annotations for query block SEL$F5B72DD9 (#6)
Final cost for query block SEL$F5B72DD9 (#6) - All Rows Plan:
  Best join order: 1
  Cost: 13933460.677293  Degree: 1  Card: 1.000000  Bytes: 18360017.000000
  Resc: 13933460.677293  Resc_io: 13930535.285714  Resc_cpu: 114262353426
  Resp: 13933460.677293  Resp_io: 13930535.285714  Resc_cpu: 114262353426
kkoqbc-subheap (delete addr=0x7f0472244de0, in-use=26928, alloc=32840)
kkoqbc-end:
        :
    call(in-use=726648, alloc=769688), compile(in-use=1784448, alloc=1787576), execution(in-use=32416, alloc=36480)

kkoqbc: finish optimizing query block SEL$F5B72DD9 (#6)
kkoqbc: optimizing query block SEL$D869EBF0 (#7)
        
        :
    call(in-use=726648, alloc=769688), compile(in-use=1784448, alloc=1787576), execution(in-use=32416, alloc=36480)

kkoqbc-subheap (create addr=0x7f0472244de0)
****************
QUERY BLOCK TEXT
****************
Not available.
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$D869EBF0 nbfros=2 flg=0
  fro(0): flg=0 objn=74169 hint_alias="CA"@"SEL$1"
  fro(1): flg=0 objn=74170 hint_alias="CUSTOMER_DEMOGRAPHICS"@"SEL$1"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3255 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: CUSTOMER_ADDRESS  Alias: CA
  #Rows: 540000  SSZ: 0  LGR: 0  #Blks:  13174  AvgRowLen:  152.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): CA_ADDRESS_SK(NUMBER)
    AvgLen: 5 NDV: 540000 Nulls: 0 Density: 0.000002 Min: 1.000000 Max: 540000.000000
  Column (#8): CA_COUNTY(VARCHAR2)
    AvgLen: 16 NDV: 1877 Nulls: 0 Density: 0.000471
    Histogram: Hybrid  #Bkts: 254  UncompBkts: 5580  EndPtVals: 254  ActualVal: yes
Index Stats::
  Index: CA_ADDRESS_PK_IDX  Col#: 1
  LVLS: 2  #LB: 1127  #DK: 540000  LB/K: 1.00  DB/K: 1.00  CLUF: 12283.00  NRW: 540000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table: CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
  #Rows: 1920800  SSZ: 0  LGR: 0  #Blks:  17254  AvgRowLen:  54.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#9): CD_DEP_COLLEGE_COUNT(NUMBER)
    AvgLen: 3 NDV: 6 Nulls: 0 Density: 0.166667 Min: 0.000000 Max: 5.000000
  Column (#8): CD_DEP_EMPLOYED_COUNT(NUMBER)
    AvgLen: 3 NDV: 6 Nulls: 0 Density: 0.166667 Min: 0.000000 Max: 5.000000
  Column (#7): CD_DEP_COUNT(NUMBER)
    AvgLen: 3 NDV: 6 Nulls: 0 Density: 0.166667 Min: 0.000000 Max: 5.000000
  Column (#6): CD_CREDIT_RATING(CHARACTER)
    AvgLen: 11 NDV: 4 Nulls: 0 Density: 0.250000
  Column (#5): CD_PURCHASE_ESTIMATE(NUMBER)
    AvgLen: 4 NDV: 9500 Nulls: 0 Density: 0.000105 Min: 500.000000 Max: 9999.000000
  Column (#4): CD_EDUCATION_STATUS(CHARACTER)
    AvgLen: 21 NDV: 7 Nulls: 0 Density: 0.070771
    Histogram: Freq  #Bkts: 7  UncompBkts: 1920800  EndPtVals: 7  ActualVal: yes
  Column (#3): CD_MARITAL_STATUS(CHARACTER)
    AvgLen: 2 NDV: 5 Nulls: 0 Density: 0.098953
    Histogram: Freq  #Bkts: 5  UncompBkts: 1920800  EndPtVals: 5  ActualVal: yes
  Column (#2): CD_GENDER(CHARACTER)
    AvgLen: 2 NDV: 2 Nulls: 0 Density: 0.249925
    Histogram: Freq  #Bkts: 2  UncompBkts: 1920800  EndPtVals: 2  ActualVal: no 
  Column (#1): CD_DEMO_SK(NUMBER)
    AvgLen: 6 NDV: 1920800 Nulls: 0 Density: 0.000001 Min: 1.000000 Max: 1920800.000000
Index Stats::
  Index: CD_DEMO_PK_IDX  Col#: 1
  LVLS: 2  #LB: 4138  #DK: 1920800  LB/K: 1.00  DB/K: 1.00  CLUF: 795806.00  NRW: 1920800.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
try to generate single-table filter predicates from ORs for query block SEL$D869EBF0 (#7)
finally: "CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County'

=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$D869EBF0 (#7)
Applicable DS directives:
   dirid = 7754152966831092939, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {EC(74170)[3, 4]}
   dirid = 18439699102505563871, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {EC(74169)[8]}
Checking valid directives for the query block
  SPD: Return code in qosdDSDirSetup: NODIR, estType = GROUP_BY
  SPD: Return code in qosdDSDirSetup: NODIR, estType = QUERY_BLOCK
Return code in qosdSetupDirCtx4QB: EXISTS
=====================================
SPD: END context at query block level
=====================================
Access path analysis for CUSTOMER_DEMOGRAPHICS
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS] 
  SPD: Return code in qosdDSDirSetup: NODIR, estType = TABLE
  Table: CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
    Card: Original: 1920800.000000  Rounded: 1920800  Computed: 1920800.000000  Non Adjusted: 1920800.000000
  Scan IO  Cost (Disk) =   4675.000000
  Scan CPU Cost (Disk) =   718321325.760000
  Total Scan IO  Cost  =   4675.000000 (scan (Disk))
                       =   4675.000000
  Total Scan CPU  Cost =   718321325.760000 (scan (Disk))
                       =   718321325.760000
  Access Path: TableScan
    Cost:  4693.390757  Resp: 4693.390757  Degree: 0
      Cost_io: 4675.000000  Cost_cpu: 718321326
      Resp_io: 4675.000000  Resp_cpu: 718321326
  ****** trying bitmap/domain indexes ******
 ****** Costing Index CD_DEMO_PK_IDX
  Access Path: index (FullScan)
    Index: CD_DEMO_PK_IDX
    resc_io: 4140.000000  resc_cpu: 413642762
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 4150.590251  Resp: 4150.590251  Degree: 0
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: TableScan
         Cost: 4693.390757  Degree: 1  Resp: 4693.390757  Card: 1920800.000000  Bytes: 0.000000

Access path analysis for CUSTOMER_ADDRESS
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for CUSTOMER_ADDRESS[CA] 
  SPD: Directive valid: dirid = 18439699102505563871, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {EC(74169)[8]}
  SPD: Return code in qosdDSDirSetup: EXISTS, estType = TABLE

 kkecdn: Single Table Predicate:"CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County'
  Using density: 4.7103e-04 of col #8 as selectivity of pred having unreasonably low value
  Using density: 4.7103e-04 of col #8 as selectivity of pred having unreasonably low value
  Using density: 4.7103e-04 of col #8 as selectivity of pred having unreasonably low value
  Using density: 4.7103e-04 of col #8 as selectivity of pred having unreasonably low value
  Estimated selectivity: 5.3763e-04 , endpoint value predicate, col: #8 
  Table: CUSTOMER_ADDRESS  Alias: CA
    Card: Original: 540000.000000  Rounded: 1308  Computed: 1307.756551  Non Adjusted: 1307.756551
  Scan IO  Cost (Disk) =   3570.000000
  Scan CPU Cost (Disk) =   250417850.560000
  Cost of predicates:
    io = 0.000000, cpu = 249.764594, sel = 0.002422 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Chouteau County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Dinwiddie County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Dixie County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Harrisonburg city')
      io = NOCOST, cpu = 50.000000, sel = 0.000538 flag = 2048  ("CA"."CA_COUNTY"='Lowndes County')
  Total Scan IO  Cost  =   3570.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 540000.000000 (#rows))
                       =   3570.000000
  Total Scan CPU  Cost =   250417850.560000 (scan (Disk))
                         + 134872880.645405 (cpu filter eval) (= 249.764594 (per row) * 540000.000000 (#rows))
                       =   385290731.205405
  Access Path: TableScan
    Cost:  3579.864371  Resp: 3579.864371  Degree: 0
      Cost_io: 3570.000000  Cost_cpu: 385290731
      Resp_io: 3570.000000  Resp_cpu: 385290731
  ****** trying bitmap/domain indexes ******
 ****** Costing Index CA_ADDRESS_PK_IDX
  Access Path: index (FullScan)
    Index: CA_ADDRESS_PK_IDX
    resc_io: 1129.000000  resc_cpu: 116040106
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1131.970906  Resp: 1131.970906  Degree: 0
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: TableScan
         Cost: 3579.864371  Degree: 1  Resp: 3579.864371  Card: 1307.756551  Bytes: 0.000000

Grouping column cardinality [CD_DEMO_SK]    1920800
Grouping column cardinality [CA_ADDRESS]    1308
Grouping column cardinality [ CD_GENDER]    2
Grouping column cardinality [CD_MARITAL]    5
Grouping column cardinality [CD_EDUCATI]    7
Grouping column cardinality [CD_PURCHAS]    9500
Grouping column cardinality [CD_CREDIT_]    4
Grouping column cardinality [CD_DEP_COU]    6
Grouping column cardinality [CD_DEP_EMP]    6
Grouping column cardinality [CD_DEP_COL]    6
***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE:  Bypassed; QB is not duplicate insignificant SEL$D869EBF0 (#7)
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  CUSTOMER_ADDRESS[CA]#0  CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS]#1

***************
Now joining: CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS]#1
***************
NL Join
  Outer table: Card: 1307.756551  Cost: 3579.864371  Resp: 3579.864371  Degree: 1  Bytes: 
Access path analysis for CUSTOMER_DEMOGRAPHICS
  Scan IO  Cost (Disk) =   4672.959480
  Scan CPU Cost (Disk) =   718321325.760000
  Total Scan IO  Cost  =   4672.959480 (scan (Disk))
                       =   4672.959480
  Total Scan CPU  Cost =   718321325.760000 (scan (Disk))
                       =   718321325.760000
  Inner table: CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
  Access Path: TableScan
    NL Join:  Cost: 6139865.974310  Resp: 6139865.974310  Degree: 1
      Cost_io: 6115801.000000  Cost_cpu: 939949584825
      Resp_io: 6115801.000000  Resp_cpu: 939949584825
  ****** trying bitmap/domain indexes ******
 ****** Costing Index CD_DEMO_PK_IDX
  Access Path: index (FullScan)
    Index: CD_DEMO_PK_IDX
    resc_io: 4140.000000  resc_cpu: 413642762
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 4150.590251  Resp: 4150.590251  Degree: 0
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 6139865.974310
          resc: 6139865.974310  resc_io: 6115801.000000  resc_cpu: 939949584825
          resp: 6139865.974310  resp_io: 6115801.000000  resc_cpu: 939949584825
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Join Card:  2511938782.753941 = outer (1307.756551) * inner (1920800.000000) * sel (1.000000)
Join Card - Rounded: 2511938783 Computed: 2511938782.753941
Grouping column cardinality [CD_DEMO_SK]    1920800
Grouping column cardinality [CA_ADDRESS]    1308
Grouping column cardinality [ CD_GENDER]    2
Grouping column cardinality [CD_MARITAL]    5
Grouping column cardinality [CD_EDUCATI]    7
Grouping column cardinality [CD_PURCHAS]    9500
Grouping column cardinality [CD_CREDIT_]    4
Grouping column cardinality [CD_DEP_COU]    6
Grouping column cardinality [CD_DEP_EMP]    6
Grouping column cardinality [CD_DEP_COL]    6
GROUP BY sort

GROUP BY/Correlated Subquery Filter adjustment factor: 0.044194
GROUP BY cardinality:  2511938783.000000, TABLE cardinality:  2511938783.000000
Vector group by not costed because no SYS_OP_XLATE_USE in group by.
kdmoGByPushdownValid: more than one table in group by    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 28600675 Row size:     93 Total Rows:     2511938783
      Initial runs:   2228 Merge passes:  2 IO Cost / pass:    15492034
      Total IO sort cost: 59584743.000000      Total CPU sort cost: 4590517954039
      Total Temp space used: 254046979000
Best:: JoinMethod: NestedLoop
       Cost: 65842137.295423  Degree: 1  Resp: 65842137.295423  Card: 2511938782.753941 Bytes: 
***********************
Best so far:  Table#: 0  cost: 3579.864371  card: 1307.756551  bytes: 27468.000000
              Table#: 1  cost: 65842137.295423  card: 2511938782.753941  bytes: 188395408725.000000
***********************
Join order[2]:  CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS]#1  CUSTOMER_ADDRESS[CA]#0

***************
Now joining: CUSTOMER_ADDRESS[CA]#0
***************
NL Join
  Outer table: Card: 1920800.000000  Cost: 4693.390757  Resp: 4693.390757  Degree: 1  Bytes: 
Access path analysis for CUSTOMER_ADDRESS
  Scan IO  Cost (Disk) =   3567.958334
  Scan CPU Cost (Disk) =   250417850.560000
  Cost of predicates:
    io = 0.000000, cpu = 249.764594, sel = 0.002422 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Chouteau County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Dinwiddie County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Dixie County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Harrisonburg city')
      io = NOCOST, cpu = 50.000000, sel = 0.000538 flag = 2048  ("CA"."CA_COUNTY"='Lowndes County')
  Total Scan IO  Cost  =   3567.958334 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 540000.000000 (#rows))
                       =   3567.958334
  Total Scan CPU  Cost =   250417850.560000 (scan (Disk))
                         + 134872880.645405 (cpu filter eval) (= 249.764594 (per row) * 540000.000000 (#rows))
                       =   385290731.205405
  Inner table: CUSTOMER_ADDRESS  Alias: CA
  Access Path: TableScan
    NL Join:  Cost: 6872286545.457758  Resp: 6872286545.457758  Degree: 1
      Cost_io: 6853339043.000000  Cost_cpu: 740067154820668
      Resp_io: 6853339043.000000  Resp_cpu: 740067154820668
  ****** trying bitmap/domain indexes ******
 ****** Costing Index CA_ADDRESS_PK_IDX
  Access Path: index (FullScan)
    Index: CA_ADDRESS_PK_IDX
    resc_io: 1129.000000  resc_cpu: 116040106
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1131.970906  Resp: 1131.970906  Degree: 0
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 6872286545.457758
          resc: 6872286545.457758  resc_io: 6853339043.000000  resc_cpu: 740067154820668
          resp: 6872286545.457758  resp_io: 6853339043.000000  resc_cpu: 740067154820668
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Join Card:  2511938782.753941 = outer (1920800.000000) * inner (1307.756551) * sel (1.000000)
Join Card - Rounded: 2511938783 Computed: 2511938782.753941
Grouping column cardinality [CD_DEMO_SK]    1920800
Grouping column cardinality [CA_ADDRESS]    1308
Grouping column cardinality [ CD_GENDER]    2
Grouping column cardinality [CD_MARITAL]    5
Grouping column cardinality [CD_EDUCATI]    7
Grouping column cardinality [CD_PURCHAS]    9500
Grouping column cardinality [CD_CREDIT_]    4
Grouping column cardinality [CD_DEP_COU]    6
Grouping column cardinality [CD_DEP_EMP]    6
Grouping column cardinality [CD_DEP_COL]    6
GROUP BY sort

GROUP BY/Correlated Subquery Filter adjustment factor: 0.044194
GROUP BY cardinality:  2511938783.000000, TABLE cardinality:  2511938783.000000
Vector group by not costed because no SYS_OP_XLATE_USE in group by.
kdmoGByPushdownValid: more than one table in group by    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 28600675 Row size:     93 Total Rows:     2511938783
      Initial runs:   2228 Merge passes:  2 IO Cost / pass:    15492034
      Total IO sort cost: 59584743.000000      Total CPU sort cost: 4590517954039
      Total Temp space used: 212142334000
Join order aborted: cost > best plan cost
***********************
(newjo-stop-1) k:0, spcnt:0, perm:2, maxperm:2000

*********************************
Number of join permutations tried: 2
*********************************
Enumerating distribution method (advanced)
--- Distribution method for 
join between CA[CUSTOMER_ADDRESS](serial) and CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS](serial); jm = 14; right side access path = TableScan
---- serial Hash-Join -> NONE

(newjo-save)    [0 1 ]

GROUP BY/Correlated Subquery Filter adjustment factor: 0.044194
GROUP BY cardinality:  2511938783.000000, TABLE cardinality:  2511938783.000000
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 28600675 Row size:     93 Total Rows:     2511938783
      Initial runs:   2228 Merge passes:  2 IO Cost / pass:    15492034
      Total IO sort cost: 59584743.000000      Total CPU sort cost: 4590517954039
      Total Temp space used: 254046979000
LORE: Or-Expansion validity checks failed on query block SEL$D869EBF0 (#7) because Cost based OR expansion enabled
Transfer Optimizer annotations for query block SEL$D869EBF0 (#7)
Final cost for query block SEL$D869EBF0 (#7) - All Rows Plan:
  Best join order: 1
  Cost: 65842137.295423  Degree: 1  Card: 2511938783.000000  Bytes: 376790817450.000000
  Resc: 65842137.295423  Resc_io: 65700544.000000  Resc_cpu: 5530467538865
  Resp: 65842137.295423  Resp_io: 65700544.000000  Resc_cpu: 5530467538865
kkoqbc-subheap (delete addr=0x7f0472244de0, in-use=69872, alloc=89328)
kkoqbc-end:
        :
    call(in-use=737256, alloc=842664), compile(in-use=1792168, alloc=1795152), execution(in-use=32416, alloc=36480)

kkoqbc: finish optimizing query block SEL$D869EBF0 (#7)
kkoqbc: optimizing query block SEL$F7BA66FC (#1)
        
        :
    call(in-use=737256, alloc=842664), compile(in-use=1792168, alloc=1795152), execution(in-use=32416, alloc=36480)

kkoqbc-subheap (create addr=0x7f0472244de0)
****************
QUERY BLOCK TEXT
****************
SELECT /*query10*/
    cd_gender,
    cd_marital_status,
    cd_education_status,
    COUNT(*) cnt1,
    cd_purchase_estimate,
    COUNT(*) cnt2,
    cd_credit_rating,
    COUNT(*) cnt3,
    cd_dep_count,
    COUNT(*) cnt4,
    cd_dep_employed_count,
    COUNT(*) cnt5,
    cd_dep_college_count,
    COUNT(*) cnt6
FROM
    customer c,
    customer_address ca,
    customer_demographics
WHERE
    -- join predicates
        c.c_current_addr_sk = ca.ca_address_sk
    AND cd_demo_sk = c.c_current_cdemo_sk
    -- filter predicates
    AND ca.ca_county IN (
        'Chouteau County',
        'Dixie County',
        'Harrisonburg city',
        'Lowndes County',
        'Dinwiddie County'
    )
    -- filter predicate (subquery)
    AND EXISTS (
        SELECT
            *
        FROM
            store_sales ss,
            date_dim
        WHERE
            c.c_customer_sk = ss.ss_customer_sk
            AND ss_sold_date_sk = d_date_sk
            AND d_year = 2001
            AND d_moy BETWEEN 1 AND 1 + 3
            AND ( EXISTS (
                SELECT
                    *
                FROM
                    web_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = ws_bill_customer_sk
                    AND ws_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            )
                  OR EXISTS (
                SELECT
                    *
                FROM
                    catalog_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = cs_ship_customer_sk
                    AND cs_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            ) )
    )
GROUP BY
    cd_gender,
    cd_marital_status,
    cd_education_status,
    cd_purchase_estimate,
    cd_credit_rating,
    cd_dep_count,
    cd_dep_employed_count,
    cd_dep_college_count

---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$F7BA66FC nbfros=2 flg=0
  fro(0): flg=1 objn=0 hint_alias="VW_GBF_3"@"SEL$F13E154C"
  fro(1): flg=1 objn=0 hint_alias="VW_GBC_2"@"SEL$F67CBA62"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3255 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: VW_GBC_2  Alias: VW_GBC_2  (NOT ANALYZED)
  #Rows: 0  SSZ: 0  LGR: 0  #Blks:  0  AvgRowLen:  0.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 0
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
***********************
Table Stats::
  Table: VW_GBF_3  Alias: VW_GBF_3  (NOT ANALYZED)
  #Rows: 0  SSZ: 0  LGR: 0  #Blks:  0  AvgRowLen:  0.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 0
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#9): ITEM_9(CHARACTER)
    AvgLen: 2 NDV: 2 Nulls: 0 Density: 0.249925
    Histogram: Freq  #Bkts: 2  UncompBkts: 1920800  EndPtVals: 2  ActualVal: no 
  Column (#10): ITEM_10(CHARACTER)
    AvgLen: 2 NDV: 5 Nulls: 0 Density: 0.098953
    Histogram: Freq  #Bkts: 5  UncompBkts: 1920800  EndPtVals: 5  ActualVal: yes
  Column (#11): ITEM_11(CHARACTER)
    AvgLen: 21 NDV: 7 Nulls: 0 Density: 0.070771
    Histogram: Freq  #Bkts: 7  UncompBkts: 1920800  EndPtVals: 7  ActualVal: yes
  Column (#12): ITEM_12(NUMBER)
    AvgLen: 4 NDV: 9500 Nulls: 0 Density: 0.000105 Min: 500.000000 Max: 9999.000000
  Column (#13): ITEM_13(CHARACTER)
    AvgLen: 11 NDV: 4 Nulls: 0 Density: 0.250000
  Column (#14): ITEM_14(NUMBER)
    AvgLen: 3 NDV: 6 Nulls: 0 Density: 0.166667 Min: 0.000000 Max: 5.000000
  Column (#15): ITEM_15(NUMBER)
    AvgLen: 3 NDV: 6 Nulls: 0 Density: 0.166667 Min: 0.000000 Max: 5.000000
  Column (#16): ITEM_16(NUMBER)
    AvgLen: 3 NDV: 6 Nulls: 0 Density: 0.166667 Min: 0.000000 Max: 5.000000
  Column (#2): ITEM_2(NUMBER)
    AvgLen: 5 NDV: 457472 Nulls: 0 Density: 0.000002 Min: 1.000000 Max: 539997.000000
  Column (#2): ITEM_2(NUMBER)
    AvgLen: 5 NDV: 540000 Nulls: 0 Density: 0.000002 Min: 1.000000 Max: 540000.000000
  Column (#1): ITEM_1(NUMBER)
    AvgLen: 6 NDV: 1920800 Nulls: 0 Density: 0.000001 Min: 1.000000 Max: 1920800.000000
  Column (#1): ITEM_1(NUMBER)
    AvgLen: 6 NDV: 772544 Nulls: 0 Density: 0.000001 Min: 18.000000 Max: 1920799.000000
try to generate single-table filter predicates from ORs for query block SEL$F7BA66FC (#1)
finally: "VW_GBC_2"."ITEM_2"="VW_GBF_3"."ITEM_2" AND "VW_GBF_3"."ITEM_1"="VW_GBC_2"."ITEM_1"

=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$F7BA66FC (#1)
Applicable DS directives:
Return code in qosdSetupDirCtx4QB: NODIR
=====================================
SPD: END context at query block level
=====================================
Access path analysis for VW_GBF_3

Access path analysis for VW_GBC_2

Grouping column cardinality [    ITEM_9]    2
Grouping column cardinality [   ITEM_10]    5
Grouping column cardinality [   ITEM_11]    7
Grouping column cardinality [   ITEM_12]    9500
Grouping column cardinality [   ITEM_13]    4
Grouping column cardinality [   ITEM_14]    6
Grouping column cardinality [   ITEM_15]    6
Grouping column cardinality [   ITEM_16]    6
Join ColGroups for CUSTOMER[C] and <unnamed>[] : Using cdn sanity check
***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE:  Bypassed; QB is not duplicate insignificant SEL$F7BA66FC (#1)
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  VW_GBC_2[VW_GBC_2]#0  VW_GBF_3[VW_GBF_3]#1

***************
Now joining: VW_GBF_3[VW_GBF_3]#1
***************
NL Join
  Outer table: Card: 1.000000  Cost: 13933460.677293  Resp: 13933460.677293  Degree: 1  Bytes: 
Access path analysis for VW_GBF_3
  Inner table: VW_GBF_3  Alias: VW_GBF_3
  Access Path: TableScan
    NL Join:  Cost: 79775597.972716  Resp: 79775597.972716  Degree: 1
      Cost_io: 79631079.285714  Cost_cpu: 5644729892290
      Resp_io: 79631079.285714  Resp_cpu: 5644729892290

  Best NL cost: 79775597.972716
          resc: 79775597.972716  resc_io: 79631079.285714  resc_cpu: 5644729892290
          resp: 79775597.972716  resp_io: 79631079.285714  resc_cpu: 5644729892290
  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = JOIN
ColGroup cardinality sanity check: ndv for  CUSTOMER[C] = 1080000.000000 
Join selectivity using 1 ColGroups: 3.9802e-10 (sel1 = 0.000000, sel2 = 0.000000)
Join Card:  0.999814 = outer (1.000000) * inner (2511938783.000000) * sel (3.9802e-10)
Join Card - Rounded: 1 Computed: 0.999814
Grouping column cardinality [    ITEM_9]    2
Grouping column cardinality [   ITEM_10]    5
Grouping column cardinality [   ITEM_11]    7
Grouping column cardinality [   ITEM_12]    9500
Grouping column cardinality [   ITEM_13]    4
Grouping column cardinality [   ITEM_14]    6
Grouping column cardinality [   ITEM_15]    6
Grouping column cardinality [   ITEM_16]    6
  Outer table:  VW_GBC_2  Alias: VW_GBC_2
    resc: 13933460.677293  card 1.000000  bytes:   deg: 1  resp: 13933460.677293
  Inner table:  VW_GBF_3  Alias: VW_GBF_3
    resc: 65842137.295423  card: 2511938783.000000  bytes:   deg: 1  resp: 65842137.295423
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     108 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39058824
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 49820530 Row size:     162 Total Rows:     2511938783
      Initial runs:   3881 Merge passes:  2 IO Cost / pass:    26986122
      Total IO sort cost: 103792774.000000      Total CPU sort cost: 5374358177884
      Total Temp space used: 894687118000
  SM join: Resc: 183705969.492330  Resp: 183705969.492330  [multiMatchCost=0.000000]
SM Join
  SM cost: 183705969.492330 
     resc: 183705969.492330 resc_io: 183423853.285714 resc_cpu: 11019127128998
     resp: 183705969.492330 resp_io: 183423853.285714 resp_cpu: 11019127128998
  Outer table:  VW_GBC_2  Alias: VW_GBC_2
    resc: 13933460.677293  card 1.000000  bytes:   deg: 1  resp: 13933460.677293
  Inner table:  VW_GBF_3  Alias: VW_GBF_3
    resc: 65842137.295423  card: 2511938783.000000  bytes:   deg: 1  resp: 65842137.295423
    using dmeth: 2  #groups: 1
    Cost per ptn: 6431.183936  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 1  probefrag: 45994973  ppasses: 1
  Hash join: Resc: 79782029.156652  Resp: 79782029.156652  [multiMatchCost=0.000000]
HA Join
  HA cost: 79782029.156652  
     resc: 79782029.156652 resc_io: 79631079.285714 resc_cpu: 5895924370740
     resp: 79782029.156652 resp_io: 79631079.285714 resp_cpu: 5895924370740
GROUP BY sort
GROUP BY/Correlated Subquery Filter adjustment factor: 0.088388
GROUP BY cardinality:  1.000000, TABLE cardinality:  1.000000
Vector group by not costed because no SYS_OP_XLATE_USE in group by.
kdmoGByPushdownValid: more than one table in group by    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     260 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39058824
      Total Temp space used: 0
Best:: JoinMethod: Hash
       Cost: 79782030.156652  Degree: 1  Resp: 79782030.156652  Card: 0.999814 Bytes: 
***********************
Best so far:  Table#: 0  cost: 13933460.677293  card: 1.000000  bytes: 89.000000
              Table#: 1  cost: 79782030.156652  card: 0.999814  bytes: 227.000000
***********************
Join order[2]:  VW_GBF_3[VW_GBF_3]#1  VW_GBC_2[VW_GBC_2]#0

***************
Now joining: VW_GBC_2[VW_GBC_2]#0
***************
NL Join
  Outer table: Card: 2511938783.000000  Cost: 65842137.295423  Resp: 65842137.295423  Degree: 1  Bytes: 
Access path analysis for VW_GBC_2
  Inner table: VW_GBC_2  Alias: VW_GBC_2
  Access Path: TableScan
    NL Join:  Cost: 35000000322539768.000000  Resp: 35000000322539768.000000  Degree: 1
      Cost_io: 34992651917836244.000000  Cost_cpu: 287020042537571876864
      Resp_io: 34992651917836244.000000  Resp_cpu: 287020042537571876864

  Best NL cost: 35000000322539768.000000
          resc: 35000000322539768.000000  resc_io: 34992651917836244.000000  resc_cpu: 287020042537571876864
          resp: 35000000322539768.000000  resp_io: 34992651917836244.000000  resc_cpu: 287020042537571876864
  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = JOIN
ColGroup cardinality sanity check: ndv for  CUSTOMER[C] = 1080000.000000 
Join selectivity using 1 ColGroups: 3.9802e-10 (sel1 = 0.000000, sel2 = 0.000000)
Join Card:  0.999814 = outer (2511938783.000000) * inner (1.000000) * sel (3.9802e-10)
Join Card - Rounded: 1 Computed: 0.999814
Grouping column cardinality [    ITEM_9]    2
Grouping column cardinality [   ITEM_10]    5
Grouping column cardinality [   ITEM_11]    7
Grouping column cardinality [   ITEM_12]    9500
Grouping column cardinality [   ITEM_13]    4
Grouping column cardinality [   ITEM_14]    6
Grouping column cardinality [   ITEM_15]    6
Grouping column cardinality [   ITEM_16]    6
  Outer table:  VW_GBF_3  Alias: VW_GBF_3
    resc: 65842137.295423  card 2511938783.000000  bytes:   deg: 1  resp: 65842137.295423
  Inner table:  VW_GBC_2  Alias: VW_GBC_2
    resc: 13933460.677293  card: 1.000000  bytes:   deg: 1  resp: 13933460.677293
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 49820530 Row size:     162 Total Rows:     2511938783
      Initial runs:   3881 Merge passes:  2 IO Cost / pass:    26986122
      Total IO sort cost: 103792774.000000      Total CPU sort cost: 5374358177884
      Total Temp space used: 894687118000
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     108 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39058824
      Total Temp space used: 0
  SM join: Resc: 183705969.492330  Resp: 183705969.492330  [multiMatchCost=0.000000]
SM Join
  SM cost: 183705969.492330 
     resc: 183705969.492330 resc_io: 183423853.285714 resc_cpu: 11019127128998
     resp: 183705969.492330 resp_io: 183423853.285714 resp_cpu: 11019127128998
  Outer table:  VW_GBF_3  Alias: VW_GBF_3
    resc: 65842137.295423  card 2511938783.000000  bytes:   deg: 1  resp: 65842137.295423
  Inner table:  VW_GBC_2  Alias: VW_GBC_2
    resc: 13933460.677293  card: 1.000000  bytes:   deg: 1  resp: 13933460.677293
    using dmeth: 2  #groups: 1
    Cost per ptn: 17818986.742849  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 45994973  probefrag: 1  ppasses: 1
  Hash join: Resc: 97594584.715565  Resp: 97594584.715565  [multiMatchCost=0.000000]
  Outer table:  VW_GBC_2  Alias: VW_GBC_2
    resc: 13933460.677293  card 1.000000  bytes:   deg: 1  resp: 13933460.677293
  Inner table:  VW_GBF_3  Alias: VW_GBF_3
    resc: 65842137.295423  card: 2511938783.000000  bytes:   deg: 1  resp: 65842137.295423
    using dmeth: 2  #groups: 1
    Cost per ptn: 6431.183936  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 1  probefrag: 45994973  ppasses: 1
  Hash join: Resc: 79782029.156652  Resp: 79782029.156652  [multiMatchCost=0.000000]
HA Join
  HA cost: 79782029.156652 swapped 
     resc: 79782029.156652 resc_io: 79631079.285714 resc_cpu: 5895924370740
     resp: 79782029.156652 resp_io: 79631079.285714 resp_cpu: 5895924370740
GROUP BY sort
GROUP BY/Correlated Subquery Filter adjustment factor: 0.088388
GROUP BY cardinality:  1.000000, TABLE cardinality:  1.000000
Vector group by not costed because no SYS_OP_XLATE_USE in group by.
kdmoGByPushdownValid: more than one table in group by    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     260 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39058824
      Total Temp space used: 0
Join order aborted: cost > best plan cost
***********************
(newjo-stop-1) k:0, spcnt:0, perm:2, maxperm:2000

*********************************
Number of join permutations tried: 2
*********************************
Enumerating distribution method (advanced)
--- Distribution method for 
join between VW_GBC_2[VW_GBC_2](serial) and VW_GBF_3[VW_GBF_3](serial); jm = 1; right side access path = TableScan
---- serial Hash-Join -> NONE

(newjo-save)    [0 1 ]
GROUP BY/Correlated Subquery Filter adjustment factor: 0.088388
GROUP BY cardinality:  1.000000, TABLE cardinality:  1.000000
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     260 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39058824
      Total Temp space used: 0
LORE: Or-Expansion validity checks failed on query block SEL$F7BA66FC (#1) because Cost based OR expansion enabled
Transfer Optimizer annotations for query block SEL$F7BA66FC (#1)
Final cost for query block SEL$F7BA66FC (#1) - All Rows Plan:
  Best join order: 1
  Cost: 79782030.156652  Degree: 1  Card: 1.000000  Bytes: 454.000000
  Resc: 79782030.156652  Resc_io: 79631079.285714  Resc_cpu: 5895963429564
  Resp: 79782030.156652  Resp_io: 79631079.285714  Resc_cpu: 5895963429564
kkoqbc-subheap (delete addr=0x7f0472244de0, in-use=42544, alloc=49272)
kkoqbc-end:
        :
    call(in-use=755504, alloc=818896), compile(in-use=1797000, alloc=1799296), execution(in-use=32416, alloc=36480)

kkoqbc: finish optimizing query block SEL$F7BA66FC (#1)
CBQT: Saved costed qb# 4 (SEL$3), key = SEL$3_00010000_0
CBQT: Saved costed qb# 3 (SEL$4), key = SEL$4_00010000_0
CBQT: Saved costed qb# 2 (SEL$2), key = SEL$2_00010000_0
CBQT: Saved costed qb# 1 (SEL$F7BA66FC), key = SEL$F7BA66FC_00000040_0
GBP: Not update best state, Cost = 79782030.156652
GBP: Starting iteration 4, state space = (1,2,3) : (F,0,F)
Registered qb: SEL$C73B0CC3 0x722f0d20 (QUERY BLOCK TABLES CHANGED SEL$1)
---------------------
QUERY BLOCK SIGNATURE
---------------------
  signature (): qb_name=SEL$C73B0CC3 nbfros=2 flg=0
    fro(0): flg=0 objn=74169 hint_alias="CA"@"SEL$1"
    fro(1): flg=5 objn=0 hint_alias="VW_GBF_4"@"SEL$C73B0CC3"

Registered qb: SEL$DC996EF9 0x723711d8 (SPLIT/MERGE QUERY BLOCKS SEL$C73B0CC3)
---------------------
QUERY BLOCK SIGNATURE
---------------------
  signature (): qb_name=SEL$DC996EF9 nbfros=2 flg=0
    fro(0): flg=0 objn=74168 hint_alias="C"@"SEL$1"
    fro(1): flg=0 objn=74170 hint_alias="CUSTOMER_DEMOGRAPHICS"@"SEL$1"

QB before group-by removal:******* UNPARSED QUERY IS *******
SELECT "C"."C_CURRENT_ADDR_SK" "ITEM_1",COUNT(*) "ITEM_2",COUNT(*) "ITEM_3",COUNT(*) "ITEM_4",COUNT(*) "ITEM_5",COUNT(*) "ITEM_6",COUNT(*) "ITEM_7","CUSTOMER_DEMOGRAPHICS"."CD_GENDER" "ITEM_8","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS" "ITEM_9","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS" "ITEM_10","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE" "ITEM_11","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING" "ITEM_12","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT" "ITEM_13","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT" "ITEM_14","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT" "ITEM_15" FROM "TPCDS"."CUSTOMER_DEMOGRAPHICS" "CUSTOMER_DEMOGRAPHICS","TPCDS"."CUSTOMER" "C" WHERE "CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK"="C"."C_CURRENT_CDEMO_SK" AND  EXISTS (SELECT 0 FROM "TPCDS"."STORE_SALES" "SS","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="SS"."SS_CUSTOMER_SK" AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3 AND ( EXISTS (SELECT 0 FROM "TPCDS"."WEB_SALES" "WEB_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="WEB_SALES"."WS_BILL_CUSTOMER_SK" AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3) OR  EXISTS (SELECT 0 FROM "TPCDS"."CATALOG_SALES" "CATALOG_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="CATALOG_SALES"."CS_SHIP_CUSTOMER_SK" AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3))) GROUP BY "C"."C_CURRENT_ADDR_SK","CUSTOMER_DEMOGRAPHICS"."CD_GENDER","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT"
Registered qb: SEL$B154D144 0x722f0d20 (UNKNOWN QUERY BLOCK ORIGIN SEL$1; SEL$1; LIST 4)
---------------------
QUERY BLOCK SIGNATURE
---------------------
  signature (): qb_name=SEL$B154D144 nbfros=2 flg=0
    fro(0): flg=0 objn=74169 hint_alias="CA"@"SEL$1"
    fro(1): flg=1 objn=0 hint_alias="VW_GBF_4"@"SEL$C73B0CC3"

GBP: Transformed query
******* UNPARSED QUERY IS *******
SELECT "VW_GBF_4"."ITEM_8" "CD_GENDER","VW_GBF_4"."ITEM_9" "CD_MARITAL_STATUS","VW_GBF_4"."ITEM_10" "CD_EDUCATION_STATUS",SUM("VW_GBF_4"."ITEM_2") "CNT1","VW_GBF_4"."ITEM_11" "CD_PURCHASE_ESTIMATE",SUM("VW_GBF_4"."ITEM_3") "CNT2","VW_GBF_4"."ITEM_12" "CD_CREDIT_RATING",SUM("VW_GBF_4"."ITEM_4") "CNT3","VW_GBF_4"."ITEM_13" "CD_DEP_COUNT",SUM("VW_GBF_4"."ITEM_5") "CNT4","VW_GBF_4"."ITEM_14" "CD_DEP_EMPLOYED_COUNT",SUM("VW_GBF_4"."ITEM_6") "CNT5","VW_GBF_4"."ITEM_15" "CD_DEP_COLLEGE_COUNT",SUM("VW_GBF_4"."ITEM_7") "CNT6" FROM  (SELECT "C"."C_CURRENT_ADDR_SK" "ITEM_1",COUNT(*) "ITEM_2",COUNT(*) "ITEM_3",COUNT(*) "ITEM_4",COUNT(*) "ITEM_5",COUNT(*) "ITEM_6",COUNT(*) "ITEM_7","CUSTOMER_DEMOGRAPHICS"."CD_GENDER" "ITEM_8","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS" "ITEM_9","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS" "ITEM_10","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE" "ITEM_11","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING" "ITEM_12","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT" "ITEM_13","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT" "ITEM_14","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT" "ITEM_15" FROM "TPCDS"."CUSTOMER_DEMOGRAPHICS" "CUSTOMER_DEMOGRAPHICS","TPCDS"."CUSTOMER" "C" WHERE "CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK"="C"."C_CURRENT_CDEMO_SK" AND  EXISTS (SELECT 0 FROM "TPCDS"."STORE_SALES" "SS","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="SS"."SS_CUSTOMER_SK" AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3 AND ( EXISTS (SELECT 0 FROM "TPCDS"."WEB_SALES" "WEB_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="WEB_SALES"."WS_BILL_CUSTOMER_SK" AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3) OR  EXISTS (SELECT 0 FROM "TPCDS"."CATALOG_SALES" "CATALOG_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="CATALOG_SALES"."CS_SHIP_CUSTOMER_SK" AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3))) GROUP BY "C"."C_CURRENT_ADDR_SK","CUSTOMER_DEMOGRAPHICS"."CD_GENDER","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT") "VW_GBF_4","TPCDS"."CUSTOMER_ADDRESS" "CA" WHERE "VW_GBF_4"."ITEM_1"="CA"."CA_ADDRESS_SK" AND ("CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County') GROUP BY "VW_GBF_4"."ITEM_8","VW_GBF_4"."ITEM_9","VW_GBF_4"."ITEM_10","VW_GBF_4"."ITEM_11","VW_GBF_4"."ITEM_12","VW_GBF_4"."ITEM_13","VW_GBF_4"."ITEM_14","VW_GBF_4"."ITEM_15" ORDER BY "VW_GBF_4"."ITEM_8","VW_GBF_4"."ITEM_9","VW_GBF_4"."ITEM_10","VW_GBF_4"."ITEM_11","VW_GBF_4"."ITEM_12","VW_GBF_4"."ITEM_13","VW_GBF_4"."ITEM_14","VW_GBF_4"."ITEM_15"
FPD: Considering simple filter push in query block SEL$B154D144 (#1)
"VW_GBF_4"."ITEM_1"="CA"."CA_ADDRESS_SK" AND ("CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County')
try to generate transitive predicate from check constraints for query block SEL$B154D144 (#1)
finally: "VW_GBF_4"."ITEM_1"="CA"."CA_ADDRESS_SK" AND ("CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County')

FPD: Considering simple filter push in query block SEL$DC996EF9 (#8)
"CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK"="C"."C_CURRENT_CDEMO_SK" AND  EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM")
FPD: Considering simple filter push in query block SEL$2 (#2)
"SS"."SS_CUSTOMER_SK"=:B1 AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND ( EXISTS (SELECT 0 FROM "WEB_SALES" "WEB_SALES","DATE_DIM" "DATE_DIM") OR  EXISTS (SELECT 0 FROM "CATALOG_SALES" "CATALOG_SALES","DATE_DIM" "DATE_DIM"))
FPD: Considering simple filter push in query block SEL$3 (#4)
"WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B1 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4
try to generate transitive predicate from check constraints for query block SEL$3 (#4)
finally: "WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B1 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1

FPD:   transitive predicates are generated in query block SEL$3 (#4)
"WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B1 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1
FPD: Considering simple filter push in query block SEL$4 (#3)
"CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B1 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4
try to generate transitive predicate from check constraints for query block SEL$4 (#3)
finally: "CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B1 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1

FPD:   transitive predicates are generated in query block SEL$4 (#3)
"CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B1 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1
try to generate transitive predicate from check constraints for query block SEL$2 (#2)
finally: "SS"."SS_CUSTOMER_SK"=:B1 AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND ( EXISTS (SELECT 0 FROM "WEB_SALES" "WEB_SALES","DATE_DIM" "DATE_DIM") OR  EXISTS (SELECT 0 FROM "CATALOG_SALES" "CATALOG_SALES","DATE_DIM" "DATE_DIM"))

try to generate transitive predicate from check constraints for query block SEL$DC996EF9 (#8)
finally: "CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK"="C"."C_CURRENT_CDEMO_SK" AND  EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM")

OJE: Begin: find best directive for query block SEL$DC996EF9 (#8)
OJE: End: finding best directive for query block SEL$DC996EF9 (#8)
GBP: Costing transformed query.
*************************
First K Rows: Setup begin
kkoqbc: optimizing query block SEL$3 (#4)
        
        :
    call(in-use=763672, alloc=785952), compile(in-use=1963440, alloc=1963960), execution(in-use=33680, alloc=36480)

kkoqbc-subheap (create addr=0x7f0472305c60)
****************
QUERY BLOCK TEXT
****************
SELECT
                    *
                FROM
                    web_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = ws_bill_customer_sk
                    AND ws_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$3 nbfros=2 flg=0
  fro(0): flg=0 objn=74171 hint_alias="DATE_DIM"@"SEL$3"
  fro(1): flg=0 objn=74195 hint_alias="WEB_SALES"@"SEL$3"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3255 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: DATE_DIM  Alias: DATE_DIM
  #Rows: 73049  SSZ: 0  LGR: 0  #Blks:  1510  AvgRowLen:  128.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): D_DATE_SK(NUMBER)
    AvgLen: 6 NDV: 73049 Nulls: 0 Density: 0.000014 Min: 2415022.000000 Max: 2488070.000000
Index Stats::
  Index: D_DATE_PK_IDX  Col#: 1
  LVLS: 1  #LB: 163  #DK: 73049  LB/K: 1.00  DB/K: 1.00  CLUF: 1402.00  NRW: 73049.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table: WEB_SALES  Alias: WEB_SALES  (Using composite stats)
  #Rows: 35969200  SSZ: 0  LGR: 0  #Blks:  829566  AvgRowLen:  167.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
Index Stats::
  Index: WEB_SALES_IDX2  Col#: 5 1
  LVLS: 3  #LB: 130617  #DK: 2992994  LB/K: 1.00  DB/K: 12.00  CLUF: 35969159.00  NRW: 35969200.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
  Index: WEB_SALES_PK_IDX  Col#: 4 18
  LVLS: 2  #LB: 122502  #DK: 35304428  LB/K: 1.00  DB/K: 1.00  CLUF: 35300490.00  NRW: 35304428.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
try to generate single-table filter predicates from ORs for query block SEL$3 (#4)
finally: "WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B1 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4

=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$3 (#4)
Applicable DS directives:
   dirid = 4510913066701158191, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {(74195)[]; (74171)[]}
   dirid = 14910903719618111890, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74195)[5]}
   dirid = 13969931850241126217, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {C(74171)[7, 9]}
   dirid = 13683461771316641482, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74195)[5]; (74171)[7]}
Checking valid directives for the query block
  SPD: Return code in qosdDSDirSetup: NODIR, estType = QUERY_BLOCK
Return code in qosdSetupDirCtx4QB: EXISTS
=====================================
SPD: END context at query block level
=====================================
Access path analysis for WEB_SALES
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for WEB_SALES[WEB_SALES] 
  SPD: Return code in qosdDSDirSetup: NODIR, estType = TABLE

 kkecdn: Single Table Predicate:"WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B1
NOTE: ignoring histogram of column (WEB_SALES.WS_BILL_CUSTOMER_SK)
      used only for incremental stats maintenance
  Column (#5): WS_BILL_CUSTOMER_SK(NUMBER)
    AvgLen: 6 NDV: 973580 Nulls: 0 Density: 0.000001 Min: 2.000000 Max: 1079999.000000
  Estimated selectivity: 1.0271e-06 , col: #5 
  Table: WEB_SALES  Alias: WEB_SALES
    Card: Original: 35969200.000000  Rounded: 37  Computed: 36.945295  Non Adjusted: 36.945295
  Scan IO  Cost (Disk) =   224676.000000
  Scan CPU Cost (Disk) =   14180620495.040001
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000001 flag = 2048  ("WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B1)
  Total Scan IO  Cost  =   224676.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 35969200.000000 (#rows))
                       =   224676.000000
  Total Scan CPU  Cost =   14180620495.040001 (scan (Disk))
                         + 1798460000.000000 (cpu filter eval) (= 50.000000 (per row) * 35969200.000000 (#rows))
                       =   15979080495.040001
  Access Path: TableScan
    Cost:  225085.102964  Resp: 225085.102964  Degree: 0
      Cost_io: 224676.000000  Cost_cpu: 15979080495
      Resp_io: 224676.000000  Resp_cpu: 15979080495
  Access Path: index (index (FFS))
    Index: WEB_SALES_IDX2
    resc_io: 35377.000000  resc_cpu: 7044945128
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  35557.367571  Resp: 35557.367571  Degree: 1
      Cost_io: 35377.000000  Cost_cpu: 7044945128
      Resp_io: 35377.000000  Resp_cpu: 7044945128
 ****** Costing Index WEB_SALES_IDX2
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER

  Estimated selectivity: 1.0271e-06 , col: #5 
  Access Path: index (IndexOnly)
    Index: WEB_SALES_IDX2
    resc_io: 4.000000  resc_cpu: 35886
    ix_sel: 1.0271e-06  ix_sel_with_filters: 1.0271e-06 
    Cost: 4.000919  Resp: 4.000919  Degree: 1
  Best:: AccessPath: IndexRange
  Index: WEB_SALES_IDX2
         Cost: 4.000919  Degree: 1  Resp: 4.000919  Card: 36.945295  Bytes: 0.000000

Access path analysis for DATE_DIM
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for DATE_DIM[DATE_DIM] 
  SPD: Directive valid: dirid = 13969931850241126217, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {C(74171)[7, 9]}
  SPD: Return code in qosdDSDirSetup: EXISTS, estType = TABLE
  Column (#7): 
    NewDensity:0.000007, OldDensity:0.000007 BktCnt:73049.000000, PopBktCnt:73048.000000, PopValCnt:200, NDV:201
  Column (#7): D_YEAR(NUMBER)
    AvgLen: 4 NDV: 201 Nulls: 0 Density: 0.000007 Min: 1900.000000 Max: 2100.000000
    Histogram: Freq  #Bkts: 201  UncompBkts: 73049  EndPtVals: 201  ActualVal: yes
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 


 kkecdn: Single Table Predicate:"DATE_DIM"."D_YEAR"=2001
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY">=1
  Column (#9): 
    NewDensity:0.038666, OldDensity:0.000007 BktCnt:73049.000000, PopBktCnt:73049.000000, PopValCnt:12, NDV:12
  Column (#9): D_MOY(NUMBER)
    AvgLen: 3 NDV: 12 Nulls: 0 Density: 0.038666 Min: 1.000000 Max: 12.000000
    Histogram: Freq  #Bkts: 12  UncompBkts: 73049  EndPtVals: 12  ActualVal: yes
  Estimated selectivity: 1.000000 , endpoint value predicate, col: #9 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY"<=4
  Estimated selectivity: 0.329224 , endpoint value predicate, col: #9 
  Table: DATE_DIM  Alias: DATE_DIM
    Card: Original: 73049.000000  Rounded: 120  Computed: 120.166840  Non Adjusted: 120.166840
  Scan IO  Cost (Disk) =   411.000000
  Scan CPU Cost (Disk) =   33398564.400000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.004997 flag = 2048  ("DATE_DIM"."D_YEAR"=2001)
    io = NOCOST, cpu = 50.000000, sel = 0.329224 flag = 2048  ("DATE_DIM"."D_MOY"<=4)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("DATE_DIM"."D_MOY">=1)
  Total Scan IO  Cost  =   411.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 73049.000000 (#rows))
                       =   411.000000
  Total Scan CPU  Cost =   33398564.400000 (scan (Disk))
                         + 3676708.342003 (cpu filter eval) (= 50.332083 (per row) * 73049.000000 (#rows))
                       =   37075272.742003
  Access Path: TableScan
    Cost:  411.949216  Resp: 411.949216  Degree: 0
      Cost_io: 411.000000  Cost_cpu: 37075273
      Resp_io: 411.000000  Resp_cpu: 37075273
  Best:: AccessPath: TableScan
         Cost: 411.949216  Degree: 1  Resp: 411.949216  Card: 120.166840  Bytes: 0.000000

***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE: Checking validity of partial join eval on query block SEL$3 (#4)
PJE: Passed validity of partial join eval by query block SEL$3 (#4)
number: [0]
PJE: Partial join eval conversion for query block SEL$3 (#4).
PJE: Table marked for partial join eval: DATE_DIM[DATE_DIM]#1
***********************
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  WEB_SALES[WEB_SALES]#0  DATE_DIM[DATE_DIM]#1

***************
Now joining: DATE_DIM[DATE_DIM]#1
***************
NL Join
  Outer table: Card: 36.945295  Cost: 4.000919  Resp: 4.000919  Degree: 1  Bytes: 
Access path analysis for DATE_DIM
  Scan IO  Cost (Disk) =   409.000000
  Scan CPU Cost (Disk) =   33398564.400000
NOTE: ignoring histogram of column (WEB_SALES.WS_SOLD_DATE_SK)
      used only for incremental stats maintenance
  Column (#1): WS_SOLD_DATE_SK(NUMBER)
    AvgLen: 6 NDV: 1839 Nulls: 0 Density: 0.000544 Min: 2450816.000000 Max: 2452641.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.008264 flag = 2048  ("WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK")
    io = NOCOST, cpu = 50.000000, sel = 0.004997 flag = 2048  ("DATE_DIM"."D_YEAR"=2001)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("DATE_DIM"."D_MOY">=1)
    io = NOCOST, cpu = 50.000000, sel = 0.329224 flag = 2048  ("DATE_DIM"."D_MOY"<=4)
  Total Scan IO  Cost  =   409.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 73049.000000 (#rows))
                       =   409.000000
  Total Scan CPU  Cost =   33398564.400000 (scan (Disk))
                         + 3670900.482165 (cpu filter eval) (= 50.252577 (per row) * 73049.000000 (#rows))
                       =   37069464.882165
  Inner table: DATE_DIM  Alias: DATE_DIM
  Access Path: TableScan
    NL Join:  Cost: 15172.116421  Resp: 15172.116421  Degree: 1
      Cost_io: 15137.000000  Cost_cpu: 1371606086
      Resp_io: 15137.000000  Resp_cpu: 1371606086
 ****** Costing Index D_DATE_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: D_DATE_PK_IDX
    resc_io: 1.000000  resc_cpu: 9382
    ix_sel: 1.3689e-05  ix_sel_with_filters: 1.3689e-05 
    NL Join (ordered): Cost: 41.009806  Resp: 41.009806  Degree: 1
      Cost_io: 41.000000  Cost_cpu: 383011
      Resp_io: 41.000000  Resp_cpu: 383011
 ****** Costing Index D_DATE_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 
  Estimated selectivity: 1.000000 , endpoint value predicate, col: #9 
  Estimated selectivity: 0.329224 , endpoint value predicate, col: #9 
  Access Path: index (AllEqUnique)
    Index: D_DATE_PK_IDX
    resc_io: 1.000000  resc_cpu: 9382
    ix_sel: 1.3689e-05  ix_sel_with_filters: 1.3689e-05 
    NL Join (ordered): Cost: 41.009806  Resp: 41.009806  Degree: 1
      Cost_io: 41.000000  Cost_cpu: 383011
      Resp_io: 41.000000  Resp_cpu: 383011

  Best NL cost: 41.009806
          resc: 41.009806  resc_io: 41.000000  resc_cpu: 383011
          resp: 41.009806  resp_io: 41.000000  resc_cpu: 383011
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Capping Semi Join Card of HJ/SMJ by inner = 36.690903
Capping Semi Join Card of HJ/SMJ (no post filters) by inner = 36.690903
Capping Semi Join Card of NL by inner = 36.690903
Capping Semi Join Card of without POSQ by inner = 36.690903
Capping Semi Join Card of non adjusted NSQ by inner = 36.690903
Semi Join Card (capped by inner join):  36.690903 = outer (36.945295) * inner (120.166840) * sel (0.008264)
Join Card - Rounded: 37 Computed: 36.690903
  Outer table:  WEB_SALES  Alias: WEB_SALES
    resc: 4.000919  card 36.945295  bytes:   deg: 1  resp: 4.000919
  Inner table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card: 120.166840  bytes:   deg: 1  resp: 411.949216
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     25 Total Rows:            120
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39096166
      Total Temp space used: 0
  SM join: Resc: 416.951091  Resp: 416.951091  [multiMatchCost=0.000000]
SM Join
  SM cost: 416.951091 
     resc: 416.951091 resc_io: 415.000000 resc_cpu: 76207324
     resp: 416.951091 resp_io: 415.000000 resp_cpu: 76207324
  Outer table:  WEB_SALES  Alias: WEB_SALES
    resc: 4.000919  card 36.945295  bytes:   deg: 1  resp: 4.000919
  Inner table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card: 120.166840  bytes:   deg: 1  resp: 411.949216
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.015811  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 415.965946  Resp: 415.965946  [multiMatchCost=0.000000]
HA Join
  HA cost: 415.965946  
     resc: 415.965946 resc_io: 415.000000 resc_cpu: 37728709
     resp: 415.965946 resp_io: 415.000000 resp_cpu: 37728709
Best:: JoinMethod: NestedLoopSemi
       Cost: 41.009806  Degree: 1  Resp: 41.009806  Card: 36.690903 Bytes: 
***********************
Best so far:  Table#: 0  cost: 4.000919  card: 36.945295  bytes: 444.000000
              Table#: 1  cost: 41.009806  card: 36.690903  bytes: 925.000000
***********************

*********************************
Number of join permutations tried: 1
*********************************
*********************
PJE: Partial join eval conversion for query block SEL$3 (#4).
PJE: Table marked for partial join eval: DATE_DIM[DATE_DIM]#1
***********************
Enumerating distribution method (advanced)
--- Distribution method for 
join between WEB_SALES[WEB_SALES](serial) and DATE_DIM[DATE_DIM](serial); jm = 15; right side access path = IndexUnique
kkopqIsSerialJoin: serial NLJ: both inputs serial
---- serial NL-Join -> SERIAL

(newjo-save)    [1 0 ]
LORE: Or-Expansion validity checks failed on query block SEL$3 (#4) because Cost based OR expansion enabled
Transfer Optimizer annotations for query block SEL$3 (#4)
Final cost for query block SEL$3 (#4) - All Rows Plan:
  Best join order: 1
  Cost: 41.009806  Degree: 1  Card: 37.000000  Bytes: 925.000000
  Resc: 41.009806  Resc_io: 41.000000  Resc_cpu: 383011
  Resp: 41.009806  Resp_io: 41.000000  Resc_cpu: 383011
kkoqbc-subheap (delete addr=0x7f0472305c60, in-use=44952, alloc=49272)
kkoqbc-end:
        :
    call(in-use=802824, alloc=868104), compile(in-use=1995800, alloc=1995992), execution(in-use=34088, alloc=36480)

kkoqbc: finish optimizing query block SEL$3 (#4)
kkoqbc: optimizing query block SEL$4 (#3)
        
        :
    call(in-use=800616, alloc=868104), compile(in-use=2002240, alloc=2004280), execution(in-use=34264, alloc=36480)

kkoqbc-subheap (create addr=0x7f0472305c60)
****************
QUERY BLOCK TEXT
****************
SELECT
                    *
                FROM
                    catalog_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = cs_ship_customer_sk
                    AND cs_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$4 nbfros=2 flg=0
  fro(0): flg=0 objn=74185 hint_alias="CATALOG_SALES"@"SEL$4"
  fro(1): flg=0 objn=74171 hint_alias="DATE_DIM"@"SEL$4"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3255 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: DATE_DIM  Alias: DATE_DIM
  #Rows: 73049  SSZ: 0  LGR: 0  #Blks:  1510  AvgRowLen:  128.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): D_DATE_SK(NUMBER)
    AvgLen: 6 NDV: 73049 Nulls: 0 Density: 0.000014 Min: 2415022.000000 Max: 2488070.000000
Index Stats::
  Index: D_DATE_PK_IDX  Col#: 1
  LVLS: 1  #LB: 163  #DK: 73049  LB/K: 1.00  DB/K: 1.00  CLUF: 1402.00  NRW: 73049.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table: CATALOG_SALES  Alias: CATALOG_SALES  (Using composite stats)
  #Rows: 72077400  SSZ: 0  LGR: 0  #Blks:  1645494  AvgRowLen:  168.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
Index Stats::
  Index: CATALOG_SALES_IDX2  Col#: 8 1
  LVLS: 3  #LB: 261734  #DK: 5997411  LB/K: 1.00  DB/K: 12.00  CLUF: 72077362.00  NRW: 72077400.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
  Index: CATALOG_SALES_PK_IDX  Col#: 16 18
  LVLS: 2  #LB: 249644  #DK: 71913105  LB/K: 1.00  DB/K: 1.00  CLUF: 71898009.00  NRW: 71913105.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
try to generate single-table filter predicates from ORs for query block SEL$4 (#3)
finally: "CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B1 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4

=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$4 (#3)
Applicable DS directives:
   dirid = 11267665714990475542, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74185)[8]}
   dirid = 13969931850241126217, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {C(74171)[7, 9]}
   dirid = 2090373381697137251, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {(74185)[]; F(74171)[]}
   dirid = 14483145493039253896, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {(74185)[]; (74171)[]}
Checking valid directives for the query block
  SPD: Return code in qosdDSDirSetup: NODIR, estType = QUERY_BLOCK
Return code in qosdSetupDirCtx4QB: EXISTS
=====================================
SPD: END context at query block level
=====================================
Access path analysis for CATALOG_SALES
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for CATALOG_SALES[CATALOG_SALES] 
  SPD: Return code in qosdDSDirSetup: NODIR, estType = TABLE

 kkecdn: Single Table Predicate:"CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B1
NOTE: ignoring histogram of column (CATALOG_SALES.CS_SHIP_CUSTOMER_SK)
      used only for incremental stats maintenance
  Column (#8): CS_SHIP_CUSTOMER_SK(NUMBER)
    AvgLen: 6 NDV: 1037120 Nulls: 0 Density: 0.000001 Min: 1.000000 Max: 1079999.000000
  Estimated selectivity: 9.6421e-07 , col: #8 
  Table: CATALOG_SALES  Alias: CATALOG_SALES
    Card: Original: 72077400.000000  Rounded: 69  Computed: 69.497647  Non Adjusted: 69.497647
  Scan IO  Cost (Disk) =   445656.000000
  Scan CPU Cost (Disk) =   32620732791.360001
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000001 flag = 2048  ("CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B1)
  Total Scan IO  Cost  =   445656.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 72077400.000000 (#rows))
                       =   445656.000000
  Total Scan CPU  Cost =   32620732791.360001 (scan (Disk))
                         + 3603870000.000000 (cpu filter eval) (= 50.000000 (per row) * 72077400.000000 (#rows))
                       =   36224602791.360001
  Access Path: TableScan
    Cost:  446583.437120  Resp: 446583.437120  Degree: 0
      Cost_io: 445656.000000  Cost_cpu: 36224602791
      Resp_io: 445656.000000  Resp_cpu: 36224602791
  Access Path: index (index (FFS))
    Index: CATALOG_SALES_IDX2
    resc_io: 70888.000000  resc_cpu: 14117080977
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  71249.431290  Resp: 71249.431290  Degree: 1
      Cost_io: 70888.000000  Cost_cpu: 14117080977
      Resp_io: 70888.000000  Resp_cpu: 14117080977
 ****** Costing Index CATALOG_SALES_IDX2
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER

  Estimated selectivity: 9.6421e-07 , col: #8 
  Access Path: index (IndexOnly)
    Index: CATALOG_SALES_IDX2
    resc_io: 4.000000  resc_cpu: 42486
    ix_sel: 9.6421e-07  ix_sel_with_filters: 9.6421e-07 
    Cost: 4.001088  Resp: 4.001088  Degree: 1
  Best:: AccessPath: IndexRange
  Index: CATALOG_SALES_IDX2
         Cost: 4.001088  Degree: 1  Resp: 4.001088  Card: 69.497647  Bytes: 0.000000

Access path analysis for DATE_DIM
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for DATE_DIM[DATE_DIM] 
  SPD: Directive valid: dirid = 13969931850241126217, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {C(74171)[7, 9]}
  SPD: Return code in qosdDSDirSetup: EXISTS, estType = TABLE
  Column (#7): 
    NewDensity:0.000007, OldDensity:0.000007 BktCnt:73049.000000, PopBktCnt:73048.000000, PopValCnt:200, NDV:201
  Column (#7): D_YEAR(NUMBER)
    AvgLen: 4 NDV: 201 Nulls: 0 Density: 0.000007 Min: 1900.000000 Max: 2100.000000
    Histogram: Freq  #Bkts: 201  UncompBkts: 73049  EndPtVals: 201  ActualVal: yes
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 


 kkecdn: Single Table Predicate:"DATE_DIM"."D_YEAR"=2001
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY">=1
  Column (#9): 
    NewDensity:0.038666, OldDensity:0.000007 BktCnt:73049.000000, PopBktCnt:73049.000000, PopValCnt:12, NDV:12
  Column (#9): D_MOY(NUMBER)
    AvgLen: 3 NDV: 12 Nulls: 0 Density: 0.038666 Min: 1.000000 Max: 12.000000
    Histogram: Freq  #Bkts: 12  UncompBkts: 73049  EndPtVals: 12  ActualVal: yes
  Estimated selectivity: 1.000000 , endpoint value predicate, col: #9 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY"<=4
  Estimated selectivity: 0.329224 , endpoint value predicate, col: #9 
  Table: DATE_DIM  Alias: DATE_DIM
    Card: Original: 73049.000000  Rounded: 120  Computed: 120.166840  Non Adjusted: 120.166840
  Scan IO  Cost (Disk) =   411.000000
  Scan CPU Cost (Disk) =   33398564.400000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.004997 flag = 2048  ("DATE_DIM"."D_YEAR"=2001)
    io = NOCOST, cpu = 50.000000, sel = 0.329224 flag = 2048  ("DATE_DIM"."D_MOY"<=4)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("DATE_DIM"."D_MOY">=1)
  Total Scan IO  Cost  =   411.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 73049.000000 (#rows))
                       =   411.000000
  Total Scan CPU  Cost =   33398564.400000 (scan (Disk))
                         + 3676708.342003 (cpu filter eval) (= 50.332083 (per row) * 73049.000000 (#rows))
                       =   37075272.742003
  Access Path: TableScan
    Cost:  411.949216  Resp: 411.949216  Degree: 0
      Cost_io: 411.000000  Cost_cpu: 37075273
      Resp_io: 411.000000  Resp_cpu: 37075273
  Best:: AccessPath: TableScan
         Cost: 411.949216  Degree: 1  Resp: 411.949216  Card: 120.166840  Bytes: 0.000000

***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE: Checking validity of partial join eval on query block SEL$4 (#3)
PJE: Passed validity of partial join eval by query block SEL$4 (#3)
number: [0]
PJE: Partial join eval conversion for query block SEL$4 (#3).
PJE: Table marked for partial join eval: DATE_DIM[DATE_DIM]#1
***********************
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  CATALOG_SALES[CATALOG_SALES]#0  DATE_DIM[DATE_DIM]#1

***************
Now joining: DATE_DIM[DATE_DIM]#1
***************
NL Join
  Outer table: Card: 69.497647  Cost: 4.001088  Resp: 4.001088  Degree: 1  Bytes: 
Access path analysis for DATE_DIM
  Scan IO  Cost (Disk) =   408.985507
  Scan CPU Cost (Disk) =   33398564.400000
NOTE: ignoring histogram of column (CATALOG_SALES.CS_SOLD_DATE_SK)
      used only for incremental stats maintenance
  Column (#1): CS_SOLD_DATE_SK(NUMBER)
    AvgLen: 6 NDV: 1849 Nulls: 0 Density: 0.000541 Min: 2450815.000000 Max: 2452647.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.008264 flag = 2048  ("CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK")
    io = NOCOST, cpu = 50.000000, sel = 0.004997 flag = 2048  ("DATE_DIM"."D_YEAR"=2001)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("DATE_DIM"."D_MOY">=1)
    io = NOCOST, cpu = 50.000000, sel = 0.329224 flag = 2048  ("DATE_DIM"."D_MOY"<=4)
  Total Scan IO  Cost  =   408.985507 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 73049.000000 (#rows))
                       =   408.985507
  Total Scan CPU  Cost =   33398564.400000 (scan (Disk))
                         + 3670900.482165 (cpu filter eval) (= 50.252577 (per row) * 73049.000000 (#rows))
                       =   37069464.882165
  Inner table: DATE_DIM  Alias: DATE_DIM
  Access Path: TableScan
    NL Join:  Cost: 28289.486754  Resp: 28289.486754  Degree: 1
      Cost_io: 28224.000000  Cost_cpu: 2557835563
      Resp_io: 28224.000000  Resp_cpu: 2557835563
 ****** Costing Index D_DATE_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: D_DATE_PK_IDX
    resc_io: 1.000000  resc_cpu: 9382
    ix_sel: 1.3689e-05  ix_sel_with_filters: 1.3689e-05 
    NL Join (ordered): Cost: 73.017661  Resp: 73.017661  Degree: 1
      Cost_io: 73.000000  Cost_cpu: 689828
      Resp_io: 73.000000  Resp_cpu: 689828
 ****** Costing Index D_DATE_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 
  Estimated selectivity: 1.000000 , endpoint value predicate, col: #9 
  Estimated selectivity: 0.329224 , endpoint value predicate, col: #9 
  Access Path: index (AllEqUnique)
    Index: D_DATE_PK_IDX
    resc_io: 1.000000  resc_cpu: 9382
    ix_sel: 1.3689e-05  ix_sel_with_filters: 1.3689e-05 
    NL Join (ordered): Cost: 73.017661  Resp: 73.017661  Degree: 1
      Cost_io: 73.000000  Cost_cpu: 689828
      Resp_io: 73.000000  Resp_cpu: 689828

  Best NL cost: 73.017661
          resc: 73.017661  resc_io: 73.000000  resc_cpu: 689828
          resp: 73.017661  resp_io: 73.000000  resc_cpu: 689828
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Capping Semi Join Card of HJ/SMJ by inner = 69.019113
Capping Semi Join Card of HJ/SMJ (no post filters) by inner = 69.019113
Capping Semi Join Card of NL by inner = 69.019113
Capping Semi Join Card of without POSQ by inner = 69.019113
Capping Semi Join Card of non adjusted NSQ by inner = 69.019113
Semi Join Card (capped by inner join):  69.019113 = outer (69.497647) * inner (120.166840) * sel (0.008264)
Join Card - Rounded: 69 Computed: 69.019113
  Outer table:  CATALOG_SALES  Alias: CATALOG_SALES
    resc: 4.001088  card 69.497647  bytes:   deg: 1  resp: 4.001088
  Inner table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card: 120.166840  bytes:   deg: 1  resp: 411.949216
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     25 Total Rows:            120
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39096166
      Total Temp space used: 0
  SM join: Resc: 416.951260  Resp: 416.951260  [multiMatchCost=0.000000]
SM Join
  SM cost: 416.951260 
     resc: 416.951260 resc_io: 415.000000 resc_cpu: 76213924
     resp: 416.951260 resp_io: 415.000000 resp_cpu: 76213924
  Outer table:  CATALOG_SALES  Alias: CATALOG_SALES
    resc: 4.001088  card 69.497647  bytes:   deg: 1  resp: 4.001088
  Inner table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card: 120.166840  bytes:   deg: 1  resp: 411.949216
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.015934  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 415.966238  Resp: 415.966238  [multiMatchCost=0.000000]
HA Join
  HA cost: 415.966238  
     resc: 415.966238 resc_io: 415.000000 resc_cpu: 37740109
     resp: 415.966238 resp_io: 415.000000 resp_cpu: 37740109
Best:: JoinMethod: NestedLoopSemi
       Cost: 73.017661  Degree: 1  Resp: 73.017661  Card: 69.019113 Bytes: 
***********************
Best so far:  Table#: 0  cost: 4.001088  card: 69.497647  bytes: 828.000000
              Table#: 1  cost: 73.017661  card: 69.019113  bytes: 1725.000000
***********************

*********************************
Number of join permutations tried: 1
*********************************
*********************
PJE: Partial join eval conversion for query block SEL$4 (#3).
PJE: Table marked for partial join eval: DATE_DIM[DATE_DIM]#1
***********************
Enumerating distribution method (advanced)
--- Distribution method for 
join between CATALOG_SALES[CATALOG_SALES](serial) and DATE_DIM[DATE_DIM](serial); jm = 15; right side access path = IndexUnique
kkopqIsSerialJoin: serial NLJ: both inputs serial
---- serial NL-Join -> SERIAL

(newjo-save)    [1 0 ]
LORE: Or-Expansion validity checks failed on query block SEL$4 (#3) because Cost based OR expansion enabled
Transfer Optimizer annotations for query block SEL$4 (#3)
Final cost for query block SEL$4 (#3) - All Rows Plan:
  Best join order: 1
  Cost: 73.017661  Degree: 1  Card: 69.000000  Bytes: 1725.000000
  Resc: 73.017661  Resc_io: 73.000000  Resc_cpu: 689828
  Resp: 73.017661  Resp_io: 73.000000  Resc_cpu: 689828
kkoqbc-subheap (delete addr=0x7f0472305c60, in-use=52808, alloc=65704)
kkoqbc-end:
        :
    call(in-use=839696, alloc=917312), compile(in-use=2034656, alloc=2036008), execution(in-use=34672, alloc=36480)

kkoqbc: finish optimizing query block SEL$4 (#3)
kkoqbc: optimizing query block SEL$2 (#2)
        
        :
    call(in-use=837488, alloc=917312), compile(in-use=2041224, alloc=2044296), execution(in-use=34832, alloc=36480)

kkoqbc-subheap (create addr=0x7f0472305c60)
****************
QUERY BLOCK TEXT
****************
SELECT
            *
        FROM
            store_sales ss,
            date_dim
        WHERE
            c.c_customer_sk = ss.ss_customer_sk
            AND ss_sold_date_sk = d_date_sk
            AND d_year = 2001
            AND d_moy BETWEEN 1 AND 1 + 3
            AND ( EXISTS (
                SELECT
                    *
                FROM
                    web_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = ws_bill_customer_sk
                    AND ws_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            )
                  OR EXISTS (
                SELECT
                    *
                FROM
                    catalog_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = cs_ship_customer_sk
                    AND cs_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            ) )
    
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$2 nbfros=2 flg=0
  fro(0): flg=0 objn=74171 hint_alias="DATE_DIM"@"SEL$2"
  fro(1): flg=0 objn=74191 hint_alias="SS"@"SEL$2"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3255 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: DATE_DIM  Alias: DATE_DIM
  #Rows: 73049  SSZ: 0  LGR: 0  #Blks:  1510  AvgRowLen:  128.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): D_DATE_SK(NUMBER)
    AvgLen: 6 NDV: 73049 Nulls: 0 Density: 0.000014 Min: 2415022.000000 Max: 2488070.000000
Index Stats::
  Index: D_DATE_PK_IDX  Col#: 1
  LVLS: 1  #LB: 163  #DK: 73049  LB/K: 1.00  DB/K: 1.00  CLUF: 1402.00  NRW: 73049.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table: STORE_SALES  Alias: SS  (Using composite stats)
  #Rows: 144020200  SSZ: 0  LGR: 0  #Blks:  2304802  AvgRowLen:  117.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
Index Stats::
  Index: STORE_SALES_IDX2  Col#: 4 1
  LVLS: 3  #LB: 522970  #DK: 11965122  LB/K: 1.00  DB/K: 12.00  CLUF: 143898920.00  NRW: 144020200.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
  Index: STORE_SALES_PK_IDX  Col#: 3 10
  LVLS: 3  #LB: 497464  #DK: 141527398  LB/K: 1.00  DB/K: 1.00  CLUF: 141365556.00  NRW: 141527398.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
try to generate single-table filter predicates from ORs for query block SEL$2 (#2)
finally: "SS"."SS_CUSTOMER_SK"=:B1 AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND ( EXISTS (SELECT 0 FROM "WEB_SALES" "WEB_SALES","DATE_DIM" "DATE_DIM" WHERE "WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B2 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1) OR  EXISTS (SELECT 0 FROM "CATALOG_SALES" "CATALOG_SALES","DATE_DIM" "DATE_DIM" WHERE "CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B3 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1))

=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$2 (#2)
Applicable DS directives:
   dirid = 10827845680942532126, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {F(74191)[]; F(74171)[]}
   dirid = 7660518587836633700, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74191)[4]}
   dirid = 13969931850241126217, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {C(74171)[7, 9]}
   dirid = 2361553282592865451, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {(74191)[]; F(74171)[]}
   dirid = 12943986683386070018, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {(74191)[]; (74171)[]}
Checking valid directives for the query block
  SPD: Return code in qosdDSDirSetup: NODIR, estType = QUERY_BLOCK
Return code in qosdSetupDirCtx4QB: EXISTS
=====================================
SPD: END context at query block level
=====================================
Access path analysis for STORE_SALES
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for STORE_SALES[SS] 
  SPD: Return code in qosdDSDirSetup: NODIR, estType = TABLE

 kkecdn: Single Table Predicate:"SS"."SS_CUSTOMER_SK"=:B1
NOTE: ignoring histogram of column (STORE_SALES.SS_CUSTOMER_SK)
      used only for incremental stats maintenance
  Column (#4): SS_CUSTOMER_SK(NUMBER)
    AvgLen: 6 NDV: 1039371 Nulls: 0 Density: 0.000001 Min: 1.000000 Max: 1079999.000000
  Estimated selectivity: 9.6212e-07 , col: #4 
  Table: STORE_SALES  Alias: SS
    Card: Original: 144020200.000000  Rounded: 139  Computed: 138.564767  Non Adjusted: 138.564767
  Scan IO  Cost (Disk) =   624219.000000
  Scan CPU Cost (Disk) =   46657751154.880005
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000001 flag = 2048  ("SS"."SS_CUSTOMER_SK"=:B1)
  Total Scan IO  Cost  =   624219.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 144020200.000000 (#rows))
                       =   624219.000000
  Total Scan CPU  Cost =   46657751154.880005 (scan (Disk))
                         + 7201010000.000000 (cpu filter eval) (= 50.000000 (per row) * 144020200.000000 (#rows))
                       =   53858761154.880005
  Access Path: TableScan
    Cost:  625597.914066  Resp: 625597.914066  Degree: 0
      Cost_io: 624219.000000  Cost_cpu: 53858761155
      Resp_io: 624219.000000  Resp_cpu: 53858761155
  Access Path: index (index (FFS))
    Index: STORE_SALES_IDX2
    resc_io: 141639.000000  resc_cpu: 28207733477
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  142361.185947  Resp: 142361.185947  Degree: 1
      Cost_io: 141639.000000  Cost_cpu: 28207733477
      Resp_io: 141639.000000  Resp_cpu: 28207733477
 ****** Costing Index STORE_SALES_IDX2
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER

  Estimated selectivity: 9.6212e-07 , col: #4 
  Access Path: index (IndexOnly)
    Index: STORE_SALES_IDX2
    resc_io: 4.000000  resc_cpu: 56286
    ix_sel: 9.6212e-07  ix_sel_with_filters: 9.6212e-07 
    Cost: 4.001441  Resp: 4.001441  Degree: 1
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: IndexRange
  Index: STORE_SALES_IDX2
         Cost: 4.001441  Degree: 1  Resp: 4.001441  Card: 138.564767  Bytes: 0.000000

Access path analysis for DATE_DIM
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for DATE_DIM[DATE_DIM] 
  SPD: Directive valid: dirid = 13969931850241126217, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {C(74171)[7, 9]}
  SPD: Return code in qosdDSDirSetup: EXISTS, estType = TABLE
  Column (#7): 
    NewDensity:0.000007, OldDensity:0.000007 BktCnt:73049.000000, PopBktCnt:73048.000000, PopValCnt:200, NDV:201
  Column (#7): D_YEAR(NUMBER)
    AvgLen: 4 NDV: 201 Nulls: 0 Density: 0.000007 Min: 1900.000000 Max: 2100.000000
    Histogram: Freq  #Bkts: 201  UncompBkts: 73049  EndPtVals: 201  ActualVal: yes
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 


 kkecdn: Single Table Predicate:"DATE_DIM"."D_YEAR"=2001
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY">=1
  Column (#9): 
    NewDensity:0.038666, OldDensity:0.000007 BktCnt:73049.000000, PopBktCnt:73049.000000, PopValCnt:12, NDV:12
  Column (#9): D_MOY(NUMBER)
    AvgLen: 3 NDV: 12 Nulls: 0 Density: 0.038666 Min: 1.000000 Max: 12.000000
    Histogram: Freq  #Bkts: 12  UncompBkts: 73049  EndPtVals: 12  ActualVal: yes
  Estimated selectivity: 1.000000 , endpoint value predicate, col: #9 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY"<=4
  Estimated selectivity: 0.329224 , endpoint value predicate, col: #9 
  Table: DATE_DIM  Alias: DATE_DIM
    Card: Original: 73049.000000  Rounded: 120  Computed: 120.166840  Non Adjusted: 120.166840
  Scan IO  Cost (Disk) =   411.000000
  Scan CPU Cost (Disk) =   33398564.400000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.004997 flag = 2048  ("DATE_DIM"."D_YEAR"=2001)
    io = NOCOST, cpu = 50.000000, sel = 0.329224 flag = 2048  ("DATE_DIM"."D_MOY"<=4)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("DATE_DIM"."D_MOY">=1)
  Total Scan IO  Cost  =   411.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 73049.000000 (#rows))
                       =   411.000000
  Total Scan CPU  Cost =   33398564.400000 (scan (Disk))
                         + 3676708.342003 (cpu filter eval) (= 50.332083 (per row) * 73049.000000 (#rows))
                       =   37075272.742003
  Access Path: TableScan
    Cost:  411.949216  Resp: 411.949216  Degree: 0
      Cost_io: 411.000000  Cost_cpu: 37075273
      Resp_io: 411.000000  Resp_cpu: 37075273
  ****** trying bitmap/domain indexes ******
 ****** Costing Index D_DATE_PK_IDX
  Access Path: index (FullScan)
    Index: D_DATE_PK_IDX
    resc_io: 164.000000  resc_cpu: 15777716
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 164.403948  Resp: 164.403948  Degree: 0
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: TableScan
         Cost: 411.949216  Degree: 1  Resp: 411.949216  Card: 120.166840  Bytes: 0.000000

***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE: Checking validity of partial join eval on query block SEL$2 (#2)
PJE: Passed validity of partial join eval by query block SEL$2 (#2)
number: [0]
PJE: Partial join eval conversion for query block SEL$2 (#2).
PJE: Table marked for partial join eval: STORE_SALES[SS]#1
***********************
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  DATE_DIM[DATE_DIM]#0  STORE_SALES[SS]#1

***************
Now joining: STORE_SALES[SS]#1
***************
NL Join
  Outer table: Card: 120.166840  Cost: 411.949216  Resp: 411.949216  Degree: 1  Bytes: 
Access path analysis for STORE_SALES
  Scan IO  Cost (Disk) =   624217.216667
  Scan CPU Cost (Disk) =   46657751154.880005
NOTE: ignoring histogram of column (STORE_SALES.SS_SOLD_DATE_SK)
      used only for incremental stats maintenance
  Column (#1): SS_SOLD_DATE_SK(NUMBER)
    AvgLen: 6 NDV: 1849 Nulls: 0 Density: 0.000541 Min: 2450816.000000 Max: 2452651.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000001 flag = 2064  ("SS"."SS_CUSTOMER_SK"=:B1)
    io = NOCOST, cpu = 50.000000, sel = 0.007463 flag = 2048  ("SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK")
  Total Scan IO  Cost  =   624217.216667 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 144020200.000000 (#rows))
                       =   624217.216667
  Total Scan CPU  Cost =   46657751154.880005 (scan (Disk))
                         + 7201016928.238328 (cpu filter eval) (= 50.000048 (per row) * 144020200.000000 (#rows))
                       =   53858768083.118332
  Inner table: STORE_SALES  Alias: SS
  Access Path: TableScan
    NL Join:  Cost: 75071947.658387  Resp: 75071947.658387  Degree: 1
      Cost_io: 74906477.000000  Cost_cpu: 6463089245247
      Resp_io: 74906477.000000  Resp_cpu: 6463089245247
  Access Path: index (index (FFS))
    Index: STORE_SALES_IDX2
    resc_io: 141637.716667  resc_cpu: 28207740405
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: STORE_SALES  Alias: SS
  Access Path: index (FFS)
    NL Join:  Cost: 17083600.284196  Resp: 17083600.284196  Degree: 1
      Cost_io: 16996937.000000  Cost_cpu: 3384965923877
      Resp_io: 16996937.000000  Resp_cpu: 3384965923877
 ****** Costing Index STORE_SALES_IDX2
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 8.3576e-08
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 8.3576e-08
  Estimated selectivity: 9.6212e-07 , col: #4 
  Access Path: index (AllEqJoinGuess)
    Index: STORE_SALES_IDX2
    resc_io: 3.000000  resc_cpu: 22414
    ix_sel: 6.9435e-09  ix_sel_with_filters: 6.9435e-09 
    NL Join : Cost: 772.018080  Resp: 772.018080  Degree: 1
      Cost_io: 771.000000  Cost_cpu: 39764991
      Resp_io: 771.000000  Resp_cpu: 39764991
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 772.018080
          resc: 772.018080  resc_io: 771.000000  resc_cpu: 39764991
          resp: 772.018080  resp_io: 771.000000  resc_cpu: 39764991
  SPD: Directive valid: dirid = 10827845680942532126, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {F(74191)[]; F(74171)[]}
  SPD: Return code in qosdDSDirSetup: EXISTS, estType = JOIN
Semi Join Card:  120.166840 = outer (120.166840) * sel (1.000000)
Join Card - Rounded: 120 Computed: 120.166840
  Outer table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card 120.166840  bytes:   deg: 1  resp: 411.949216
  Inner table:  STORE_SALES  Alias: SS
    resc: 4.001441  card: 138.564767  bytes:   deg: 1  resp: 4.001441
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     25 Total Rows:            120
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39096166
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     24 Total Rows:            139
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39103407
      Total Temp space used: 0
  SM join: Resc: 417.952755  Resp: 417.952755  [multiMatchCost=0.000000]
SM Join
  SM cost: 417.952755 
     resc: 417.952755 resc_io: 415.000000 resc_cpu: 115331131
     resp: 417.952755 resp_io: 415.000000 resp_cpu: 115331131
SM Join (with index on outer)
 ****** Costing Index D_DATE_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (FullScan)
    Index: D_DATE_PK_IDX
    resc_io: 1566.000000  resc_cpu: 52083873
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1567.333473  Resp: 1567.333473  Degree: 1
  Outer table:  DATE_DIM  Alias: DATE_DIM
    resc: 1567.333473  card 120.166840  bytes:   deg: 1  resp: 1567.333473
  Inner table:  STORE_SALES  Alias: SS
    resc: 4.001441  card: 138.564767  bytes:   deg: 1  resp: 4.001441
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     24 Total Rows:            139
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39103407
      Total Temp space used: 0
  SM join: Resc: 1572.336055  Resp: 1572.336055  [multiMatchCost=0.000000]
  Outer table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card 120.166840  bytes:   deg: 1  resp: 411.949216
  Inner table:  STORE_SALES  Alias: SS
    resc: 4.001441  card: 138.564767  bytes:   deg: 1  resp: 4.001441
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016178  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 415.966836  Resp: 415.966836  [multiMatchCost=0.000000]
HA Join
  HA cost: 415.966836  
     resc: 415.966836 resc_io: 415.000000 resc_cpu: 37763459
     resp: 415.966836 resp_io: 415.000000 resp_cpu: 37763459
Best:: JoinMethod: HashSemi
       Cost: 415.966836  Degree: 1  Resp: 415.966836  Card: 120.166840 Bytes: 
***********************
Best so far:  Table#: 0  cost: 411.949216  card: 120.166840  bytes: 1560.000000
              Table#: 1  cost: 415.966836  card: 120.166840  bytes: 3000.000000
***********************

*********************************
Number of join permutations tried: 1
*********************************
*********************
PJE: Partial join eval conversion for query block SEL$2 (#2).
PJE: Table marked for partial join eval: STORE_SALES[SS]#1
***********************
Enumerating distribution method (advanced)
--- Distribution method for 
join between DATE_DIM[DATE_DIM](serial) and SS[STORE_SALES](serial); jm = 2; right side access path = IndexRange
---- serial Hash-Join -> NONE

kkoaccsqf: Current query block SEL$2 (#2) is serial
kkoaccsqf: correlated subquery query block SEL$3 (#4) in filter               : serial
(newjo-save)    [0 1 ]
LORE: Or-Expansion validity checks failed on query block SEL$2 (#2) because Cost based OR expansion enabled
Transfer Optimizer annotations for query block SEL$2 (#2)
Final cost for query block SEL$2 (#2) - All Rows Plan:
  Best join order: 1
  Cost: 415.966836  Degree: 1  Card: 120.000000  Bytes: 3000.000000
  Resc: 415.966836  Resc_io: 415.000000  Resc_cpu: 37763459
  Resp: 415.966836  Resp_io: 415.000000  Resc_cpu: 37763459
kkoqbc-subheap (delete addr=0x7f0472305c60, in-use=63832, alloc=65704)
kkoqbc-end:
        :
    call(in-use=876200, alloc=950048), compile(in-use=2076632, alloc=2080576), execution(in-use=35648, alloc=36480)

kkoqbc: finish optimizing query block SEL$2 (#2)
kkoqbc: optimizing query block SEL$DC996EF9 (#8)
        
        :
    call(in-use=873992, alloc=950048), compile(in-use=2082800, alloc=2083928), execution(in-use=35840, alloc=36480)

kkoqbc-subheap (create addr=0x7f0472305c60)
****************
QUERY BLOCK TEXT
****************
Not available.
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$DC996EF9 nbfros=2 flg=0
  fro(0): flg=0 objn=74168 hint_alias="C"@"SEL$1"
  fro(1): flg=0 objn=74170 hint_alias="CUSTOMER_DEMOGRAPHICS"@"SEL$1"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3255 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: CUSTOMER  Alias:  C
  #Rows: 1080000  SSZ: 0  LGR: 0  #Blks:  23374  AvgRowLen:  138.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): C_CUSTOMER_SK(NUMBER)
    AvgLen: 6 NDV: 1080000 Nulls: 0 Density: 0.000001 Min: 1.000000 Max: 1080000.000000
  Column (#3): C_CURRENT_CDEMO_SK(NUMBER)
    AvgLen: 6 NDV: 772544 Nulls: 0 Density: 0.000001 Min: 18.000000 Max: 1920799.000000
Index Stats::
  Index: CUSTOMER_PK_IDX  Col#: 1
  LVLS: 2  #LB: 2266  #DK: 1080000  LB/K: 1.00  DB/K: 1.00  CLUF: 75684.00  NRW: 1080000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table: CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
  #Rows: 1920800  SSZ: 0  LGR: 0  #Blks:  17254  AvgRowLen:  54.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): CD_DEMO_SK(NUMBER)
    AvgLen: 6 NDV: 1920800 Nulls: 0 Density: 0.000001 Min: 1.000000 Max: 1920800.000000
Index Stats::
  Index: CD_DEMO_PK_IDX  Col#: 1
  LVLS: 2  #LB: 4138  #DK: 1920800  LB/K: 1.00  DB/K: 1.00  CLUF: 795806.00  NRW: 1920800.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
  Column (#5): C_CURRENT_ADDR_SK(NUMBER)
    AvgLen: 5 NDV: 457472 Nulls: 0 Density: 0.000002 Min: 1.000000 Max: 539997.000000
  Column (#2): 
    NewDensity:0.249925, OldDensity:0.000000 BktCnt:1920800.000000, PopBktCnt:1920800.000000, PopValCnt:2, NDV:2
  Column (#2): CD_GENDER(CHARACTER)
    AvgLen: 2 NDV: 2 Nulls: 0 Density: 0.249925
    Histogram: Freq  #Bkts: 2  UncompBkts: 1920800  EndPtVals: 2  ActualVal: no 
  Column (#3): 
    NewDensity:0.098953, OldDensity:0.000000 BktCnt:1920800.000000, PopBktCnt:1920800.000000, PopValCnt:5, NDV:5
  Column (#3): CD_MARITAL_STATUS(CHARACTER)
    AvgLen: 2 NDV: 5 Nulls: 0 Density: 0.098953
    Histogram: Freq  #Bkts: 5  UncompBkts: 1920800  EndPtVals: 5  ActualVal: yes
  Column (#4): 
    NewDensity:0.070771, OldDensity:0.000000 BktCnt:1920800.000000, PopBktCnt:1920800.000000, PopValCnt:7, NDV:7
  Column (#4): CD_EDUCATION_STATUS(CHARACTER)
    AvgLen: 21 NDV: 7 Nulls: 0 Density: 0.070771
    Histogram: Freq  #Bkts: 7  UncompBkts: 1920800  EndPtVals: 7  ActualVal: yes
  Column (#5): CD_PURCHASE_ESTIMATE(NUMBER)
    AvgLen: 4 NDV: 9500 Nulls: 0 Density: 0.000105 Min: 500.000000 Max: 9999.000000
  Column (#6): CD_CREDIT_RATING(CHARACTER)
    AvgLen: 11 NDV: 4 Nulls: 0 Density: 0.250000
  Column (#7): CD_DEP_COUNT(NUMBER)
    AvgLen: 3 NDV: 6 Nulls: 0 Density: 0.166667 Min: 0.000000 Max: 5.000000
  Column (#8): CD_DEP_EMPLOYED_COUNT(NUMBER)
    AvgLen: 3 NDV: 6 Nulls: 0 Density: 0.166667 Min: 0.000000 Max: 5.000000
  Column (#9): CD_DEP_COLLEGE_COUNT(NUMBER)
    AvgLen: 3 NDV: 6 Nulls: 0 Density: 0.166667 Min: 0.000000 Max: 5.000000
try to generate single-table filter predicates from ORs for query block SEL$DC996EF9 (#8)
finally: "CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK"="C"."C_CURRENT_CDEMO_SK" AND  EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM" WHERE "SS"."SS_CUSTOMER_SK"=:B1 AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND ( EXISTS (SELECT 0 FROM "WEB_SALES" "WEB_SALES","DATE_DIM" "DATE_DIM" WHERE "WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B2 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1) OR  EXISTS (SELECT 0 FROM "CATALOG_SALES" "CATALOG_SALES","DATE_DIM" "DATE_DIM" WHERE "CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B3 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1)))

=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$DC996EF9 (#8)
Applicable DS directives:
   dirid = 7754152966831092939, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {EC(74170)[3, 4]}
   dirid = 9316027922818115912, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74168)[3, 5]}
Checking valid directives for the query block
  SPD: Return code in qosdDSDirSetup: NODIR, estType = GROUP_BY
  SPD: Return code in qosdDSDirSetup: NODIR, estType = QUERY_BLOCK
Return code in qosdSetupDirCtx4QB: EXISTS
=====================================
SPD: END context at query block level
=====================================
Access path analysis for CUSTOMER_DEMOGRAPHICS
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS] 
  SPD: Return code in qosdDSDirSetup: NODIR, estType = TABLE
  Table: CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
    Card: Original: 1920800.000000  Rounded: 1920800  Computed: 1920800.000000  Non Adjusted: 1920800.000000
  Scan IO  Cost (Disk) =   4675.000000
  Scan CPU Cost (Disk) =   718321325.760000
  Total Scan IO  Cost  =   4675.000000 (scan (Disk))
                       =   4675.000000
  Total Scan CPU  Cost =   718321325.760000 (scan (Disk))
                       =   718321325.760000
  Access Path: TableScan
    Cost:  4693.390757  Resp: 4693.390757  Degree: 0
      Cost_io: 4675.000000  Cost_cpu: 718321326
      Resp_io: 4675.000000  Resp_cpu: 718321326
  Best:: AccessPath: TableScan
         Cost: 4693.390757  Degree: 1  Resp: 4693.390757  Card: 1920800.000000  Bytes: 0.000000

Access path analysis for CUSTOMER
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for CUSTOMER[C] 
  SPD: Return code in qosdDSDirSetup: NODIR, estType = TABLE

 kkecdn: Single Table Predicate: EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM" WHERE "SS"."SS_CUSTOMER_SK"=:B1 AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND ( EXISTS (SELECT 0 FROM "WEB_SALES" "WEB_SALES","DATE_DIM" "DATE_DIM" WHERE "WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B2 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1) OR  EXISTS (SELECT 0 FROM "CATALOG_SALES" "CATALOG_SALES","DATE_DIM" "DATE_DIM" WHERE "CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B3 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1)))
  Column (#1): C_CUSTOMER_SK(NUMBER)
    AvgLen: 6 NDV: 1080000 Nulls: 0 Density: 0.000001 Min: 1.000000 Max: 1080000.000000
  Table: CUSTOMER  Alias: C
    Card: Original: 1080000.000000  Rounded: 1080000  Computed: 1080000.000000  Non Adjusted: 1080000.000000
  Scan IO  Cost (Disk) =   6332.000000
  Scan CPU Cost (Disk) =   414856538.560000
  Cost of predicates:
    io = NOCOST, cpu = 20.000000, sel = 0.050000 flag = 2562  ( EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM" WHERE "SS"."SS_CUSTOMER_SK"=:B1 AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND ( EXISTS (SELECT 0 FROM "WEB_SALES" "WEB_SALES","DATE_DIM" "DATE_DIM" WHERE "WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B2 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1) OR  EXISTS (SELECT 0 FROM "CATALOG_SALES" "CATALOG_SALES","DATE_DIM" "DATE_DIM" WHERE "CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B3 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1))))
  Total Scan IO  Cost  =   6332.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 1080000.000000 (#rows))
                       =   6332.000000
  Total Scan CPU  Cost =   414856538.560000 (scan (Disk))
                         + 21600000.000000 (cpu filter eval) (= 20.000000 (per row) * 1080000.000000 (#rows))
                       =   436456538.560000
  Access Path: TableScan
    Cost:  6343.174339  Resp: 6343.174339  Degree: 0
      Cost_io: 6332.000000  Cost_cpu: 436456539
      Resp_io: 6332.000000  Resp_cpu: 436456539
  Best:: AccessPath: TableScan
         Cost: 6343.174339  Degree: 1  Resp: 6343.174339  Card: 1080000.000000  Bytes: 0.000000

Grouping column cardinality [C_CURRENT_]    457472
Grouping column cardinality [ CD_GENDER]    2
Grouping column cardinality [CD_MARITAL]    5
Grouping column cardinality [CD_EDUCATI]    7
Grouping column cardinality [CD_PURCHAS]    9500
Grouping column cardinality [CD_CREDIT_]    4
Grouping column cardinality [CD_DEP_COU]    6
Grouping column cardinality [CD_DEP_EMP]    6
Grouping column cardinality [CD_DEP_COL]    6
***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE:  Bypassed; QB is not duplicate insignificant SEL$DC996EF9 (#8)
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  CUSTOMER[C]#0  CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS]#1

***************
Now joining: CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS]#1
***************
NL Join
  Outer table: Card: 1080000.000000  Cost: 6343.174339  Resp: 6343.174339  Degree: 1  Bytes: 
Access path analysis for CUSTOMER_DEMOGRAPHICS
  Scan IO  Cost (Disk) =   4672.958334
  Scan CPU Cost (Disk) =   718321325.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000001 flag = 2048  ("CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK"="C"."C_CURRENT_CDEMO_SK")
  Total Scan IO  Cost  =   4672.958334 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 1920800.000000 (#rows))
                       =   4672.958334
  Total Scan CPU  Cost =   718321325.760000 (scan (Disk))
                         + 96040000.000000 (cpu filter eval) (= 50.000000 (per row) * 1920800.000000 (#rows))
                       =   814361325.760000
  Inner table: CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
  Access Path: TableScan
    NL Join:  Cost: 5069318925.410715  Resp: 5069318925.410715  Degree: 1
      Cost_io: 5046801333.000000  Cost_cpu: 879510668277338
      Resp_io: 5046801333.000000  Resp_cpu: 879510668277338
 ****** Costing Index CD_DEMO_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: CD_DEMO_PK_IDX
    resc_io: 2.000000  resc_cpu: 16453
    ix_sel: 5.2062e-07  ix_sel_with_filters: 5.2062e-07 
    NL Join : Cost: 2166798.106382  Resp: 2166798.106382  Degree: 1
      Cost_io: 2166332.000000  Cost_cpu: 18205566939
      Resp_io: 2166332.000000  Resp_cpu: 18205566939
 ****** Costing Index CD_DEMO_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: CD_DEMO_PK_IDX
    resc_io: 2.000000  resc_cpu: 16453
    ix_sel: 5.2062e-07  ix_sel_with_filters: 5.2062e-07 
    NL Join : Cost: 2166798.106382  Resp: 2166798.106382  Degree: 1
      Cost_io: 2166332.000000  Cost_cpu: 18205566939
      Resp_io: 2166332.000000  Resp_cpu: 18205566939

  Best NL cost: 2166798.106382
          resc: 2166798.106382  resc_io: 2166332.000000  resc_cpu: 18205566939
          resp: 2166798.106382  resp_io: 2166332.000000  resc_cpu: 18205566939
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Join Card:  1080000.000000 = outer (1080000.000000) * inner (1920800.000000) * sel (5.2062e-07)
Join Card - Rounded: 1080000 Computed: 1080000.000000
Grouping column cardinality [C_CURRENT_]    457472
Grouping column cardinality [ CD_GENDER]    2
Grouping column cardinality [CD_MARITAL]    5
Grouping column cardinality [CD_EDUCATI]    7
Grouping column cardinality [CD_PURCHAS]    9500
Grouping column cardinality [CD_CREDIT_]    4
Grouping column cardinality [CD_DEP_COU]    6
Grouping column cardinality [CD_DEP_EMP]    6
Grouping column cardinality [CD_DEP_COL]    6
  Outer table:  CUSTOMER  Alias: C
    resc: 6343.174339  card 1080000.000000  bytes:   deg: 1  resp: 6343.174339
  Inner table:  CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
    resc: 4693.390757  card: 1920800.000000  bytes:   deg: 1  resp: 4693.390757
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 3835 Row size:     29 Total Rows:        1080000
      Initial runs:   2 Merge passes:  1 IO Cost / pass:       2078
      Total IO sort cost: 5913.000000      Total CPU sort cost: 1108751040
      Total Temp space used: 60826000
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 16462 Row size:     70 Total Rows:        1920800
      Initial runs:   2 Merge passes:  1 IO Cost / pass:       8918
      Total IO sort cost: 25380.000000      Total CPU sort cost: 2250842275
      Total Temp space used: 294134000
  SM join: Resc: 42415.578780  Resp: 42415.578780  [multiMatchCost=0.000000]
SM Join
  SM cost: 42415.578780 
     resc: 42415.578780 resc_io: 42300.000000 resc_cpu: 4514371179
     resp: 42415.578780 resp_io: 42300.000000 resp_cpu: 4514371179
  Outer table:  CUSTOMER  Alias: C
    resc: 6343.174339  card 1080000.000000  bytes:   deg: 1  resp: 6343.174339
  Inner table:  CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
    resc: 4693.390757  card: 1920800.000000  bytes:   deg: 1  resp: 4693.390757
    using dmeth: 2  #groups: 1
    Cost per ptn: 7488.025504  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 3824  probefrag: 15476  ppasses: 1
  Hash join: Resc: 18524.590599  Resp: 18524.590599  [multiMatchCost=0.000000]
HA Join
  HA cost: 18524.590599  
     resc: 18524.590599 resc_io: 18479.000000 resc_cpu: 1780715180
     resp: 18524.590599 resp_io: 18479.000000 resp_cpu: 1780715180
GROUP BY sort

GROUP BY/Correlated Subquery Filter adjustment factor: 0.062500
GROUP BY cardinality:  1080000.000000, TABLE cardinality:  1080000.000000
Vector group by not costed because no SYS_OP_XLATE_USE in group by.
kdmoGByPushdownValid: more than one table in group by    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 11768 Row size:     89 Total Rows:        1080000
      Initial runs:   2 Merge passes:  1 IO Cost / pass:       6376
      Total IO sort cost: 18144.000000      Total CPU sort cost: 1304109098
      Total Temp space used: 104096000
Best:: JoinMethod: Hash
       Cost: 36701.978935  Degree: 1  Resp: 36701.978935  Card: 1080000.000000 Bytes: 
***********************
Best so far:  Table#: 0  cost: 6343.174339  card: 1080000.000000  bytes: 18360000.000000
              Table#: 1  cost: 36701.978935  card: 1080000.000000  bytes: 76680000.000000
***********************

*********************************
Number of join permutations tried: 1
*********************************
Enumerating distribution method (advanced)
--- Distribution method for 
join between C[CUSTOMER](serial) and CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS](serial); jm = 1; right side access path = TableScan
---- serial Hash-Join -> NONE

kkoaccsqf: Current query block SEL$DC996EF9 (#8) is serial
kkoaccsqf: correlated subquery query block SEL$2 (#2) in filter               : serial
Final adjusted join cardinality: 1.000000, sq. fil. factor: 1080000.000000
(newjo-save)    [0 1 ]

GROUP BY/Correlated Subquery Filter adjustment factor: 0.062500
GROUP BY cardinality:  1.000000, TABLE cardinality:  1.000000
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     89 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39058824
      Total Temp space used: 0
LORE: Or-Expansion validity checks failed on query block SEL$DC996EF9 (#8) because Cost based OR expansion enabled
Transfer Optimizer annotations for query block SEL$DC996EF9 (#8)
Final cost for query block SEL$DC996EF9 (#8) - All Rows Plan:
  Best join order: 1
  Cost: 36701.978935  Degree: 1  Card: 1.000000  Bytes: 76680000.000000
  Resc: 36701.978935  Resc_io: 36623.000000  Resc_cpu: 3084824278
  Resp: 36701.978935  Resp_io: 36623.000000  Resc_cpu: 3084824278
kkoqbc-subheap (delete addr=0x7f0472305c60, in-use=40472, alloc=49272)
kkoqbc-end:
        :
    call(in-use=888040, alloc=949944), compile(in-use=2104944, alloc=2108408), execution(in-use=37088, alloc=40536)

kkoqbc: finish optimizing query block SEL$DC996EF9 (#8)
kkoqbc: optimizing query block SEL$B154D144 (#1)
        
        :
    call(in-use=885832, alloc=949944), compile(in-use=2111448, alloc=2112552), execution(in-use=37248, alloc=40536)

kkoqbc-subheap (create addr=0x7f0472305c60)
****************
QUERY BLOCK TEXT
****************
SELECT /*query10*/
    cd_gender,
    cd_marital_status,
    cd_education_status,
    COUNT(*) cnt1,
    cd_purchase_estimate,
    COUNT(*) cnt2,
    cd_credit_rating,
    COUNT(*) cnt3,
    cd_dep_count,
    COUNT(*) cnt4,
    cd_dep_employed_count,
    COUNT(*) cnt5,
    cd_dep_college_count,
    COUNT(*) cnt6
FROM
    customer c,
    customer_address ca,
    customer_demographics
WHERE
    -- join predicates
        c.c_current_addr_sk = ca.ca_address_sk
    AND cd_demo_sk = c.c_current_cdemo_sk
    -- filter predicates
    AND ca.ca_county IN (
        'Chouteau County',
        'Dixie County',
        'Harrisonburg city',
        'Lowndes County',
        'Dinwiddie County'
    )
    -- filter predicate (subquery)
    AND EXISTS (
        SELECT
            *
        FROM
            store_sales ss,
            date_dim
        WHERE
            c.c_customer_sk = ss.ss_customer_sk
            AND ss_sold_date_sk = d_date_sk
            AND d_year = 2001
            AND d_moy BETWEEN 1 AND 1 + 3
            AND ( EXISTS (
                SELECT
                    *
                FROM
                    web_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = ws_bill_customer_sk
                    AND ws_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            )
                  OR EXISTS (
                SELECT
                    *
                FROM
                    catalog_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = cs_ship_customer_sk
                    AND cs_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            ) )
    )
GROUP BY
    cd_gender,
    cd_marital_status,
    cd_education_status,
    cd_purchase_estimate,
    cd_credit_rating,
    cd_dep_count,
    cd_dep_employed_count,
    cd_dep_college_count

---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$B154D144 nbfros=2 flg=0
  fro(0): flg=0 objn=74169 hint_alias="CA"@"SEL$1"
  fro(1): flg=1 objn=0 hint_alias="VW_GBF_4"@"SEL$C73B0CC3"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3255 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: CUSTOMER_ADDRESS  Alias: CA
  #Rows: 540000  SSZ: 0  LGR: 0  #Blks:  13174  AvgRowLen:  152.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): CA_ADDRESS_SK(NUMBER)
    AvgLen: 5 NDV: 540000 Nulls: 0 Density: 0.000002 Min: 1.000000 Max: 540000.000000
  Column (#8): CA_COUNTY(VARCHAR2)
    AvgLen: 16 NDV: 1877 Nulls: 0 Density: 0.000471
    Histogram: Hybrid  #Bkts: 254  UncompBkts: 5580  EndPtVals: 254  ActualVal: yes
Index Stats::
  Index: CA_ADDRESS_PK_IDX  Col#: 1
  LVLS: 2  #LB: 1127  #DK: 540000  LB/K: 1.00  DB/K: 1.00  CLUF: 12283.00  NRW: 540000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table: VW_GBF_4  Alias: VW_GBF_4  (NOT ANALYZED)
  #Rows: 0  SSZ: 0  LGR: 0  #Blks:  0  AvgRowLen:  0.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 0
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#8): ITEM_8(CHARACTER)
    AvgLen: 2 NDV: 2 Nulls: 0 Density: 0.249925
    Histogram: Freq  #Bkts: 2  UncompBkts: 1920800  EndPtVals: 2  ActualVal: no 
  Column (#9): ITEM_9(CHARACTER)
    AvgLen: 2 NDV: 5 Nulls: 0 Density: 0.098953
    Histogram: Freq  #Bkts: 5  UncompBkts: 1920800  EndPtVals: 5  ActualVal: yes
  Column (#10): ITEM_10(CHARACTER)
    AvgLen: 21 NDV: 7 Nulls: 0 Density: 0.070771
    Histogram: Freq  #Bkts: 7  UncompBkts: 1920800  EndPtVals: 7  ActualVal: yes
  Column (#11): ITEM_11(NUMBER)
    AvgLen: 4 NDV: 9500 Nulls: 0 Density: 0.000105 Min: 500.000000 Max: 9999.000000
  Column (#12): ITEM_12(CHARACTER)
    AvgLen: 11 NDV: 4 Nulls: 0 Density: 0.250000
  Column (#13): ITEM_13(NUMBER)
    AvgLen: 3 NDV: 6 Nulls: 0 Density: 0.166667 Min: 0.000000 Max: 5.000000
  Column (#14): ITEM_14(NUMBER)
    AvgLen: 3 NDV: 6 Nulls: 0 Density: 0.166667 Min: 0.000000 Max: 5.000000
  Column (#15): ITEM_15(NUMBER)
    AvgLen: 3 NDV: 6 Nulls: 0 Density: 0.166667 Min: 0.000000 Max: 5.000000
  Column (#1): ITEM_1(NUMBER)
    AvgLen: 5 NDV: 457472 Nulls: 0 Density: 0.000002 Min: 1.000000 Max: 539997.000000
try to generate single-table filter predicates from ORs for query block SEL$B154D144 (#1)
finally: "VW_GBF_4"."ITEM_1"="CA"."CA_ADDRESS_SK" AND ("CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County')

=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$B154D144 (#1)
Applicable DS directives:
   dirid = 18439699102505563871, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {EC(74169)[8]}
Checking valid directives for the query block
  SPD: Return code in qosdDSDirSetup: NODIR, estType = GROUP_BY
  SPD: Return code in qosdDSDirSetup: NODIR, estType = QUERY_BLOCK
Return code in qosdSetupDirCtx4QB: EXISTS
=====================================
SPD: END context at query block level
=====================================
Access path analysis for VW_GBF_4

Access path analysis for CUSTOMER_ADDRESS
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for CUSTOMER_ADDRESS[CA] 
  SPD: Directive valid: dirid = 18439699102505563871, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {EC(74169)[8]}
  SPD: Return code in qosdDSDirSetup: EXISTS, estType = TABLE

 kkecdn: Single Table Predicate:"CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County'
  Using density: 4.7103e-04 of col #8 as selectivity of pred having unreasonably low value
  Using density: 4.7103e-04 of col #8 as selectivity of pred having unreasonably low value
  Using density: 4.7103e-04 of col #8 as selectivity of pred having unreasonably low value
  Using density: 4.7103e-04 of col #8 as selectivity of pred having unreasonably low value
  Estimated selectivity: 5.3763e-04 , endpoint value predicate, col: #8 
  Table: CUSTOMER_ADDRESS  Alias: CA
    Card: Original: 540000.000000  Rounded: 1308  Computed: 1307.756551  Non Adjusted: 1307.756551
  Scan IO  Cost (Disk) =   3570.000000
  Scan CPU Cost (Disk) =   250417850.560000
  Cost of predicates:
    io = 0.000000, cpu = 249.764594, sel = 0.002422 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Chouteau County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Dinwiddie County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Dixie County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Harrisonburg city')
      io = NOCOST, cpu = 50.000000, sel = 0.000538 flag = 2048  ("CA"."CA_COUNTY"='Lowndes County')
  Total Scan IO  Cost  =   3570.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 540000.000000 (#rows))
                       =   3570.000000
  Total Scan CPU  Cost =   250417850.560000 (scan (Disk))
                         + 134872880.645405 (cpu filter eval) (= 249.764594 (per row) * 540000.000000 (#rows))
                       =   385290731.205405
  Access Path: TableScan
    Cost:  3579.864371  Resp: 3579.864371  Degree: 0
      Cost_io: 3570.000000  Cost_cpu: 385290731
      Resp_io: 3570.000000  Resp_cpu: 385290731
  ****** trying bitmap/domain indexes ******
 ****** Costing Index CA_ADDRESS_PK_IDX
  Access Path: index (FullScan)
    Index: CA_ADDRESS_PK_IDX
    resc_io: 1129.000000  resc_cpu: 116040106
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1131.970906  Resp: 1131.970906  Degree: 0
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: TableScan
         Cost: 3579.864371  Degree: 1  Resp: 3579.864371  Card: 1307.756551  Bytes: 0.000000

Grouping column cardinality [    ITEM_8]    1
Grouping column cardinality [    ITEM_9]    1
Grouping column cardinality [   ITEM_10]    1
Grouping column cardinality [   ITEM_11]    1
Grouping column cardinality [   ITEM_12]    1
Grouping column cardinality [   ITEM_13]    1
Grouping column cardinality [   ITEM_14]    1
Grouping column cardinality [   ITEM_15]    1
***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE:  Bypassed; QB is not duplicate insignificant SEL$B154D144 (#1)
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  VW_GBF_4[VW_GBF_4]#0  CUSTOMER_ADDRESS[CA]#1

***************
Now joining: CUSTOMER_ADDRESS[CA]#1
***************
NL Join
  Outer table: Card: 1.000000  Cost: 5.000000  Resp: 0.000000  Degree: 0  Bytes: 
Access path analysis for CUSTOMER_ADDRESS
  Scan IO  Cost (Disk) =   3570.000000
  Scan CPU Cost (Disk) =   250417850.560000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000765 flag = 2048  ("VW_GBF_4"."ITEM_1"="CA"."CA_ADDRESS_SK")
    io = 0.000000, cpu = 249.764594, sel = 0.002422 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Chouteau County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Dinwiddie County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Dixie County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Harrisonburg city')
      io = NOCOST, cpu = 50.000000, sel = 0.000538 flag = 2048  ("CA"."CA_COUNTY"='Lowndes County')
  Total Scan IO  Cost  =   3570.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 540000.000000 (#rows))
                       =   3570.000000
  Total Scan CPU  Cost =   250417850.560000 (scan (Disk))
                         + 27103113.823123 (cpu filter eval) (= 50.190952 (per row) * 540000.000000 (#rows))
                       =   277520964.383123
  Inner table: CUSTOMER_ADDRESS  Alias: CA
  Access Path: TableScan
    NL Join:  Cost: 3577.105205  Resp: 3577.105205  Degree: 1
      Cost_io: 3570.000000  Cost_cpu: 277520964
      Resp_io: 3570.000000  Resp_cpu: 277520964
 ****** Costing Index CA_ADDRESS_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: CA_ADDRESS_PK_IDX
    resc_io: 2.000000  resc_cpu: 16683
    ix_sel: 1.8519e-06  ix_sel_with_filters: 1.8519e-06 
    NL Join : Cost: 2.000427  Resp: 2.000427  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 16683
      Resp_io: 2.000000  Resp_cpu: 16683
 ****** Costing Index CA_ADDRESS_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: CA_ADDRESS_PK_IDX
    resc_io: 2.000000  resc_cpu: 16683
    ix_sel: 1.8519e-06  ix_sel_with_filters: 1.8519e-06 
    NL Join : Cost: 2.000427  Resp: 2.000427  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 16683
      Resp_io: 2.000000  Resp_cpu: 16683
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 2.000427
          resc: 2.000427  resc_io: 2.000000  resc_cpu: 16683
          resp: 2.000427  resp_io: 2.000000  resc_cpu: 16683
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Join Card:  0.999814 = outer (1.000000) * inner (1307.756551) * sel (7.6453e-04)
Join Card - Rounded: 1 Computed: 0.999814
Grouping column cardinality [    ITEM_8]    1
Grouping column cardinality [    ITEM_9]    1
Grouping column cardinality [   ITEM_10]    1
Grouping column cardinality [   ITEM_11]    1
Grouping column cardinality [   ITEM_12]    1
Grouping column cardinality [   ITEM_13]    1
Grouping column cardinality [   ITEM_14]    1
Grouping column cardinality [   ITEM_15]    1
  Outer table:  VW_GBF_4  Alias: VW_GBF_4
    resc: 0.000000  card 1.000000  bytes:   deg: 0  resp: 0.000000
  Inner table:  CUSTOMER_ADDRESS  Alias: CA
    resc: 3579.864371  card: 1307.756551  bytes:   deg: 1  resp: 3579.864371
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     156 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39058824
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 6 Row size:     34 Total Rows:           1308
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39668949
      Total Temp space used: 0
  SM join: Resc: 3581.879992  Resp: 3581.879992  [multiMatchCost=0.000000]
SM Join
  SM cost: 3581.879992 
     resc: 3581.879992 resc_io: 3570.000000 resc_cpu: 464018503
     resp: 3581.879992 resp_io: 3570.000000 resp_cpu: 464018503
  Outer table:  VW_GBF_4  Alias: VW_GBF_4
    resc: 0.000000  card 1.000000  bytes:   deg: 0  resp: 0.000000
  Inner table:  CUSTOMER_ADDRESS  Alias: CA
    resc: 3579.864371  card: 1307.756551  bytes:   deg: 1  resp: 3579.864371
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.018714  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 1  probefrag: 6  ppasses: 1
  Hash join: Resc: 3579.883085  Resp: 3579.883085  [multiMatchCost=0.000000]
HA Join
  HA cost: 3579.883085  
     resc: 3579.883085 resc_io: 3570.000000 resc_cpu: 386021681
     resp: 3579.883085 resp_io: 3570.000000 resp_cpu: 386021681
GROUP BY sort
GROUP BY/Correlated Subquery Filter adjustment factor: 0.088388
GROUP BY cardinality:  1.000000, TABLE cardinality:  1.000000
Vector group by not costed because no SYS_OP_XLATE_USE in group by.
kdmoGByPushdownValid: more than one table in group by    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     179 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39058824
      Total Temp space used: 0
Best:: JoinMethod: NestedLoop
       Cost: 3.000427  Degree: 1  Resp: 3.000427  Card: 0.999814 Bytes: 
***********************
Best so far:  Table#: 0  cost: 5.000000  card: 1.000000  bytes: 132.000000
              Table#: 1  cost: 3.000427  card: 0.999814  bytes: 153.000000
***********************

*********************************
Number of join permutations tried: 1
*********************************
Enumerating distribution method (advanced)
--- Distribution method for 
join between VW_GBF_4[VW_GBF_4](serial) and CA[CUSTOMER_ADDRESS](serial); jm = 14; right side access path = IndexUnique
kkopqIsSerialJoin: serial NLJ: both inputs serial
---- serial NL-Join -> SERIAL

(newjo-save)    [1 0 ]
GROUP BY/Correlated Subquery Filter adjustment factor: 0.088388
GROUP BY cardinality:  1.000000, TABLE cardinality:  1.000000
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     179 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39058824
      Total Temp space used: 0
LORE: Or-Expansion validity checks failed on query block SEL$B154D144 (#1) because Cost based OR expansion enabled
Transfer Optimizer annotations for query block SEL$B154D144 (#1)
Final cost for query block SEL$B154D144 (#1) - All Rows Plan:
  Best join order: 1
  Cost: 3.000427  Degree: 1  Card: 1.000000  Bytes: 153.000000
  Resc: 3.000427  Resc_io: 2.000000  Resc_cpu: 39075506
  Resp: 3.000427  Resp_io: 2.000000  Resc_cpu: 39075506
kkoqbc-subheap (delete addr=0x7f0472305c60, in-use=68768, alloc=76000)
kkoqbc-end:
        :
    call(in-use=933928, alloc=1025816), compile(in-use=2134792, alloc=2138704), execution(in-use=37448, alloc=40536)

kkoqbc: finish optimizing query block SEL$B154D144 (#1)
First K Rows: K = 1.00, N = 120.00
First K Rows: K = 1.00, N = 69.00
First K Rows: K = 1.00, N = 37.00
First K Rows: Setup end
***********************
CBQT: Looking for cost annotations for query block SEL$3, key = SEL$3_00010000_0
CBQT: Replaced cost annotations in query block SEL$3.
CBQT: Looking for cost annotations for query block SEL$4, key = SEL$4_00010000_0
CBQT: Replaced cost annotations in query block SEL$4.
CBQT: Looking for cost annotations for query block SEL$2, key = SEL$2_00010000_0
CBQT: Replaced cost annotations in query block SEL$2.
CBQT: Looking for cost annotations for query block SEL$DC996EF9, key = SEL$DC996EF9_00008040_2
CBQT: Could not find stored cost annotations.
kkoqbc: optimizing query block SEL$3 (#4)
        
        :
    call(in-use=931704, alloc=1025816), compile(in-use=2135808, alloc=2138704), execution(in-use=37448, alloc=40536)

kkoqbc-end:
        :
    call(in-use=931704, alloc=1025816), compile(in-use=2135808, alloc=2138704), execution(in-use=37448, alloc=40536)

kkoqbc: finish optimizing query block SEL$3 (#4)
kkoqbc: optimizing query block SEL$4 (#3)
        
        :
    call(in-use=931704, alloc=1025816), compile(in-use=2135904, alloc=2138704), execution(in-use=37448, alloc=40536)

kkoqbc-end:
        :
    call(in-use=931704, alloc=1025816), compile(in-use=2135904, alloc=2138704), execution(in-use=37448, alloc=40536)

kkoqbc: finish optimizing query block SEL$4 (#3)
kkoqbc: optimizing query block SEL$2 (#2)
        
        :
    call(in-use=931704, alloc=1025816), compile(in-use=2136000, alloc=2138704), execution(in-use=37448, alloc=40536)

kkoqbc-end:
        :
    call(in-use=931704, alloc=1025816), compile(in-use=2136000, alloc=2138704), execution(in-use=37448, alloc=40536)

kkoqbc: finish optimizing query block SEL$2 (#2)
kkoqbc: optimizing query block SEL$DC996EF9 (#8)
        
        :
    call(in-use=931704, alloc=1025816), compile(in-use=2136000, alloc=2138704), execution(in-use=37448, alloc=40536)

kkoqbc-subheap (create addr=0x7f0472305c60)
****************
QUERY BLOCK TEXT
****************
Not available.
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$DC996EF9 nbfros=2 flg=0
  fro(0): flg=0 objn=74168 hint_alias="C"@"SEL$1"
  fro(1): flg=0 objn=74170 hint_alias="CUSTOMER_DEMOGRAPHICS"@"SEL$1"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3255 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: CUSTOMER  Alias:  C
  #Rows: 1080000  SSZ: 0  LGR: 0  #Blks:  23374  AvgRowLen:  138.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#5): C_CURRENT_ADDR_SK(NUMBER)
    AvgLen: 5 NDV: 457472 Nulls: 0 Density: 0.000002 Min: 1.000000 Max: 539997.000000
  Column (#1): C_CUSTOMER_SK(NUMBER)
    AvgLen: 6 NDV: 1080000 Nulls: 0 Density: 0.000001 Min: 1.000000 Max: 1080000.000000
  Column (#3): C_CURRENT_CDEMO_SK(NUMBER)
    AvgLen: 6 NDV: 772544 Nulls: 0 Density: 0.000001 Min: 18.000000 Max: 1920799.000000
Index Stats::
  Index: CUSTOMER_PK_IDX  Col#: 1
  LVLS: 2  #LB: 2266  #DK: 1080000  LB/K: 1.00  DB/K: 1.00  CLUF: 75684.00  NRW: 1080000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table: CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
  #Rows: 1920800  SSZ: 0  LGR: 0  #Blks:  17254  AvgRowLen:  54.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#9): CD_DEP_COLLEGE_COUNT(NUMBER)
    AvgLen: 3 NDV: 6 Nulls: 0 Density: 0.166667 Min: 0.000000 Max: 5.000000
  Column (#8): CD_DEP_EMPLOYED_COUNT(NUMBER)
    AvgLen: 3 NDV: 6 Nulls: 0 Density: 0.166667 Min: 0.000000 Max: 5.000000
  Column (#7): CD_DEP_COUNT(NUMBER)
    AvgLen: 3 NDV: 6 Nulls: 0 Density: 0.166667 Min: 0.000000 Max: 5.000000
  Column (#6): CD_CREDIT_RATING(CHARACTER)
    AvgLen: 11 NDV: 4 Nulls: 0 Density: 0.250000
  Column (#5): CD_PURCHASE_ESTIMATE(NUMBER)
    AvgLen: 4 NDV: 9500 Nulls: 0 Density: 0.000105 Min: 500.000000 Max: 9999.000000
  Column (#4): CD_EDUCATION_STATUS(CHARACTER)
    AvgLen: 21 NDV: 7 Nulls: 0 Density: 0.070771
    Histogram: Freq  #Bkts: 7  UncompBkts: 1920800  EndPtVals: 7  ActualVal: yes
  Column (#3): CD_MARITAL_STATUS(CHARACTER)
    AvgLen: 2 NDV: 5 Nulls: 0 Density: 0.098953
    Histogram: Freq  #Bkts: 5  UncompBkts: 1920800  EndPtVals: 5  ActualVal: yes
  Column (#2): CD_GENDER(CHARACTER)
    AvgLen: 2 NDV: 2 Nulls: 0 Density: 0.249925
    Histogram: Freq  #Bkts: 2  UncompBkts: 1920800  EndPtVals: 2  ActualVal: no 
  Column (#1): CD_DEMO_SK(NUMBER)
    AvgLen: 6 NDV: 1920800 Nulls: 0 Density: 0.000001 Min: 1.000000 Max: 1920800.000000
Index Stats::
  Index: CD_DEMO_PK_IDX  Col#: 1
  LVLS: 2  #LB: 4138  #DK: 1920800  LB/K: 1.00  DB/K: 1.00  CLUF: 795806.00  NRW: 1920800.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
try to generate single-table filter predicates from ORs for query block SEL$DC996EF9 (#8)
finally: "CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK"="C"."C_CURRENT_CDEMO_SK" AND  EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM")

=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$DC996EF9 (#8)
Applicable DS directives:
   dirid = 7754152966831092939, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {EC(74170)[3, 4]}
   dirid = 9316027922818115912, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74168)[3, 5]}
Checking valid directives for the query block
  SPD: Return code in qosdDSDirSetup: NODIR, estType = GROUP_BY
  SPD: Return code in qosdDSDirSetup: NODIR, estType = QUERY_BLOCK
Return code in qosdSetupDirCtx4QB: EXISTS
=====================================
SPD: END context at query block level
=====================================
Access path analysis for CUSTOMER_DEMOGRAPHICS
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS] 
  SPD: Return code in qosdDSDirSetup: NODIR, estType = TABLE
  Table: CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
    Card: Original: 1920800.000000  Rounded: 1920800  Computed: 1920800.000000  Non Adjusted: 1920800.000000
  Scan IO  Cost (Disk) =   4675.000000
  Scan CPU Cost (Disk) =   718321325.760000
  Total Scan IO  Cost  =   4675.000000 (scan (Disk))
                       =   4675.000000
  Total Scan CPU  Cost =   718321325.760000 (scan (Disk))
                       =   718321325.760000
  Access Path: TableScan
    Cost:  4693.390757  Resp: 4693.390757  Degree: 0
      Cost_io: 4675.000000  Cost_cpu: 718321326
      Resp_io: 4675.000000  Resp_cpu: 718321326
  Best:: AccessPath: TableScan
         Cost: 4693.390757  Degree: 1  Resp: 4693.390757  Card: 1920800.000000  Bytes: 0.000000

Access path analysis for CUSTOMER
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for CUSTOMER[C] 
  SPD: Return code in qosdDSDirSetup: NODIR, estType = TABLE

 kkecdn: Single Table Predicate: EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM")
  Table: CUSTOMER  Alias: C
    Card: Original: 1080000.000000  Rounded: 1080000  Computed: 1080000.000000  Non Adjusted: 1080000.000000
  Scan IO  Cost (Disk) =   6332.000000
  Scan CPU Cost (Disk) =   414856538.560000
  Cost of predicates:
    io = NOCOST, cpu = 20.000000, sel = 0.050000 flag = 2562  ( EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM"))
  Total Scan IO  Cost  =   6332.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 1080000.000000 (#rows))
                       =   6332.000000
  Total Scan CPU  Cost =   414856538.560000 (scan (Disk))
                         + 21600000.000000 (cpu filter eval) (= 20.000000 (per row) * 1080000.000000 (#rows))
                       =   436456538.560000
  Access Path: TableScan
    Cost:  6343.174339  Resp: 6343.174339  Degree: 0
      Cost_io: 6332.000000  Cost_cpu: 436456539
      Resp_io: 6332.000000  Resp_cpu: 436456539
  Best:: AccessPath: TableScan
         Cost: 6343.174339  Degree: 1  Resp: 6343.174339  Card: 1080000.000000  Bytes: 0.000000

Grouping column cardinality [C_CURRENT_]    457472
Grouping column cardinality [ CD_GENDER]    2
Grouping column cardinality [CD_MARITAL]    5
Grouping column cardinality [CD_EDUCATI]    7
Grouping column cardinality [CD_PURCHAS]    9500
Grouping column cardinality [CD_CREDIT_]    4
Grouping column cardinality [CD_DEP_COU]    6
Grouping column cardinality [CD_DEP_EMP]    6
Grouping column cardinality [CD_DEP_COL]    6
***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE:  Bypassed; QB is not duplicate insignificant SEL$DC996EF9 (#8)
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  CUSTOMER[C]#0  CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS]#1

***************
Now joining: CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS]#1
***************
NL Join
  Outer table: Card: 1080000.000000  Cost: 6343.174339  Resp: 6343.174339  Degree: 1  Bytes: 
Access path analysis for CUSTOMER_DEMOGRAPHICS
  Scan IO  Cost (Disk) =   4672.958334
  Scan CPU Cost (Disk) =   718321325.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000001 flag = 2048  ("CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK"="C"."C_CURRENT_CDEMO_SK")
  Total Scan IO  Cost  =   4672.958334 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 1920800.000000 (#rows))
                       =   4672.958334
  Total Scan CPU  Cost =   718321325.760000 (scan (Disk))
                         + 96040000.000000 (cpu filter eval) (= 50.000000 (per row) * 1920800.000000 (#rows))
                       =   814361325.760000
  Inner table: CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
  Access Path: TableScan
    NL Join:  Cost: 5069318925.410715  Resp: 5069318925.410715  Degree: 1
      Cost_io: 5046801333.000000  Cost_cpu: 879510668277338
      Resp_io: 5046801333.000000  Resp_cpu: 879510668277338
 ****** Costing Index CD_DEMO_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: CD_DEMO_PK_IDX
    resc_io: 2.000000  resc_cpu: 16453
    ix_sel: 5.2062e-07  ix_sel_with_filters: 5.2062e-07 
    NL Join : Cost: 2166798.106382  Resp: 2166798.106382  Degree: 1
      Cost_io: 2166332.000000  Cost_cpu: 18205566939
      Resp_io: 2166332.000000  Resp_cpu: 18205566939
 ****** Costing Index CD_DEMO_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: CD_DEMO_PK_IDX
    resc_io: 2.000000  resc_cpu: 16453
    ix_sel: 5.2062e-07  ix_sel_with_filters: 5.2062e-07 
    NL Join : Cost: 2166798.106382  Resp: 2166798.106382  Degree: 1
      Cost_io: 2166332.000000  Cost_cpu: 18205566939
      Resp_io: 2166332.000000  Resp_cpu: 18205566939

  Best NL cost: 2166798.106382
          resc: 2166798.106382  resc_io: 2166332.000000  resc_cpu: 18205566939
          resp: 2166798.106382  resp_io: 2166332.000000  resc_cpu: 18205566939
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Join Card:  1080000.000000 = outer (1080000.000000) * inner (1920800.000000) * sel (5.2062e-07)
Join Card - Rounded: 1080000 Computed: 1080000.000000
Grouping column cardinality [C_CURRENT_]    457472
Grouping column cardinality [ CD_GENDER]    2
Grouping column cardinality [CD_MARITAL]    5
Grouping column cardinality [CD_EDUCATI]    7
Grouping column cardinality [CD_PURCHAS]    9500
Grouping column cardinality [CD_CREDIT_]    4
Grouping column cardinality [CD_DEP_COU]    6
Grouping column cardinality [CD_DEP_EMP]    6
Grouping column cardinality [CD_DEP_COL]    6
  Outer table:  CUSTOMER  Alias: C
    resc: 6343.174339  card 1080000.000000  bytes:   deg: 1  resp: 6343.174339
  Inner table:  CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
    resc: 4693.390757  card: 1920800.000000  bytes:   deg: 1  resp: 4693.390757
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 3835 Row size:     29 Total Rows:        1080000
      Initial runs:   2 Merge passes:  1 IO Cost / pass:       2078
      Total IO sort cost: 5913.000000      Total CPU sort cost: 1108751040
      Total Temp space used: 60826000
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 16462 Row size:     70 Total Rows:        1920800
      Initial runs:   2 Merge passes:  1 IO Cost / pass:       8918
      Total IO sort cost: 25380.000000      Total CPU sort cost: 2250842275
      Total Temp space used: 294134000
  SM join: Resc: 42415.578780  Resp: 42415.578780  [multiMatchCost=0.000000]
SM Join
  SM cost: 42415.578780 
     resc: 42415.578780 resc_io: 42300.000000 resc_cpu: 4514371179
     resp: 42415.578780 resp_io: 42300.000000 resp_cpu: 4514371179
  Outer table:  CUSTOMER  Alias: C
    resc: 6343.174339  card 1080000.000000  bytes:   deg: 1  resp: 6343.174339
  Inner table:  CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
    resc: 4693.390757  card: 1920800.000000  bytes:   deg: 1  resp: 4693.390757
    using dmeth: 2  #groups: 1
    Cost per ptn: 7488.025504  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 3824  probefrag: 15476  ppasses: 1
  Hash join: Resc: 18524.590599  Resp: 18524.590599  [multiMatchCost=0.000000]
HA Join
  HA cost: 18524.590599  
     resc: 18524.590599 resc_io: 18479.000000 resc_cpu: 1780715180
     resp: 18524.590599 resp_io: 18479.000000 resp_cpu: 1780715180
GROUP BY sort

GROUP BY/Correlated Subquery Filter adjustment factor: 0.062500
GROUP BY cardinality:  1080000.000000, TABLE cardinality:  1080000.000000
Vector group by not costed because no SYS_OP_XLATE_USE in group by.
kdmoGByPushdownValid: more than one table in group by    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 11768 Row size:     89 Total Rows:        1080000
      Initial runs:   2 Merge passes:  1 IO Cost / pass:       6376
      Total IO sort cost: 18144.000000      Total CPU sort cost: 1304109098
      Total Temp space used: 104096000
Best:: JoinMethod: Hash
       Cost: 36701.978935  Degree: 1  Resp: 36701.978935  Card: 1080000.000000 Bytes: 
***********************
Best so far:  Table#: 0  cost: 6343.174339  card: 1080000.000000  bytes: 18360000.000000
              Table#: 1  cost: 36701.978935  card: 1080000.000000  bytes: 76680000.000000
***********************
Join order[2]:  CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS]#1  CUSTOMER[C]#0

***************
Now joining: CUSTOMER[C]#0
***************
NL Join
  Outer table: Card: 1920800.000000  Cost: 4693.390757  Resp: 4693.390757  Degree: 1  Bytes: 
Access path analysis for CUSTOMER
  Scan IO  Cost (Disk) =   6330.458334
  Scan CPU Cost (Disk) =   414856538.560000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000001 flag = 2064  ("CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK"="C"."C_CURRENT_CDEMO_SK")
    io = NOCOST, cpu = 20.000000, sel = 0.050000 flag = 2562  ( EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM"))
  Total Scan IO  Cost  =   6330.458334 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 1080000.000000 (#rows))
                       =   6330.458334
  Total Scan CPU  Cost =   414856538.560000 (scan (Disk))
                         + 24300000.000000 (cpu filter eval) (= 22.500000 (per row) * 1080000.000000 (#rows))
                       =   439156538.560000
  Inner table: CUSTOMER  Alias: C
  Access Path: TableScan
    NL Join:  Cost: 12181145510.106905  Resp: 12181145510.106905  Degree: 1
      Cost_io: 12159549043.000000  Cost_cpu: 843532597587374
      Resp_io: 12159549043.000000  Resp_cpu: 843532597587374

  Best NL cost: 12181145510.106905
          resc: 12181145510.106905  resc_io: 12159549043.000000  resc_cpu: 843532597587374
          resp: 12181145510.106905  resp_io: 12159549043.000000  resc_cpu: 843532597587374
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Join Card:  1080000.000000 = outer (1920800.000000) * inner (1080000.000000) * sel (5.2062e-07)
Join Card - Rounded: 1080000 Computed: 1080000.000000
Grouping column cardinality [C_CURRENT_]    457472
Grouping column cardinality [ CD_GENDER]    2
Grouping column cardinality [CD_MARITAL]    5
Grouping column cardinality [CD_EDUCATI]    7
Grouping column cardinality [CD_PURCHAS]    9500
Grouping column cardinality [CD_CREDIT_]    4
Grouping column cardinality [CD_DEP_COU]    6
Grouping column cardinality [CD_DEP_EMP]    6
Grouping column cardinality [CD_DEP_COL]    6
  Outer table:  CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
    resc: 4693.390757  card 1920800.000000  bytes:   deg: 1  resp: 4693.390757
  Inner table:  CUSTOMER  Alias: C
    resc: 6343.174339  card: 1080000.000000  bytes:   deg: 1  resp: 6343.174339
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 16462 Row size:     70 Total Rows:        1920800
      Initial runs:   2 Merge passes:  1 IO Cost / pass:       8918
      Total IO sort cost: 25380.000000      Total CPU sort cost: 2250842275
      Total Temp space used: 294134000
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 3835 Row size:     29 Total Rows:        1080000
      Initial runs:   2 Merge passes:  1 IO Cost / pass:       2078
      Total IO sort cost: 5913.000000      Total CPU sort cost: 1108751040
      Total Temp space used: 60826000
  SM join: Resc: 42415.578780  Resp: 42415.578780  [multiMatchCost=0.000000]
SM Join
  SM cost: 42415.578780 
     resc: 42415.578780 resc_io: 42300.000000 resc_cpu: 4514371179
     resp: 42415.578780 resp_io: 42300.000000 resp_cpu: 4514371179
SM Join (with index on outer)
 ****** Costing Index CD_DEMO_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (FullScan)
    Index: CD_DEMO_PK_IDX
    resc_io: 799946.000000  resc_cpu: 6772415442
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 800119.390154  Resp: 800119.390154  Degree: 1
  Outer table:  CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
    resc: 800119.390154  card 1920800.000000  bytes:   deg: 1  resp: 800119.390154
  Inner table:  CUSTOMER  Alias: C
    resc: 6343.174339  card: 1080000.000000  bytes:   deg: 1  resp: 6343.174339
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 3835 Row size:     29 Total Rows:        1080000
      Initial runs:   2 Merge passes:  1 IO Cost / pass:       2078
      Total IO sort cost: 5913.000000      Total CPU sort cost: 1108751040
      Total Temp space used: 60826000
  SM join: Resc: 812403.951192  Resp: 812403.951192  [multiMatchCost=0.000000]
  Outer table:  CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
    resc: 4693.390757  card 1920800.000000  bytes:   deg: 1  resp: 4693.390757
  Inner table:  CUSTOMER  Alias: C
    resc: 6343.174339  card: 1080000.000000  bytes:   deg: 1  resp: 6343.174339
    using dmeth: 2  #groups: 1
    Cost per ptn: 7486.949178  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 15476  probefrag: 3824  ppasses: 1
  Hash join: Resc: 18523.514274  Resp: 18523.514274  [multiMatchCost=0.000000]
  Outer table:  CUSTOMER  Alias: C
    resc: 6343.174339  card 1080000.000000  bytes:   deg: 1  resp: 6343.174339
  Inner table:  CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
    resc: 4693.390757  card: 1920800.000000  bytes:   deg: 1  resp: 4693.390757
    using dmeth: 2  #groups: 1
    Cost per ptn: 7488.025504  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 3824  probefrag: 15476  ppasses: 1
  Hash join: Resc: 18524.590599  Resp: 18524.590599  [multiMatchCost=0.000000]
HA Join
  HA cost: 18524.590599 swapped 
     resc: 18524.590599 resc_io: 18479.000000 resc_cpu: 1780715180
     resp: 18524.590599 resp_io: 18479.000000 resp_cpu: 1780715180
GROUP BY sort

GROUP BY/Correlated Subquery Filter adjustment factor: 0.062500
GROUP BY cardinality:  1080000.000000, TABLE cardinality:  1080000.000000
Vector group by not costed because no SYS_OP_XLATE_USE in group by.
kdmoGByPushdownValid: more than one table in group by    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 11768 Row size:     89 Total Rows:        1080000
      Initial runs:   2 Merge passes:  1 IO Cost / pass:       6376
      Total IO sort cost: 18144.000000      Total CPU sort cost: 1304109098
      Total Temp space used: 91227000
Join order aborted: cost > best plan cost
***********************
(newjo-stop-1) k:0, spcnt:0, perm:2, maxperm:2000

*********************************
Number of join permutations tried: 2
*********************************
Enumerating distribution method (advanced)
--- Distribution method for 
join between C[CUSTOMER](serial) and CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS](serial); jm = 1; right side access path = TableScan
---- serial Hash-Join -> NONE

kkoaccsqf: Current query block SEL$DC996EF9 (#8) is serial
kkoaccsqf: correlated subquery query block SEL$2 (#2) in filter               : serial
Final adjusted join cardinality: 1.000000, sq. fil. factor: 1080000.000000
(newjo-save)    [0 1 ]

GROUP BY/Correlated Subquery Filter adjustment factor: 0.062500
GROUP BY cardinality:  1.000000, TABLE cardinality:  1.000000
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     89 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39058824
      Total Temp space used: 0
LORE: Or-Expansion validity checks failed on query block SEL$DC996EF9 (#8) because Cost based OR expansion enabled
Transfer Optimizer annotations for query block SEL$DC996EF9 (#8)
Final cost for query block SEL$DC996EF9 (#8) - All Rows Plan:
  Best join order: 1
  Cost: 13957878.095190  Degree: 1  Card: 1.000000  Bytes: 76680071.000000
  Resc: 13957878.095190  Resc_io: 13954913.285714  Resc_cpu: 115801970126
  Resp: 13957878.095190  Resp_io: 13954913.285714  Resc_cpu: 115801970126
kkoqbc-subheap (delete addr=0x7f0472305c60, in-use=40536, alloc=49272)
kkoqbc-end:
        :
    call(in-use=939640, alloc=1015416), compile(in-use=2137624, alloc=2138704), execution(in-use=37448, alloc=40536)

kkoqbc: finish optimizing query block SEL$DC996EF9 (#8)
kkoqbc: optimizing query block SEL$B154D144 (#1)
        
        :
    call(in-use=939640, alloc=1015416), compile(in-use=2137624, alloc=2138704), execution(in-use=37448, alloc=40536)

kkoqbc-subheap (create addr=0x7f0472305c60)
****************
QUERY BLOCK TEXT
****************
SELECT /*query10*/
    cd_gender,
    cd_marital_status,
    cd_education_status,
    COUNT(*) cnt1,
    cd_purchase_estimate,
    COUNT(*) cnt2,
    cd_credit_rating,
    COUNT(*) cnt3,
    cd_dep_count,
    COUNT(*) cnt4,
    cd_dep_employed_count,
    COUNT(*) cnt5,
    cd_dep_college_count,
    COUNT(*) cnt6
FROM
    customer c,
    customer_address ca,
    customer_demographics
WHERE
    -- join predicates
        c.c_current_addr_sk = ca.ca_address_sk
    AND cd_demo_sk = c.c_current_cdemo_sk
    -- filter predicates
    AND ca.ca_county IN (
        'Chouteau County',
        'Dixie County',
        'Harrisonburg city',
        'Lowndes County',
        'Dinwiddie County'
    )
    -- filter predicate (subquery)
    AND EXISTS (
        SELECT
            *
        FROM
            store_sales ss,
            date_dim
        WHERE
            c.c_customer_sk = ss.ss_customer_sk
            AND ss_sold_date_sk = d_date_sk
            AND d_year = 2001
            AND d_moy BETWEEN 1 AND 1 + 3
            AND ( EXISTS (
                SELECT
                    *
                FROM
                    web_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = ws_bill_customer_sk
                    AND ws_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            )
                  OR EXISTS (
                SELECT
                    *
                FROM
                    catalog_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = cs_ship_customer_sk
                    AND cs_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            ) )
    )
GROUP BY
    cd_gender,
    cd_marital_status,
    cd_education_status,
    cd_purchase_estimate,
    cd_credit_rating,
    cd_dep_count,
    cd_dep_employed_count,
    cd_dep_college_count

---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$B154D144 nbfros=2 flg=0
  fro(0): flg=0 objn=74169 hint_alias="CA"@"SEL$1"
  fro(1): flg=1 objn=0 hint_alias="VW_GBF_4"@"SEL$C73B0CC3"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3255 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: CUSTOMER_ADDRESS  Alias: CA
  #Rows: 540000  SSZ: 0  LGR: 0  #Blks:  13174  AvgRowLen:  152.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): CA_ADDRESS_SK(NUMBER)
    AvgLen: 5 NDV: 540000 Nulls: 0 Density: 0.000002 Min: 1.000000 Max: 540000.000000
  Column (#8): CA_COUNTY(VARCHAR2)
    AvgLen: 16 NDV: 1877 Nulls: 0 Density: 0.000471
    Histogram: Hybrid  #Bkts: 254  UncompBkts: 5580  EndPtVals: 254  ActualVal: yes
Index Stats::
  Index: CA_ADDRESS_PK_IDX  Col#: 1
  LVLS: 2  #LB: 1127  #DK: 540000  LB/K: 1.00  DB/K: 1.00  CLUF: 12283.00  NRW: 540000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table: VW_GBF_4  Alias: VW_GBF_4  (NOT ANALYZED)
  #Rows: 0  SSZ: 0  LGR: 0  #Blks:  0  AvgRowLen:  0.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 0
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#8): ITEM_8(CHARACTER)
    AvgLen: 2 NDV: 2 Nulls: 0 Density: 0.249925
    Histogram: Freq  #Bkts: 2  UncompBkts: 1920800  EndPtVals: 2  ActualVal: no 
  Column (#9): ITEM_9(CHARACTER)
    AvgLen: 2 NDV: 5 Nulls: 0 Density: 0.098953
    Histogram: Freq  #Bkts: 5  UncompBkts: 1920800  EndPtVals: 5  ActualVal: yes
  Column (#10): ITEM_10(CHARACTER)
    AvgLen: 21 NDV: 7 Nulls: 0 Density: 0.070771
    Histogram: Freq  #Bkts: 7  UncompBkts: 1920800  EndPtVals: 7  ActualVal: yes
  Column (#11): ITEM_11(NUMBER)
    AvgLen: 4 NDV: 9500 Nulls: 0 Density: 0.000105 Min: 500.000000 Max: 9999.000000
  Column (#12): ITEM_12(CHARACTER)
    AvgLen: 11 NDV: 4 Nulls: 0 Density: 0.250000
  Column (#13): ITEM_13(NUMBER)
    AvgLen: 3 NDV: 6 Nulls: 0 Density: 0.166667 Min: 0.000000 Max: 5.000000
  Column (#14): ITEM_14(NUMBER)
    AvgLen: 3 NDV: 6 Nulls: 0 Density: 0.166667 Min: 0.000000 Max: 5.000000
  Column (#15): ITEM_15(NUMBER)
    AvgLen: 3 NDV: 6 Nulls: 0 Density: 0.166667 Min: 0.000000 Max: 5.000000
  Column (#1): ITEM_1(NUMBER)
    AvgLen: 5 NDV: 457472 Nulls: 0 Density: 0.000002 Min: 1.000000 Max: 539997.000000
try to generate single-table filter predicates from ORs for query block SEL$B154D144 (#1)
finally: "VW_GBF_4"."ITEM_1"="CA"."CA_ADDRESS_SK" AND ("CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County')

=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$B154D144 (#1)
Applicable DS directives:
   dirid = 18439699102505563871, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {EC(74169)[8]}
Checking valid directives for the query block
  SPD: Return code in qosdDSDirSetup: NODIR, estType = GROUP_BY
  SPD: Return code in qosdDSDirSetup: NODIR, estType = QUERY_BLOCK
Return code in qosdSetupDirCtx4QB: EXISTS
=====================================
SPD: END context at query block level
=====================================
Access path analysis for VW_GBF_4

Access path analysis for CUSTOMER_ADDRESS
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for CUSTOMER_ADDRESS[CA] 
  SPD: Directive valid: dirid = 18439699102505563871, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {EC(74169)[8]}
  SPD: Return code in qosdDSDirSetup: EXISTS, estType = TABLE

 kkecdn: Single Table Predicate:"CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County'
  Using density: 4.7103e-04 of col #8 as selectivity of pred having unreasonably low value
  Using density: 4.7103e-04 of col #8 as selectivity of pred having unreasonably low value
  Using density: 4.7103e-04 of col #8 as selectivity of pred having unreasonably low value
  Using density: 4.7103e-04 of col #8 as selectivity of pred having unreasonably low value
  Estimated selectivity: 5.3763e-04 , endpoint value predicate, col: #8 
  Table: CUSTOMER_ADDRESS  Alias: CA
    Card: Original: 540000.000000  Rounded: 1308  Computed: 1307.756551  Non Adjusted: 1307.756551
  Scan IO  Cost (Disk) =   3570.000000
  Scan CPU Cost (Disk) =   250417850.560000
  Cost of predicates:
    io = 0.000000, cpu = 249.764594, sel = 0.002422 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Chouteau County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Dinwiddie County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Dixie County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Harrisonburg city')
      io = NOCOST, cpu = 50.000000, sel = 0.000538 flag = 2048  ("CA"."CA_COUNTY"='Lowndes County')
  Total Scan IO  Cost  =   3570.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 540000.000000 (#rows))
                       =   3570.000000
  Total Scan CPU  Cost =   250417850.560000 (scan (Disk))
                         + 134872880.645405 (cpu filter eval) (= 249.764594 (per row) * 540000.000000 (#rows))
                       =   385290731.205405
  Access Path: TableScan
    Cost:  3579.864371  Resp: 3579.864371  Degree: 0
      Cost_io: 3570.000000  Cost_cpu: 385290731
      Resp_io: 3570.000000  Resp_cpu: 385290731
  ****** trying bitmap/domain indexes ******
 ****** Costing Index CA_ADDRESS_PK_IDX
  Access Path: index (FullScan)
    Index: CA_ADDRESS_PK_IDX
    resc_io: 1129.000000  resc_cpu: 116040106
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1131.970906  Resp: 1131.970906  Degree: 0
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: TableScan
         Cost: 3579.864371  Degree: 1  Resp: 3579.864371  Card: 1307.756551  Bytes: 0.000000

Grouping column cardinality [    ITEM_8]    1
Grouping column cardinality [    ITEM_9]    1
Grouping column cardinality [   ITEM_10]    1
Grouping column cardinality [   ITEM_11]    1
Grouping column cardinality [   ITEM_12]    1
Grouping column cardinality [   ITEM_13]    1
Grouping column cardinality [   ITEM_14]    1
Grouping column cardinality [   ITEM_15]    1
***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE:  Bypassed; QB is not duplicate insignificant SEL$B154D144 (#1)
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  VW_GBF_4[VW_GBF_4]#0  CUSTOMER_ADDRESS[CA]#1

***************
Now joining: CUSTOMER_ADDRESS[CA]#1
***************
NL Join
  Outer table: Card: 1.000000  Cost: 13957878.095190  Resp: 13957878.095190  Degree: 1  Bytes: 
Access path analysis for CUSTOMER_ADDRESS
  Scan IO  Cost (Disk) =   3570.000000
  Scan CPU Cost (Disk) =   250417850.560000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000765 flag = 2048  ("VW_GBF_4"."ITEM_1"="CA"."CA_ADDRESS_SK")
    io = 0.000000, cpu = 249.764594, sel = 0.002422 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Chouteau County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Dinwiddie County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Dixie County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Harrisonburg city')
      io = NOCOST, cpu = 50.000000, sel = 0.000538 flag = 2048  ("CA"."CA_COUNTY"='Lowndes County')
  Total Scan IO  Cost  =   3570.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 540000.000000 (#rows))
                       =   3570.000000
  Total Scan CPU  Cost =   250417850.560000 (scan (Disk))
                         + 27103113.823123 (cpu filter eval) (= 50.190952 (per row) * 540000.000000 (#rows))
                       =   277520964.383123
  Inner table: CUSTOMER_ADDRESS  Alias: CA
  Access Path: TableScan
    NL Join:  Cost: 13961455.200396  Resp: 13961455.200396  Degree: 1
      Cost_io: 13958483.285714  Cost_cpu: 116079491090
      Resp_io: 13958483.285714  Resp_cpu: 116079491090
 ****** Costing Index CA_ADDRESS_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: CA_ADDRESS_PK_IDX
    resc_io: 2.000000  resc_cpu: 16683
    ix_sel: 1.8519e-06  ix_sel_with_filters: 1.8519e-06 
    NL Join (ordered): Cost: 13957880.095618  Resp: 13957880.095618  Degree: 1
      Cost_io: 13954915.285714  Cost_cpu: 115801986808
      Resp_io: 13954915.285714  Resp_cpu: 115801986808
 ****** Costing Index CA_ADDRESS_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: CA_ADDRESS_PK_IDX
    resc_io: 2.000000  resc_cpu: 16683
    ix_sel: 1.8519e-06  ix_sel_with_filters: 1.8519e-06 
    NL Join (ordered): Cost: 13957880.095618  Resp: 13957880.095618  Degree: 1
      Cost_io: 13954915.285714  Cost_cpu: 115801986808
      Resp_io: 13954915.285714  Resp_cpu: 115801986808
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 13957880.095618
          resc: 13957880.095618  resc_io: 13954915.285714  resc_cpu: 115801986808
          resp: 13957880.095618  resp_io: 13954915.285714  resc_cpu: 115801986808
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Join Card:  0.999814 = outer (1.000000) * inner (1307.756551) * sel (7.6453e-04)
Join Card - Rounded: 1 Computed: 0.999814
Grouping column cardinality [    ITEM_8]    1
Grouping column cardinality [    ITEM_9]    1
Grouping column cardinality [   ITEM_10]    1
Grouping column cardinality [   ITEM_11]    1
Grouping column cardinality [   ITEM_12]    1
Grouping column cardinality [   ITEM_13]    1
Grouping column cardinality [   ITEM_14]    1
Grouping column cardinality [   ITEM_15]    1
  Outer table:  VW_GBF_4  Alias: VW_GBF_4
    resc: 13957878.095190  card 1.000000  bytes:   deg: 1  resp: 13957878.095190
  Inner table:  CUSTOMER_ADDRESS  Alias: CA
    resc: 3579.864371  card: 1307.756551  bytes:   deg: 1  resp: 3579.864371
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 6 Row size:     34 Total Rows:           1308
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39668949
      Total Temp space used: 0
  SM join: Resc: 13961458.975182  Resp: 13961458.975182  [multiMatchCost=0.000000]
SM Join
  SM cost: 13961458.975182 
     resc: 13961458.975182 resc_io: 13958483.285714 resc_cpu: 116226929806
     resp: 13961458.975182 resp_io: 13958483.285714 resp_cpu: 116226929806
  Outer table:  VW_GBF_4  Alias: VW_GBF_4
    resc: 13957878.095190  card 1.000000  bytes:   deg: 1  resp: 13957878.095190
  Inner table:  CUSTOMER_ADDRESS  Alias: CA
    resc: 3579.864371  card: 1307.756551  bytes:   deg: 1  resp: 3579.864371
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.018714  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 1  probefrag: 6  ppasses: 1
  Hash join: Resc: 13961457.978276  Resp: 13961457.978276  [multiMatchCost=0.000000]
HA Join
  HA cost: 13961457.978276  
     resc: 13961457.978276 resc_io: 13958483.285714 resc_cpu: 116187991807
     resp: 13961457.978276 resp_io: 13958483.285714 resp_cpu: 116187991807
GROUP BY sort
GROUP BY/Correlated Subquery Filter adjustment factor: 0.088388
GROUP BY cardinality:  1.000000, TABLE cardinality:  1.000000
Vector group by not costed because no SYS_OP_XLATE_USE in group by.
kdmoGByPushdownValid: more than one table in group by    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     179 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39058824
      Total Temp space used: 0
Best:: JoinMethod: NestedLoop
       Cost: 13957881.095618  Degree: 1  Resp: 13957881.095618  Card: 0.999814 Bytes: 
***********************
Best so far:  Table#: 0  cost: 13957878.095190  card: 1.000000  bytes: 132.000000
              Table#: 1  cost: 13957881.095618  card: 0.999814  bytes: 153.000000
***********************
Join order[2]:  CUSTOMER_ADDRESS[CA]#1  VW_GBF_4[VW_GBF_4]#0

***************
Now joining: VW_GBF_4[VW_GBF_4]#0
***************
NL Join
  Outer table: Card: 1307.756551  Cost: 3579.864371  Resp: 3579.864371  Degree: 1  Bytes: 
Access path analysis for VW_GBF_4
  Inner table: VW_GBF_4  Alias: VW_GBF_4
  Access Path: TableScan
    NL Join:  Cost: 18256908128.373409  Resp: 18256908128.373409  Degree: 1
      Cost_io: 18253030147.714287  Cost_cpu: 151469362215124
      Resp_io: 18253030147.714287  Resp_cpu: 151469362215124

  Best NL cost: 18256908128.373409
          resc: 18256908128.373409  resc_io: 18253030147.714287  resc_cpu: 151469362215124
          resp: 18256908128.373409  resp_io: 18253030147.714287  resc_cpu: 151469362215124
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Join Card:  0.999814 = outer (1307.756551) * inner (1.000000) * sel (7.6453e-04)
Join Card - Rounded: 1 Computed: 0.999814
Grouping column cardinality [    ITEM_8]    1
Grouping column cardinality [    ITEM_9]    1
Grouping column cardinality [   ITEM_10]    1
Grouping column cardinality [   ITEM_11]    1
Grouping column cardinality [   ITEM_12]    1
Grouping column cardinality [   ITEM_13]    1
Grouping column cardinality [   ITEM_14]    1
Grouping column cardinality [   ITEM_15]    1
  Outer table:  CUSTOMER_ADDRESS  Alias: CA
    resc: 3579.864371  card 1307.756551  bytes:   deg: 1  resp: 3579.864371
  Inner table:  VW_GBF_4  Alias: VW_GBF_4
    resc: 13957878.095190  card: 1.000000  bytes:   deg: 1  resp: 13957878.095190
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 6 Row size:     34 Total Rows:           1308
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39668949
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     156 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39058824
      Total Temp space used: 0
  SM join: Resc: 13961459.975182  Resp: 13961459.975182  [multiMatchCost=0.000000]
SM Join
  SM cost: 13961459.975182 
     resc: 13961459.975182 resc_io: 13958483.285714 resc_cpu: 116265988629
     resp: 13961459.975182 resp_io: 13958483.285714 resp_cpu: 116265988629
SM Join (with index on outer)
 ****** Costing Index CA_ADDRESS_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (FullScan)
    Index: CA_ADDRESS_PK_IDX
    resc_io: 13412.000000  resc_cpu: 387215867
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 13421.913659  Resp: 13421.913659  Degree: 1
  Outer table:  CUSTOMER_ADDRESS  Alias: CA
    resc: 13421.913659  card 1307.756551  bytes:   deg: 1  resp: 13421.913659
  Inner table:  VW_GBF_4  Alias: VW_GBF_4
    resc: 13957878.095190  card: 1.000000  bytes:   deg: 1  resp: 13957878.095190
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     156 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39058824
      Total Temp space used: 0
  SM join: Resc: 13971301.008850  Resp: 13971301.008850  [multiMatchCost=0.000000]
  Outer table:  CUSTOMER_ADDRESS  Alias: CA
    resc: 3579.864371  card 1307.756551  bytes:   deg: 1  resp: 3579.864371
  Inner table:  VW_GBF_4  Alias: VW_GBF_4
    resc: 13957878.095190  card: 1.000000  bytes:   deg: 1  resp: 13957878.095190
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020387  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 6  probefrag: 1  ppasses: 1
  Hash join: Resc: 13961457.979949  Resp: 13961457.979949  [multiMatchCost=0.000000]
  Outer table:  VW_GBF_4  Alias: VW_GBF_4
    resc: 13957878.095190  card 1.000000  bytes:   deg: 1  resp: 13957878.095190
  Inner table:  CUSTOMER_ADDRESS  Alias: CA
    resc: 3579.864371  card: 1307.756551  bytes:   deg: 1  resp: 3579.864371
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.018714  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 1  probefrag: 6  ppasses: 1
  Hash join: Resc: 13961457.978276  Resp: 13961457.978276  [multiMatchCost=0.000000]
HA Join
  HA cost: 13961457.978276 swapped 
     resc: 13961457.978276 resc_io: 13958483.285714 resc_cpu: 116187991807
     resp: 13961457.978276 resp_io: 13958483.285714 resp_cpu: 116187991807
GROUP BY sort
GROUP BY/Correlated Subquery Filter adjustment factor: 0.088388
GROUP BY cardinality:  1.000000, TABLE cardinality:  1.000000
Vector group by not costed because no SYS_OP_XLATE_USE in group by.
kdmoGByPushdownValid: more than one table in group by    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     179 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39058824
      Total Temp space used: 0
Join order aborted: cost > best plan cost
***********************
(newjo-stop-1) k:0, spcnt:0, perm:2, maxperm:2000

*********************************
Number of join permutations tried: 2
*********************************
Enumerating distribution method (advanced)
--- Distribution method for 
join between VW_GBF_4[VW_GBF_4](serial) and CA[CUSTOMER_ADDRESS](serial); jm = 14; right side access path = IndexUnique
kkopqIsSerialJoin: serial NLJ: both inputs serial
---- serial NL-Join -> SERIAL

(newjo-save)    [1 0 ]
GROUP BY/Correlated Subquery Filter adjustment factor: 0.088388
GROUP BY cardinality:  1.000000, TABLE cardinality:  1.000000
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     179 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39058824
      Total Temp space used: 0
LORE: Or-Expansion validity checks failed on query block SEL$B154D144 (#1) because Cost based OR expansion enabled
Transfer Optimizer annotations for query block SEL$B154D144 (#1)
Final cost for query block SEL$B154D144 (#1) - All Rows Plan:
  Best join order: 1
  Cost: 13957881.095618  Degree: 1  Card: 1.000000  Bytes: 306.000000
  Resc: 13957881.095618  Resc_io: 13954915.285714  Resc_cpu: 115841045632
  Resp: 13957881.095618  Resp_io: 13954915.285714  Resc_cpu: 115841045632
kkoqbc-subheap (delete addr=0x7f0472305c60, in-use=68832, alloc=76000)
kkoqbc-end:
        :
    call(in-use=958928, alloc=1058552), compile(in-use=2146328, alloc=2148368), execution(in-use=37448, alloc=40536)

kkoqbc: finish optimizing query block SEL$B154D144 (#1)
CBQT: Saved costed qb# 4 (SEL$3), key = SEL$3_00010000_0
CBQT: Saved costed qb# 3 (SEL$4), key = SEL$4_00010000_0
CBQT: Saved costed qb# 2 (SEL$2), key = SEL$2_00010000_0
CBQT: Saved costed qb# 8 (SEL$DC996EF9), key = SEL$DC996EF9_00008040_2
CBQT: Saved costed qb# 1 (SEL$B154D144), key = SEL$B154D144_00000040_0
GBP: Not update best state, Cost = 13957881.095618
GBP: Starting iteration 5, state space = (1,2,3) : (F,C,F)
Registered qb: SEL$7132965F 0x7237ec20 (QUERY BLOCK TABLES CHANGED SEL$1)
---------------------
QUERY BLOCK SIGNATURE
---------------------
  signature (): qb_name=SEL$7132965F nbfros=3 flg=0
    fro(0): flg=0 objn=74168 hint_alias="C"@"SEL$1"
    fro(1): flg=0 objn=74170 hint_alias="CUSTOMER_DEMOGRAPHICS"@"SEL$1"
    fro(2): flg=5 objn=0 hint_alias="VW_GBC_5"@"SEL$7132965F"

Registered qb: SEL$E055AE3E 0x71e16f80 (SPLIT/MERGE QUERY BLOCKS SEL$7132965F)
---------------------
QUERY BLOCK SIGNATURE
---------------------
  signature (): qb_name=SEL$E055AE3E nbfros=1 flg=0
    fro(0): flg=0 objn=74169 hint_alias="CA"@"SEL$1"

Registered qb: SEL$66807F45 0x7237ec20 (QUERY BLOCK TABLES CHANGED SEL$7132965F)
---------------------
QUERY BLOCK SIGNATURE
---------------------
  signature (): qb_name=SEL$66807F45 nbfros=2 flg=0
    fro(0): flg=5 objn=0 hint_alias="VW_GBF_6"@"SEL$66807F45"
    fro(1): flg=1 objn=0 hint_alias="VW_GBC_5"@"SEL$7132965F"

Registered qb: SEL$3D8AB28F 0x71e10540 (SPLIT/MERGE QUERY BLOCKS SEL$66807F45)
---------------------
QUERY BLOCK SIGNATURE
---------------------
  signature (): qb_name=SEL$3D8AB28F nbfros=2 flg=0
    fro(0): flg=0 objn=74168 hint_alias="C"@"SEL$1"
    fro(1): flg=0 objn=74170 hint_alias="CUSTOMER_DEMOGRAPHICS"@"SEL$1"

QB before group-by removal:******* UNPARSED QUERY IS *******
SELECT "C"."C_CURRENT_ADDR_SK" "ITEM_1",COUNT(*) "ITEM_2",COUNT(*) "ITEM_3",COUNT(*) "ITEM_4",COUNT(*) "ITEM_5",COUNT(*) "ITEM_6",COUNT(*) "ITEM_7","CUSTOMER_DEMOGRAPHICS"."CD_GENDER" "ITEM_8","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS" "ITEM_9","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS" "ITEM_10","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE" "ITEM_11","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING" "ITEM_12","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT" "ITEM_13","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT" "ITEM_14","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT" "ITEM_15" FROM "TPCDS"."CUSTOMER_DEMOGRAPHICS" "CUSTOMER_DEMOGRAPHICS","TPCDS"."CUSTOMER" "C" WHERE "CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK"="C"."C_CURRENT_CDEMO_SK" AND  EXISTS (SELECT 0 FROM "TPCDS"."STORE_SALES" "SS","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="SS"."SS_CUSTOMER_SK" AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3 AND ( EXISTS (SELECT 0 FROM "TPCDS"."WEB_SALES" "WEB_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="WEB_SALES"."WS_BILL_CUSTOMER_SK" AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3) OR  EXISTS (SELECT 0 FROM "TPCDS"."CATALOG_SALES" "CATALOG_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="CATALOG_SALES"."CS_SHIP_CUSTOMER_SK" AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3))) GROUP BY "C"."C_CURRENT_ADDR_SK","CUSTOMER_DEMOGRAPHICS"."CD_GENDER","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT"
Registered qb: SEL$9B5E143E 0x7237ec20 (UNKNOWN QUERY BLOCK ORIGIN SEL$1; SEL$1; LIST LIST 5)
---------------------
QUERY BLOCK SIGNATURE
---------------------
  signature (): qb_name=SEL$9B5E143E nbfros=2 flg=0
    fro(0): flg=1 objn=0 hint_alias="VW_GBF_6"@"SEL$66807F45"
    fro(1): flg=1 objn=0 hint_alias="VW_GBC_5"@"SEL$7132965F"

GBP: Transformed query
******* UNPARSED QUERY IS *******
SELECT "VW_GBF_6"."ITEM_8" "CD_GENDER","VW_GBF_6"."ITEM_9" "CD_MARITAL_STATUS","VW_GBF_6"."ITEM_10" "CD_EDUCATION_STATUS",NVL(SUM("VW_GBC_5"."ITEM_2"*"VW_GBF_6"."ITEM_2"),0) "CNT1","VW_GBF_6"."ITEM_11" "CD_PURCHASE_ESTIMATE",NVL(SUM("VW_GBC_5"."ITEM_3"*"VW_GBF_6"."ITEM_3"),0) "CNT2","VW_GBF_6"."ITEM_12" "CD_CREDIT_RATING",NVL(SUM("VW_GBC_5"."ITEM_4"*"VW_GBF_6"."ITEM_4"),0) "CNT3","VW_GBF_6"."ITEM_13" "CD_DEP_COUNT",NVL(SUM("VW_GBC_5"."ITEM_5"*"VW_GBF_6"."ITEM_5"),0) "CNT4","VW_GBF_6"."ITEM_14" "CD_DEP_EMPLOYED_COUNT",NVL(SUM("VW_GBC_5"."ITEM_6"*"VW_GBF_6"."ITEM_6"),0) "CNT5","VW_GBF_6"."ITEM_15" "CD_DEP_COLLEGE_COUNT",NVL(SUM("VW_GBC_5"."ITEM_7"*"VW_GBF_6"."ITEM_7"),0) "CNT6" FROM  (SELECT "C"."C_CURRENT_ADDR_SK" "ITEM_1",COUNT(*) "ITEM_2",COUNT(*) "ITEM_3",COUNT(*) "ITEM_4",COUNT(*) "ITEM_5",COUNT(*) "ITEM_6",COUNT(*) "ITEM_7","CUSTOMER_DEMOGRAPHICS"."CD_GENDER" "ITEM_8","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS" "ITEM_9","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS" "ITEM_10","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE" "ITEM_11","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING" "ITEM_12","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT" "ITEM_13","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT" "ITEM_14","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT" "ITEM_15" FROM "TPCDS"."CUSTOMER_DEMOGRAPHICS" "CUSTOMER_DEMOGRAPHICS","TPCDS"."CUSTOMER" "C" WHERE "CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK"="C"."C_CURRENT_CDEMO_SK" AND  EXISTS (SELECT 0 FROM "TPCDS"."STORE_SALES" "SS","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="SS"."SS_CUSTOMER_SK" AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3 AND ( EXISTS (SELECT 0 FROM "TPCDS"."WEB_SALES" "WEB_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="WEB_SALES"."WS_BILL_CUSTOMER_SK" AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3) OR  EXISTS (SELECT 0 FROM "TPCDS"."CATALOG_SALES" "CATALOG_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="CATALOG_SALES"."CS_SHIP_CUSTOMER_SK" AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3))) GROUP BY "C"."C_CURRENT_ADDR_SK","CUSTOMER_DEMOGRAPHICS"."CD_GENDER","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT") "VW_GBF_6", (SELECT "CA"."CA_ADDRESS_SK" "ITEM_1",COUNT(*) "ITEM_2",COUNT(*) "ITEM_3",COUNT(*) "ITEM_4",COUNT(*) "ITEM_5",COUNT(*) "ITEM_6",COUNT(*) "ITEM_7" FROM "TPCDS"."CUSTOMER_ADDRESS" "CA" WHERE "CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County' GROUP BY "CA"."CA_ADDRESS_SK") "VW_GBC_5" WHERE "VW_GBF_6"."ITEM_1"="VW_GBC_5"."ITEM_1" GROUP BY "VW_GBF_6"."ITEM_8","VW_GBF_6"."ITEM_9","VW_GBF_6"."ITEM_10","VW_GBF_6"."ITEM_11","VW_GBF_6"."ITEM_12","VW_GBF_6"."ITEM_13","VW_GBF_6"."ITEM_14","VW_GBF_6"."ITEM_15" ORDER BY "VW_GBF_6"."ITEM_8","VW_GBF_6"."ITEM_9","VW_GBF_6"."ITEM_10","VW_GBF_6"."ITEM_11","VW_GBF_6"."ITEM_12","VW_GBF_6"."ITEM_13","VW_GBF_6"."ITEM_14","VW_GBF_6"."ITEM_15"
GBP: Not update best state, Cost = 13957881.095618
GBP: Starting iteration 6, state space = (1,2,3) : (F,0,0)
Registered qb: SEL$FD007FC2 0x71e28240 (QUERY BLOCK TABLES CHANGED SEL$1)
---------------------
QUERY BLOCK SIGNATURE
---------------------
  signature (): qb_name=SEL$FD007FC2 nbfros=3 flg=0
    fro(0): flg=0 objn=74168 hint_alias="C"@"SEL$1"
    fro(1): flg=0 objn=74169 hint_alias="CA"@"SEL$1"
    fro(2): flg=5 objn=0 hint_alias="VW_GBF_7"@"SEL$FD007FC2"

Registered qb: SEL$827DE9C7 0x71e1e440 (SPLIT/MERGE QUERY BLOCKS SEL$FD007FC2)
---------------------
QUERY BLOCK SIGNATURE
---------------------
  signature (): qb_name=SEL$827DE9C7 nbfros=1 flg=0
    fro(0): flg=0 objn=74170 hint_alias="CUSTOMER_DEMOGRAPHICS"@"SEL$1"

QB before group-by removal:******* UNPARSED QUERY IS *******
SELECT "CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK" "ITEM_1",COUNT(*) "ITEM_2",COUNT(*) "ITEM_3",COUNT(*) "ITEM_4",COUNT(*) "ITEM_5",COUNT(*) "ITEM_6",COUNT(*) "ITEM_7","CUSTOMER_DEMOGRAPHICS"."CD_GENDER" "ITEM_8","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS" "ITEM_9","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS" "ITEM_10","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE" "ITEM_11","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING" "ITEM_12","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT" "ITEM_13","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT" "ITEM_14","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT" "ITEM_15" FROM "TPCDS"."CUSTOMER_DEMOGRAPHICS" "CUSTOMER_DEMOGRAPHICS" GROUP BY "CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK","CUSTOMER_DEMOGRAPHICS"."CD_GENDER","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT"
QB before group-by elimination:******* UNPARSED QUERY IS *******
SELECT "CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK" "ITEM_1",COUNT(*) "ITEM_2",COUNT(*) "ITEM_3",COUNT(*) "ITEM_4",COUNT(*) "ITEM_5",COUNT(*) "ITEM_6",COUNT(*) "ITEM_7","CUSTOMER_DEMOGRAPHICS"."CD_GENDER" "ITEM_8","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS" "ITEM_9","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS" "ITEM_10","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE" "ITEM_11","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING" "ITEM_12","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT" "ITEM_13","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT" "ITEM_14","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT" "ITEM_15" FROM "TPCDS"."CUSTOMER_DEMOGRAPHICS" "CUSTOMER_DEMOGRAPHICS" GROUP BY "CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK","CUSTOMER_DEMOGRAPHICS"."CD_GENDER","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT"
Registered qb: SEL$4D1546CC 0x71e1e440 (ELIMINATION OF GROUP BY SEL$827DE9C7; SEL$827DE9C7)
---------------------
QUERY BLOCK SIGNATURE
---------------------
  signature (): qb_name=SEL$4D1546CC nbfros=1 flg=0
    fro(0): flg=0 objn=74170 hint_alias="CUSTOMER_DEMOGRAPHICS"@"SEL$1"

QB after group-by elimination:******* UNPARSED QUERY IS *******
SELECT "CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK" "ITEM_1",1 "ITEM_2",1 "ITEM_3",1 "ITEM_4",1 "ITEM_5",1 "ITEM_6",1 "ITEM_7","CUSTOMER_DEMOGRAPHICS"."CD_GENDER" "ITEM_8","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS" "ITEM_9","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS" "ITEM_10","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE" "ITEM_11","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING" "ITEM_12","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT" "ITEM_13","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT" "ITEM_14","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT" "ITEM_15" FROM "TPCDS"."CUSTOMER_DEMOGRAPHICS" "CUSTOMER_DEMOGRAPHICS"
Registered qb: SEL$4C89B77A 0x71e1e440 (ELIMINATION OF GROUP BY SEL$4D1546CC; SEL$4D1546CC)
---------------------
QUERY BLOCK SIGNATURE
---------------------
  signature (): qb_name=SEL$4C89B77A nbfros=1 flg=0
    fro(0): flg=0 objn=74170 hint_alias="CUSTOMER_DEMOGRAPHICS"@"SEL$1"

QB after group-by removal:******* UNPARSED QUERY IS *******
SELECT "CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK" "ITEM_1",1 "ITEM_2",1 "ITEM_3",1 "ITEM_4",1 "ITEM_5",1 "ITEM_6",1 "ITEM_7","CUSTOMER_DEMOGRAPHICS"."CD_GENDER" "ITEM_8","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS" "ITEM_9","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS" "ITEM_10","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE" "ITEM_11","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING" "ITEM_12","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT" "ITEM_13","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT" "ITEM_14","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT" "ITEM_15" FROM "TPCDS"."CUSTOMER_DEMOGRAPHICS" "CUSTOMER_DEMOGRAPHICS"
Registered qb: SEL$5084BC99 0x71e28240 (UNKNOWN QUERY BLOCK ORIGIN SEL$1; SEL$1; LIST 7)
---------------------
QUERY BLOCK SIGNATURE
---------------------
  signature (): qb_name=SEL$5084BC99 nbfros=3 flg=0
    fro(0): flg=0 objn=74168 hint_alias="C"@"SEL$1"
    fro(1): flg=0 objn=74169 hint_alias="CA"@"SEL$1"
    fro(2): flg=1 objn=0 hint_alias="VW_GBF_7"@"SEL$FD007FC2"

GBP: Transformed query
******* UNPARSED QUERY IS *******
SELECT "VW_GBF_7"."ITEM_8" "CD_GENDER","VW_GBF_7"."ITEM_9" "CD_MARITAL_STATUS","VW_GBF_7"."ITEM_10" "CD_EDUCATION_STATUS",SUM("VW_GBF_7"."ITEM_2") "CNT1","VW_GBF_7"."ITEM_11" "CD_PURCHASE_ESTIMATE",SUM("VW_GBF_7"."ITEM_3") "CNT2","VW_GBF_7"."ITEM_12" "CD_CREDIT_RATING",SUM("VW_GBF_7"."ITEM_4") "CNT3","VW_GBF_7"."ITEM_13" "CD_DEP_COUNT",SUM("VW_GBF_7"."ITEM_5") "CNT4","VW_GBF_7"."ITEM_14" "CD_DEP_EMPLOYED_COUNT",SUM("VW_GBF_7"."ITEM_6") "CNT5","VW_GBF_7"."ITEM_15" "CD_DEP_COLLEGE_COUNT",SUM("VW_GBF_7"."ITEM_7") "CNT6" FROM  (SELECT "CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK" "ITEM_1",1 "ITEM_2",1 "ITEM_3",1 "ITEM_4",1 "ITEM_5",1 "ITEM_6",1 "ITEM_7","CUSTOMER_DEMOGRAPHICS"."CD_GENDER" "ITEM_8","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS" "ITEM_9","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS" "ITEM_10","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE" "ITEM_11","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING" "ITEM_12","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT" "ITEM_13","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT" "ITEM_14","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT" "ITEM_15" FROM "TPCDS"."CUSTOMER_DEMOGRAPHICS" "CUSTOMER_DEMOGRAPHICS") "VW_GBF_7","TPCDS"."CUSTOMER" "C","TPCDS"."CUSTOMER_ADDRESS" "CA" WHERE "C"."C_CURRENT_ADDR_SK"="CA"."CA_ADDRESS_SK" AND "VW_GBF_7"."ITEM_1"="C"."C_CURRENT_CDEMO_SK" AND ("CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County') AND  EXISTS (SELECT 0 FROM "TPCDS"."STORE_SALES" "SS","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="SS"."SS_CUSTOMER_SK" AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3 AND ( EXISTS (SELECT 0 FROM "TPCDS"."WEB_SALES" "WEB_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="WEB_SALES"."WS_BILL_CUSTOMER_SK" AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3) OR  EXISTS (SELECT 0 FROM "TPCDS"."CATALOG_SALES" "CATALOG_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="CATALOG_SALES"."CS_SHIP_CUSTOMER_SK" AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3))) GROUP BY "VW_GBF_7"."ITEM_8","VW_GBF_7"."ITEM_9","VW_GBF_7"."ITEM_10","VW_GBF_7"."ITEM_11","VW_GBF_7"."ITEM_12","VW_GBF_7"."ITEM_13","VW_GBF_7"."ITEM_14","VW_GBF_7"."ITEM_15" ORDER BY "VW_GBF_7"."ITEM_8","VW_GBF_7"."ITEM_9","VW_GBF_7"."ITEM_10","VW_GBF_7"."ITEM_11","VW_GBF_7"."ITEM_12","VW_GBF_7"."ITEM_13","VW_GBF_7"."ITEM_14","VW_GBF_7"."ITEM_15"
FPD: Considering simple filter push in query block SEL$5084BC99 (#1)
"C"."C_CURRENT_ADDR_SK"="CA"."CA_ADDRESS_SK" AND "VW_GBF_7"."ITEM_1"="C"."C_CURRENT_CDEMO_SK" AND ("CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County') AND  EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM")
FPD: Considering simple filter push in query block SEL$2 (#2)
"SS"."SS_CUSTOMER_SK"=:B1 AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND ( EXISTS (SELECT 0 FROM "WEB_SALES" "WEB_SALES","DATE_DIM" "DATE_DIM") OR  EXISTS (SELECT 0 FROM "CATALOG_SALES" "CATALOG_SALES","DATE_DIM" "DATE_DIM"))
FPD: Considering simple filter push in query block SEL$3 (#4)
"WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B1 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4
try to generate transitive predicate from check constraints for query block SEL$3 (#4)
finally: "WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B1 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1

FPD:   transitive predicates are generated in query block SEL$3 (#4)
"WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B1 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1
FPD: Considering simple filter push in query block SEL$4 (#3)
"CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B1 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4
try to generate transitive predicate from check constraints for query block SEL$4 (#3)
finally: "CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B1 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1

FPD:   transitive predicates are generated in query block SEL$4 (#3)
"CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B1 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1
try to generate transitive predicate from check constraints for query block SEL$2 (#2)
finally: "SS"."SS_CUSTOMER_SK"=:B1 AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND ( EXISTS (SELECT 0 FROM "WEB_SALES" "WEB_SALES","DATE_DIM" "DATE_DIM") OR  EXISTS (SELECT 0 FROM "CATALOG_SALES" "CATALOG_SALES","DATE_DIM" "DATE_DIM"))

try to generate transitive predicate from check constraints for query block SEL$5084BC99 (#1)
finally: "C"."C_CURRENT_ADDR_SK"="CA"."CA_ADDRESS_SK" AND "VW_GBF_7"."ITEM_1"="C"."C_CURRENT_CDEMO_SK" AND ("CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County') AND  EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM")

FPD: Considering simple filter push in query block SEL$4C89B77A (#11)
 ?? 
OJE: Begin: find best directive for query block SEL$4C89B77A (#11)
OJE: End: finding best directive for query block SEL$4C89B77A (#11)
GBP: Costing transformed query.
*************************
First K Rows: Setup begin
kkoqbc: optimizing query block SEL$3 (#4)
        
        :
    call(in-use=968096, alloc=998840), compile(in-use=2447952, alloc=2451624), execution(in-use=38712, alloc=40536)

kkoqbc-subheap (create addr=0x7f04723e8658)
****************
QUERY BLOCK TEXT
****************
SELECT
                    *
                FROM
                    web_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = ws_bill_customer_sk
                    AND ws_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$3 nbfros=2 flg=0
  fro(0): flg=0 objn=74171 hint_alias="DATE_DIM"@"SEL$3"
  fro(1): flg=0 objn=74195 hint_alias="WEB_SALES"@"SEL$3"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3255 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: DATE_DIM  Alias: DATE_DIM
  #Rows: 73049  SSZ: 0  LGR: 0  #Blks:  1510  AvgRowLen:  128.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): D_DATE_SK(NUMBER)
    AvgLen: 6 NDV: 73049 Nulls: 0 Density: 0.000014 Min: 2415022.000000 Max: 2488070.000000
Index Stats::
  Index: D_DATE_PK_IDX  Col#: 1
  LVLS: 1  #LB: 163  #DK: 73049  LB/K: 1.00  DB/K: 1.00  CLUF: 1402.00  NRW: 73049.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table: WEB_SALES  Alias: WEB_SALES  (Using composite stats)
  #Rows: 35969200  SSZ: 0  LGR: 0  #Blks:  829566  AvgRowLen:  167.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
Index Stats::
  Index: WEB_SALES_IDX2  Col#: 5 1
  LVLS: 3  #LB: 130617  #DK: 2992994  LB/K: 1.00  DB/K: 12.00  CLUF: 35969159.00  NRW: 35969200.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
  Index: WEB_SALES_PK_IDX  Col#: 4 18
  LVLS: 2  #LB: 122502  #DK: 35304428  LB/K: 1.00  DB/K: 1.00  CLUF: 35300490.00  NRW: 35304428.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
try to generate single-table filter predicates from ORs for query block SEL$3 (#4)
finally: "WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B1 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4

=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$3 (#4)
Applicable DS directives:
   dirid = 4510913066701158191, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {(74195)[]; (74171)[]}
   dirid = 14910903719618111890, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74195)[5]}
   dirid = 13969931850241126217, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {C(74171)[7, 9]}
   dirid = 13683461771316641482, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74195)[5]; (74171)[7]}
Checking valid directives for the query block
  SPD: Return code in qosdDSDirSetup: NODIR, estType = QUERY_BLOCK
Return code in qosdSetupDirCtx4QB: EXISTS
=====================================
SPD: END context at query block level
=====================================
Access path analysis for WEB_SALES
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for WEB_SALES[WEB_SALES] 
  SPD: Return code in qosdDSDirSetup: NODIR, estType = TABLE

 kkecdn: Single Table Predicate:"WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B1
NOTE: ignoring histogram of column (WEB_SALES.WS_BILL_CUSTOMER_SK)
      used only for incremental stats maintenance
  Column (#5): WS_BILL_CUSTOMER_SK(NUMBER)
    AvgLen: 6 NDV: 973580 Nulls: 0 Density: 0.000001 Min: 2.000000 Max: 1079999.000000
  Estimated selectivity: 1.0271e-06 , col: #5 
  Table: WEB_SALES  Alias: WEB_SALES
    Card: Original: 35969200.000000  Rounded: 37  Computed: 36.945295  Non Adjusted: 36.945295
  Scan IO  Cost (Disk) =   224676.000000
  Scan CPU Cost (Disk) =   14180620495.040001
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000001 flag = 2048  ("WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B1)
  Total Scan IO  Cost  =   224676.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 35969200.000000 (#rows))
                       =   224676.000000
  Total Scan CPU  Cost =   14180620495.040001 (scan (Disk))
                         + 1798460000.000000 (cpu filter eval) (= 50.000000 (per row) * 35969200.000000 (#rows))
                       =   15979080495.040001
  Access Path: TableScan
    Cost:  225085.102964  Resp: 225085.102964  Degree: 0
      Cost_io: 224676.000000  Cost_cpu: 15979080495
      Resp_io: 224676.000000  Resp_cpu: 15979080495
  Access Path: index (index (FFS))
    Index: WEB_SALES_IDX2
    resc_io: 35377.000000  resc_cpu: 7044945128
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  35557.367571  Resp: 35557.367571  Degree: 1
      Cost_io: 35377.000000  Cost_cpu: 7044945128
      Resp_io: 35377.000000  Resp_cpu: 7044945128
 ****** Costing Index WEB_SALES_IDX2
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER

  Estimated selectivity: 1.0271e-06 , col: #5 
  Access Path: index (IndexOnly)
    Index: WEB_SALES_IDX2
    resc_io: 4.000000  resc_cpu: 35886
    ix_sel: 1.0271e-06  ix_sel_with_filters: 1.0271e-06 
    Cost: 4.000919  Resp: 4.000919  Degree: 1
  Best:: AccessPath: IndexRange
  Index: WEB_SALES_IDX2
         Cost: 4.000919  Degree: 1  Resp: 4.000919  Card: 36.945295  Bytes: 0.000000

Access path analysis for DATE_DIM
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for DATE_DIM[DATE_DIM] 
  SPD: Directive valid: dirid = 13969931850241126217, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {C(74171)[7, 9]}
  SPD: Return code in qosdDSDirSetup: EXISTS, estType = TABLE
  Column (#7): 
    NewDensity:0.000007, OldDensity:0.000007 BktCnt:73049.000000, PopBktCnt:73048.000000, PopValCnt:200, NDV:201
  Column (#7): D_YEAR(NUMBER)
    AvgLen: 4 NDV: 201 Nulls: 0 Density: 0.000007 Min: 1900.000000 Max: 2100.000000
    Histogram: Freq  #Bkts: 201  UncompBkts: 73049  EndPtVals: 201  ActualVal: yes
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 


 kkecdn: Single Table Predicate:"DATE_DIM"."D_YEAR"=2001
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY">=1
  Column (#9): 
    NewDensity:0.038666, OldDensity:0.000007 BktCnt:73049.000000, PopBktCnt:73049.000000, PopValCnt:12, NDV:12
  Column (#9): D_MOY(NUMBER)
    AvgLen: 3 NDV: 12 Nulls: 0 Density: 0.038666 Min: 1.000000 Max: 12.000000
    Histogram: Freq  #Bkts: 12  UncompBkts: 73049  EndPtVals: 12  ActualVal: yes
  Estimated selectivity: 1.000000 , endpoint value predicate, col: #9 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY"<=4
  Estimated selectivity: 0.329224 , endpoint value predicate, col: #9 
  Table: DATE_DIM  Alias: DATE_DIM
    Card: Original: 73049.000000  Rounded: 120  Computed: 120.166840  Non Adjusted: 120.166840
  Scan IO  Cost (Disk) =   411.000000
  Scan CPU Cost (Disk) =   33398564.400000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.004997 flag = 2048  ("DATE_DIM"."D_YEAR"=2001)
    io = NOCOST, cpu = 50.000000, sel = 0.329224 flag = 2048  ("DATE_DIM"."D_MOY"<=4)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("DATE_DIM"."D_MOY">=1)
  Total Scan IO  Cost  =   411.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 73049.000000 (#rows))
                       =   411.000000
  Total Scan CPU  Cost =   33398564.400000 (scan (Disk))
                         + 3676708.342003 (cpu filter eval) (= 50.332083 (per row) * 73049.000000 (#rows))
                       =   37075272.742003
  Access Path: TableScan
    Cost:  411.949216  Resp: 411.949216  Degree: 0
      Cost_io: 411.000000  Cost_cpu: 37075273
      Resp_io: 411.000000  Resp_cpu: 37075273
  Best:: AccessPath: TableScan
         Cost: 411.949216  Degree: 1  Resp: 411.949216  Card: 120.166840  Bytes: 0.000000

***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE: Checking validity of partial join eval on query block SEL$3 (#4)
PJE: Passed validity of partial join eval by query block SEL$3 (#4)
number: [0]
PJE: Partial join eval conversion for query block SEL$3 (#4).
PJE: Table marked for partial join eval: DATE_DIM[DATE_DIM]#1
***********************
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  WEB_SALES[WEB_SALES]#0  DATE_DIM[DATE_DIM]#1

***************
Now joining: DATE_DIM[DATE_DIM]#1
***************
NL Join
  Outer table: Card: 36.945295  Cost: 4.000919  Resp: 4.000919  Degree: 1  Bytes: 
Access path analysis for DATE_DIM
  Scan IO  Cost (Disk) =   409.000000
  Scan CPU Cost (Disk) =   33398564.400000
NOTE: ignoring histogram of column (WEB_SALES.WS_SOLD_DATE_SK)
      used only for incremental stats maintenance
  Column (#1): WS_SOLD_DATE_SK(NUMBER)
    AvgLen: 6 NDV: 1839 Nulls: 0 Density: 0.000544 Min: 2450816.000000 Max: 2452641.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.008264 flag = 2048  ("WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK")
    io = NOCOST, cpu = 50.000000, sel = 0.004997 flag = 2048  ("DATE_DIM"."D_YEAR"=2001)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("DATE_DIM"."D_MOY">=1)
    io = NOCOST, cpu = 50.000000, sel = 0.329224 flag = 2048  ("DATE_DIM"."D_MOY"<=4)
  Total Scan IO  Cost  =   409.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 73049.000000 (#rows))
                       =   409.000000
  Total Scan CPU  Cost =   33398564.400000 (scan (Disk))
                         + 3670900.482165 (cpu filter eval) (= 50.252577 (per row) * 73049.000000 (#rows))
                       =   37069464.882165
  Inner table: DATE_DIM  Alias: DATE_DIM
  Access Path: TableScan
    NL Join:  Cost: 15172.116421  Resp: 15172.116421  Degree: 1
      Cost_io: 15137.000000  Cost_cpu: 1371606086
      Resp_io: 15137.000000  Resp_cpu: 1371606086
 ****** Costing Index D_DATE_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: D_DATE_PK_IDX
    resc_io: 1.000000  resc_cpu: 9382
    ix_sel: 1.3689e-05  ix_sel_with_filters: 1.3689e-05 
    NL Join (ordered): Cost: 41.009806  Resp: 41.009806  Degree: 1
      Cost_io: 41.000000  Cost_cpu: 383011
      Resp_io: 41.000000  Resp_cpu: 383011
 ****** Costing Index D_DATE_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 
  Estimated selectivity: 1.000000 , endpoint value predicate, col: #9 
  Estimated selectivity: 0.329224 , endpoint value predicate, col: #9 
  Access Path: index (AllEqUnique)
    Index: D_DATE_PK_IDX
    resc_io: 1.000000  resc_cpu: 9382
    ix_sel: 1.3689e-05  ix_sel_with_filters: 1.3689e-05 
    NL Join (ordered): Cost: 41.009806  Resp: 41.009806  Degree: 1
      Cost_io: 41.000000  Cost_cpu: 383011
      Resp_io: 41.000000  Resp_cpu: 383011

  Best NL cost: 41.009806
          resc: 41.009806  resc_io: 41.000000  resc_cpu: 383011
          resp: 41.009806  resp_io: 41.000000  resc_cpu: 383011
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Capping Semi Join Card of HJ/SMJ by inner = 36.690903
Capping Semi Join Card of HJ/SMJ (no post filters) by inner = 36.690903
Capping Semi Join Card of NL by inner = 36.690903
Capping Semi Join Card of without POSQ by inner = 36.690903
Capping Semi Join Card of non adjusted NSQ by inner = 36.690903
Semi Join Card (capped by inner join):  36.690903 = outer (36.945295) * inner (120.166840) * sel (0.008264)
Join Card - Rounded: 37 Computed: 36.690903
  Outer table:  WEB_SALES  Alias: WEB_SALES
    resc: 4.000919  card 36.945295  bytes:   deg: 1  resp: 4.000919
  Inner table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card: 120.166840  bytes:   deg: 1  resp: 411.949216
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     25 Total Rows:            120
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39096166
      Total Temp space used: 0
  SM join: Resc: 416.951091  Resp: 416.951091  [multiMatchCost=0.000000]
SM Join
  SM cost: 416.951091 
     resc: 416.951091 resc_io: 415.000000 resc_cpu: 76207324
     resp: 416.951091 resp_io: 415.000000 resp_cpu: 76207324
  Outer table:  WEB_SALES  Alias: WEB_SALES
    resc: 4.000919  card 36.945295  bytes:   deg: 1  resp: 4.000919
  Inner table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card: 120.166840  bytes:   deg: 1  resp: 411.949216
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.015811  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 415.965946  Resp: 415.965946  [multiMatchCost=0.000000]
HA Join
  HA cost: 415.965946  
     resc: 415.965946 resc_io: 415.000000 resc_cpu: 37728709
     resp: 415.965946 resp_io: 415.000000 resp_cpu: 37728709
Best:: JoinMethod: NestedLoopSemi
       Cost: 41.009806  Degree: 1  Resp: 41.009806  Card: 36.690903 Bytes: 
***********************
Best so far:  Table#: 0  cost: 4.000919  card: 36.945295  bytes: 444.000000
              Table#: 1  cost: 41.009806  card: 36.690903  bytes: 925.000000
***********************

*********************************
Number of join permutations tried: 1
*********************************
*********************
PJE: Partial join eval conversion for query block SEL$3 (#4).
PJE: Table marked for partial join eval: DATE_DIM[DATE_DIM]#1
***********************
Enumerating distribution method (advanced)
--- Distribution method for 
join between WEB_SALES[WEB_SALES](serial) and DATE_DIM[DATE_DIM](serial); jm = 15; right side access path = IndexUnique
kkopqIsSerialJoin: serial NLJ: both inputs serial
---- serial NL-Join -> SERIAL

(newjo-save)    [1 0 ]
LORE: Or-Expansion validity checks failed on query block SEL$3 (#4) because Cost based OR expansion enabled
Transfer Optimizer annotations for query block SEL$3 (#4)
Final cost for query block SEL$3 (#4) - All Rows Plan:
  Best join order: 1
  Cost: 41.009806  Degree: 1  Card: 37.000000  Bytes: 925.000000
  Resc: 41.009806  Resc_io: 41.000000  Resc_cpu: 383011
  Resp: 41.009806  Resp_io: 41.000000  Resc_cpu: 383011
kkoqbc-subheap (delete addr=0x7f04723e8658, in-use=44952, alloc=49272)
kkoqbc-end:
        :
    call(in-use=1011472, alloc=1080992), compile(in-use=2480296, alloc=2482304), execution(in-use=39120, alloc=40536)

kkoqbc: finish optimizing query block SEL$3 (#4)
kkoqbc: optimizing query block SEL$4 (#3)
        
        :
    call(in-use=1009264, alloc=1080992), compile(in-use=2486712, alloc=2489392), execution(in-use=39296, alloc=40536)

kkoqbc-subheap (create addr=0x7f04723e8658)
****************
QUERY BLOCK TEXT
****************
SELECT
                    *
                FROM
                    catalog_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = cs_ship_customer_sk
                    AND cs_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$4 nbfros=2 flg=0
  fro(0): flg=0 objn=74185 hint_alias="CATALOG_SALES"@"SEL$4"
  fro(1): flg=0 objn=74171 hint_alias="DATE_DIM"@"SEL$4"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3255 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: DATE_DIM  Alias: DATE_DIM
  #Rows: 73049  SSZ: 0  LGR: 0  #Blks:  1510  AvgRowLen:  128.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): D_DATE_SK(NUMBER)
    AvgLen: 6 NDV: 73049 Nulls: 0 Density: 0.000014 Min: 2415022.000000 Max: 2488070.000000
Index Stats::
  Index: D_DATE_PK_IDX  Col#: 1
  LVLS: 1  #LB: 163  #DK: 73049  LB/K: 1.00  DB/K: 1.00  CLUF: 1402.00  NRW: 73049.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table: CATALOG_SALES  Alias: CATALOG_SALES  (Using composite stats)
  #Rows: 72077400  SSZ: 0  LGR: 0  #Blks:  1645494  AvgRowLen:  168.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
Index Stats::
  Index: CATALOG_SALES_IDX2  Col#: 8 1
  LVLS: 3  #LB: 261734  #DK: 5997411  LB/K: 1.00  DB/K: 12.00  CLUF: 72077362.00  NRW: 72077400.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
  Index: CATALOG_SALES_PK_IDX  Col#: 16 18
  LVLS: 2  #LB: 249644  #DK: 71913105  LB/K: 1.00  DB/K: 1.00  CLUF: 71898009.00  NRW: 71913105.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
try to generate single-table filter predicates from ORs for query block SEL$4 (#3)
finally: "CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B1 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4

=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$4 (#3)
Applicable DS directives:
   dirid = 11267665714990475542, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74185)[8]}
   dirid = 13969931850241126217, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {C(74171)[7, 9]}
   dirid = 2090373381697137251, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {(74185)[]; F(74171)[]}
   dirid = 14483145493039253896, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {(74185)[]; (74171)[]}
Checking valid directives for the query block
  SPD: Return code in qosdDSDirSetup: NODIR, estType = QUERY_BLOCK
Return code in qosdSetupDirCtx4QB: EXISTS
=====================================
SPD: END context at query block level
=====================================
Access path analysis for CATALOG_SALES
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for CATALOG_SALES[CATALOG_SALES] 
  SPD: Return code in qosdDSDirSetup: NODIR, estType = TABLE

 kkecdn: Single Table Predicate:"CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B1
NOTE: ignoring histogram of column (CATALOG_SALES.CS_SHIP_CUSTOMER_SK)
      used only for incremental stats maintenance
  Column (#8): CS_SHIP_CUSTOMER_SK(NUMBER)
    AvgLen: 6 NDV: 1037120 Nulls: 0 Density: 0.000001 Min: 1.000000 Max: 1079999.000000
  Estimated selectivity: 9.6421e-07 , col: #8 
  Table: CATALOG_SALES  Alias: CATALOG_SALES
    Card: Original: 72077400.000000  Rounded: 69  Computed: 69.497647  Non Adjusted: 69.497647
  Scan IO  Cost (Disk) =   445656.000000
  Scan CPU Cost (Disk) =   32620732791.360001
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000001 flag = 2048  ("CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B1)
  Total Scan IO  Cost  =   445656.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 72077400.000000 (#rows))
                       =   445656.000000
  Total Scan CPU  Cost =   32620732791.360001 (scan (Disk))
                         + 3603870000.000000 (cpu filter eval) (= 50.000000 (per row) * 72077400.000000 (#rows))
                       =   36224602791.360001
  Access Path: TableScan
    Cost:  446583.437120  Resp: 446583.437120  Degree: 0
      Cost_io: 445656.000000  Cost_cpu: 36224602791
      Resp_io: 445656.000000  Resp_cpu: 36224602791
  Access Path: index (index (FFS))
    Index: CATALOG_SALES_IDX2
    resc_io: 70888.000000  resc_cpu: 14117080977
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  71249.431290  Resp: 71249.431290  Degree: 1
      Cost_io: 70888.000000  Cost_cpu: 14117080977
      Resp_io: 70888.000000  Resp_cpu: 14117080977
 ****** Costing Index CATALOG_SALES_IDX2
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER

  Estimated selectivity: 9.6421e-07 , col: #8 
  Access Path: index (IndexOnly)
    Index: CATALOG_SALES_IDX2
    resc_io: 4.000000  resc_cpu: 42486
    ix_sel: 9.6421e-07  ix_sel_with_filters: 9.6421e-07 
    Cost: 4.001088  Resp: 4.001088  Degree: 1
  Best:: AccessPath: IndexRange
  Index: CATALOG_SALES_IDX2
         Cost: 4.001088  Degree: 1  Resp: 4.001088  Card: 69.497647  Bytes: 0.000000

Access path analysis for DATE_DIM
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for DATE_DIM[DATE_DIM] 
  SPD: Directive valid: dirid = 13969931850241126217, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {C(74171)[7, 9]}
  SPD: Return code in qosdDSDirSetup: EXISTS, estType = TABLE
  Column (#7): 
    NewDensity:0.000007, OldDensity:0.000007 BktCnt:73049.000000, PopBktCnt:73048.000000, PopValCnt:200, NDV:201
  Column (#7): D_YEAR(NUMBER)
    AvgLen: 4 NDV: 201 Nulls: 0 Density: 0.000007 Min: 1900.000000 Max: 2100.000000
    Histogram: Freq  #Bkts: 201  UncompBkts: 73049  EndPtVals: 201  ActualVal: yes
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 


 kkecdn: Single Table Predicate:"DATE_DIM"."D_YEAR"=2001
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY">=1
  Column (#9): 
    NewDensity:0.038666, OldDensity:0.000007 BktCnt:73049.000000, PopBktCnt:73049.000000, PopValCnt:12, NDV:12
  Column (#9): D_MOY(NUMBER)
    AvgLen: 3 NDV: 12 Nulls: 0 Density: 0.038666 Min: 1.000000 Max: 12.000000
    Histogram: Freq  #Bkts: 12  UncompBkts: 73049  EndPtVals: 12  ActualVal: yes
  Estimated selectivity: 1.000000 , endpoint value predicate, col: #9 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY"<=4
  Estimated selectivity: 0.329224 , endpoint value predicate, col: #9 
  Table: DATE_DIM  Alias: DATE_DIM
    Card: Original: 73049.000000  Rounded: 120  Computed: 120.166840  Non Adjusted: 120.166840
  Scan IO  Cost (Disk) =   411.000000
  Scan CPU Cost (Disk) =   33398564.400000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.004997 flag = 2048  ("DATE_DIM"."D_YEAR"=2001)
    io = NOCOST, cpu = 50.000000, sel = 0.329224 flag = 2048  ("DATE_DIM"."D_MOY"<=4)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("DATE_DIM"."D_MOY">=1)
  Total Scan IO  Cost  =   411.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 73049.000000 (#rows))
                       =   411.000000
  Total Scan CPU  Cost =   33398564.400000 (scan (Disk))
                         + 3676708.342003 (cpu filter eval) (= 50.332083 (per row) * 73049.000000 (#rows))
                       =   37075272.742003
  Access Path: TableScan
    Cost:  411.949216  Resp: 411.949216  Degree: 0
      Cost_io: 411.000000  Cost_cpu: 37075273
      Resp_io: 411.000000  Resp_cpu: 37075273
  Best:: AccessPath: TableScan
         Cost: 411.949216  Degree: 1  Resp: 411.949216  Card: 120.166840  Bytes: 0.000000

***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE: Checking validity of partial join eval on query block SEL$4 (#3)
PJE: Passed validity of partial join eval by query block SEL$4 (#3)
number: [0]
PJE: Partial join eval conversion for query block SEL$4 (#3).
PJE: Table marked for partial join eval: DATE_DIM[DATE_DIM]#1
***********************
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  CATALOG_SALES[CATALOG_SALES]#0  DATE_DIM[DATE_DIM]#1

***************
Now joining: DATE_DIM[DATE_DIM]#1
***************
NL Join
  Outer table: Card: 69.497647  Cost: 4.001088  Resp: 4.001088  Degree: 1  Bytes: 
Access path analysis for DATE_DIM
  Scan IO  Cost (Disk) =   408.985507
  Scan CPU Cost (Disk) =   33398564.400000
NOTE: ignoring histogram of column (CATALOG_SALES.CS_SOLD_DATE_SK)
      used only for incremental stats maintenance
  Column (#1): CS_SOLD_DATE_SK(NUMBER)
    AvgLen: 6 NDV: 1849 Nulls: 0 Density: 0.000541 Min: 2450815.000000 Max: 2452647.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.008264 flag = 2048  ("CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK")
    io = NOCOST, cpu = 50.000000, sel = 0.004997 flag = 2048  ("DATE_DIM"."D_YEAR"=2001)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("DATE_DIM"."D_MOY">=1)
    io = NOCOST, cpu = 50.000000, sel = 0.329224 flag = 2048  ("DATE_DIM"."D_MOY"<=4)
  Total Scan IO  Cost  =   408.985507 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 73049.000000 (#rows))
                       =   408.985507
  Total Scan CPU  Cost =   33398564.400000 (scan (Disk))
                         + 3670900.482165 (cpu filter eval) (= 50.252577 (per row) * 73049.000000 (#rows))
                       =   37069464.882165
  Inner table: DATE_DIM  Alias: DATE_DIM
  Access Path: TableScan
    NL Join:  Cost: 28289.486754  Resp: 28289.486754  Degree: 1
      Cost_io: 28224.000000  Cost_cpu: 2557835563
      Resp_io: 28224.000000  Resp_cpu: 2557835563
 ****** Costing Index D_DATE_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: D_DATE_PK_IDX
    resc_io: 1.000000  resc_cpu: 9382
    ix_sel: 1.3689e-05  ix_sel_with_filters: 1.3689e-05 
    NL Join (ordered): Cost: 73.017661  Resp: 73.017661  Degree: 1
      Cost_io: 73.000000  Cost_cpu: 689828
      Resp_io: 73.000000  Resp_cpu: 689828
 ****** Costing Index D_DATE_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 
  Estimated selectivity: 1.000000 , endpoint value predicate, col: #9 
  Estimated selectivity: 0.329224 , endpoint value predicate, col: #9 
  Access Path: index (AllEqUnique)
    Index: D_DATE_PK_IDX
    resc_io: 1.000000  resc_cpu: 9382
    ix_sel: 1.3689e-05  ix_sel_with_filters: 1.3689e-05 
    NL Join (ordered): Cost: 73.017661  Resp: 73.017661  Degree: 1
      Cost_io: 73.000000  Cost_cpu: 689828
      Resp_io: 73.000000  Resp_cpu: 689828

  Best NL cost: 73.017661
          resc: 73.017661  resc_io: 73.000000  resc_cpu: 689828
          resp: 73.017661  resp_io: 73.000000  resc_cpu: 689828
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Capping Semi Join Card of HJ/SMJ by inner = 69.019113
Capping Semi Join Card of HJ/SMJ (no post filters) by inner = 69.019113
Capping Semi Join Card of NL by inner = 69.019113
Capping Semi Join Card of without POSQ by inner = 69.019113
Capping Semi Join Card of non adjusted NSQ by inner = 69.019113
Semi Join Card (capped by inner join):  69.019113 = outer (69.497647) * inner (120.166840) * sel (0.008264)
Join Card - Rounded: 69 Computed: 69.019113
  Outer table:  CATALOG_SALES  Alias: CATALOG_SALES
    resc: 4.001088  card 69.497647  bytes:   deg: 1  resp: 4.001088
  Inner table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card: 120.166840  bytes:   deg: 1  resp: 411.949216
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     25 Total Rows:            120
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39096166
      Total Temp space used: 0
  SM join: Resc: 416.951260  Resp: 416.951260  [multiMatchCost=0.000000]
SM Join
  SM cost: 416.951260 
     resc: 416.951260 resc_io: 415.000000 resc_cpu: 76213924
     resp: 416.951260 resp_io: 415.000000 resp_cpu: 76213924
  Outer table:  CATALOG_SALES  Alias: CATALOG_SALES
    resc: 4.001088  card 69.497647  bytes:   deg: 1  resp: 4.001088
  Inner table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card: 120.166840  bytes:   deg: 1  resp: 411.949216
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.015934  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 415.966238  Resp: 415.966238  [multiMatchCost=0.000000]
HA Join
  HA cost: 415.966238  
     resc: 415.966238 resc_io: 415.000000 resc_cpu: 37740109
     resp: 415.966238 resp_io: 415.000000 resp_cpu: 37740109
Best:: JoinMethod: NestedLoopSemi
       Cost: 73.017661  Degree: 1  Resp: 73.017661  Card: 69.019113 Bytes: 
***********************
Best so far:  Table#: 0  cost: 4.001088  card: 69.497647  bytes: 828.000000
              Table#: 1  cost: 73.017661  card: 69.019113  bytes: 1725.000000
***********************

*********************************
Number of join permutations tried: 1
*********************************
*********************
PJE: Partial join eval conversion for query block SEL$4 (#3).
PJE: Table marked for partial join eval: DATE_DIM[DATE_DIM]#1
***********************
Enumerating distribution method (advanced)
--- Distribution method for 
join between CATALOG_SALES[CATALOG_SALES](serial) and DATE_DIM[DATE_DIM](serial); jm = 15; right side access path = IndexUnique
kkopqIsSerialJoin: serial NLJ: both inputs serial
---- serial NL-Join -> SERIAL

(newjo-save)    [1 0 ]
LORE: Or-Expansion validity checks failed on query block SEL$4 (#3) because Cost based OR expansion enabled
Transfer Optimizer annotations for query block SEL$4 (#3)
Final cost for query block SEL$4 (#3) - All Rows Plan:
  Best join order: 1
  Cost: 73.017661  Degree: 1  Card: 69.000000  Bytes: 1725.000000
  Resc: 73.017661  Resc_io: 73.000000  Resc_cpu: 689828
  Resp: 73.017661  Resp_io: 73.000000  Resc_cpu: 689828
kkoqbc-subheap (delete addr=0x7f04723e8658, in-use=52808, alloc=65704)
kkoqbc-end:
        :
    call(in-use=1044208, alloc=1130200), compile(in-use=2519168, alloc=2521424), execution(in-use=39704, alloc=40536)

kkoqbc: finish optimizing query block SEL$4 (#3)
kkoqbc: optimizing query block SEL$2 (#2)
        
        :
    call(in-use=1042000, alloc=1130200), compile(in-use=2525744, alloc=2529712), execution(in-use=39864, alloc=40536)

kkoqbc-subheap (create addr=0x7f04723e8658)
****************
QUERY BLOCK TEXT
****************
SELECT
            *
        FROM
            store_sales ss,
            date_dim
        WHERE
            c.c_customer_sk = ss.ss_customer_sk
            AND ss_sold_date_sk = d_date_sk
            AND d_year = 2001
            AND d_moy BETWEEN 1 AND 1 + 3
            AND ( EXISTS (
                SELECT
                    *
                FROM
                    web_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = ws_bill_customer_sk
                    AND ws_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            )
                  OR EXISTS (
                SELECT
                    *
                FROM
                    catalog_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = cs_ship_customer_sk
                    AND cs_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            ) )
    
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$2 nbfros=2 flg=0
  fro(0): flg=0 objn=74171 hint_alias="DATE_DIM"@"SEL$2"
  fro(1): flg=0 objn=74191 hint_alias="SS"@"SEL$2"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3255 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: DATE_DIM  Alias: DATE_DIM
  #Rows: 73049  SSZ: 0  LGR: 0  #Blks:  1510  AvgRowLen:  128.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): D_DATE_SK(NUMBER)
    AvgLen: 6 NDV: 73049 Nulls: 0 Density: 0.000014 Min: 2415022.000000 Max: 2488070.000000
Index Stats::
  Index: D_DATE_PK_IDX  Col#: 1
  LVLS: 1  #LB: 163  #DK: 73049  LB/K: 1.00  DB/K: 1.00  CLUF: 1402.00  NRW: 73049.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table: STORE_SALES  Alias: SS  (Using composite stats)
  #Rows: 144020200  SSZ: 0  LGR: 0  #Blks:  2304802  AvgRowLen:  117.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
Index Stats::
  Index: STORE_SALES_IDX2  Col#: 4 1
  LVLS: 3  #LB: 522970  #DK: 11965122  LB/K: 1.00  DB/K: 12.00  CLUF: 143898920.00  NRW: 144020200.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
  Index: STORE_SALES_PK_IDX  Col#: 3 10
  LVLS: 3  #LB: 497464  #DK: 141527398  LB/K: 1.00  DB/K: 1.00  CLUF: 141365556.00  NRW: 141527398.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
try to generate single-table filter predicates from ORs for query block SEL$2 (#2)
finally: "SS"."SS_CUSTOMER_SK"=:B1 AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND ( EXISTS (SELECT 0 FROM "WEB_SALES" "WEB_SALES","DATE_DIM" "DATE_DIM" WHERE "WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B2 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1) OR  EXISTS (SELECT 0 FROM "CATALOG_SALES" "CATALOG_SALES","DATE_DIM" "DATE_DIM" WHERE "CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B3 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1))

=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$2 (#2)
Applicable DS directives:
   dirid = 10827845680942532126, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {F(74191)[]; F(74171)[]}
   dirid = 7660518587836633700, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74191)[4]}
   dirid = 13969931850241126217, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {C(74171)[7, 9]}
   dirid = 2361553282592865451, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {(74191)[]; F(74171)[]}
   dirid = 12943986683386070018, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {(74191)[]; (74171)[]}
Checking valid directives for the query block
  SPD: Return code in qosdDSDirSetup: NODIR, estType = QUERY_BLOCK
Return code in qosdSetupDirCtx4QB: EXISTS
=====================================
SPD: END context at query block level
=====================================
Access path analysis for STORE_SALES
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for STORE_SALES[SS] 
  SPD: Return code in qosdDSDirSetup: NODIR, estType = TABLE

 kkecdn: Single Table Predicate:"SS"."SS_CUSTOMER_SK"=:B1
NOTE: ignoring histogram of column (STORE_SALES.SS_CUSTOMER_SK)
      used only for incremental stats maintenance
  Column (#4): SS_CUSTOMER_SK(NUMBER)
    AvgLen: 6 NDV: 1039371 Nulls: 0 Density: 0.000001 Min: 1.000000 Max: 1079999.000000
  Estimated selectivity: 9.6212e-07 , col: #4 
  Table: STORE_SALES  Alias: SS
    Card: Original: 144020200.000000  Rounded: 139  Computed: 138.564767  Non Adjusted: 138.564767
  Scan IO  Cost (Disk) =   624219.000000
  Scan CPU Cost (Disk) =   46657751154.880005
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000001 flag = 2048  ("SS"."SS_CUSTOMER_SK"=:B1)
  Total Scan IO  Cost  =   624219.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 144020200.000000 (#rows))
                       =   624219.000000
  Total Scan CPU  Cost =   46657751154.880005 (scan (Disk))
                         + 7201010000.000000 (cpu filter eval) (= 50.000000 (per row) * 144020200.000000 (#rows))
                       =   53858761154.880005
  Access Path: TableScan
    Cost:  625597.914066  Resp: 625597.914066  Degree: 0
      Cost_io: 624219.000000  Cost_cpu: 53858761155
      Resp_io: 624219.000000  Resp_cpu: 53858761155
  Access Path: index (index (FFS))
    Index: STORE_SALES_IDX2
    resc_io: 141639.000000  resc_cpu: 28207733477
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  142361.185947  Resp: 142361.185947  Degree: 1
      Cost_io: 141639.000000  Cost_cpu: 28207733477
      Resp_io: 141639.000000  Resp_cpu: 28207733477
 ****** Costing Index STORE_SALES_IDX2
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER

  Estimated selectivity: 9.6212e-07 , col: #4 
  Access Path: index (IndexOnly)
    Index: STORE_SALES_IDX2
    resc_io: 4.000000  resc_cpu: 56286
    ix_sel: 9.6212e-07  ix_sel_with_filters: 9.6212e-07 
    Cost: 4.001441  Resp: 4.001441  Degree: 1
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: IndexRange
  Index: STORE_SALES_IDX2
         Cost: 4.001441  Degree: 1  Resp: 4.001441  Card: 138.564767  Bytes: 0.000000

Access path analysis for DATE_DIM
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for DATE_DIM[DATE_DIM] 
  SPD: Directive valid: dirid = 13969931850241126217, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {C(74171)[7, 9]}
  SPD: Return code in qosdDSDirSetup: EXISTS, estType = TABLE
  Column (#7): 
    NewDensity:0.000007, OldDensity:0.000007 BktCnt:73049.000000, PopBktCnt:73048.000000, PopValCnt:200, NDV:201
  Column (#7): D_YEAR(NUMBER)
    AvgLen: 4 NDV: 201 Nulls: 0 Density: 0.000007 Min: 1900.000000 Max: 2100.000000
    Histogram: Freq  #Bkts: 201  UncompBkts: 73049  EndPtVals: 201  ActualVal: yes
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 


 kkecdn: Single Table Predicate:"DATE_DIM"."D_YEAR"=2001
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY">=1
  Column (#9): 
    NewDensity:0.038666, OldDensity:0.000007 BktCnt:73049.000000, PopBktCnt:73049.000000, PopValCnt:12, NDV:12
  Column (#9): D_MOY(NUMBER)
    AvgLen: 3 NDV: 12 Nulls: 0 Density: 0.038666 Min: 1.000000 Max: 12.000000
    Histogram: Freq  #Bkts: 12  UncompBkts: 73049  EndPtVals: 12  ActualVal: yes
  Estimated selectivity: 1.000000 , endpoint value predicate, col: #9 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY"<=4
  Estimated selectivity: 0.329224 , endpoint value predicate, col: #9 
  Table: DATE_DIM  Alias: DATE_DIM
    Card: Original: 73049.000000  Rounded: 120  Computed: 120.166840  Non Adjusted: 120.166840
  Scan IO  Cost (Disk) =   411.000000
  Scan CPU Cost (Disk) =   33398564.400000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.004997 flag = 2048  ("DATE_DIM"."D_YEAR"=2001)
    io = NOCOST, cpu = 50.000000, sel = 0.329224 flag = 2048  ("DATE_DIM"."D_MOY"<=4)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("DATE_DIM"."D_MOY">=1)
  Total Scan IO  Cost  =   411.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 73049.000000 (#rows))
                       =   411.000000
  Total Scan CPU  Cost =   33398564.400000 (scan (Disk))
                         + 3676708.342003 (cpu filter eval) (= 50.332083 (per row) * 73049.000000 (#rows))
                       =   37075272.742003
  Access Path: TableScan
    Cost:  411.949216  Resp: 411.949216  Degree: 0
      Cost_io: 411.000000  Cost_cpu: 37075273
      Resp_io: 411.000000  Resp_cpu: 37075273
  ****** trying bitmap/domain indexes ******
 ****** Costing Index D_DATE_PK_IDX
  Access Path: index (FullScan)
    Index: D_DATE_PK_IDX
    resc_io: 164.000000  resc_cpu: 15777716
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 164.403948  Resp: 164.403948  Degree: 0
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: TableScan
         Cost: 411.949216  Degree: 1  Resp: 411.949216  Card: 120.166840  Bytes: 0.000000

***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE: Checking validity of partial join eval on query block SEL$2 (#2)
PJE: Passed validity of partial join eval by query block SEL$2 (#2)
number: [0]
PJE: Partial join eval conversion for query block SEL$2 (#2).
PJE: Table marked for partial join eval: STORE_SALES[SS]#1
***********************
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  DATE_DIM[DATE_DIM]#0  STORE_SALES[SS]#1

***************
Now joining: STORE_SALES[SS]#1
***************
NL Join
  Outer table: Card: 120.166840  Cost: 411.949216  Resp: 411.949216  Degree: 1  Bytes: 
Access path analysis for STORE_SALES
  Scan IO  Cost (Disk) =   624217.216667
  Scan CPU Cost (Disk) =   46657751154.880005
NOTE: ignoring histogram of column (STORE_SALES.SS_SOLD_DATE_SK)
      used only for incremental stats maintenance
  Column (#1): SS_SOLD_DATE_SK(NUMBER)
    AvgLen: 6 NDV: 1849 Nulls: 0 Density: 0.000541 Min: 2450816.000000 Max: 2452651.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000001 flag = 2064  ("SS"."SS_CUSTOMER_SK"=:B1)
    io = NOCOST, cpu = 50.000000, sel = 0.007463 flag = 2048  ("SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK")
  Total Scan IO  Cost  =   624217.216667 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 144020200.000000 (#rows))
                       =   624217.216667
  Total Scan CPU  Cost =   46657751154.880005 (scan (Disk))
                         + 7201016928.238328 (cpu filter eval) (= 50.000048 (per row) * 144020200.000000 (#rows))
                       =   53858768083.118332
  Inner table: STORE_SALES  Alias: SS
  Access Path: TableScan
    NL Join:  Cost: 75071947.658387  Resp: 75071947.658387  Degree: 1
      Cost_io: 74906477.000000  Cost_cpu: 6463089245247
      Resp_io: 74906477.000000  Resp_cpu: 6463089245247
  Access Path: index (index (FFS))
    Index: STORE_SALES_IDX2
    resc_io: 141637.716667  resc_cpu: 28207740405
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: STORE_SALES  Alias: SS
  Access Path: index (FFS)
    NL Join:  Cost: 17083600.284196  Resp: 17083600.284196  Degree: 1
      Cost_io: 16996937.000000  Cost_cpu: 3384965923877
      Resp_io: 16996937.000000  Resp_cpu: 3384965923877
 ****** Costing Index STORE_SALES_IDX2
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 8.3576e-08
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 8.3576e-08
  Estimated selectivity: 9.6212e-07 , col: #4 
  Access Path: index (AllEqJoinGuess)
    Index: STORE_SALES_IDX2
    resc_io: 3.000000  resc_cpu: 22414
    ix_sel: 6.9435e-09  ix_sel_with_filters: 6.9435e-09 
    NL Join : Cost: 772.018080  Resp: 772.018080  Degree: 1
      Cost_io: 771.000000  Cost_cpu: 39764991
      Resp_io: 771.000000  Resp_cpu: 39764991
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 772.018080
          resc: 772.018080  resc_io: 771.000000  resc_cpu: 39764991
          resp: 772.018080  resp_io: 771.000000  resc_cpu: 39764991
  SPD: Directive valid: dirid = 10827845680942532126, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {F(74191)[]; F(74171)[]}
  SPD: Return code in qosdDSDirSetup: EXISTS, estType = JOIN
Semi Join Card:  120.166840 = outer (120.166840) * sel (1.000000)
Join Card - Rounded: 120 Computed: 120.166840
  Outer table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card 120.166840  bytes:   deg: 1  resp: 411.949216
  Inner table:  STORE_SALES  Alias: SS
    resc: 4.001441  card: 138.564767  bytes:   deg: 1  resp: 4.001441
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     25 Total Rows:            120
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39096166
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     24 Total Rows:            139
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39103407
      Total Temp space used: 0
  SM join: Resc: 417.952755  Resp: 417.952755  [multiMatchCost=0.000000]
SM Join
  SM cost: 417.952755 
     resc: 417.952755 resc_io: 415.000000 resc_cpu: 115331131
     resp: 417.952755 resp_io: 415.000000 resp_cpu: 115331131
SM Join (with index on outer)
 ****** Costing Index D_DATE_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (FullScan)
    Index: D_DATE_PK_IDX
    resc_io: 1566.000000  resc_cpu: 52083873
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1567.333473  Resp: 1567.333473  Degree: 1
  Outer table:  DATE_DIM  Alias: DATE_DIM
    resc: 1567.333473  card 120.166840  bytes:   deg: 1  resp: 1567.333473
  Inner table:  STORE_SALES  Alias: SS
    resc: 4.001441  card: 138.564767  bytes:   deg: 1  resp: 4.001441
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     24 Total Rows:            139
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39103407
      Total Temp space used: 0
  SM join: Resc: 1572.336055  Resp: 1572.336055  [multiMatchCost=0.000000]
  Outer table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card 120.166840  bytes:   deg: 1  resp: 411.949216
  Inner table:  STORE_SALES  Alias: SS
    resc: 4.001441  card: 138.564767  bytes:   deg: 1  resp: 4.001441
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016178  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 415.966836  Resp: 415.966836  [multiMatchCost=0.000000]
HA Join
  HA cost: 415.966836  
     resc: 415.966836 resc_io: 415.000000 resc_cpu: 37763459
     resp: 415.966836 resp_io: 415.000000 resp_cpu: 37763459
Best:: JoinMethod: HashSemi
       Cost: 415.966836  Degree: 1  Resp: 415.966836  Card: 120.166840 Bytes: 
***********************
Best so far:  Table#: 0  cost: 411.949216  card: 120.166840  bytes: 1560.000000
              Table#: 1  cost: 415.966836  card: 120.166840  bytes: 3000.000000
***********************

*********************************
Number of join permutations tried: 1
*********************************
*********************
PJE: Partial join eval conversion for query block SEL$2 (#2).
PJE: Table marked for partial join eval: STORE_SALES[SS]#1
***********************
Enumerating distribution method (advanced)
--- Distribution method for 
join between DATE_DIM[DATE_DIM](serial) and SS[STORE_SALES](serial); jm = 2; right side access path = IndexRange
---- serial Hash-Join -> NONE

kkoaccsqf: Current query block SEL$2 (#2) is serial
kkoaccsqf: correlated subquery query block SEL$3 (#4) in filter               : serial
(newjo-save)    [0 1 ]
LORE: Or-Expansion validity checks failed on query block SEL$2 (#2) because Cost based OR expansion enabled
Transfer Optimizer annotations for query block SEL$2 (#2)
Final cost for query block SEL$2 (#2) - All Rows Plan:
  Best join order: 1
  Cost: 415.966836  Degree: 1  Card: 120.000000  Bytes: 3000.000000
  Resc: 415.966836  Resc_io: 415.000000  Resc_cpu: 37763459
  Resp: 415.966836  Resp_io: 415.000000  Resc_cpu: 37763459
kkoqbc-subheap (delete addr=0x7f04723e8658, in-use=63832, alloc=65704)
kkoqbc-end:
        :
    call(in-use=1080712, alloc=1162936), compile(in-use=2561120, alloc=2561848), execution(in-use=40696, alloc=44592)

kkoqbc: finish optimizing query block SEL$2 (#2)
kkoqbc: optimizing query block SEL$4C89B77A (#11)
        
        :
    call(in-use=1078504, alloc=1162936), compile(in-use=2565264, alloc=2565992), execution(in-use=40808, alloc=44592)

kkoqbc-subheap (create addr=0x7f04723e8658)
****************
QUERY BLOCK TEXT
****************
Not available.
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$4C89B77A nbfros=1 flg=0
  fro(0): flg=0 objn=74170 hint_alias="CUSTOMER_DEMOGRAPHICS"@"SEL$1"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3255 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
  #Rows: 1920800  SSZ: 0  LGR: 0  #Blks:  17254  AvgRowLen:  54.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
Index Stats::
  Index: CD_DEMO_PK_IDX  Col#: 1
  LVLS: 2  #LB: 4138  #DK: 1920800  LB/K: 1.00  DB/K: 1.00  CLUF: 795806.00  NRW: 1920800.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
try to generate single-table filter predicates from ORs for query block SEL$4C89B77A (#11)
=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$4C89B77A (#11)
Applicable DS directives:
   dirid = 7754152966831092939, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {EC(74170)[3, 4]}
Checking valid directives for the query block
  SPD: Return code in qosdDSDirSetup: NODIR, estType = QUERY_BLOCK
Return code in qosdSetupDirCtx4QB: EXISTS
=====================================
SPD: END context at query block level
=====================================
Access path analysis for CUSTOMER_DEMOGRAPHICS
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS] 
  SPD: Return code in qosdDSDirSetup: NODIR, estType = TABLE
  Table: CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
    Card: Original: 1920800.000000  Rounded: 1920800  Computed: 1920800.000000  Non Adjusted: 1920800.000000
  Scan IO  Cost (Disk) =   4675.000000
  Scan CPU Cost (Disk) =   718321325.760000
  Total Scan IO  Cost  =   4675.000000 (scan (Disk))
                       =   4675.000000
  Total Scan CPU  Cost =   718321325.760000 (scan (Disk))
                       =   718321325.760000
  Access Path: TableScan
    Cost:  4693.390757  Resp: 4693.390757  Degree: 0
      Cost_io: 4675.000000  Cost_cpu: 718321326
      Resp_io: 4675.000000  Resp_cpu: 718321326
  Best:: AccessPath: TableScan
         Cost: 4693.390757  Degree: 1  Resp: 4693.390757  Card: 1920800.000000  Bytes: 0.000000

***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE:  Bypassed; QB has a single table SEL$4C89B77A (#11)
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS]#0
***********************
Best so far:  Table#: 0  cost: 4693.390757  card: 1920800.000000  bytes: 103723200.000000
***********************

*********************************
Number of join permutations tried: 1
*********************************
Enumerating distribution method (advanced)

LORE: Or-Expansion validity checks failed on query block SEL$4C89B77A (#11) because Cost based OR expansion enabled
Transfer Optimizer annotations for query block SEL$4C89B77A (#11)
Final cost for query block SEL$4C89B77A (#11) - All Rows Plan:
  Best join order: 1
  Cost: 4693.390757  Degree: 1  Card: 1920800.000000  Bytes: 103723200.000000
  Resc: 4693.390757  Resc_io: 4675.000000  Resc_cpu: 718321326
  Resp: 4693.390757  Resp_io: 4675.000000  Resc_cpu: 718321326
kkoqbc-subheap (delete addr=0x7f04723e8658, in-use=24640, alloc=32840)
kkoqbc-end:
        :
    call(in-use=1086048, alloc=1162936), compile(in-use=2581528, alloc=2585616), execution(in-use=40808, alloc=44592)

kkoqbc: finish optimizing query block SEL$4C89B77A (#11)
kkoqbc: optimizing query block SEL$5084BC99 (#1)
        
        :
    call(in-use=1083840, alloc=1162936), compile(in-use=2590104, alloc=2593904), execution(in-use=41048, alloc=44592)

kkoqbc-subheap (create addr=0x7f04723e8658)
****************
QUERY BLOCK TEXT
****************
SELECT /*query10*/
    cd_gender,
    cd_marital_status,
    cd_education_status,
    COUNT(*) cnt1,
    cd_purchase_estimate,
    COUNT(*) cnt2,
    cd_credit_rating,
    COUNT(*) cnt3,
    cd_dep_count,
    COUNT(*) cnt4,
    cd_dep_employed_count,
    COUNT(*) cnt5,
    cd_dep_college_count,
    COUNT(*) cnt6
FROM
    customer c,
    customer_address ca,
    customer_demographics
WHERE
    -- join predicates
        c.c_current_addr_sk = ca.ca_address_sk
    AND cd_demo_sk = c.c_current_cdemo_sk
    -- filter predicates
    AND ca.ca_county IN (
        'Chouteau County',
        'Dixie County',
        'Harrisonburg city',
        'Lowndes County',
        'Dinwiddie County'
    )
    -- filter predicate (subquery)
    AND EXISTS (
        SELECT
            *
        FROM
            store_sales ss,
            date_dim
        WHERE
            c.c_customer_sk = ss.ss_customer_sk
            AND ss_sold_date_sk = d_date_sk
            AND d_year = 2001
            AND d_moy BETWEEN 1 AND 1 + 3
            AND ( EXISTS (
                SELECT
                    *
                FROM
                    web_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = ws_bill_customer_sk
                    AND ws_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            )
                  OR EXISTS (
                SELECT
                    *
                FROM
                    catalog_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = cs_ship_customer_sk
                    AND cs_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            ) )
    )
GROUP BY
    cd_gender,
    cd_marital_status,
    cd_education_status,
    cd_purchase_estimate,
    cd_credit_rating,
    cd_dep_count,
    cd_dep_employed_count,
    cd_dep_college_count

---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$5084BC99 nbfros=3 flg=0
  fro(0): flg=0 objn=74168 hint_alias="C"@"SEL$1"
  fro(1): flg=0 objn=74169 hint_alias="CA"@"SEL$1"
  fro(2): flg=1 objn=0 hint_alias="VW_GBF_7"@"SEL$FD007FC2"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3255 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: CUSTOMER_ADDRESS  Alias: CA
  #Rows: 540000  SSZ: 0  LGR: 0  #Blks:  13174  AvgRowLen:  152.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): CA_ADDRESS_SK(NUMBER)
    AvgLen: 5 NDV: 540000 Nulls: 0 Density: 0.000002 Min: 1.000000 Max: 540000.000000
  Column (#8): CA_COUNTY(VARCHAR2)
    AvgLen: 16 NDV: 1877 Nulls: 0 Density: 0.000471
    Histogram: Hybrid  #Bkts: 254  UncompBkts: 5580  EndPtVals: 254  ActualVal: yes
Index Stats::
  Index: CA_ADDRESS_PK_IDX  Col#: 1
  LVLS: 2  #LB: 1127  #DK: 540000  LB/K: 1.00  DB/K: 1.00  CLUF: 12283.00  NRW: 540000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table: CUSTOMER  Alias:  C
  #Rows: 1080000  SSZ: 0  LGR: 0  #Blks:  23374  AvgRowLen:  138.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): C_CUSTOMER_SK(NUMBER)
    AvgLen: 6 NDV: 1080000 Nulls: 0 Density: 0.000001 Min: 1.000000 Max: 1080000.000000
  Column (#5): C_CURRENT_ADDR_SK(NUMBER)
    AvgLen: 5 NDV: 457472 Nulls: 0 Density: 0.000002 Min: 1.000000 Max: 539997.000000
  Column (#3): C_CURRENT_CDEMO_SK(NUMBER)
    AvgLen: 6 NDV: 772544 Nulls: 0 Density: 0.000001 Min: 18.000000 Max: 1920799.000000
Index Stats::
  Index: CUSTOMER_PK_IDX  Col#: 1
  LVLS: 2  #LB: 2266  #DK: 1080000  LB/K: 1.00  DB/K: 1.00  CLUF: 75684.00  NRW: 1080000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table: VW_GBF_7  Alias: VW_GBF_7  (NOT ANALYZED)
  #Rows: 0  SSZ: 0  LGR: 0  #Blks:  0  AvgRowLen:  0.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 0
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#8): ITEM_8(CHARACTER)
    AvgLen: 2 NDV: 2 Nulls: 0 Density: 0.249925
    Histogram: Freq  #Bkts: 2  UncompBkts: 1920800  EndPtVals: 2  ActualVal: no 
  Column (#9): ITEM_9(CHARACTER)
    AvgLen: 2 NDV: 5 Nulls: 0 Density: 0.098953
    Histogram: Freq  #Bkts: 5  UncompBkts: 1920800  EndPtVals: 5  ActualVal: yes
  Column (#10): ITEM_10(CHARACTER)
    AvgLen: 21 NDV: 7 Nulls: 0 Density: 0.070771
    Histogram: Freq  #Bkts: 7  UncompBkts: 1920800  EndPtVals: 7  ActualVal: yes
  Column (#11): ITEM_11(NUMBER)
    AvgLen: 4 NDV: 9500 Nulls: 0 Density: 0.000105 Min: 500.000000 Max: 9999.000000
  Column (#12): ITEM_12(CHARACTER)
    AvgLen: 11 NDV: 4 Nulls: 0 Density: 0.250000
  Column (#13): ITEM_13(NUMBER)
    AvgLen: 3 NDV: 6 Nulls: 0 Density: 0.166667 Min: 0.000000 Max: 5.000000
  Column (#14): ITEM_14(NUMBER)
    AvgLen: 3 NDV: 6 Nulls: 0 Density: 0.166667 Min: 0.000000 Max: 5.000000
  Column (#15): ITEM_15(NUMBER)
    AvgLen: 3 NDV: 6 Nulls: 0 Density: 0.166667 Min: 0.000000 Max: 5.000000
  Column (#1): ITEM_1(NUMBER)
    AvgLen: 6 NDV: 1920800 Nulls: 0 Density: 0.000001 Min: 1.000000 Max: 1920800.000000
try to generate single-table filter predicates from ORs for query block SEL$5084BC99 (#1)
finally: "C"."C_CURRENT_ADDR_SK"="CA"."CA_ADDRESS_SK" AND "VW_GBF_7"."ITEM_1"="C"."C_CURRENT_CDEMO_SK" AND ("CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County') AND  EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM" WHERE "SS"."SS_CUSTOMER_SK"=:B1 AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND ( EXISTS (SELECT 0 FROM "WEB_SALES" "WEB_SALES","DATE_DIM" "DATE_DIM" WHERE "WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B2 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1) OR  EXISTS (SELECT 0 FROM "CATALOG_SALES" "CATALOG_SALES","DATE_DIM" "DATE_DIM" WHERE "CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B3 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1)))

=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$5084BC99 (#1)
Applicable DS directives:
   dirid = 5181560337004891843, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74169)[]; (74168)[3]}
   dirid = 9316027922818115912, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74168)[3, 5]}
   dirid = 18439699102505563871, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {EC(74169)[8]}
Checking valid directives for the query block
  SPD: Return code in qosdDSDirSetup: NODIR, estType = GROUP_BY
  SPD: Return code in qosdDSDirSetup: NODIR, estType = QUERY_BLOCK
Return code in qosdSetupDirCtx4QB: EXISTS
=====================================
SPD: END context at query block level
=====================================
Access path analysis for VW_GBF_7

Access path analysis for CUSTOMER
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for CUSTOMER[C] 
  SPD: Return code in qosdDSDirSetup: NODIR, estType = TABLE

 kkecdn: Single Table Predicate: EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM" WHERE "SS"."SS_CUSTOMER_SK"=:B1 AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND ( EXISTS (SELECT 0 FROM "WEB_SALES" "WEB_SALES","DATE_DIM" "DATE_DIM" WHERE "WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B2 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1) OR  EXISTS (SELECT 0 FROM "CATALOG_SALES" "CATALOG_SALES","DATE_DIM" "DATE_DIM" WHERE "CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B3 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1)))
  Column (#1): C_CUSTOMER_SK(NUMBER)
    AvgLen: 6 NDV: 1080000 Nulls: 0 Density: 0.000001 Min: 1.000000 Max: 1080000.000000
  Table: CUSTOMER  Alias: C
    Card: Original: 1080000.000000  Rounded: 1080000  Computed: 1080000.000000  Non Adjusted: 1080000.000000
  Scan IO  Cost (Disk) =   6332.000000
  Scan CPU Cost (Disk) =   414856538.560000
  Cost of predicates:
    io = NOCOST, cpu = 20.000000, sel = 0.050000 flag = 2562  ( EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM" WHERE "SS"."SS_CUSTOMER_SK"=:B1 AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND ( EXISTS (SELECT 0 FROM "WEB_SALES" "WEB_SALES","DATE_DIM" "DATE_DIM" WHERE "WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B2 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1) OR  EXISTS (SELECT 0 FROM "CATALOG_SALES" "CATALOG_SALES","DATE_DIM" "DATE_DIM" WHERE "CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B3 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1))))
  Total Scan IO  Cost  =   6332.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 1080000.000000 (#rows))
                       =   6332.000000
  Total Scan CPU  Cost =   414856538.560000 (scan (Disk))
                         + 21600000.000000 (cpu filter eval) (= 20.000000 (per row) * 1080000.000000 (#rows))
                       =   436456538.560000
  Access Path: TableScan
    Cost:  6343.174339  Resp: 6343.174339  Degree: 0
      Cost_io: 6332.000000  Cost_cpu: 436456539
      Resp_io: 6332.000000  Resp_cpu: 436456539
  ****** trying bitmap/domain indexes ******
 ****** Costing Index CUSTOMER_PK_IDX
  Access Path: index (FullScan)
    Index: CUSTOMER_PK_IDX
    resc_io: 2268.000000  resc_cpu: 232151426
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 2273.943636  Resp: 2273.943636  Degree: 0
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: TableScan
         Cost: 6343.174339  Degree: 1  Resp: 6343.174339  Card: 1080000.000000  Bytes: 0.000000

Access path analysis for CUSTOMER_ADDRESS
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for CUSTOMER_ADDRESS[CA] 
  SPD: Directive valid: dirid = 18439699102505563871, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {EC(74169)[8]}
  SPD: Return code in qosdDSDirSetup: EXISTS, estType = TABLE

 kkecdn: Single Table Predicate:"CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County'
  Using density: 4.7103e-04 of col #8 as selectivity of pred having unreasonably low value
  Using density: 4.7103e-04 of col #8 as selectivity of pred having unreasonably low value
  Using density: 4.7103e-04 of col #8 as selectivity of pred having unreasonably low value
  Using density: 4.7103e-04 of col #8 as selectivity of pred having unreasonably low value
  Estimated selectivity: 5.3763e-04 , endpoint value predicate, col: #8 
  Table: CUSTOMER_ADDRESS  Alias: CA
    Card: Original: 540000.000000  Rounded: 1308  Computed: 1307.756551  Non Adjusted: 1307.756551
  Scan IO  Cost (Disk) =   3570.000000
  Scan CPU Cost (Disk) =   250417850.560000
  Cost of predicates:
    io = 0.000000, cpu = 249.764594, sel = 0.002422 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Chouteau County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Dinwiddie County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Dixie County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Harrisonburg city')
      io = NOCOST, cpu = 50.000000, sel = 0.000538 flag = 2048  ("CA"."CA_COUNTY"='Lowndes County')
  Total Scan IO  Cost  =   3570.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 540000.000000 (#rows))
                       =   3570.000000
  Total Scan CPU  Cost =   250417850.560000 (scan (Disk))
                         + 134872880.645405 (cpu filter eval) (= 249.764594 (per row) * 540000.000000 (#rows))
                       =   385290731.205405
  Access Path: TableScan
    Cost:  3579.864371  Resp: 3579.864371  Degree: 0
      Cost_io: 3570.000000  Cost_cpu: 385290731
      Resp_io: 3570.000000  Resp_cpu: 385290731
  ****** trying bitmap/domain indexes ******
 ****** Costing Index CA_ADDRESS_PK_IDX
  Access Path: index (FullScan)
    Index: CA_ADDRESS_PK_IDX
    resc_io: 1129.000000  resc_cpu: 116040106
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1131.970906  Resp: 1131.970906  Degree: 0
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: TableScan
         Cost: 3579.864371  Degree: 1  Resp: 3579.864371  Card: 1307.756551  Bytes: 0.000000

Grouping column cardinality [    ITEM_8]    2
Grouping column cardinality [    ITEM_9]    5
Grouping column cardinality [   ITEM_10]    7
Grouping column cardinality [   ITEM_11]    9500
Grouping column cardinality [   ITEM_12]    4
Grouping column cardinality [   ITEM_13]    6
Grouping column cardinality [   ITEM_14]    6
Grouping column cardinality [   ITEM_15]    6
***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE:  Bypassed; QB is not duplicate insignificant SEL$5084BC99 (#1)
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  CUSTOMER_ADDRESS[CA]#0  CUSTOMER[C]#1  VW_GBF_7[VW_GBF_7]#2

***************
Now joining: CUSTOMER[C]#1
***************
NL Join
  Outer table: Card: 1307.756551  Cost: 3579.864371  Resp: 3579.864371  Degree: 1  Bytes: 
Access path analysis for CUSTOMER
  Scan IO  Cost (Disk) =   6330.459480
  Scan CPU Cost (Disk) =   414856538.560000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000002 flag = 2048  ("C"."C_CURRENT_ADDR_SK"="CA"."CA_ADDRESS_SK")
    io = NOCOST, cpu = 20.000000, sel = 0.050000 flag = 2562  ( EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM" WHERE "SS"."SS_CUSTOMER_SK"=:B1 AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND ( EXISTS (SELECT 0 FROM "WEB_SALES" "WEB_SALES","DATE_DIM" "DATE_DIM" WHERE "WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B2 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1) OR  EXISTS (SELECT 0 FROM "CATALOG_SALES" "CATALOG_SALES","DATE_DIM" "DATE_DIM" WHERE "CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B3 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1))))
  Total Scan IO  Cost  =   6330.459480 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 1080000.000000 (#rows))
                       =   6330.459480
  Total Scan CPU  Cost =   414856538.560000 (scan (Disk))
                         + 24300000.000000 (cpu filter eval) (= 22.500000 (per row) * 1080000.000000 (#rows))
                       =   439156538.560000
  Inner table: CUSTOMER  Alias: C
  Access Path: TableScan
    NL Join:  Cost: 8298527.317370  Resp: 8298527.317370  Degree: 1
      Cost_io: 8283811.000000  Cost_cpu: 574802043168
      Resp_io: 8283811.000000  Resp_cpu: 574802043168
  ****** trying bitmap/domain indexes ******
 ****** Costing Index CUSTOMER_PK_IDX
  Access Path: index (FullScan)
    Index: CUSTOMER_PK_IDX
    resc_io: 2268.000000  resc_cpu: 232151426
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 2273.943636  Resp: 2273.943636  Degree: 0
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 8298527.317370
          resc: 8298527.317370  resc_io: 8283811.000000  resc_cpu: 574802043168
          resp: 8298527.317370  resp_io: 8283811.000000  resc_cpu: 574802043168
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Join Card:  3087.351958 = outer (1307.756551) * inner (1080000.000000) * sel (2.1859e-06)
Join Card - Rounded: 3087 Computed: 3087.351958
Grouping column cardinality [    ITEM_8]    2
Grouping column cardinality [    ITEM_9]    5
Grouping column cardinality [   ITEM_10]    7
Grouping column cardinality [   ITEM_11]    9500
Grouping column cardinality [   ITEM_12]    4
Grouping column cardinality [   ITEM_13]    6
Grouping column cardinality [   ITEM_14]    6
Grouping column cardinality [   ITEM_15]    6
  Outer table:  CUSTOMER_ADDRESS  Alias: CA
    resc: 3579.864371  card 1307.756551  bytes:   deg: 1  resp: 3579.864371
  Inner table:  CUSTOMER  Alias: C
    resc: 6343.174339  card: 1080000.000000  bytes:   deg: 1  resp: 6343.174339
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 6 Row size:     34 Total Rows:           1308
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39668949
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 3835 Row size:     29 Total Rows:        1080000
      Initial runs:   2 Merge passes:  1 IO Cost / pass:       2078
      Total IO sort cost: 5913.000000      Total CPU sort cost: 1108751040
      Total Temp space used: 60826000
  SM join: Resc: 15865.441029  Resp: 15865.441029  [multiMatchCost=0.000000]
SM Join
  SM cost: 15865.441029 
     resc: 15865.441029 resc_io: 15815.000000 resc_cpu: 1970167258
     resp: 15865.441029 resp_io: 15815.000000 resp_cpu: 1970167258
SM Join (with index on outer)
 ****** Costing Index CA_ADDRESS_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (FullScan)
    Index: CA_ADDRESS_PK_IDX
    resc_io: 13412.000000  resc_cpu: 494985634
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 13424.672825  Resp: 13424.672825  Degree: 1
  Outer table:  CUSTOMER_ADDRESS  Alias: CA
    resc: 13424.672825  card 1307.756551  bytes:   deg: 1  resp: 13424.672825
  Inner table:  CUSTOMER  Alias: C
    resc: 6343.174339  card: 1080000.000000  bytes:   deg: 1  resp: 6343.174339
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 3835 Row size:     29 Total Rows:        1080000
      Initial runs:   2 Merge passes:  1 IO Cost / pass:       2078
      Total IO sort cost: 5913.000000      Total CPU sort cost: 1108751040
      Total Temp space used: 60826000
  SM join: Resc: 25709.233862  Resp: 25709.233862  [multiMatchCost=0.000000]
  Outer table:  CUSTOMER_ADDRESS  Alias: CA
    resc: 3579.864371  card 1307.756551  bytes:   deg: 1  resp: 3579.864371
  Inner table:  CUSTOMER  Alias: C
    resc: 6343.174339  card: 1080000.000000  bytes:   deg: 1  resp: 6343.174339
    using dmeth: 2  #groups: 1
    Cost per ptn: 2.785445  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 6  probefrag: 3824  ppasses: 1
  Hash join: Resc: 9925.824155  Resp: 9925.824155  [multiMatchCost=0.000000]
HA Join
  HA cost: 9925.824155  
     resc: 9925.824155 resc_io: 9902.000000 resc_cpu: 930543470
     resp: 9925.824155 resp_io: 9902.000000 resp_cpu: 930543470
Best:: JoinMethod: Hash
       Cost: 9925.824155  Degree: 1  Resp: 9925.824155  Card: 3087.351958 Bytes: 

***************
Now joining: VW_GBF_7[VW_GBF_7]#2
***************
NL Join
  Outer table: Card: 3087.351958  Cost: 9925.824155  Resp: 9925.824155  Degree: 1  Bytes: 
Access path analysis for VW_GBF_7
  Inner table: VW_GBF_7  Alias: VW_GBF_7
  Access Path: TableScan
    NL Join:  Cost: 9925.824155  Resp: 9925.824155  Degree: 1
      Cost_io: 9902.000000  Cost_cpu: 930543470
      Resp_io: 9902.000000  Resp_cpu: 930543470

  Best NL cost: 9925.824155
          resc: 9925.824155  resc_io: 9902.000000  resc_cpu: 930543470
          resp: 9925.824155  resp_io: 9902.000000  resc_cpu: 930543470
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Join Card:  3087.351958 = outer (3087.351958) * inner (1920800.000000) * sel (5.2062e-07)
Join Card - Rounded: 3087 Computed: 3087.351958
Grouping column cardinality [    ITEM_8]    2
Grouping column cardinality [    ITEM_9]    5
Grouping column cardinality [   ITEM_10]    7
Grouping column cardinality [   ITEM_11]    9500
Grouping column cardinality [   ITEM_12]    4
Grouping column cardinality [   ITEM_13]    6
Grouping column cardinality [   ITEM_14]    6
Grouping column cardinality [   ITEM_15]    6
  Outer table:  CUSTOMER  Alias: C
    resc: 9925.824155  card 3087.351958  bytes:   deg: 1  resp: 9925.824155
  Inner table:  VW_GBF_7  Alias: VW_GBF_7
    resc: 0.000000  card: 1920800.000000  bytes:   deg: 0  resp: 0.000000
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 20 Row size:     52 Total Rows:           3087
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 40671077
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 21400 Row size:     91 Total Rows:        1920800
      Initial runs:   2 Merge passes:  1 IO Cost / pass:      11592
      Total IO sort cost: 32992.000000      Total CPU sort cost: 2372445463
      Total Temp space used: 419619000
  SM join: Resc: 42979.605753  Resp: 42979.605753  [multiMatchCost=0.000000]
SM Join
  SM cost: 42979.605753 
     resc: 42979.605753 resc_io: 42894.000000 resc_cpu: 3343660010
     resp: 42979.605753 resp_io: 42894.000000 resp_cpu: 3343660010
  Outer table:  CUSTOMER  Alias: C
    resc: 9925.824155  card 3087.351958  bytes:   deg: 1  resp: 9925.824155
  Inner table:  VW_GBF_7  Alias: VW_GBF_7
    resc: 0.000000  card: 1920800.000000  bytes:   deg: 0  resp: 0.000000
    using dmeth: 2  #groups: 1
    Cost per ptn: 4.944927  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 19  probefrag: 19931  ppasses: 1
  Hash join: Resc: 9930.769083  Resp: 9930.769083  [multiMatchCost=0.000000]
HA Join
  HA cost: 9930.769083  
     resc: 9930.769083 resc_io: 9902.000000 resc_cpu: 1123686520
     resp: 9930.769083 resp_io: 9902.000000 resp_cpu: 1123686520
GROUP BY sort
GROUP BY/Correlated Subquery Filter adjustment factor: 0.088388
GROUP BY cardinality:  3087.000000, TABLE cardinality:  3087.000000
Vector group by not costed because no SYS_OP_XLATE_USE in group by.
kdmoGByPushdownValid: more than one table in group by    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 51 Row size:     133 Total Rows:           3087
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 40671077
      Total Temp space used: 0
Best:: JoinMethod: Hash
       Cost: 9931.810360  Degree: 1  Resp: 9931.810360  Card: 3087.351958 Bytes: 
***********************
Best so far:  Table#: 0  cost: 3579.864371  card: 1307.756551  bytes: 27468.000000
              Table#: 1  cost: 9925.824155  card: 3087.351958  bytes: 117306.000000
              Table#: 2  cost: 9931.810360  card: 3087.351958  bytes: 342657.000000
***********************

*********************************
Number of join permutations tried: 1
*********************************
Enumerating distribution method (advanced)
--- Distribution method for 
join between CA[CUSTOMER_ADDRESS](serial) and C[CUSTOMER](serial); jm = 1; right side access path = TableScan
---- serial Hash-Join -> NONE
--- Distribution method for 
join between C[CUSTOMER](serial) and VW_GBF_7[VW_GBF_7](serial); jm = 1; right side access path = TableScan
---- serial Hash-Join -> NONE

kkoaccsqf: Current query block SEL$5084BC99 (#1) is serial
kkoaccsqf: correlated subquery query block SEL$2 (#2) in filter               : serial
Final adjusted join cardinality: 1.000000, sq. fil. factor: 1080000.000000
(newjo-save)    [0 1 2 ]
GROUP BY/Correlated Subquery Filter adjustment factor: 0.088388
GROUP BY cardinality:  1.000000, TABLE cardinality:  1.000000
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     133 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39058824
      Total Temp space used: 0
LORE: Or-Expansion validity checks failed on query block SEL$5084BC99 (#1) because Cost based OR expansion enabled
Transfer Optimizer annotations for query block SEL$5084BC99 (#1)
Final cost for query block SEL$5084BC99 (#1) - All Rows Plan:
  Best join order: 1
  Cost: 9931.810360  Degree: 1  Card: 1.000000  Bytes: 342657.000000
  Resc: 9931.810360  Resc_io: 9902.000000  Resc_cpu: 1164357597
  Resp: 9931.810360  Resp_io: 9902.000000  Resc_cpu: 1164357597
kkoqbc-subheap (delete addr=0x7f04723e8658, in-use=71224, alloc=82136)
kkoqbc-end:
        :
    call(in-use=1139136, alloc=1244984), compile(in-use=2618376, alloc=2620664), execution(in-use=42880, alloc=44592)

kkoqbc: finish optimizing query block SEL$5084BC99 (#1)
First K Rows: K = 1.00, N = 120.00
First K Rows: K = 1.00, N = 69.00
First K Rows: K = 1.00, N = 37.00
First K Rows: Setup end
***********************
CBQT: Looking for cost annotations for query block SEL$3, key = SEL$3_00010000_0
CBQT: Replaced cost annotations in query block SEL$3.
CBQT: Looking for cost annotations for query block SEL$4, key = SEL$4_00010000_0
CBQT: Replaced cost annotations in query block SEL$4.
CBQT: Looking for cost annotations for query block SEL$2, key = SEL$2_00010000_0
CBQT: Replaced cost annotations in query block SEL$2.
CBQT: Looking for cost annotations for query block SEL$4C89B77A, key = SEL$4C89B77A_00008040_3
CBQT: Could not find stored cost annotations.
kkoqbc: optimizing query block SEL$3 (#4)
        
        :
    call(in-use=1136928, alloc=1244984), compile(in-use=2619352, alloc=2620664), execution(in-use=42880, alloc=44592)

kkoqbc-end:
        :
    call(in-use=1136928, alloc=1244984), compile(in-use=2619352, alloc=2620664), execution(in-use=42880, alloc=44592)

kkoqbc: finish optimizing query block SEL$3 (#4)
kkoqbc: optimizing query block SEL$4 (#3)
        
        :
    call(in-use=1136928, alloc=1244984), compile(in-use=2619448, alloc=2620664), execution(in-use=42880, alloc=44592)

kkoqbc-end:
        :
    call(in-use=1136928, alloc=1244984), compile(in-use=2619448, alloc=2620664), execution(in-use=42880, alloc=44592)

kkoqbc: finish optimizing query block SEL$4 (#3)
kkoqbc: optimizing query block SEL$2 (#2)
        
        :
    call(in-use=1136928, alloc=1244984), compile(in-use=2619544, alloc=2620664), execution(in-use=42880, alloc=44592)

kkoqbc-end:
        :
    call(in-use=1136928, alloc=1244984), compile(in-use=2619544, alloc=2620664), execution(in-use=42880, alloc=44592)

kkoqbc: finish optimizing query block SEL$2 (#2)
kkoqbc: optimizing query block SEL$4C89B77A (#11)
        
        :
    call(in-use=1136928, alloc=1244984), compile(in-use=2619584, alloc=2620664), execution(in-use=42880, alloc=44592)

kkoqbc-subheap (create addr=0x7f04723e8658)
****************
QUERY BLOCK TEXT
****************
Not available.
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$4C89B77A nbfros=1 flg=0
  fro(0): flg=0 objn=74170 hint_alias="CUSTOMER_DEMOGRAPHICS"@"SEL$1"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3255 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
  #Rows: 1920800  SSZ: 0  LGR: 0  #Blks:  17254  AvgRowLen:  54.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): CD_DEMO_SK(NUMBER)
    AvgLen: 6 NDV: 1920800 Nulls: 0 Density: 0.000001 Min: 1.000000 Max: 1920800.000000
  Column (#9): CD_DEP_COLLEGE_COUNT(NUMBER)
    AvgLen: 3 NDV: 6 Nulls: 0 Density: 0.166667 Min: 0.000000 Max: 5.000000
  Column (#8): CD_DEP_EMPLOYED_COUNT(NUMBER)
    AvgLen: 3 NDV: 6 Nulls: 0 Density: 0.166667 Min: 0.000000 Max: 5.000000
  Column (#7): CD_DEP_COUNT(NUMBER)
    AvgLen: 3 NDV: 6 Nulls: 0 Density: 0.166667 Min: 0.000000 Max: 5.000000
  Column (#6): CD_CREDIT_RATING(CHARACTER)
    AvgLen: 11 NDV: 4 Nulls: 0 Density: 0.250000
  Column (#5): CD_PURCHASE_ESTIMATE(NUMBER)
    AvgLen: 4 NDV: 9500 Nulls: 0 Density: 0.000105 Min: 500.000000 Max: 9999.000000
  Column (#4): CD_EDUCATION_STATUS(CHARACTER)
    AvgLen: 21 NDV: 7 Nulls: 0 Density: 0.070771
    Histogram: Freq  #Bkts: 7  UncompBkts: 1920800  EndPtVals: 7  ActualVal: yes
  Column (#3): CD_MARITAL_STATUS(CHARACTER)
    AvgLen: 2 NDV: 5 Nulls: 0 Density: 0.098953
    Histogram: Freq  #Bkts: 5  UncompBkts: 1920800  EndPtVals: 5  ActualVal: yes
  Column (#2): CD_GENDER(CHARACTER)
    AvgLen: 2 NDV: 2 Nulls: 0 Density: 0.249925
    Histogram: Freq  #Bkts: 2  UncompBkts: 1920800  EndPtVals: 2  ActualVal: no 
Index Stats::
  Index: CD_DEMO_PK_IDX  Col#: 1
  LVLS: 2  #LB: 4138  #DK: 1920800  LB/K: 1.00  DB/K: 1.00  CLUF: 795806.00  NRW: 1920800.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
try to generate single-table filter predicates from ORs for query block SEL$4C89B77A (#11)
=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$4C89B77A (#11)
Applicable DS directives:
   dirid = 7754152966831092939, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {EC(74170)[3, 4]}
Checking valid directives for the query block
  SPD: Return code in qosdDSDirSetup: NODIR, estType = QUERY_BLOCK
Return code in qosdSetupDirCtx4QB: EXISTS
=====================================
SPD: END context at query block level
=====================================
Access path analysis for CUSTOMER_DEMOGRAPHICS
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS] 
  SPD: Return code in qosdDSDirSetup: NODIR, estType = TABLE
  Table: CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
    Card: Original: 1920800.000000  Rounded: 1920800  Computed: 1920800.000000  Non Adjusted: 1920800.000000
  Scan IO  Cost (Disk) =   4675.000000
  Scan CPU Cost (Disk) =   718321325.760000
  Total Scan IO  Cost  =   4675.000000 (scan (Disk))
                       =   4675.000000
  Total Scan CPU  Cost =   718321325.760000 (scan (Disk))
                       =   718321325.760000
  Access Path: TableScan
    Cost:  4693.390757  Resp: 4693.390757  Degree: 0
      Cost_io: 4675.000000  Cost_cpu: 718321326
      Resp_io: 4675.000000  Resp_cpu: 718321326
  Best:: AccessPath: TableScan
         Cost: 4693.390757  Degree: 1  Resp: 4693.390757  Card: 1920800.000000  Bytes: 0.000000

***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE:  Bypassed; QB has a single table SEL$4C89B77A (#11)
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS]#0
***********************
Best so far:  Table#: 0  cost: 4693.390757  card: 1920800.000000  bytes: 103723200.000000
***********************
(newjo-stop-1) k:0, spcnt:0, perm:1, maxperm:2000

*********************************
Number of join permutations tried: 1
*********************************
Enumerating distribution method (advanced)

LORE: Or-Expansion validity checks failed on query block SEL$4C89B77A (#11) because Cost based OR expansion enabled
Transfer Optimizer annotations for query block SEL$4C89B77A (#11)
Final cost for query block SEL$4C89B77A (#11) - All Rows Plan:
  Best join order: 1
  Cost: 4693.390757  Degree: 1  Card: 1920800.000000  Bytes: 207446400.000000
  Resc: 4693.390757  Resc_io: 4675.000000  Resc_cpu: 718321326
  Resp: 4693.390757  Resp_io: 4675.000000  Resc_cpu: 718321326
kkoqbc-subheap (delete addr=0x7f04723e8658, in-use=24640, alloc=32840)
kkoqbc-end:
        :
    call(in-use=1141432, alloc=1244984), compile(in-use=2619824, alloc=2620664), execution(in-use=42880, alloc=44592)

kkoqbc: finish optimizing query block SEL$4C89B77A (#11)
kkoqbc: optimizing query block SEL$5084BC99 (#1)
        
        :
    call(in-use=1141432, alloc=1244984), compile(in-use=2619824, alloc=2620664), execution(in-use=42880, alloc=44592)

kkoqbc-subheap (create addr=0x7f04723e8658)
****************
QUERY BLOCK TEXT
****************
SELECT /*query10*/
    cd_gender,
    cd_marital_status,
    cd_education_status,
    COUNT(*) cnt1,
    cd_purchase_estimate,
    COUNT(*) cnt2,
    cd_credit_rating,
    COUNT(*) cnt3,
    cd_dep_count,
    COUNT(*) cnt4,
    cd_dep_employed_count,
    COUNT(*) cnt5,
    cd_dep_college_count,
    COUNT(*) cnt6
FROM
    customer c,
    customer_address ca,
    customer_demographics
WHERE
    -- join predicates
        c.c_current_addr_sk = ca.ca_address_sk
    AND cd_demo_sk = c.c_current_cdemo_sk
    -- filter predicates
    AND ca.ca_county IN (
        'Chouteau County',
        'Dixie County',
        'Harrisonburg city',
        'Lowndes County',
        'Dinwiddie County'
    )
    -- filter predicate (subquery)
    AND EXISTS (
        SELECT
            *
        FROM
            store_sales ss,
            date_dim
        WHERE
            c.c_customer_sk = ss.ss_customer_sk
            AND ss_sold_date_sk = d_date_sk
            AND d_year = 2001
            AND d_moy BETWEEN 1 AND 1 + 3
            AND ( EXISTS (
                SELECT
                    *
                FROM
                    web_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = ws_bill_customer_sk
                    AND ws_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            )
                  OR EXISTS (
                SELECT
                    *
                FROM
                    catalog_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = cs_ship_customer_sk
                    AND cs_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            ) )
    )
GROUP BY
    cd_gender,
    cd_marital_status,
    cd_education_status,
    cd_purchase_estimate,
    cd_credit_rating,
    cd_dep_count,
    cd_dep_employed_count,
    cd_dep_college_count

---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$5084BC99 nbfros=3 flg=0
  fro(0): flg=0 objn=74168 hint_alias="C"@"SEL$1"
  fro(1): flg=0 objn=74169 hint_alias="CA"@"SEL$1"
  fro(2): flg=1 objn=0 hint_alias="VW_GBF_7"@"SEL$FD007FC2"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3255 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: CUSTOMER_ADDRESS  Alias: CA
  #Rows: 540000  SSZ: 0  LGR: 0  #Blks:  13174  AvgRowLen:  152.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): CA_ADDRESS_SK(NUMBER)
    AvgLen: 5 NDV: 540000 Nulls: 0 Density: 0.000002 Min: 1.000000 Max: 540000.000000
  Column (#8): CA_COUNTY(VARCHAR2)
    AvgLen: 16 NDV: 1877 Nulls: 0 Density: 0.000471
    Histogram: Hybrid  #Bkts: 254  UncompBkts: 5580  EndPtVals: 254  ActualVal: yes
Index Stats::
  Index: CA_ADDRESS_PK_IDX  Col#: 1
  LVLS: 2  #LB: 1127  #DK: 540000  LB/K: 1.00  DB/K: 1.00  CLUF: 12283.00  NRW: 540000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table: CUSTOMER  Alias:  C
  #Rows: 1080000  SSZ: 0  LGR: 0  #Blks:  23374  AvgRowLen:  138.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): C_CUSTOMER_SK(NUMBER)
    AvgLen: 6 NDV: 1080000 Nulls: 0 Density: 0.000001 Min: 1.000000 Max: 1080000.000000
  Column (#5): C_CURRENT_ADDR_SK(NUMBER)
    AvgLen: 5 NDV: 457472 Nulls: 0 Density: 0.000002 Min: 1.000000 Max: 539997.000000
  Column (#3): C_CURRENT_CDEMO_SK(NUMBER)
    AvgLen: 6 NDV: 772544 Nulls: 0 Density: 0.000001 Min: 18.000000 Max: 1920799.000000
Index Stats::
  Index: CUSTOMER_PK_IDX  Col#: 1
  LVLS: 2  #LB: 2266  #DK: 1080000  LB/K: 1.00  DB/K: 1.00  CLUF: 75684.00  NRW: 1080000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table: VW_GBF_7  Alias: VW_GBF_7  (NOT ANALYZED)
  #Rows: 0  SSZ: 0  LGR: 0  #Blks:  0  AvgRowLen:  0.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 0
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#8): ITEM_8(CHARACTER)  Part#: 0
    AvgLen: 2 NDV: 2 Nulls: 0 Density: 0.249925
    Histogram: Freq  #Bkts: 2  UncompBkts: 1920800  EndPtVals: 2  ActualVal: no 
  Column (#9): ITEM_9(CHARACTER)  Part#: 0
    AvgLen: 2 NDV: 5 Nulls: 0 Density: 0.098953
    Histogram: Freq  #Bkts: 5  UncompBkts: 1920800  EndPtVals: 5  ActualVal: yes
  Column (#10): ITEM_10(CHARACTER)  Part#: 0
    AvgLen: 21 NDV: 7 Nulls: 0 Density: 0.070771
    Histogram: Freq  #Bkts: 7  UncompBkts: 1920800  EndPtVals: 7  ActualVal: yes
  Column (#11): ITEM_11(NUMBER)  Part#: 0
    AvgLen: 4 NDV: 9500 Nulls: 0 Density: 0.000105 Min: 500.000000 Max: 9999.000000
  Column (#12): ITEM_12(CHARACTER)  Part#: 0
    AvgLen: 11 NDV: 4 Nulls: 0 Density: 0.250000
  Column (#13): ITEM_13(NUMBER)  Part#: 0
    AvgLen: 3 NDV: 6 Nulls: 0 Density: 0.166667 Min: 0.000000 Max: 5.000000
  Column (#14): ITEM_14(NUMBER)  Part#: 0
    AvgLen: 3 NDV: 6 Nulls: 0 Density: 0.166667 Min: 0.000000 Max: 5.000000
  Column (#15): ITEM_15(NUMBER)  Part#: 0
    AvgLen: 3 NDV: 6 Nulls: 0 Density: 0.166667 Min: 0.000000 Max: 5.000000
  Column (#1): ITEM_1(NUMBER)  Part#: 0
    AvgLen: 6 NDV: 1920800 Nulls: 0 Density: 0.000001 Min: 1.000000 Max: 1920800.000000
try to generate single-table filter predicates from ORs for query block SEL$5084BC99 (#1)
finally: "C"."C_CURRENT_ADDR_SK"="CA"."CA_ADDRESS_SK" AND "VW_GBF_7"."ITEM_1"="C"."C_CURRENT_CDEMO_SK" AND ("CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County') AND  EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM")

=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$5084BC99 (#1)
Applicable DS directives:
   dirid = 5181560337004891843, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74169)[]; (74168)[3]}
   dirid = 9316027922818115912, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74168)[3, 5]}
   dirid = 18439699102505563871, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {EC(74169)[8]}
Checking valid directives for the query block
  SPD: Return code in qosdDSDirSetup: NODIR, estType = GROUP_BY
  SPD: Return code in qosdDSDirSetup: NODIR, estType = QUERY_BLOCK
Return code in qosdSetupDirCtx4QB: EXISTS
=====================================
SPD: END context at query block level
=====================================
Access path analysis for VW_GBF_7

Access path analysis for CUSTOMER
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for CUSTOMER[C] 
  SPD: Return code in qosdDSDirSetup: NODIR, estType = TABLE

 kkecdn: Single Table Predicate: EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM")
  Table: CUSTOMER  Alias: C
    Card: Original: 1080000.000000  Rounded: 1080000  Computed: 1080000.000000  Non Adjusted: 1080000.000000
  Scan IO  Cost (Disk) =   6332.000000
  Scan CPU Cost (Disk) =   414856538.560000
  Cost of predicates:
    io = NOCOST, cpu = 20.000000, sel = 0.050000 flag = 2562  ( EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM"))
  Total Scan IO  Cost  =   6332.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 1080000.000000 (#rows))
                       =   6332.000000
  Total Scan CPU  Cost =   414856538.560000 (scan (Disk))
                         + 21600000.000000 (cpu filter eval) (= 20.000000 (per row) * 1080000.000000 (#rows))
                       =   436456538.560000
  Access Path: TableScan
    Cost:  6343.174339  Resp: 6343.174339  Degree: 0
      Cost_io: 6332.000000  Cost_cpu: 436456539
      Resp_io: 6332.000000  Resp_cpu: 436456539
  ****** trying bitmap/domain indexes ******
 ****** Costing Index CUSTOMER_PK_IDX
  Access Path: index (FullScan)
    Index: CUSTOMER_PK_IDX
    resc_io: 2268.000000  resc_cpu: 232151426
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 2273.943636  Resp: 2273.943636  Degree: 0
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: TableScan
         Cost: 6343.174339  Degree: 1  Resp: 6343.174339  Card: 1080000.000000  Bytes: 0.000000

Access path analysis for CUSTOMER_ADDRESS
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for CUSTOMER_ADDRESS[CA] 
  SPD: Directive valid: dirid = 18439699102505563871, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {EC(74169)[8]}
  SPD: Return code in qosdDSDirSetup: EXISTS, estType = TABLE

 kkecdn: Single Table Predicate:"CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County'
  Using density: 4.7103e-04 of col #8 as selectivity of pred having unreasonably low value
  Using density: 4.7103e-04 of col #8 as selectivity of pred having unreasonably low value
  Using density: 4.7103e-04 of col #8 as selectivity of pred having unreasonably low value
  Using density: 4.7103e-04 of col #8 as selectivity of pred having unreasonably low value
  Estimated selectivity: 5.3763e-04 , endpoint value predicate, col: #8 
  Table: CUSTOMER_ADDRESS  Alias: CA
    Card: Original: 540000.000000  Rounded: 1308  Computed: 1307.756551  Non Adjusted: 1307.756551
  Scan IO  Cost (Disk) =   3570.000000
  Scan CPU Cost (Disk) =   250417850.560000
  Cost of predicates:
    io = 0.000000, cpu = 249.764594, sel = 0.002422 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Chouteau County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Dinwiddie County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Dixie County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Harrisonburg city')
      io = NOCOST, cpu = 50.000000, sel = 0.000538 flag = 2048  ("CA"."CA_COUNTY"='Lowndes County')
  Total Scan IO  Cost  =   3570.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 540000.000000 (#rows))
                       =   3570.000000
  Total Scan CPU  Cost =   250417850.560000 (scan (Disk))
                         + 134872880.645405 (cpu filter eval) (= 249.764594 (per row) * 540000.000000 (#rows))
                       =   385290731.205405
  Access Path: TableScan
    Cost:  3579.864371  Resp: 3579.864371  Degree: 0
      Cost_io: 3570.000000  Cost_cpu: 385290731
      Resp_io: 3570.000000  Resp_cpu: 385290731
  ****** trying bitmap/domain indexes ******
 ****** Costing Index CA_ADDRESS_PK_IDX
  Access Path: index (FullScan)
    Index: CA_ADDRESS_PK_IDX
    resc_io: 1129.000000  resc_cpu: 116040106
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1131.970906  Resp: 1131.970906  Degree: 0
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: TableScan
         Cost: 3579.864371  Degree: 1  Resp: 3579.864371  Card: 1307.756551  Bytes: 0.000000

Grouping column cardinality [    ITEM_8]    2
Grouping column cardinality [    ITEM_9]    5
Grouping column cardinality [   ITEM_10]    7
Grouping column cardinality [   ITEM_11]    9500
Grouping column cardinality [   ITEM_12]    4
Grouping column cardinality [   ITEM_13]    6
Grouping column cardinality [   ITEM_14]    6
Grouping column cardinality [   ITEM_15]    6
***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE:  Bypassed; QB is not duplicate insignificant SEL$5084BC99 (#1)
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  CUSTOMER_ADDRESS[CA]#0  CUSTOMER[C]#1  VW_GBF_7[VW_GBF_7]#2

***************
Now joining: CUSTOMER[C]#1
***************
NL Join
  Outer table: Card: 1307.756551  Cost: 3579.864371  Resp: 3579.864371  Degree: 1  Bytes: 
Access path analysis for CUSTOMER
  Scan IO  Cost (Disk) =   6330.459480
  Scan CPU Cost (Disk) =   414856538.560000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000002 flag = 2048  ("C"."C_CURRENT_ADDR_SK"="CA"."CA_ADDRESS_SK")
    io = NOCOST, cpu = 20.000000, sel = 0.050000 flag = 2562  ( EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM"))
  Total Scan IO  Cost  =   6330.459480 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 1080000.000000 (#rows))
                       =   6330.459480
  Total Scan CPU  Cost =   414856538.560000 (scan (Disk))
                         + 24300000.000000 (cpu filter eval) (= 22.500000 (per row) * 1080000.000000 (#rows))
                       =   439156538.560000
  Inner table: CUSTOMER  Alias: C
  Access Path: TableScan
    NL Join:  Cost: 8298527.317370  Resp: 8298527.317370  Degree: 1
      Cost_io: 8283811.000000  Cost_cpu: 574802043168
      Resp_io: 8283811.000000  Resp_cpu: 574802043168
  ****** trying bitmap/domain indexes ******
 ****** Costing Index CUSTOMER_PK_IDX
  Access Path: index (FullScan)
    Index: CUSTOMER_PK_IDX
    resc_io: 2268.000000  resc_cpu: 232151426
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 2273.943636  Resp: 2273.943636  Degree: 0
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 8298527.317370
          resc: 8298527.317370  resc_io: 8283811.000000  resc_cpu: 574802043168
          resp: 8298527.317370  resp_io: 8283811.000000  resc_cpu: 574802043168
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Join Card:  3087.351958 = outer (1307.756551) * inner (1080000.000000) * sel (2.1859e-06)
Join Card - Rounded: 3087 Computed: 3087.351958
Grouping column cardinality [    ITEM_8]    2
Grouping column cardinality [    ITEM_9]    5
Grouping column cardinality [   ITEM_10]    7
Grouping column cardinality [   ITEM_11]    9500
Grouping column cardinality [   ITEM_12]    4
Grouping column cardinality [   ITEM_13]    6
Grouping column cardinality [   ITEM_14]    6
Grouping column cardinality [   ITEM_15]    6
  Outer table:  CUSTOMER_ADDRESS  Alias: CA
    resc: 3579.864371  card 1307.756551  bytes:   deg: 1  resp: 3579.864371
  Inner table:  CUSTOMER  Alias: C
    resc: 6343.174339  card: 1080000.000000  bytes:   deg: 1  resp: 6343.174339
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 6 Row size:     34 Total Rows:           1308
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39668949
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 3835 Row size:     29 Total Rows:        1080000
      Initial runs:   2 Merge passes:  1 IO Cost / pass:       2078
      Total IO sort cost: 5913.000000      Total CPU sort cost: 1108751040
      Total Temp space used: 60826000
  SM join: Resc: 15865.441029  Resp: 15865.441029  [multiMatchCost=0.000000]
SM Join
  SM cost: 15865.441029 
     resc: 15865.441029 resc_io: 15815.000000 resc_cpu: 1970167258
     resp: 15865.441029 resp_io: 15815.000000 resp_cpu: 1970167258
SM Join (with index on outer)
 ****** Costing Index CA_ADDRESS_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (FullScan)
    Index: CA_ADDRESS_PK_IDX
    resc_io: 13412.000000  resc_cpu: 494985634
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 13424.672825  Resp: 13424.672825  Degree: 1
  Outer table:  CUSTOMER_ADDRESS  Alias: CA
    resc: 13424.672825  card 1307.756551  bytes:   deg: 1  resp: 13424.672825
  Inner table:  CUSTOMER  Alias: C
    resc: 6343.174339  card: 1080000.000000  bytes:   deg: 1  resp: 6343.174339
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 3835 Row size:     29 Total Rows:        1080000
      Initial runs:   2 Merge passes:  1 IO Cost / pass:       2078
      Total IO sort cost: 5913.000000      Total CPU sort cost: 1108751040
      Total Temp space used: 60826000
  SM join: Resc: 25709.233862  Resp: 25709.233862  [multiMatchCost=0.000000]
  Outer table:  CUSTOMER_ADDRESS  Alias: CA
    resc: 3579.864371  card 1307.756551  bytes:   deg: 1  resp: 3579.864371
  Inner table:  CUSTOMER  Alias: C
    resc: 6343.174339  card: 1080000.000000  bytes:   deg: 1  resp: 6343.174339
    using dmeth: 2  #groups: 1
    Cost per ptn: 2.785445  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 6  probefrag: 3824  ppasses: 1
  Hash join: Resc: 9925.824155  Resp: 9925.824155  [multiMatchCost=0.000000]
HA Join
  HA cost: 9925.824155  
     resc: 9925.824155 resc_io: 9902.000000 resc_cpu: 930543470
     resp: 9925.824155 resp_io: 9902.000000 resp_cpu: 930543470
Best:: JoinMethod: Hash
       Cost: 9925.824155  Degree: 1  Resp: 9925.824155  Card: 3087.351958 Bytes: 

***************
Now joining: VW_GBF_7[VW_GBF_7]#2
***************
NL Join
  Outer table: Card: 3087.351958  Cost: 9925.824155  Resp: 9925.824155  Degree: 1  Bytes: 
Access path analysis for VW_GBF_7
  Inner table: VW_GBF_7  Alias: VW_GBF_7
  Access Path: TableScan
    NL Join:  Cost: 14498423.090502  Resp: 14498423.090502  Degree: 1
      Cost_io: 14441627.000000  Cost_cpu: 2218388476091
      Resp_io: 14441627.000000  Resp_cpu: 2218388476091

  Best NL cost: 14498423.090502
          resc: 14498423.090502  resc_io: 14441627.000000  resc_cpu: 2218388476091
          resp: 14498423.090502  resp_io: 14441627.000000  resc_cpu: 2218388476091
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Join Card:  3087.351958 = outer (3087.351958) * inner (1920800.000000) * sel (5.2062e-07)
Join Card - Rounded: 3087 Computed: 3087.351958
Grouping column cardinality [    ITEM_8]    2
Grouping column cardinality [    ITEM_9]    5
Grouping column cardinality [   ITEM_10]    7
Grouping column cardinality [   ITEM_11]    9500
Grouping column cardinality [   ITEM_12]    4
Grouping column cardinality [   ITEM_13]    6
Grouping column cardinality [   ITEM_14]    6
Grouping column cardinality [   ITEM_15]    6
  Outer table:  CUSTOMER  Alias: C
    resc: 9925.824155  card 3087.351958  bytes:   deg: 1  resp: 9925.824155
  Inner table:  VW_GBF_7  Alias: VW_GBF_7
    resc: 4693.390757  card: 1920800.000000  bytes:   deg: 1  resp: 4693.390757
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 20 Row size:     52 Total Rows:           3087
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 40671077
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 21400 Row size:     91 Total Rows:        1920800
      Initial runs:   2 Merge passes:  1 IO Cost / pass:      11592
      Total IO sort cost: 32992.000000      Total CPU sort cost: 2372445463
      Total Temp space used: 419619000
  SM join: Resc: 47672.996510  Resp: 47672.996510  [multiMatchCost=0.000000]
SM Join
  SM cost: 47672.996510 
     resc: 47672.996510 resc_io: 47569.000000 resc_cpu: 4061981336
     resp: 47672.996510 resp_io: 47569.000000 resp_cpu: 4061981336
  Outer table:  CUSTOMER  Alias: C
    resc: 9925.824155  card 3087.351958  bytes:   deg: 1  resp: 9925.824155
  Inner table:  VW_GBF_7  Alias: VW_GBF_7
    resc: 4693.390757  card: 1920800.000000  bytes:   deg: 1  resp: 4693.390757
    using dmeth: 2  #groups: 1
    Cost per ptn: 4.944927  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 19  probefrag: 19931  ppasses: 1
  Hash join: Resc: 14624.159839  Resp: 14624.159839  [multiMatchCost=0.000000]
HA Join
  HA cost: 14624.159839  
     resc: 14624.159839 resc_io: 14577.000000 resc_cpu: 1842007846
     resp: 14624.159839 resp_io: 14577.000000 resp_cpu: 1842007846
GROUP BY sort
GROUP BY/Correlated Subquery Filter adjustment factor: 0.088388
GROUP BY cardinality:  3087.000000, TABLE cardinality:  3087.000000
Vector group by not costed because no SYS_OP_XLATE_USE in group by.
kdmoGByPushdownValid: more than one table in group by    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 51 Row size:     133 Total Rows:           3087
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 40671077
      Total Temp space used: 0
Best:: JoinMethod: Hash
       Cost: 14625.201117  Degree: 1  Resp: 14625.201117  Card: 3087.351958 Bytes: 
***********************
Best so far:  Table#: 0  cost: 3579.864371  card: 1307.756551  bytes: 27468.000000
              Table#: 1  cost: 9925.824155  card: 3087.351958  bytes: 117306.000000
              Table#: 2  cost: 14625.201117  card: 3087.351958  bytes: 342657.000000
***********************
Join order[2]:  CUSTOMER_ADDRESS[CA]#0  VW_GBF_7[VW_GBF_7]#2  CUSTOMER[C]#1

***************
Now joining: VW_GBF_7[VW_GBF_7]#2
***************
NL Join
  Outer table: Card: 1307.756551  Cost: 3579.864371  Resp: 3579.864371  Degree: 1  Bytes: 
Access path analysis for VW_GBF_7
  Inner table: VW_GBF_7  Alias: VW_GBF_7
  Access Path: TableScan
    NL Join:  Cost: 6142534.974310  Resp: 6142534.974310  Degree: 1
      Cost_io: 6118470.000000  Cost_cpu: 939949584825
      Resp_io: 6118470.000000  Resp_cpu: 939949584825

  Best NL cost: 6142534.974310
          resc: 6142534.974310  resc_io: 6118470.000000  resc_cpu: 939949584825
          resp: 6142534.974310  resp_io: 6118470.000000  resc_cpu: 939949584825
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Join Card:  2511938782.753941 = outer (1307.756551) * inner (1920800.000000) * sel (1.000000)
Join Card - Rounded: 2511938783 Computed: 2511938782.753941
Grouping column cardinality [    ITEM_8]    2
Grouping column cardinality [    ITEM_9]    5
Grouping column cardinality [   ITEM_10]    7
Grouping column cardinality [   ITEM_11]    9500
Grouping column cardinality [   ITEM_12]    4
Grouping column cardinality [   ITEM_13]    6
Grouping column cardinality [   ITEM_14]    6
Grouping column cardinality [   ITEM_15]    6
Join order aborted: cost > best plan cost
***********************
Join order[3]:  CUSTOMER[C]#1  CUSTOMER_ADDRESS[CA]#0  VW_GBF_7[VW_GBF_7]#2

***************
Now joining: CUSTOMER_ADDRESS[CA]#0
***************
NL Join
  Outer table: Card: 1080000.000000  Cost: 6343.174339  Resp: 6343.174339  Degree: 1  Bytes: 
Access path analysis for CUSTOMER_ADDRESS
  Scan IO  Cost (Disk) =   3567.958334
  Scan CPU Cost (Disk) =   250417850.560000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000002 flag = 2048  ("C"."C_CURRENT_ADDR_SK"="CA"."CA_ADDRESS_SK")
    io = 0.000000, cpu = 249.764594, sel = 0.002422 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Chouteau County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Dinwiddie County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Dixie County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Harrisonburg city')
      io = NOCOST, cpu = 50.000000, sel = 0.000538 flag = 2048  ("CA"."CA_COUNTY"='Lowndes County')
  Total Scan IO  Cost  =   3567.958334 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 540000.000000 (#rows))
                       =   3567.958334
  Total Scan CPU  Cost =   250417850.560000 (scan (Disk))
                         + 27000294.822154 (cpu filter eval) (= 50.000546 (per row) * 540000.000000 (#rows))
                       =   277418145.382154
  Inner table: CUSTOMER_ADDRESS  Alias: CA
  Access Path: TableScan
    NL Join:  Cost: 3861072123.013520  Resp: 3861072123.013520  Degree: 1
      Cost_io: 3853401333.000000  Cost_cpu: 299612033469265
      Resp_io: 3853401333.000000  Resp_cpu: 299612033469265
 ****** Costing Index CA_ADDRESS_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: CA_ADDRESS_PK_IDX
    resc_io: 2.000000  resc_cpu: 16683
    ix_sel: 1.8519e-06  ix_sel_with_filters: 1.8519e-06 
    NL Join : Cost: 2166804.459512  Resp: 2166804.459512  Degree: 1
      Cost_io: 2166332.000000  Cost_cpu: 18453712700
      Resp_io: 2166332.000000  Resp_cpu: 18453712700
 ****** Costing Index CA_ADDRESS_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: CA_ADDRESS_PK_IDX
    resc_io: 2.000000  resc_cpu: 16683
    ix_sel: 1.8519e-06  ix_sel_with_filters: 1.8519e-06 
    NL Join : Cost: 2166804.459512  Resp: 2166804.459512  Degree: 1
      Cost_io: 2166332.000000  Cost_cpu: 18453712700
      Resp_io: 2166332.000000  Resp_cpu: 18453712700
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 2166804.459512
          resc: 2166804.459512  resc_io: 2166332.000000  resc_cpu: 18453712700
          resp: 2166804.459512  resp_io: 2166332.000000  resc_cpu: 18453712700
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Join Card:  3087.351958 = outer (1080000.000000) * inner (1307.756551) * sel (2.1859e-06)
Join Card - Rounded: 3087 Computed: 3087.351958
Grouping column cardinality [    ITEM_8]    2
Grouping column cardinality [    ITEM_9]    5
Grouping column cardinality [   ITEM_10]    7
Grouping column cardinality [   ITEM_11]    9500
Grouping column cardinality [   ITEM_12]    4
Grouping column cardinality [   ITEM_13]    6
Grouping column cardinality [   ITEM_14]    6
Grouping column cardinality [   ITEM_15]    6
  Outer table:  CUSTOMER  Alias: C
    resc: 6343.174339  card 1080000.000000  bytes:   deg: 1  resp: 6343.174339
  Inner table:  CUSTOMER_ADDRESS  Alias: CA
    resc: 3579.864371  card: 1307.756551  bytes:   deg: 1  resp: 3579.864371
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 3835 Row size:     29 Total Rows:        1080000
      Initial runs:   2 Merge passes:  1 IO Cost / pass:       2078
      Total IO sort cost: 5913.000000      Total CPU sort cost: 1108751040
      Total Temp space used: 60826000
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 6 Row size:     34 Total Rows:           1308
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39668949
      Total Temp space used: 0
  SM join: Resc: 15865.441029  Resp: 15865.441029  [multiMatchCost=0.000000]
SM Join
  SM cost: 15865.441029 
     resc: 15865.441029 resc_io: 15815.000000 resc_cpu: 1970167258
     resp: 15865.441029 resp_io: 15815.000000 resp_cpu: 1970167258
  Outer table:  CUSTOMER  Alias: C
    resc: 6343.174339  card 1080000.000000  bytes:   deg: 1  resp: 6343.174339
  Inner table:  CUSTOMER_ADDRESS  Alias: CA
    resc: 3579.864371  card: 1307.756551  bytes:   deg: 1  resp: 3579.864371
    using dmeth: 2  #groups: 1
    Cost per ptn: 1487.571924  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 3824  probefrag: 6  ppasses: 1
  Hash join: Resc: 11410.615189  Resp: 11410.615189  [multiMatchCost=0.004555]
  Outer table:  CUSTOMER_ADDRESS  Alias: CA
    resc: 3579.864371  card 1307.756551  bytes:   deg: 1  resp: 3579.864371
  Inner table:  CUSTOMER  Alias: C
    resc: 6343.174339  card: 1080000.000000  bytes:   deg: 1  resp: 6343.174339
    using dmeth: 2  #groups: 1
    Cost per ptn: 2.785445  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 6  probefrag: 3824  ppasses: 1
  Hash join: Resc: 9925.824155  Resp: 9925.824155  [multiMatchCost=0.000000]
HA Join
  HA cost: 9925.824155 swapped 
     resc: 9925.824155 resc_io: 9902.000000 resc_cpu: 930543470
     resp: 9925.824155 resp_io: 9902.000000 resp_cpu: 930543470
Best:: JoinMethod: Hash
       Cost: 9925.824155  Degree: 1  Resp: 9925.824155  Card: 3087.351958 Bytes: 

***************
Now joining: VW_GBF_7[VW_GBF_7]#2
***************
NL Join
  Outer table: Card: 3087.351958  Cost: 9925.824155  Resp: 9925.824155  Degree: 1  Bytes: 
Access path analysis for VW_GBF_7
  Inner table: VW_GBF_7  Alias: VW_GBF_7
  Access Path: TableScan
    NL Join:  Cost: 14498423.090502  Resp: 14498423.090502  Degree: 1
      Cost_io: 14441627.000000  Cost_cpu: 2218388476091
      Resp_io: 14441627.000000  Resp_cpu: 2218388476091

  Best NL cost: 14498423.090502
          resc: 14498423.090502  resc_io: 14441627.000000  resc_cpu: 2218388476091
          resp: 14498423.090502  resp_io: 14441627.000000  resc_cpu: 2218388476091
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Join Card:  3087.351958 = outer (3087.351958) * inner (1920800.000000) * sel (5.2062e-07)
Join Card - Rounded: 3087 Computed: 3087.351958
Grouping column cardinality [    ITEM_8]    2
Grouping column cardinality [    ITEM_9]    5
Grouping column cardinality [   ITEM_10]    7
Grouping column cardinality [   ITEM_11]    9500
Grouping column cardinality [   ITEM_12]    4
Grouping column cardinality [   ITEM_13]    6
Grouping column cardinality [   ITEM_14]    6
Grouping column cardinality [   ITEM_15]    6
  Outer table:  CUSTOMER_ADDRESS  Alias: CA
    resc: 9925.824155  card 3087.351958  bytes:   deg: 1  resp: 9925.824155
  Inner table:  VW_GBF_7  Alias: VW_GBF_7
    resc: 4693.390757  card: 1920800.000000  bytes:   deg: 1  resp: 4693.390757
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 20 Row size:     52 Total Rows:           3087
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 40671077
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 21400 Row size:     91 Total Rows:        1920800
      Initial runs:   2 Merge passes:  1 IO Cost / pass:      11592
      Total IO sort cost: 32992.000000      Total CPU sort cost: 2372445463
      Total Temp space used: 419619000
  SM join: Resc: 47672.996510  Resp: 47672.996510  [multiMatchCost=0.000000]
SM Join
  SM cost: 47672.996510 
     resc: 47672.996510 resc_io: 47569.000000 resc_cpu: 4061981336
     resp: 47672.996510 resp_io: 47569.000000 resp_cpu: 4061981336
  Outer table:  CUSTOMER_ADDRESS  Alias: CA
    resc: 9925.824155  card 3087.351958  bytes:   deg: 1  resp: 9925.824155
  Inner table:  VW_GBF_7  Alias: VW_GBF_7
    resc: 4693.390757  card: 1920800.000000  bytes:   deg: 1  resp: 4693.390757
    using dmeth: 2  #groups: 1
    Cost per ptn: 4.944927  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 19  probefrag: 19931  ppasses: 1
  Hash join: Resc: 14624.159839  Resp: 14624.159839  [multiMatchCost=0.000000]
HA Join
  HA cost: 14624.159839  
     resc: 14624.159839 resc_io: 14577.000000 resc_cpu: 1842007846
     resp: 14624.159839 resp_io: 14577.000000 resp_cpu: 1842007846
GROUP BY sort
GROUP BY/Correlated Subquery Filter adjustment factor: 0.088388
GROUP BY cardinality:  3087.000000, TABLE cardinality:  3087.000000
Vector group by not costed because no SYS_OP_XLATE_USE in group by.
kdmoGByPushdownValid: more than one table in group by    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 51 Row size:     133 Total Rows:           3087
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 40671077
      Total Temp space used: 0
Join order aborted: cost > best plan cost
***********************
Join order[4]:  CUSTOMER[C]#1  VW_GBF_7[VW_GBF_7]#2  CUSTOMER_ADDRESS[CA]#0

***************
Now joining: VW_GBF_7[VW_GBF_7]#2
***************
NL Join
  Outer table: Card: 1080000.000000  Cost: 6343.174339  Resp: 6343.174339  Degree: 1  Bytes: 
Access path analysis for VW_GBF_7
  Inner table: VW_GBF_7  Alias: VW_GBF_7
  Access Path: TableScan
    NL Join:  Cost: 5068868360.555293  Resp: 5068868360.555293  Degree: 1
      Cost_io: 5049006332.000000  Cost_cpu: 775787468277338
      Resp_io: 5049006332.000000  Resp_cpu: 775787468277338

  Best NL cost: 5068868360.555293
          resc: 5068868360.555293  resc_io: 5049006332.000000  resc_cpu: 775787468277338
          resp: 5068868360.555293  resp_io: 5049006332.000000  resc_cpu: 775787468277338
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Join Card:  1080000.000000 = outer (1080000.000000) * inner (1920800.000000) * sel (5.2062e-07)
Join Card - Rounded: 1080000 Computed: 1080000.000000
Grouping column cardinality [    ITEM_8]    2
Grouping column cardinality [    ITEM_9]    5
Grouping column cardinality [   ITEM_10]    7
Grouping column cardinality [   ITEM_11]    9500
Grouping column cardinality [   ITEM_12]    4
Grouping column cardinality [   ITEM_13]    6
Grouping column cardinality [   ITEM_14]    6
Grouping column cardinality [   ITEM_15]    6
  Outer table:  CUSTOMER  Alias: C
    resc: 6343.174339  card 1080000.000000  bytes:   deg: 1  resp: 6343.174339
  Inner table:  VW_GBF_7  Alias: VW_GBF_7
    resc: 4693.390757  card: 1920800.000000  bytes:   deg: 1  resp: 4693.390757
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 3835 Row size:     29 Total Rows:        1080000
      Initial runs:   2 Merge passes:  1 IO Cost / pass:       2078
      Total IO sort cost: 5913.000000      Total CPU sort cost: 1108751040
      Total Temp space used: 60826000
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 21400 Row size:     91 Total Rows:        1920800
      Initial runs:   2 Merge passes:  1 IO Cost / pass:      11592
      Total IO sort cost: 32992.000000      Total CPU sort cost: 2372445463
      Total Temp space used: 419619000
  SM join: Resc: 50030.692115  Resp: 50030.692115  [multiMatchCost=0.000000]
SM Join
  SM cost: 50030.692115 
     resc: 50030.692115 resc_io: 49912.000000 resc_cpu: 4635974367
     resp: 50030.692115 resp_io: 49912.000000 resp_cpu: 4635974367
  Outer table:  CUSTOMER  Alias: C
    resc: 6343.174339  card 1080000.000000  bytes:   deg: 1  resp: 6343.174339
  Inner table:  VW_GBF_7  Alias: VW_GBF_7
    resc: 4693.390757  card: 1920800.000000  bytes:   deg: 1  resp: 4693.390757
    using dmeth: 2  #groups: 1
    Cost per ptn: 9212.493424  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 3824  probefrag: 19931  ppasses: 1
  Hash join: Resc: 20249.058520  Resp: 20249.058520  [multiMatchCost=0.000000]
HA Join
  HA cost: 20249.058520  
     resc: 20249.058520 resc_io: 20203.000000 resc_cpu: 1798991602
     resp: 20249.058520 resp_io: 20203.000000 resp_cpu: 1798991602
Join order aborted: cost > best plan cost
***********************
Join order[5]:  VW_GBF_7[VW_GBF_7]#2  CUSTOMER_ADDRESS[CA]#0  CUSTOMER[C]#1

***************
Now joining: CUSTOMER_ADDRESS[CA]#0
***************
NL Join
  Outer table: Card: 1920800.000000  Cost: 4693.390757  Resp: 4693.390757  Degree: 1  Bytes: 
Access path analysis for CUSTOMER_ADDRESS
  Scan IO  Cost (Disk) =   3567.958334
  Scan CPU Cost (Disk) =   250417850.560000
  Cost of predicates:
    io = 0.000000, cpu = 249.764594, sel = 0.002422 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Chouteau County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Dinwiddie County')

*** 2018-10-24T22:44:51.912347-04:00
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Dixie County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Harrisonburg city')
      io = NOCOST, cpu = 50.000000, sel = 0.000538 flag = 2048  ("CA"."CA_COUNTY"='Lowndes County')
  Total Scan IO  Cost  =   3567.958334 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 540000.000000 (#rows))
                       =   3567.958334
  Total Scan CPU  Cost =   250417850.560000 (scan (Disk))
                         + 134872880.645405 (cpu filter eval) (= 249.764594 (per row) * 540000.000000 (#rows))
                       =   385290731.205405
  Inner table: CUSTOMER_ADDRESS  Alias: CA
  Access Path: TableScan
    NL Join:  Cost: 6872286545.457758  Resp: 6872286545.457758  Degree: 1
      Cost_io: 6853339043.000000  Cost_cpu: 740067154820668
      Resp_io: 6853339043.000000  Resp_cpu: 740067154820668
  ****** trying bitmap/domain indexes ******
 ****** Costing Index CA_ADDRESS_PK_IDX
  Access Path: index (FullScan)
    Index: CA_ADDRESS_PK_IDX
    resc_io: 1129.000000  resc_cpu: 116040106
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1131.970906  Resp: 1131.970906  Degree: 0
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 6872286545.457758
          resc: 6872286545.457758  resc_io: 6853339043.000000  resc_cpu: 740067154820668
          resp: 6872286545.457758  resp_io: 6853339043.000000  resc_cpu: 740067154820668
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Join Card:  2511938782.753941 = outer (1920800.000000) * inner (1307.756551) * sel (1.000000)
Join Card - Rounded: 2511938783 Computed: 2511938782.753941
Grouping column cardinality [    ITEM_8]    2
Grouping column cardinality [    ITEM_9]    5
Grouping column cardinality [   ITEM_10]    7
Grouping column cardinality [   ITEM_11]    9500
Grouping column cardinality [   ITEM_12]    4
Grouping column cardinality [   ITEM_13]    6
Grouping column cardinality [   ITEM_14]    6
Grouping column cardinality [   ITEM_15]    6
Join order aborted: cost > best plan cost
***********************
Join order[6]:  VW_GBF_7[VW_GBF_7]#2  CUSTOMER[C]#1  CUSTOMER_ADDRESS[CA]#0

***************
Now joining: CUSTOMER[C]#1
***************
NL Join
  Outer table: Card: 1920800.000000  Cost: 4693.390757  Resp: 4693.390757  Degree: 1  Bytes: 
Access path analysis for CUSTOMER
  Scan IO  Cost (Disk) =   6330.458334
  Scan CPU Cost (Disk) =   414856538.560000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000001 flag = 2048  ("VW_GBF_7"."ITEM_1"="C"."C_CURRENT_CDEMO_SK")
    io = NOCOST, cpu = 20.000000, sel = 0.050000 flag = 2562  ( EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM"))
  Total Scan IO  Cost  =   6330.458334 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 1080000.000000 (#rows))
                       =   6330.458334
  Total Scan CPU  Cost =   414856538.560000 (scan (Disk))
                         + 24300000.000000 (cpu filter eval) (= 22.500000 (per row) * 1080000.000000 (#rows))
                       =   439156538.560000
  Inner table: CUSTOMER  Alias: C
  Access Path: TableScan
    NL Join:  Cost: 12181145510.106905  Resp: 12181145510.106905  Degree: 1
      Cost_io: 12159549043.000000  Cost_cpu: 843532597587374
      Resp_io: 12159549043.000000  Resp_cpu: 843532597587374
  ****** trying bitmap/domain indexes ******
 ****** Costing Index CUSTOMER_PK_IDX
  Access Path: index (FullScan)
    Index: CUSTOMER_PK_IDX
    resc_io: 2268.000000  resc_cpu: 232151426
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 2273.943636  Resp: 2273.943636  Degree: 0
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 12181145510.106905
          resc: 12181145510.106905  resc_io: 12159549043.000000  resc_cpu: 843532597587374
          resp: 12181145510.106905  resp_io: 12159549043.000000  resc_cpu: 843532597587374
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Join Card:  1080000.000000 = outer (1920800.000000) * inner (1080000.000000) * sel (5.2062e-07)
Join Card - Rounded: 1080000 Computed: 1080000.000000
Grouping column cardinality [    ITEM_8]    2
Grouping column cardinality [    ITEM_9]    5
Grouping column cardinality [   ITEM_10]    7
Grouping column cardinality [   ITEM_11]    9500
Grouping column cardinality [   ITEM_12]    4
Grouping column cardinality [   ITEM_13]    6
Grouping column cardinality [   ITEM_14]    6
Grouping column cardinality [   ITEM_15]    6
  Outer table:  VW_GBF_7  Alias: VW_GBF_7
    resc: 4693.390757  card 1920800.000000  bytes:   deg: 1  resp: 4693.390757
  Inner table:  CUSTOMER  Alias: C
    resc: 6343.174339  card: 1080000.000000  bytes:   deg: 1  resp: 6343.174339
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 21400 Row size:     91 Total Rows:        1920800
      Initial runs:   2 Merge passes:  1 IO Cost / pass:      11592
      Total IO sort cost: 32992.000000      Total CPU sort cost: 2372445463
      Total Temp space used: 419619000
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 3835 Row size:     29 Total Rows:        1080000
      Initial runs:   2 Merge passes:  1 IO Cost / pass:       2078
      Total IO sort cost: 5913.000000      Total CPU sort cost: 1108751040
      Total Temp space used: 60826000
  SM join: Resc: 50030.692115  Resp: 50030.692115  [multiMatchCost=0.000000]
SM Join
  SM cost: 50030.692115 
     resc: 50030.692115 resc_io: 49912.000000 resc_cpu: 4635974367
     resp: 50030.692115 resp_io: 49912.000000 resp_cpu: 4635974367
  Outer table:  VW_GBF_7  Alias: VW_GBF_7
    resc: 4693.390757  card 1920800.000000  bytes:   deg: 1  resp: 4693.390757
  Inner table:  CUSTOMER  Alias: C
    resc: 6343.174339  card: 1080000.000000  bytes:   deg: 1  resp: 6343.174339
    using dmeth: 2  #groups: 1
    Cost per ptn: 13590.430552  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 19931  probefrag: 3824  ppasses: 1
  Hash join: Resc: 24626.995648  Resp: 24626.995648  [multiMatchCost=0.000000]
  Outer table:  CUSTOMER  Alias: C
    resc: 6343.174339  card 1080000.000000  bytes:   deg: 1  resp: 6343.174339
  Inner table:  VW_GBF_7  Alias: VW_GBF_7
    resc: 4693.390757  card: 1920800.000000  bytes:   deg: 1  resp: 4693.390757
    using dmeth: 2  #groups: 1
    Cost per ptn: 9212.493424  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 3824  probefrag: 19931  ppasses: 1
  Hash join: Resc: 20249.058520  Resp: 20249.058520  [multiMatchCost=0.000000]
HA Join
  HA cost: 20249.058520 swapped 
     resc: 20249.058520 resc_io: 20203.000000 resc_cpu: 1798991602
     resp: 20249.058520 resp_io: 20203.000000 resp_cpu: 1798991602
Join order aborted: cost > best plan cost
***********************
(newjo-stop-1) k:0, spcnt:0, perm:6, maxperm:2000

*********************************
Number of join permutations tried: 6
*********************************
Enumerating distribution method (advanced)
--- Distribution method for 
join between CA[CUSTOMER_ADDRESS](serial) and C[CUSTOMER](serial); jm = 1; right side access path = TableScan
---- serial Hash-Join -> NONE
--- Distribution method for 
join between C[CUSTOMER](serial) and VW_GBF_7[VW_GBF_7](serial); jm = 1; right side access path = TableScan
---- serial Hash-Join -> NONE

kkoaccsqf: Current query block SEL$5084BC99 (#1) is serial
kkoaccsqf: correlated subquery query block SEL$2 (#2) in filter               : serial
Final adjusted join cardinality: 1.000000, sq. fil. factor: 1080000.000000
(newjo-save)    [0 1 2 ]
GROUP BY/Correlated Subquery Filter adjustment factor: 0.088388
GROUP BY cardinality:  1.000000, TABLE cardinality:  1.000000
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     133 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39058824
      Total Temp space used: 0
LORE: Or-Expansion validity checks failed on query block SEL$5084BC99 (#1) because Cost based OR expansion enabled
Transfer Optimizer annotations for query block SEL$5084BC99 (#1)
Final cost for query block SEL$5084BC99 (#1) - All Rows Plan:
  Best join order: 1
  Cost: 34697.149716  Degree: 1  Card: 1.000000  Bytes: 342768.000000
  Resc: 34697.149716  Resc_io: 34644.787726  Resc_cpu: 2045197717
  Resp: 34697.149716  Resp_io: 34644.787726  Resc_cpu: 2045197717
kkoqbc-subheap (delete addr=0x7f04723e8658, in-use=98048, alloc=108864)
kkoqbc-end:
        :
    call(in-use=1162064, alloc=1288224), compile(in-use=2632304, alloc=2633840), execution(in-use=42880, alloc=44592)

kkoqbc: finish optimizing query block SEL$5084BC99 (#1)
CBQT: Saved costed qb# 4 (SEL$3), key = SEL$3_00010000_0
CBQT: Saved costed qb# 3 (SEL$4), key = SEL$4_00010000_0
CBQT: Saved costed qb# 2 (SEL$2), key = SEL$2_00010000_0
CBQT: Saved costed qb# 11 (SEL$4C89B77A), key = SEL$4C89B77A_00008040_3
CBQT: Saved costed qb# 1 (SEL$5084BC99), key = SEL$5084BC99_00000040_0
GBP: Not update best state, Cost = 34697.149716
GBP: Starting iteration 7, state space = (1,2,3) : (F,C,C)
Registered qb: SEL$8E90090D 0x71e2ba38 (QUERY BLOCK TABLES CHANGED SEL$1)
---------------------
QUERY BLOCK SIGNATURE
---------------------
  signature (): qb_name=SEL$8E90090D nbfros=2 flg=0
    fro(0): flg=0 objn=74170 hint_alias="CUSTOMER_DEMOGRAPHICS"@"SEL$1"
    fro(1): flg=5 objn=0 hint_alias="VW_GBC_8"@"SEL$8E90090D"

Registered qb: SEL$ACBFB8CC 0x71eacd28 (SPLIT/MERGE QUERY BLOCKS SEL$8E90090D)
---------------------
QUERY BLOCK SIGNATURE
---------------------
  signature (): qb_name=SEL$ACBFB8CC nbfros=2 flg=0
    fro(0): flg=0 objn=74168 hint_alias="C"@"SEL$1"
    fro(1): flg=0 objn=74169 hint_alias="CA"@"SEL$1"

Registered qb: SEL$67676F75 0x71e2ba38 (QUERY BLOCK TABLES CHANGED SEL$8E90090D)
---------------------
QUERY BLOCK SIGNATURE
---------------------
  signature (): qb_name=SEL$67676F75 nbfros=2 flg=0
    fro(0): flg=5 objn=0 hint_alias="VW_GBF_9"@"SEL$67676F75"
    fro(1): flg=1 objn=0 hint_alias="VW_GBC_8"@"SEL$8E90090D"

Registered qb: SEL$0D5C16D5 0x71ebfeb0 (SPLIT/MERGE QUERY BLOCKS SEL$67676F75)
---------------------
QUERY BLOCK SIGNATURE
---------------------
  signature (): qb_name=SEL$0D5C16D5 nbfros=1 flg=0
    fro(0): flg=0 objn=74170 hint_alias="CUSTOMER_DEMOGRAPHICS"@"SEL$1"

QB before group-by removal:******* UNPARSED QUERY IS *******
SELECT "CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK" "ITEM_1",COUNT(*) "ITEM_2",COUNT(*) "ITEM_3",COUNT(*) "ITEM_4",COUNT(*) "ITEM_5",COUNT(*) "ITEM_6",COUNT(*) "ITEM_7","CUSTOMER_DEMOGRAPHICS"."CD_GENDER" "ITEM_8","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS" "ITEM_9","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS" "ITEM_10","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE" "ITEM_11","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING" "ITEM_12","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT" "ITEM_13","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT" "ITEM_14","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT" "ITEM_15" FROM "TPCDS"."CUSTOMER_DEMOGRAPHICS" "CUSTOMER_DEMOGRAPHICS" GROUP BY "CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK","CUSTOMER_DEMOGRAPHICS"."CD_GENDER","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT"
QB before group-by elimination:******* UNPARSED QUERY IS *******
SELECT "CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK" "ITEM_1",COUNT(*) "ITEM_2",COUNT(*) "ITEM_3",COUNT(*) "ITEM_4",COUNT(*) "ITEM_5",COUNT(*) "ITEM_6",COUNT(*) "ITEM_7","CUSTOMER_DEMOGRAPHICS"."CD_GENDER" "ITEM_8","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS" "ITEM_9","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS" "ITEM_10","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE" "ITEM_11","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING" "ITEM_12","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT" "ITEM_13","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT" "ITEM_14","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT" "ITEM_15" FROM "TPCDS"."CUSTOMER_DEMOGRAPHICS" "CUSTOMER_DEMOGRAPHICS" GROUP BY "CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK","CUSTOMER_DEMOGRAPHICS"."CD_GENDER","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT"
Registered qb: SEL$EB8F6131 0x71ebfeb0 (ELIMINATION OF GROUP BY SEL$0D5C16D5; SEL$0D5C16D5)
---------------------
QUERY BLOCK SIGNATURE
---------------------
  signature (): qb_name=SEL$EB8F6131 nbfros=1 flg=0
    fro(0): flg=0 objn=74170 hint_alias="CUSTOMER_DEMOGRAPHICS"@"SEL$1"

QB after group-by elimination:******* UNPARSED QUERY IS *******
SELECT "CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK" "ITEM_1",1 "ITEM_2",1 "ITEM_3",1 "ITEM_4",1 "ITEM_5",1 "ITEM_6",1 "ITEM_7","CUSTOMER_DEMOGRAPHICS"."CD_GENDER" "ITEM_8","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS" "ITEM_9","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS" "ITEM_10","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE" "ITEM_11","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING" "ITEM_12","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT" "ITEM_13","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT" "ITEM_14","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT" "ITEM_15" FROM "TPCDS"."CUSTOMER_DEMOGRAPHICS" "CUSTOMER_DEMOGRAPHICS"
Registered qb: SEL$26749286 0x71ebfeb0 (ELIMINATION OF GROUP BY SEL$EB8F6131; SEL$EB8F6131)
---------------------
QUERY BLOCK SIGNATURE
---------------------
  signature (): qb_name=SEL$26749286 nbfros=1 flg=0
    fro(0): flg=0 objn=74170 hint_alias="CUSTOMER_DEMOGRAPHICS"@"SEL$1"

QB after group-by removal:******* UNPARSED QUERY IS *******
SELECT "CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK" "ITEM_1",1 "ITEM_2",1 "ITEM_3",1 "ITEM_4",1 "ITEM_5",1 "ITEM_6",1 "ITEM_7","CUSTOMER_DEMOGRAPHICS"."CD_GENDER" "ITEM_8","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS" "ITEM_9","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS" "ITEM_10","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE" "ITEM_11","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING" "ITEM_12","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT" "ITEM_13","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT" "ITEM_14","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT" "ITEM_15" FROM "TPCDS"."CUSTOMER_DEMOGRAPHICS" "CUSTOMER_DEMOGRAPHICS"
Registered qb: SEL$FBA97E11 0x71e2ba38 (UNKNOWN QUERY BLOCK ORIGIN SEL$1; SEL$1; LIST LIST 8)
---------------------
QUERY BLOCK SIGNATURE
---------------------
  signature (): qb_name=SEL$FBA97E11 nbfros=2 flg=0
    fro(0): flg=1 objn=0 hint_alias="VW_GBF_9"@"SEL$67676F75"
    fro(1): flg=1 objn=0 hint_alias="VW_GBC_8"@"SEL$8E90090D"

GBP: Transformed query
******* UNPARSED QUERY IS *******
SELECT "VW_GBF_9"."ITEM_8" "CD_GENDER","VW_GBF_9"."ITEM_9" "CD_MARITAL_STATUS","VW_GBF_9"."ITEM_10" "CD_EDUCATION_STATUS",NVL(SUM("VW_GBC_8"."ITEM_2"*"VW_GBF_9"."ITEM_2"),0) "CNT1","VW_GBF_9"."ITEM_11" "CD_PURCHASE_ESTIMATE",NVL(SUM("VW_GBC_8"."ITEM_3"*"VW_GBF_9"."ITEM_3"),0) "CNT2","VW_GBF_9"."ITEM_12" "CD_CREDIT_RATING",NVL(SUM("VW_GBC_8"."ITEM_4"*"VW_GBF_9"."ITEM_4"),0) "CNT3","VW_GBF_9"."ITEM_13" "CD_DEP_COUNT",NVL(SUM("VW_GBC_8"."ITEM_5"*"VW_GBF_9"."ITEM_5"),0) "CNT4","VW_GBF_9"."ITEM_14" "CD_DEP_EMPLOYED_COUNT",NVL(SUM("VW_GBC_8"."ITEM_6"*"VW_GBF_9"."ITEM_6"),0) "CNT5","VW_GBF_9"."ITEM_15" "CD_DEP_COLLEGE_COUNT",NVL(SUM("VW_GBC_8"."ITEM_7"*"VW_GBF_9"."ITEM_7"),0) "CNT6" FROM  (SELECT "CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK" "ITEM_1",1 "ITEM_2",1 "ITEM_3",1 "ITEM_4",1 "ITEM_5",1 "ITEM_6",1 "ITEM_7","CUSTOMER_DEMOGRAPHICS"."CD_GENDER" "ITEM_8","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS" "ITEM_9","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS" "ITEM_10","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE" "ITEM_11","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING" "ITEM_12","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT" "ITEM_13","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT" "ITEM_14","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT" "ITEM_15" FROM "TPCDS"."CUSTOMER_DEMOGRAPHICS" "CUSTOMER_DEMOGRAPHICS") "VW_GBF_9", (SELECT "C"."C_CURRENT_CDEMO_SK" "ITEM_1",COUNT(*) "ITEM_2",COUNT(*) "ITEM_3",COUNT(*) "ITEM_4",COUNT(*) "ITEM_5",COUNT(*) "ITEM_6",COUNT(*) "ITEM_7" FROM "TPCDS"."CUSTOMER_ADDRESS" "CA","TPCDS"."CUSTOMER" "C" WHERE ("CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County') AND "C"."C_CURRENT_ADDR_SK"="CA"."CA_ADDRESS_SK" AND  EXISTS (SELECT 0 FROM "TPCDS"."STORE_SALES" "SS","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="SS"."SS_CUSTOMER_SK" AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3 AND ( EXISTS (SELECT 0 FROM "TPCDS"."WEB_SALES" "WEB_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="WEB_SALES"."WS_BILL_CUSTOMER_SK" AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3) OR  EXISTS (SELECT 0 FROM "TPCDS"."CATALOG_SALES" "CATALOG_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="CATALOG_SALES"."CS_SHIP_CUSTOMER_SK" AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3))) GROUP BY "C"."C_CURRENT_CDEMO_SK") "VW_GBC_8" WHERE "VW_GBF_9"."ITEM_1"="VW_GBC_8"."ITEM_1" GROUP BY "VW_GBF_9"."ITEM_8","VW_GBF_9"."ITEM_9","VW_GBF_9"."ITEM_10","VW_GBF_9"."ITEM_11","VW_GBF_9"."ITEM_12","VW_GBF_9"."ITEM_13","VW_GBF_9"."ITEM_14","VW_GBF_9"."ITEM_15" ORDER BY "VW_GBF_9"."ITEM_8","VW_GBF_9"."ITEM_9","VW_GBF_9"."ITEM_10","VW_GBF_9"."ITEM_11","VW_GBF_9"."ITEM_12","VW_GBF_9"."ITEM_13","VW_GBF_9"."ITEM_14","VW_GBF_9"."ITEM_15"
FPD: Considering simple filter push in query block SEL$FBA97E11 (#1)
"VW_GBF_9"."ITEM_1"="VW_GBC_8"."ITEM_1"
try to generate transitive predicate from check constraints for query block SEL$FBA97E11 (#1)
finally: "VW_GBF_9"."ITEM_1"="VW_GBC_8"."ITEM_1"

FPD: Considering simple filter push in query block SEL$26749286 (#13)
 ?? 
OJE: Begin: find best directive for query block SEL$26749286 (#13)
OJE: End: finding best directive for query block SEL$26749286 (#13)
FPD: Considering simple filter push in query block SEL$ACBFB8CC (#12)
("CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County') AND "C"."C_CURRENT_ADDR_SK"="CA"."CA_ADDRESS_SK" AND  EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM")
FPD: Considering simple filter push in query block SEL$2 (#2)
"SS"."SS_CUSTOMER_SK"=:B1 AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND ( EXISTS (SELECT 0 FROM "WEB_SALES" "WEB_SALES","DATE_DIM" "DATE_DIM") OR  EXISTS (SELECT 0 FROM "CATALOG_SALES" "CATALOG_SALES","DATE_DIM" "DATE_DIM"))
FPD: Considering simple filter push in query block SEL$3 (#4)
"WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B1 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4
try to generate transitive predicate from check constraints for query block SEL$3 (#4)
finally: "WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B1 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1

FPD:   transitive predicates are generated in query block SEL$3 (#4)
"WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B1 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1
FPD: Considering simple filter push in query block SEL$4 (#3)
"CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B1 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4
try to generate transitive predicate from check constraints for query block SEL$4 (#3)
finally: "CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B1 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1

FPD:   transitive predicates are generated in query block SEL$4 (#3)
"CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B1 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1
try to generate transitive predicate from check constraints for query block SEL$2 (#2)
finally: "SS"."SS_CUSTOMER_SK"=:B1 AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND ( EXISTS (SELECT 0 FROM "WEB_SALES" "WEB_SALES","DATE_DIM" "DATE_DIM") OR  EXISTS (SELECT 0 FROM "CATALOG_SALES" "CATALOG_SALES","DATE_DIM" "DATE_DIM"))

try to generate transitive predicate from check constraints for query block SEL$ACBFB8CC (#12)
finally: ("CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County') AND "C"."C_CURRENT_ADDR_SK"="CA"."CA_ADDRESS_SK" AND  EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM")

OJE: Begin: find best directive for query block SEL$ACBFB8CC (#12)
OJE: End: finding best directive for query block SEL$ACBFB8CC (#12)
GBP: Costing transformed query.
*************************
First K Rows: Setup begin
kkoqbc: optimizing query block SEL$3 (#4)
        
        :
    call(in-use=1166040, alloc=1195568), compile(in-use=2830680, alloc=2833520), execution(in-use=44144, alloc=44592)

kkoqbc-subheap (create addr=0x7f0471ea5688)
****************
QUERY BLOCK TEXT
****************
SELECT
                    *
                FROM
                    web_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = ws_bill_customer_sk
                    AND ws_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$3 nbfros=2 flg=0
  fro(0): flg=0 objn=74171 hint_alias="DATE_DIM"@"SEL$3"
  fro(1): flg=0 objn=74195 hint_alias="WEB_SALES"@"SEL$3"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3255 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: DATE_DIM  Alias: DATE_DIM
  #Rows: 73049  SSZ: 0  LGR: 0  #Blks:  1510  AvgRowLen:  128.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): D_DATE_SK(NUMBER)
    AvgLen: 6 NDV: 73049 Nulls: 0 Density: 0.000014 Min: 2415022.000000 Max: 2488070.000000
Index Stats::
  Index: D_DATE_PK_IDX  Col#: 1
  LVLS: 1  #LB: 163  #DK: 73049  LB/K: 1.00  DB/K: 1.00  CLUF: 1402.00  NRW: 73049.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table: WEB_SALES  Alias: WEB_SALES  (Using composite stats)
  #Rows: 35969200  SSZ: 0  LGR: 0  #Blks:  829566  AvgRowLen:  167.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
Index Stats::
  Index: WEB_SALES_IDX2  Col#: 5 1
  LVLS: 3  #LB: 130617  #DK: 2992994  LB/K: 1.00  DB/K: 12.00  CLUF: 35969159.00  NRW: 35969200.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
  Index: WEB_SALES_PK_IDX  Col#: 4 18
  LVLS: 2  #LB: 122502  #DK: 35304428  LB/K: 1.00  DB/K: 1.00  CLUF: 35300490.00  NRW: 35304428.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
try to generate single-table filter predicates from ORs for query block SEL$3 (#4)
finally: "WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B1 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4

=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$3 (#4)
Applicable DS directives:
   dirid = 4510913066701158191, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {(74195)[]; (74171)[]}
   dirid = 14910903719618111890, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74195)[5]}
   dirid = 13969931850241126217, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {C(74171)[7, 9]}
   dirid = 13683461771316641482, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74195)[5]; (74171)[7]}
Checking valid directives for the query block
  SPD: Return code in qosdDSDirSetup: NODIR, estType = QUERY_BLOCK
Return code in qosdSetupDirCtx4QB: EXISTS
=====================================
SPD: END context at query block level
=====================================
Access path analysis for WEB_SALES
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for WEB_SALES[WEB_SALES] 
  SPD: Return code in qosdDSDirSetup: NODIR, estType = TABLE

 kkecdn: Single Table Predicate:"WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B1
NOTE: ignoring histogram of column (WEB_SALES.WS_BILL_CUSTOMER_SK)
      used only for incremental stats maintenance
  Column (#5): WS_BILL_CUSTOMER_SK(NUMBER)
    AvgLen: 6 NDV: 973580 Nulls: 0 Density: 0.000001 Min: 2.000000 Max: 1079999.000000
  Estimated selectivity: 1.0271e-06 , col: #5 
  Table: WEB_SALES  Alias: WEB_SALES
    Card: Original: 35969200.000000  Rounded: 37  Computed: 36.945295  Non Adjusted: 36.945295
  Scan IO  Cost (Disk) =   224676.000000
  Scan CPU Cost (Disk) =   14180620495.040001
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000001 flag = 2048  ("WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B1)
  Total Scan IO  Cost  =   224676.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 35969200.000000 (#rows))
                       =   224676.000000
  Total Scan CPU  Cost =   14180620495.040001 (scan (Disk))
                         + 1798460000.000000 (cpu filter eval) (= 50.000000 (per row) * 35969200.000000 (#rows))
                       =   15979080495.040001
  Access Path: TableScan
    Cost:  225085.102964  Resp: 225085.102964  Degree: 0
      Cost_io: 224676.000000  Cost_cpu: 15979080495
      Resp_io: 224676.000000  Resp_cpu: 15979080495
  Access Path: index (index (FFS))
    Index: WEB_SALES_IDX2
    resc_io: 35377.000000  resc_cpu: 7044945128
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  35557.367571  Resp: 35557.367571  Degree: 1
      Cost_io: 35377.000000  Cost_cpu: 7044945128
      Resp_io: 35377.000000  Resp_cpu: 7044945128
 ****** Costing Index WEB_SALES_IDX2
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER

  Estimated selectivity: 1.0271e-06 , col: #5 
  Access Path: index (IndexOnly)
    Index: WEB_SALES_IDX2
    resc_io: 4.000000  resc_cpu: 35886
    ix_sel: 1.0271e-06  ix_sel_with_filters: 1.0271e-06 
    Cost: 4.000919  Resp: 4.000919  Degree: 1
  Best:: AccessPath: IndexRange
  Index: WEB_SALES_IDX2
         Cost: 4.000919  Degree: 1  Resp: 4.000919  Card: 36.945295  Bytes: 0.000000

Access path analysis for DATE_DIM
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for DATE_DIM[DATE_DIM] 
  SPD: Directive valid: dirid = 13969931850241126217, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {C(74171)[7, 9]}
  SPD: Return code in qosdDSDirSetup: EXISTS, estType = TABLE
  Column (#7): 
    NewDensity:0.000007, OldDensity:0.000007 BktCnt:73049.000000, PopBktCnt:73048.000000, PopValCnt:200, NDV:201
  Column (#7): D_YEAR(NUMBER)
    AvgLen: 4 NDV: 201 Nulls: 0 Density: 0.000007 Min: 1900.000000 Max: 2100.000000
    Histogram: Freq  #Bkts: 201  UncompBkts: 73049  EndPtVals: 201  ActualVal: yes
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 


 kkecdn: Single Table Predicate:"DATE_DIM"."D_YEAR"=2001
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY">=1
  Column (#9): 
    NewDensity:0.038666, OldDensity:0.000007 BktCnt:73049.000000, PopBktCnt:73049.000000, PopValCnt:12, NDV:12
  Column (#9): D_MOY(NUMBER)
    AvgLen: 3 NDV: 12 Nulls: 0 Density: 0.038666 Min: 1.000000 Max: 12.000000
    Histogram: Freq  #Bkts: 12  UncompBkts: 73049  EndPtVals: 12  ActualVal: yes
  Estimated selectivity: 1.000000 , endpoint value predicate, col: #9 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY"<=4
  Estimated selectivity: 0.329224 , endpoint value predicate, col: #9 
  Table: DATE_DIM  Alias: DATE_DIM
    Card: Original: 73049.000000  Rounded: 120  Computed: 120.166840  Non Adjusted: 120.166840
  Scan IO  Cost (Disk) =   411.000000
  Scan CPU Cost (Disk) =   33398564.400000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.004997 flag = 2048  ("DATE_DIM"."D_YEAR"=2001)
    io = NOCOST, cpu = 50.000000, sel = 0.329224 flag = 2048  ("DATE_DIM"."D_MOY"<=4)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("DATE_DIM"."D_MOY">=1)
  Total Scan IO  Cost  =   411.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 73049.000000 (#rows))
                       =   411.000000
  Total Scan CPU  Cost =   33398564.400000 (scan (Disk))
                         + 3676708.342003 (cpu filter eval) (= 50.332083 (per row) * 73049.000000 (#rows))
                       =   37075272.742003
  Access Path: TableScan
    Cost:  411.949216  Resp: 411.949216  Degree: 0
      Cost_io: 411.000000  Cost_cpu: 37075273
      Resp_io: 411.000000  Resp_cpu: 37075273
  Best:: AccessPath: TableScan
         Cost: 411.949216  Degree: 1  Resp: 411.949216  Card: 120.166840  Bytes: 0.000000

***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE: Checking validity of partial join eval on query block SEL$3 (#4)
PJE: Passed validity of partial join eval by query block SEL$3 (#4)
number: [0]
PJE: Partial join eval conversion for query block SEL$3 (#4).
PJE: Table marked for partial join eval: DATE_DIM[DATE_DIM]#1
***********************
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  WEB_SALES[WEB_SALES]#0  DATE_DIM[DATE_DIM]#1

***************
Now joining: DATE_DIM[DATE_DIM]#1
***************
NL Join
  Outer table: Card: 36.945295  Cost: 4.000919  Resp: 4.000919  Degree: 1  Bytes: 
Access path analysis for DATE_DIM
  Scan IO  Cost (Disk) =   409.000000
  Scan CPU Cost (Disk) =   33398564.400000
NOTE: ignoring histogram of column (WEB_SALES.WS_SOLD_DATE_SK)
      used only for incremental stats maintenance
  Column (#1): WS_SOLD_DATE_SK(NUMBER)
    AvgLen: 6 NDV: 1839 Nulls: 0 Density: 0.000544 Min: 2450816.000000 Max: 2452641.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.008264 flag = 2048  ("WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK")
    io = NOCOST, cpu = 50.000000, sel = 0.004997 flag = 2048  ("DATE_DIM"."D_YEAR"=2001)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("DATE_DIM"."D_MOY">=1)
    io = NOCOST, cpu = 50.000000, sel = 0.329224 flag = 2048  ("DATE_DIM"."D_MOY"<=4)
  Total Scan IO  Cost  =   409.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 73049.000000 (#rows))
                       =   409.000000
  Total Scan CPU  Cost =   33398564.400000 (scan (Disk))
                         + 3670900.482165 (cpu filter eval) (= 50.252577 (per row) * 73049.000000 (#rows))
                       =   37069464.882165
  Inner table: DATE_DIM  Alias: DATE_DIM
  Access Path: TableScan
    NL Join:  Cost: 15172.116421  Resp: 15172.116421  Degree: 1
      Cost_io: 15137.000000  Cost_cpu: 1371606086
      Resp_io: 15137.000000  Resp_cpu: 1371606086
 ****** Costing Index D_DATE_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: D_DATE_PK_IDX
    resc_io: 1.000000  resc_cpu: 9382
    ix_sel: 1.3689e-05  ix_sel_with_filters: 1.3689e-05 
    NL Join (ordered): Cost: 41.009806  Resp: 41.009806  Degree: 1
      Cost_io: 41.000000  Cost_cpu: 383011
      Resp_io: 41.000000  Resp_cpu: 383011
 ****** Costing Index D_DATE_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 
  Estimated selectivity: 1.000000 , endpoint value predicate, col: #9 
  Estimated selectivity: 0.329224 , endpoint value predicate, col: #9 
  Access Path: index (AllEqUnique)
    Index: D_DATE_PK_IDX
    resc_io: 1.000000  resc_cpu: 9382
    ix_sel: 1.3689e-05  ix_sel_with_filters: 1.3689e-05 
    NL Join (ordered): Cost: 41.009806  Resp: 41.009806  Degree: 1
      Cost_io: 41.000000  Cost_cpu: 383011
      Resp_io: 41.000000  Resp_cpu: 383011

  Best NL cost: 41.009806
          resc: 41.009806  resc_io: 41.000000  resc_cpu: 383011
          resp: 41.009806  resp_io: 41.000000  resc_cpu: 383011
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Capping Semi Join Card of HJ/SMJ by inner = 36.690903
Capping Semi Join Card of HJ/SMJ (no post filters) by inner = 36.690903
Capping Semi Join Card of NL by inner = 36.690903
Capping Semi Join Card of without POSQ by inner = 36.690903
Capping Semi Join Card of non adjusted NSQ by inner = 36.690903
Semi Join Card (capped by inner join):  36.690903 = outer (36.945295) * inner (120.166840) * sel (0.008264)
Join Card - Rounded: 37 Computed: 36.690903
  Outer table:  WEB_SALES  Alias: WEB_SALES
    resc: 4.000919  card 36.945295  bytes:   deg: 1  resp: 4.000919
  Inner table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card: 120.166840  bytes:   deg: 1  resp: 411.949216
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     25 Total Rows:            120
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39096166
      Total Temp space used: 0
  SM join: Resc: 416.951091  Resp: 416.951091  [multiMatchCost=0.000000]
SM Join
  SM cost: 416.951091 
     resc: 416.951091 resc_io: 415.000000 resc_cpu: 76207324
     resp: 416.951091 resp_io: 415.000000 resp_cpu: 76207324
  Outer table:  WEB_SALES  Alias: WEB_SALES
    resc: 4.000919  card 36.945295  bytes:   deg: 1  resp: 4.000919
  Inner table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card: 120.166840  bytes:   deg: 1  resp: 411.949216
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.015811  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 415.965946  Resp: 415.965946  [multiMatchCost=0.000000]
HA Join
  HA cost: 415.965946  
     resc: 415.965946 resc_io: 415.000000 resc_cpu: 37728709
     resp: 415.965946 resp_io: 415.000000 resp_cpu: 37728709
Best:: JoinMethod: NestedLoopSemi
       Cost: 41.009806  Degree: 1  Resp: 41.009806  Card: 36.690903 Bytes: 
***********************
Best so far:  Table#: 0  cost: 4.000919  card: 36.945295  bytes: 444.000000
              Table#: 1  cost: 41.009806  card: 36.690903  bytes: 925.000000
***********************

*********************************
Number of join permutations tried: 1
*********************************
*********************
PJE: Partial join eval conversion for query block SEL$3 (#4).
PJE: Table marked for partial join eval: DATE_DIM[DATE_DIM]#1
***********************
Enumerating distribution method (advanced)
--- Distribution method for 
join between WEB_SALES[WEB_SALES](serial) and DATE_DIM[DATE_DIM](serial); jm = 15; right side access path = IndexUnique
kkopqIsSerialJoin: serial NLJ: both inputs serial
---- serial NL-Join -> SERIAL

(newjo-save)    [1 0 ]
LORE: Or-Expansion validity checks failed on query block SEL$3 (#4) because Cost based OR expansion enabled
Transfer Optimizer annotations for query block SEL$3 (#4)
Final cost for query block SEL$3 (#4) - All Rows Plan:
  Best join order: 1
  Cost: 41.009806  Degree: 1  Card: 37.000000  Bytes: 925.000000
  Resc: 41.009806  Resc_io: 41.000000  Resc_cpu: 383011
  Resp: 41.009806  Resp_io: 41.000000  Resc_cpu: 383011
kkoqbc-subheap (delete addr=0x7f0471ea5688, in-use=44952, alloc=49272)
kkoqbc-end:
        :
    call(in-use=1209464, alloc=1277720), compile(in-use=2863048, alloc=2866344), execution(in-use=44568, alloc=48648)

kkoqbc: finish optimizing query block SEL$3 (#4)
kkoqbc: optimizing query block SEL$4 (#3)
        
        :
    call(in-use=1207256, alloc=1277720), compile(in-use=2869464, alloc=2870208), execution(in-use=44744, alloc=48648)

kkoqbc-subheap (create addr=0x7f0471ea5688)
****************
QUERY BLOCK TEXT
****************
SELECT
                    *
                FROM
                    catalog_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = cs_ship_customer_sk
                    AND cs_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$4 nbfros=2 flg=0
  fro(0): flg=0 objn=74185 hint_alias="CATALOG_SALES"@"SEL$4"
  fro(1): flg=0 objn=74171 hint_alias="DATE_DIM"@"SEL$4"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3255 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: DATE_DIM  Alias: DATE_DIM
  #Rows: 73049  SSZ: 0  LGR: 0  #Blks:  1510  AvgRowLen:  128.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): D_DATE_SK(NUMBER)
    AvgLen: 6 NDV: 73049 Nulls: 0 Density: 0.000014 Min: 2415022.000000 Max: 2488070.000000
Index Stats::
  Index: D_DATE_PK_IDX  Col#: 1
  LVLS: 1  #LB: 163  #DK: 73049  LB/K: 1.00  DB/K: 1.00  CLUF: 1402.00  NRW: 73049.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table: CATALOG_SALES  Alias: CATALOG_SALES  (Using composite stats)
  #Rows: 72077400  SSZ: 0  LGR: 0  #Blks:  1645494  AvgRowLen:  168.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
Index Stats::
  Index: CATALOG_SALES_IDX2  Col#: 8 1
  LVLS: 3  #LB: 261734  #DK: 5997411  LB/K: 1.00  DB/K: 12.00  CLUF: 72077362.00  NRW: 72077400.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
  Index: CATALOG_SALES_PK_IDX  Col#: 16 18
  LVLS: 2  #LB: 249644  #DK: 71913105  LB/K: 1.00  DB/K: 1.00  CLUF: 71898009.00  NRW: 71913105.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
try to generate single-table filter predicates from ORs for query block SEL$4 (#3)
finally: "CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B1 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4

=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$4 (#3)
Applicable DS directives:
   dirid = 11267665714990475542, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74185)[8]}
   dirid = 13969931850241126217, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {C(74171)[7, 9]}
   dirid = 2090373381697137251, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {(74185)[]; F(74171)[]}
   dirid = 14483145493039253896, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {(74185)[]; (74171)[]}
Checking valid directives for the query block
  SPD: Return code in qosdDSDirSetup: NODIR, estType = QUERY_BLOCK
Return code in qosdSetupDirCtx4QB: EXISTS
=====================================
SPD: END context at query block level
=====================================
Access path analysis for CATALOG_SALES
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for CATALOG_SALES[CATALOG_SALES] 
  SPD: Return code in qosdDSDirSetup: NODIR, estType = TABLE

 kkecdn: Single Table Predicate:"CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B1
NOTE: ignoring histogram of column (CATALOG_SALES.CS_SHIP_CUSTOMER_SK)
      used only for incremental stats maintenance
  Column (#8): CS_SHIP_CUSTOMER_SK(NUMBER)
    AvgLen: 6 NDV: 1037120 Nulls: 0 Density: 0.000001 Min: 1.000000 Max: 1079999.000000
  Estimated selectivity: 9.6421e-07 , col: #8 
  Table: CATALOG_SALES  Alias: CATALOG_SALES
    Card: Original: 72077400.000000  Rounded: 69  Computed: 69.497647  Non Adjusted: 69.497647
  Scan IO  Cost (Disk) =   445656.000000
  Scan CPU Cost (Disk) =   32620732791.360001
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000001 flag = 2048  ("CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B1)
  Total Scan IO  Cost  =   445656.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 72077400.000000 (#rows))
                       =   445656.000000
  Total Scan CPU  Cost =   32620732791.360001 (scan (Disk))
                         + 3603870000.000000 (cpu filter eval) (= 50.000000 (per row) * 72077400.000000 (#rows))
                       =   36224602791.360001
  Access Path: TableScan
    Cost:  446583.437120  Resp: 446583.437120  Degree: 0
      Cost_io: 445656.000000  Cost_cpu: 36224602791
      Resp_io: 445656.000000  Resp_cpu: 36224602791
  Access Path: index (index (FFS))
    Index: CATALOG_SALES_IDX2
    resc_io: 70888.000000  resc_cpu: 14117080977
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  71249.431290  Resp: 71249.431290  Degree: 1
      Cost_io: 70888.000000  Cost_cpu: 14117080977
      Resp_io: 70888.000000  Resp_cpu: 14117080977
 ****** Costing Index CATALOG_SALES_IDX2
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER

  Estimated selectivity: 9.6421e-07 , col: #8 
  Access Path: index (IndexOnly)
    Index: CATALOG_SALES_IDX2
    resc_io: 4.000000  resc_cpu: 42486
    ix_sel: 9.6421e-07  ix_sel_with_filters: 9.6421e-07 
    Cost: 4.001088  Resp: 4.001088  Degree: 1
  Best:: AccessPath: IndexRange
  Index: CATALOG_SALES_IDX2
         Cost: 4.001088  Degree: 1  Resp: 4.001088  Card: 69.497647  Bytes: 0.000000

Access path analysis for DATE_DIM
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for DATE_DIM[DATE_DIM] 
  SPD: Directive valid: dirid = 13969931850241126217, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {C(74171)[7, 9]}
  SPD: Return code in qosdDSDirSetup: EXISTS, estType = TABLE
  Column (#7): 
    NewDensity:0.000007, OldDensity:0.000007 BktCnt:73049.000000, PopBktCnt:73048.000000, PopValCnt:200, NDV:201
  Column (#7): D_YEAR(NUMBER)
    AvgLen: 4 NDV: 201 Nulls: 0 Density: 0.000007 Min: 1900.000000 Max: 2100.000000
    Histogram: Freq  #Bkts: 201  UncompBkts: 73049  EndPtVals: 201  ActualVal: yes
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 


 kkecdn: Single Table Predicate:"DATE_DIM"."D_YEAR"=2001
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY">=1
  Column (#9): 
    NewDensity:0.038666, OldDensity:0.000007 BktCnt:73049.000000, PopBktCnt:73049.000000, PopValCnt:12, NDV:12
  Column (#9): D_MOY(NUMBER)
    AvgLen: 3 NDV: 12 Nulls: 0 Density: 0.038666 Min: 1.000000 Max: 12.000000
    Histogram: Freq  #Bkts: 12  UncompBkts: 73049  EndPtVals: 12  ActualVal: yes
  Estimated selectivity: 1.000000 , endpoint value predicate, col: #9 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY"<=4
  Estimated selectivity: 0.329224 , endpoint value predicate, col: #9 
  Table: DATE_DIM  Alias: DATE_DIM
    Card: Original: 73049.000000  Rounded: 120  Computed: 120.166840  Non Adjusted: 120.166840
  Scan IO  Cost (Disk) =   411.000000
  Scan CPU Cost (Disk) =   33398564.400000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.004997 flag = 2048  ("DATE_DIM"."D_YEAR"=2001)
    io = NOCOST, cpu = 50.000000, sel = 0.329224 flag = 2048  ("DATE_DIM"."D_MOY"<=4)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("DATE_DIM"."D_MOY">=1)
  Total Scan IO  Cost  =   411.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 73049.000000 (#rows))
                       =   411.000000
  Total Scan CPU  Cost =   33398564.400000 (scan (Disk))
                         + 3676708.342003 (cpu filter eval) (= 50.332083 (per row) * 73049.000000 (#rows))
                       =   37075272.742003
  Access Path: TableScan
    Cost:  411.949216  Resp: 411.949216  Degree: 0
      Cost_io: 411.000000  Cost_cpu: 37075273
      Resp_io: 411.000000  Resp_cpu: 37075273
  Best:: AccessPath: TableScan
         Cost: 411.949216  Degree: 1  Resp: 411.949216  Card: 120.166840  Bytes: 0.000000

***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE: Checking validity of partial join eval on query block SEL$4 (#3)
PJE: Passed validity of partial join eval by query block SEL$4 (#3)
number: [0]
PJE: Partial join eval conversion for query block SEL$4 (#3).
PJE: Table marked for partial join eval: DATE_DIM[DATE_DIM]#1
***********************
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  CATALOG_SALES[CATALOG_SALES]#0  DATE_DIM[DATE_DIM]#1

***************
Now joining: DATE_DIM[DATE_DIM]#1
***************
NL Join
  Outer table: Card: 69.497647  Cost: 4.001088  Resp: 4.001088  Degree: 1  Bytes: 
Access path analysis for DATE_DIM
  Scan IO  Cost (Disk) =   408.985507
  Scan CPU Cost (Disk) =   33398564.400000
NOTE: ignoring histogram of column (CATALOG_SALES.CS_SOLD_DATE_SK)
      used only for incremental stats maintenance
  Column (#1): CS_SOLD_DATE_SK(NUMBER)
    AvgLen: 6 NDV: 1849 Nulls: 0 Density: 0.000541 Min: 2450815.000000 Max: 2452647.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.008264 flag = 2048  ("CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK")
    io = NOCOST, cpu = 50.000000, sel = 0.004997 flag = 2048  ("DATE_DIM"."D_YEAR"=2001)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("DATE_DIM"."D_MOY">=1)
    io = NOCOST, cpu = 50.000000, sel = 0.329224 flag = 2048  ("DATE_DIM"."D_MOY"<=4)
  Total Scan IO  Cost  =   408.985507 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 73049.000000 (#rows))
                       =   408.985507
  Total Scan CPU  Cost =   33398564.400000 (scan (Disk))
                         + 3670900.482165 (cpu filter eval) (= 50.252577 (per row) * 73049.000000 (#rows))
                       =   37069464.882165
  Inner table: DATE_DIM  Alias: DATE_DIM
  Access Path: TableScan
    NL Join:  Cost: 28289.486754  Resp: 28289.486754  Degree: 1
      Cost_io: 28224.000000  Cost_cpu: 2557835563
      Resp_io: 28224.000000  Resp_cpu: 2557835563
 ****** Costing Index D_DATE_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: D_DATE_PK_IDX
    resc_io: 1.000000  resc_cpu: 9382
    ix_sel: 1.3689e-05  ix_sel_with_filters: 1.3689e-05 
    NL Join (ordered): Cost: 73.017661  Resp: 73.017661  Degree: 1
      Cost_io: 73.000000  Cost_cpu: 689828
      Resp_io: 73.000000  Resp_cpu: 689828
 ****** Costing Index D_DATE_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 
  Estimated selectivity: 1.000000 , endpoint value predicate, col: #9 
  Estimated selectivity: 0.329224 , endpoint value predicate, col: #9 
  Access Path: index (AllEqUnique)
    Index: D_DATE_PK_IDX
    resc_io: 1.000000  resc_cpu: 9382
    ix_sel: 1.3689e-05  ix_sel_with_filters: 1.3689e-05 
    NL Join (ordered): Cost: 73.017661  Resp: 73.017661  Degree: 1
      Cost_io: 73.000000  Cost_cpu: 689828
      Resp_io: 73.000000  Resp_cpu: 689828

  Best NL cost: 73.017661
          resc: 73.017661  resc_io: 73.000000  resc_cpu: 689828
          resp: 73.017661  resp_io: 73.000000  resc_cpu: 689828
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Capping Semi Join Card of HJ/SMJ by inner = 69.019113
Capping Semi Join Card of HJ/SMJ (no post filters) by inner = 69.019113
Capping Semi Join Card of NL by inner = 69.019113
Capping Semi Join Card of without POSQ by inner = 69.019113
Capping Semi Join Card of non adjusted NSQ by inner = 69.019113
Semi Join Card (capped by inner join):  69.019113 = outer (69.497647) * inner (120.166840) * sel (0.008264)
Join Card - Rounded: 69 Computed: 69.019113
  Outer table:  CATALOG_SALES  Alias: CATALOG_SALES
    resc: 4.001088  card 69.497647  bytes:   deg: 1  resp: 4.001088
  Inner table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card: 120.166840  bytes:   deg: 1  resp: 411.949216
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     25 Total Rows:            120
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39096166
      Total Temp space used: 0
  SM join: Resc: 416.951260  Resp: 416.951260  [multiMatchCost=0.000000]
SM Join
  SM cost: 416.951260 
     resc: 416.951260 resc_io: 415.000000 resc_cpu: 76213924
     resp: 416.951260 resp_io: 415.000000 resp_cpu: 76213924
  Outer table:  CATALOG_SALES  Alias: CATALOG_SALES
    resc: 4.001088  card 69.497647  bytes:   deg: 1  resp: 4.001088
  Inner table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card: 120.166840  bytes:   deg: 1  resp: 411.949216
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.015934  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 415.966238  Resp: 415.966238  [multiMatchCost=0.000000]
HA Join
  HA cost: 415.966238  
     resc: 415.966238 resc_io: 415.000000 resc_cpu: 37740109
     resp: 415.966238 resp_io: 415.000000 resp_cpu: 37740109
Best:: JoinMethod: NestedLoopSemi
       Cost: 73.017661  Degree: 1  Resp: 73.017661  Card: 69.019113 Bytes: 
***********************
Best so far:  Table#: 0  cost: 4.001088  card: 69.497647  bytes: 828.000000
              Table#: 1  cost: 73.017661  card: 69.019113  bytes: 1725.000000
***********************

*********************************
Number of join permutations tried: 1
*********************************
*********************
PJE: Partial join eval conversion for query block SEL$4 (#3).
PJE: Table marked for partial join eval: DATE_DIM[DATE_DIM]#1
***********************
Enumerating distribution method (advanced)
--- Distribution method for 
join between CATALOG_SALES[CATALOG_SALES](serial) and DATE_DIM[DATE_DIM](serial); jm = 15; right side access path = IndexUnique
kkopqIsSerialJoin: serial NLJ: both inputs serial
---- serial NL-Join -> SERIAL

(newjo-save)    [1 0 ]
LORE: Or-Expansion validity checks failed on query block SEL$4 (#3) because Cost based OR expansion enabled
Transfer Optimizer annotations for query block SEL$4 (#3)
Final cost for query block SEL$4 (#3) - All Rows Plan:
  Best join order: 1
  Cost: 73.017661  Degree: 1  Card: 69.000000  Bytes: 1725.000000
  Resc: 73.017661  Resc_io: 73.000000  Resc_cpu: 689828
  Resp: 73.017661  Resp_io: 73.000000  Resc_cpu: 689828
kkoqbc-subheap (delete addr=0x7f0471ea5688, in-use=52808, alloc=65704)
kkoqbc-end:
        :
    call(in-use=1246328, alloc=1326928), compile(in-use=2901896, alloc=2902240), execution(in-use=45152, alloc=48648)

kkoqbc: finish optimizing query block SEL$4 (#3)
kkoqbc: optimizing query block SEL$2 (#2)
        
        :
    call(in-use=1244120, alloc=1326928), compile(in-use=2908408, alloc=2910528), execution(in-use=45312, alloc=48648)

kkoqbc-subheap (create addr=0x7f0471ea5688)
****************
QUERY BLOCK TEXT
****************
SELECT
            *
        FROM
            store_sales ss,
            date_dim
        WHERE
            c.c_customer_sk = ss.ss_customer_sk
            AND ss_sold_date_sk = d_date_sk
            AND d_year = 2001
            AND d_moy BETWEEN 1 AND 1 + 3
            AND ( EXISTS (
                SELECT
                    *
                FROM
                    web_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = ws_bill_customer_sk
                    AND ws_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            )
                  OR EXISTS (
                SELECT
                    *
                FROM
                    catalog_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = cs_ship_customer_sk
                    AND cs_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            ) )
    
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$2 nbfros=2 flg=0
  fro(0): flg=0 objn=74171 hint_alias="DATE_DIM"@"SEL$2"
  fro(1): flg=0 objn=74191 hint_alias="SS"@"SEL$2"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3255 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: DATE_DIM  Alias: DATE_DIM
  #Rows: 73049  SSZ: 0  LGR: 0  #Blks:  1510  AvgRowLen:  128.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): D_DATE_SK(NUMBER)
    AvgLen: 6 NDV: 73049 Nulls: 0 Density: 0.000014 Min: 2415022.000000 Max: 2488070.000000
Index Stats::
  Index: D_DATE_PK_IDX  Col#: 1
  LVLS: 1  #LB: 163  #DK: 73049  LB/K: 1.00  DB/K: 1.00  CLUF: 1402.00  NRW: 73049.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table: STORE_SALES  Alias: SS  (Using composite stats)
  #Rows: 144020200  SSZ: 0  LGR: 0  #Blks:  2304802  AvgRowLen:  117.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
Index Stats::
  Index: STORE_SALES_IDX2  Col#: 4 1
  LVLS: 3  #LB: 522970  #DK: 11965122  LB/K: 1.00  DB/K: 12.00  CLUF: 143898920.00  NRW: 144020200.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
  Index: STORE_SALES_PK_IDX  Col#: 3 10
  LVLS: 3  #LB: 497464  #DK: 141527398  LB/K: 1.00  DB/K: 1.00  CLUF: 141365556.00  NRW: 141527398.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
try to generate single-table filter predicates from ORs for query block SEL$2 (#2)
finally: "SS"."SS_CUSTOMER_SK"=:B1 AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND ( EXISTS (SELECT 0 FROM "WEB_SALES" "WEB_SALES","DATE_DIM" "DATE_DIM" WHERE "WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B2 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1) OR  EXISTS (SELECT 0 FROM "CATALOG_SALES" "CATALOG_SALES","DATE_DIM" "DATE_DIM" WHERE "CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B3 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1))

=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$2 (#2)
Applicable DS directives:
   dirid = 10827845680942532126, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {F(74191)[]; F(74171)[]}
   dirid = 7660518587836633700, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74191)[4]}
   dirid = 13969931850241126217, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {C(74171)[7, 9]}
   dirid = 2361553282592865451, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {(74191)[]; F(74171)[]}
   dirid = 12943986683386070018, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {(74191)[]; (74171)[]}
Checking valid directives for the query block
  SPD: Return code in qosdDSDirSetup: NODIR, estType = QUERY_BLOCK
Return code in qosdSetupDirCtx4QB: EXISTS
=====================================
SPD: END context at query block level
=====================================
Access path analysis for STORE_SALES
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for STORE_SALES[SS] 
  SPD: Return code in qosdDSDirSetup: NODIR, estType = TABLE

 kkecdn: Single Table Predicate:"SS"."SS_CUSTOMER_SK"=:B1
NOTE: ignoring histogram of column (STORE_SALES.SS_CUSTOMER_SK)
      used only for incremental stats maintenance
  Column (#4): SS_CUSTOMER_SK(NUMBER)
    AvgLen: 6 NDV: 1039371 Nulls: 0 Density: 0.000001 Min: 1.000000 Max: 1079999.000000
  Estimated selectivity: 9.6212e-07 , col: #4 
  Table: STORE_SALES  Alias: SS
    Card: Original: 144020200.000000  Rounded: 139  Computed: 138.564767  Non Adjusted: 138.564767
  Scan IO  Cost (Disk) =   624219.000000
  Scan CPU Cost (Disk) =   46657751154.880005
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000001 flag = 2048  ("SS"."SS_CUSTOMER_SK"=:B1)
  Total Scan IO  Cost  =   624219.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 144020200.000000 (#rows))
                       =   624219.000000
  Total Scan CPU  Cost =   46657751154.880005 (scan (Disk))
                         + 7201010000.000000 (cpu filter eval) (= 50.000000 (per row) * 144020200.000000 (#rows))
                       =   53858761154.880005
  Access Path: TableScan
    Cost:  625597.914066  Resp: 625597.914066  Degree: 0
      Cost_io: 624219.000000  Cost_cpu: 53858761155
      Resp_io: 624219.000000  Resp_cpu: 53858761155
  Access Path: index (index (FFS))
    Index: STORE_SALES_IDX2
    resc_io: 141639.000000  resc_cpu: 28207733477
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  142361.185947  Resp: 142361.185947  Degree: 1
      Cost_io: 141639.000000  Cost_cpu: 28207733477
      Resp_io: 141639.000000  Resp_cpu: 28207733477
 ****** Costing Index STORE_SALES_IDX2
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER

  Estimated selectivity: 9.6212e-07 , col: #4 
  Access Path: index (IndexOnly)
    Index: STORE_SALES_IDX2
    resc_io: 4.000000  resc_cpu: 56286
    ix_sel: 9.6212e-07  ix_sel_with_filters: 9.6212e-07 
    Cost: 4.001441  Resp: 4.001441  Degree: 1
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: IndexRange
  Index: STORE_SALES_IDX2
         Cost: 4.001441  Degree: 1  Resp: 4.001441  Card: 138.564767  Bytes: 0.000000

Access path analysis for DATE_DIM
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for DATE_DIM[DATE_DIM] 
  SPD: Directive valid: dirid = 13969931850241126217, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {C(74171)[7, 9]}
  SPD: Return code in qosdDSDirSetup: EXISTS, estType = TABLE
  Column (#7): 
    NewDensity:0.000007, OldDensity:0.000007 BktCnt:73049.000000, PopBktCnt:73048.000000, PopValCnt:200, NDV:201
  Column (#7): D_YEAR(NUMBER)
    AvgLen: 4 NDV: 201 Nulls: 0 Density: 0.000007 Min: 1900.000000 Max: 2100.000000
    Histogram: Freq  #Bkts: 201  UncompBkts: 73049  EndPtVals: 201  ActualVal: yes
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 


 kkecdn: Single Table Predicate:"DATE_DIM"."D_YEAR"=2001
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY">=1
  Column (#9): 
    NewDensity:0.038666, OldDensity:0.000007 BktCnt:73049.000000, PopBktCnt:73049.000000, PopValCnt:12, NDV:12
  Column (#9): D_MOY(NUMBER)
    AvgLen: 3 NDV: 12 Nulls: 0 Density: 0.038666 Min: 1.000000 Max: 12.000000
    Histogram: Freq  #Bkts: 12  UncompBkts: 73049  EndPtVals: 12  ActualVal: yes
  Estimated selectivity: 1.000000 , endpoint value predicate, col: #9 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY"<=4
  Estimated selectivity: 0.329224 , endpoint value predicate, col: #9 
  Table: DATE_DIM  Alias: DATE_DIM
    Card: Original: 73049.000000  Rounded: 120  Computed: 120.166840  Non Adjusted: 120.166840
  Scan IO  Cost (Disk) =   411.000000
  Scan CPU Cost (Disk) =   33398564.400000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.004997 flag = 2048  ("DATE_DIM"."D_YEAR"=2001)
    io = NOCOST, cpu = 50.000000, sel = 0.329224 flag = 2048  ("DATE_DIM"."D_MOY"<=4)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("DATE_DIM"."D_MOY">=1)
  Total Scan IO  Cost  =   411.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 73049.000000 (#rows))
                       =   411.000000
  Total Scan CPU  Cost =   33398564.400000 (scan (Disk))
                         + 3676708.342003 (cpu filter eval) (= 50.332083 (per row) * 73049.000000 (#rows))
                       =   37075272.742003
  Access Path: TableScan
    Cost:  411.949216  Resp: 411.949216  Degree: 0
      Cost_io: 411.000000  Cost_cpu: 37075273
      Resp_io: 411.000000  Resp_cpu: 37075273
  ****** trying bitmap/domain indexes ******
 ****** Costing Index D_DATE_PK_IDX
  Access Path: index (FullScan)
    Index: D_DATE_PK_IDX
    resc_io: 164.000000  resc_cpu: 15777716
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 164.403948  Resp: 164.403948  Degree: 0
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: TableScan
         Cost: 411.949216  Degree: 1  Resp: 411.949216  Card: 120.166840  Bytes: 0.000000

***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE: Checking validity of partial join eval on query block SEL$2 (#2)
PJE: Passed validity of partial join eval by query block SEL$2 (#2)
number: [0]
PJE: Partial join eval conversion for query block SEL$2 (#2).
PJE: Table marked for partial join eval: STORE_SALES[SS]#1
***********************
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  DATE_DIM[DATE_DIM]#0  STORE_SALES[SS]#1

***************
Now joining: STORE_SALES[SS]#1
***************
NL Join
  Outer table: Card: 120.166840  Cost: 411.949216  Resp: 411.949216  Degree: 1  Bytes: 
Access path analysis for STORE_SALES
  Scan IO  Cost (Disk) =   624217.216667
  Scan CPU Cost (Disk) =   46657751154.880005
NOTE: ignoring histogram of column (STORE_SALES.SS_SOLD_DATE_SK)
      used only for incremental stats maintenance
  Column (#1): SS_SOLD_DATE_SK(NUMBER)
    AvgLen: 6 NDV: 1849 Nulls: 0 Density: 0.000541 Min: 2450816.000000 Max: 2452651.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000001 flag = 2064  ("SS"."SS_CUSTOMER_SK"=:B1)
    io = NOCOST, cpu = 50.000000, sel = 0.007463 flag = 2048  ("SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK")
  Total Scan IO  Cost  =   624217.216667 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 144020200.000000 (#rows))
                       =   624217.216667
  Total Scan CPU  Cost =   46657751154.880005 (scan (Disk))
                         + 7201016928.238328 (cpu filter eval) (= 50.000048 (per row) * 144020200.000000 (#rows))
                       =   53858768083.118332
  Inner table: STORE_SALES  Alias: SS
  Access Path: TableScan
    NL Join:  Cost: 75071947.658387  Resp: 75071947.658387  Degree: 1
      Cost_io: 74906477.000000  Cost_cpu: 6463089245247
      Resp_io: 74906477.000000  Resp_cpu: 6463089245247
  Access Path: index (index (FFS))
    Index: STORE_SALES_IDX2
    resc_io: 141637.716667  resc_cpu: 28207740405
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: STORE_SALES  Alias: SS
  Access Path: index (FFS)
    NL Join:  Cost: 17083600.284196  Resp: 17083600.284196  Degree: 1
      Cost_io: 16996937.000000  Cost_cpu: 3384965923877
      Resp_io: 16996937.000000  Resp_cpu: 3384965923877
 ****** Costing Index STORE_SALES_IDX2
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 8.3576e-08
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 8.3576e-08
  Estimated selectivity: 9.6212e-07 , col: #4 
  Access Path: index (AllEqJoinGuess)
    Index: STORE_SALES_IDX2
    resc_io: 3.000000  resc_cpu: 22414
    ix_sel: 6.9435e-09  ix_sel_with_filters: 6.9435e-09 
    NL Join : Cost: 772.018080  Resp: 772.018080  Degree: 1
      Cost_io: 771.000000  Cost_cpu: 39764991
      Resp_io: 771.000000  Resp_cpu: 39764991
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 772.018080
          resc: 772.018080  resc_io: 771.000000  resc_cpu: 39764991
          resp: 772.018080  resp_io: 771.000000  resc_cpu: 39764991
  SPD: Directive valid: dirid = 10827845680942532126, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {F(74191)[]; F(74171)[]}
  SPD: Return code in qosdDSDirSetup: EXISTS, estType = JOIN
Semi Join Card:  120.166840 = outer (120.166840) * sel (1.000000)
Join Card - Rounded: 120 Computed: 120.166840
  Outer table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card 120.166840  bytes:   deg: 1  resp: 411.949216
  Inner table:  STORE_SALES  Alias: SS
    resc: 4.001441  card: 138.564767  bytes:   deg: 1  resp: 4.001441
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     25 Total Rows:            120
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39096166
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     24 Total Rows:            139
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39103407
      Total Temp space used: 0
  SM join: Resc: 417.952755  Resp: 417.952755  [multiMatchCost=0.000000]
SM Join
  SM cost: 417.952755 
     resc: 417.952755 resc_io: 415.000000 resc_cpu: 115331131
     resp: 417.952755 resp_io: 415.000000 resp_cpu: 115331131
SM Join (with index on outer)
 ****** Costing Index D_DATE_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (FullScan)
    Index: D_DATE_PK_IDX
    resc_io: 1566.000000  resc_cpu: 52083873
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1567.333473  Resp: 1567.333473  Degree: 1
  Outer table:  DATE_DIM  Alias: DATE_DIM
    resc: 1567.333473  card 120.166840  bytes:   deg: 1  resp: 1567.333473
  Inner table:  STORE_SALES  Alias: SS
    resc: 4.001441  card: 138.564767  bytes:   deg: 1  resp: 4.001441
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     24 Total Rows:            139
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39103407
      Total Temp space used: 0
  SM join: Resc: 1572.336055  Resp: 1572.336055  [multiMatchCost=0.000000]
  Outer table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card 120.166840  bytes:   deg: 1  resp: 411.949216
  Inner table:  STORE_SALES  Alias: SS
    resc: 4.001441  card: 138.564767  bytes:   deg: 1  resp: 4.001441
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016178  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 415.966836  Resp: 415.966836  [multiMatchCost=0.000000]
HA Join
  HA cost: 415.966836  
     resc: 415.966836 resc_io: 415.000000 resc_cpu: 37763459
     resp: 415.966836 resp_io: 415.000000 resp_cpu: 37763459
Best:: JoinMethod: HashSemi
       Cost: 415.966836  Degree: 1  Resp: 415.966836  Card: 120.166840 Bytes: 
***********************
Best so far:  Table#: 0  cost: 411.949216  card: 120.166840  bytes: 1560.000000
              Table#: 1  cost: 415.966836  card: 120.166840  bytes: 3000.000000
***********************

*********************************
Number of join permutations tried: 1
*********************************
*********************
PJE: Partial join eval conversion for query block SEL$2 (#2).
PJE: Table marked for partial join eval: STORE_SALES[SS]#1
***********************
Enumerating distribution method (advanced)
--- Distribution method for 
join between DATE_DIM[DATE_DIM](serial) and SS[STORE_SALES](serial); jm = 2; right side access path = IndexRange
---- serial Hash-Join -> NONE

kkoaccsqf: Current query block SEL$2 (#2) is serial
kkoaccsqf: correlated subquery query block SEL$3 (#4) in filter               : serial
(newjo-save)    [0 1 ]
LORE: Or-Expansion validity checks failed on query block SEL$2 (#2) because Cost based OR expansion enabled
Transfer Optimizer annotations for query block SEL$2 (#2)
Final cost for query block SEL$2 (#2) - All Rows Plan:
  Best join order: 1
  Cost: 415.966836  Degree: 1  Card: 120.000000  Bytes: 3000.000000
  Resc: 415.966836  Resc_io: 415.000000  Resc_cpu: 37763459
  Resp: 415.966836  Resp_io: 415.000000  Resc_cpu: 37763459
kkoqbc-subheap (delete addr=0x7f0471ea5688, in-use=63832, alloc=65704)
kkoqbc-end:
        :
    call(in-use=1282832, alloc=1359664), compile(in-use=2943912, alloc=2946808), execution(in-use=46128, alloc=48648)

kkoqbc: finish optimizing query block SEL$2 (#2)
kkoqbc: optimizing query block SEL$ACBFB8CC (#12)
        
        :
    call(in-use=1280624, alloc=1359664), compile(in-use=2950472, alloc=2950952), execution(in-use=46288, alloc=48648)

kkoqbc-subheap (create addr=0x7f0471ea5688)
****************
QUERY BLOCK TEXT
****************
Not available.
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$ACBFB8CC nbfros=2 flg=0
  fro(0): flg=0 objn=74168 hint_alias="C"@"SEL$1"
  fro(1): flg=0 objn=74169 hint_alias="CA"@"SEL$1"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3255 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: CUSTOMER  Alias:  C
  #Rows: 1080000  SSZ: 0  LGR: 0  #Blks:  23374  AvgRowLen:  138.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): C_CUSTOMER_SK(NUMBER)
    AvgLen: 6 NDV: 1080000 Nulls: 0 Density: 0.000001 Min: 1.000000 Max: 1080000.000000
  Column (#5): C_CURRENT_ADDR_SK(NUMBER)
    AvgLen: 5 NDV: 457472 Nulls: 0 Density: 0.000002 Min: 1.000000 Max: 539997.000000
Index Stats::
  Index: CUSTOMER_PK_IDX  Col#: 1
  LVLS: 2  #LB: 2266  #DK: 1080000  LB/K: 1.00  DB/K: 1.00  CLUF: 75684.00  NRW: 1080000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table: CUSTOMER_ADDRESS  Alias: CA
  #Rows: 540000  SSZ: 0  LGR: 0  #Blks:  13174  AvgRowLen:  152.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): CA_ADDRESS_SK(NUMBER)
    AvgLen: 5 NDV: 540000 Nulls: 0 Density: 0.000002 Min: 1.000000 Max: 540000.000000
  Column (#8): CA_COUNTY(VARCHAR2)
    AvgLen: 16 NDV: 1877 Nulls: 0 Density: 0.000471
    Histogram: Hybrid  #Bkts: 254  UncompBkts: 5580  EndPtVals: 254  ActualVal: yes
Index Stats::
  Index: CA_ADDRESS_PK_IDX  Col#: 1
  LVLS: 2  #LB: 1127  #DK: 540000  LB/K: 1.00  DB/K: 1.00  CLUF: 12283.00  NRW: 540000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
  Column (#3): C_CURRENT_CDEMO_SK(NUMBER)
    AvgLen: 6 NDV: 772544 Nulls: 0 Density: 0.000001 Min: 18.000000 Max: 1920799.000000
try to generate single-table filter predicates from ORs for query block SEL$ACBFB8CC (#12)
finally: ("CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County') AND "C"."C_CURRENT_ADDR_SK"="CA"."CA_ADDRESS_SK" AND  EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM" WHERE "SS"."SS_CUSTOMER_SK"=:B1 AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND ( EXISTS (SELECT 0 FROM "WEB_SALES" "WEB_SALES","DATE_DIM" "DATE_DIM" WHERE "WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B2 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1) OR  EXISTS (SELECT 0 FROM "CATALOG_SALES" "CATALOG_SALES","DATE_DIM" "DATE_DIM" WHERE "CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B3 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1)))

=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$ACBFB8CC (#12)
Applicable DS directives:
   dirid = 18439699102505563871, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {EC(74169)[8]}
   dirid = 5181560337004891843, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74169)[]; (74168)[3]}
   dirid = 9316027922818115912, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74168)[3, 5]}
Checking valid directives for the query block
  SPD: Directive valid: dirid = 5181560337004891843, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74169)[]; (74168)[3]}
  SPD: Return code in qosdDSDirSetup: EXISTS, estType = GROUP_BY
  SPD: Return code in qosdDSDirSetup: NODIR, estType = QUERY_BLOCK
Return code in qosdSetupDirCtx4QB: EXISTS
=====================================
SPD: END context at query block level
=====================================
Access path analysis for CUSTOMER_ADDRESS
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for CUSTOMER_ADDRESS[CA] 
  SPD: Directive valid: dirid = 18439699102505563871, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {EC(74169)[8]}
  SPD: Return code in qosdDSDirSetup: EXISTS, estType = TABLE

 kkecdn: Single Table Predicate:"CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County'
  Using density: 4.7103e-04 of col #8 as selectivity of pred having unreasonably low value
  Using density: 4.7103e-04 of col #8 as selectivity of pred having unreasonably low value
  Using density: 4.7103e-04 of col #8 as selectivity of pred having unreasonably low value
  Using density: 4.7103e-04 of col #8 as selectivity of pred having unreasonably low value
  Estimated selectivity: 5.3763e-04 , endpoint value predicate, col: #8 
  Table: CUSTOMER_ADDRESS  Alias: CA
    Card: Original: 540000.000000  Rounded: 1308  Computed: 1307.756551  Non Adjusted: 1307.756551
  Scan IO  Cost (Disk) =   3570.000000
  Scan CPU Cost (Disk) =   250417850.560000
  Cost of predicates:
    io = 0.000000, cpu = 249.764594, sel = 0.002422 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Chouteau County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Dinwiddie County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Dixie County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Harrisonburg city')
      io = NOCOST, cpu = 50.000000, sel = 0.000538 flag = 2048  ("CA"."CA_COUNTY"='Lowndes County')
  Total Scan IO  Cost  =   3570.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 540000.000000 (#rows))
                       =   3570.000000
  Total Scan CPU  Cost =   250417850.560000 (scan (Disk))
                         + 134872880.645405 (cpu filter eval) (= 249.764594 (per row) * 540000.000000 (#rows))
                       =   385290731.205405
  Access Path: TableScan
    Cost:  3579.864371  Resp: 3579.864371  Degree: 0
      Cost_io: 3570.000000  Cost_cpu: 385290731
      Resp_io: 3570.000000  Resp_cpu: 385290731
  ****** trying bitmap/domain indexes ******
 ****** Costing Index CA_ADDRESS_PK_IDX
  Access Path: index (FullScan)
    Index: CA_ADDRESS_PK_IDX
    resc_io: 1129.000000  resc_cpu: 116040106
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1131.970906  Resp: 1131.970906  Degree: 0
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: TableScan
         Cost: 3579.864371  Degree: 1  Resp: 3579.864371  Card: 1307.756551  Bytes: 0.000000

Access path analysis for CUSTOMER
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for CUSTOMER[C] 
  SPD: Return code in qosdDSDirSetup: NODIR, estType = TABLE

 kkecdn: Single Table Predicate: EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM" WHERE "SS"."SS_CUSTOMER_SK"=:B1 AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND ( EXISTS (SELECT 0 FROM "WEB_SALES" "WEB_SALES","DATE_DIM" "DATE_DIM" WHERE "WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B2 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1) OR  EXISTS (SELECT 0 FROM "CATALOG_SALES" "CATALOG_SALES","DATE_DIM" "DATE_DIM" WHERE "CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B3 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1)))
  Column (#1): C_CUSTOMER_SK(NUMBER)
    AvgLen: 6 NDV: 1080000 Nulls: 0 Density: 0.000001 Min: 1.000000 Max: 1080000.000000
  Table: CUSTOMER  Alias: C
    Card: Original: 1080000.000000  Rounded: 1080000  Computed: 1080000.000000  Non Adjusted: 1080000.000000
  Scan IO  Cost (Disk) =   6332.000000
  Scan CPU Cost (Disk) =   414856538.560000
  Cost of predicates:
    io = NOCOST, cpu = 20.000000, sel = 0.050000 flag = 2562  ( EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM" WHERE "SS"."SS_CUSTOMER_SK"=:B1 AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND ( EXISTS (SELECT 0 FROM "WEB_SALES" "WEB_SALES","DATE_DIM" "DATE_DIM" WHERE "WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B2 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1) OR  EXISTS (SELECT 0 FROM "CATALOG_SALES" "CATALOG_SALES","DATE_DIM" "DATE_DIM" WHERE "CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B3 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1))))
  Total Scan IO  Cost  =   6332.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 1080000.000000 (#rows))
                       =   6332.000000
  Total Scan CPU  Cost =   414856538.560000 (scan (Disk))
                         + 21600000.000000 (cpu filter eval) (= 20.000000 (per row) * 1080000.000000 (#rows))
                       =   436456538.560000
  Access Path: TableScan
    Cost:  6343.174339  Resp: 6343.174339  Degree: 0
      Cost_io: 6332.000000  Cost_cpu: 436456539
      Resp_io: 6332.000000  Resp_cpu: 436456539
  ****** trying bitmap/domain indexes ******
 ****** Costing Index CUSTOMER_PK_IDX
  Access Path: index (FullScan)
    Index: CUSTOMER_PK_IDX
    resc_io: 2268.000000  resc_cpu: 232151426
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 2273.943636  Resp: 2273.943636  Degree: 0
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: TableScan
         Cost: 6343.174339  Degree: 1  Resp: 6343.174339  Card: 1080000.000000  Bytes: 0.000000

Grouping column cardinality [C_CURRENT_]    772544
***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE:  Bypassed; QB is not duplicate insignificant SEL$ACBFB8CC (#12)
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  CUSTOMER_ADDRESS[CA]#0  CUSTOMER[C]#1

***************
Now joining: CUSTOMER[C]#1
***************
NL Join
  Outer table: Card: 1307.756551  Cost: 3579.864371  Resp: 3579.864371  Degree: 1  Bytes: 
Access path analysis for CUSTOMER
  Scan IO  Cost (Disk) =   6330.459480
  Scan CPU Cost (Disk) =   414856538.560000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000002 flag = 2048  ("C"."C_CURRENT_ADDR_SK"="CA"."CA_ADDRESS_SK")
    io = NOCOST, cpu = 20.000000, sel = 0.050000 flag = 2562  ( EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM" WHERE "SS"."SS_CUSTOMER_SK"=:B1 AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND ( EXISTS (SELECT 0 FROM "WEB_SALES" "WEB_SALES","DATE_DIM" "DATE_DIM" WHERE "WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B2 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1) OR  EXISTS (SELECT 0 FROM "CATALOG_SALES" "CATALOG_SALES","DATE_DIM" "DATE_DIM" WHERE "CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B3 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1))))
  Total Scan IO  Cost  =   6330.459480 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 1080000.000000 (#rows))
                       =   6330.459480
  Total Scan CPU  Cost =   414856538.560000 (scan (Disk))
                         + 24300000.000000 (cpu filter eval) (= 22.500000 (per row) * 1080000.000000 (#rows))
                       =   439156538.560000
  Inner table: CUSTOMER  Alias: C
  Access Path: TableScan
    NL Join:  Cost: 8298527.317370  Resp: 8298527.317370  Degree: 1
      Cost_io: 8283811.000000  Cost_cpu: 574802043168
      Resp_io: 8283811.000000  Resp_cpu: 574802043168
  ****** trying bitmap/domain indexes ******
 ****** Costing Index CUSTOMER_PK_IDX
  Access Path: index (FullScan)
    Index: CUSTOMER_PK_IDX
    resc_io: 2268.000000  resc_cpu: 232151426
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 2273.943636  Resp: 2273.943636  Degree: 0
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 8298527.317370
          resc: 8298527.317370  resc_io: 8283811.000000  resc_cpu: 574802043168
          resp: 8298527.317370  resp_io: 8283811.000000  resc_cpu: 574802043168
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Join Card:  3087.351958 = outer (1307.756551) * inner (1080000.000000) * sel (2.1859e-06)
Join Card - Rounded: 3087 Computed: 3087.351958
Grouping column cardinality [C_CURRENT_]    772544
  Outer table:  CUSTOMER_ADDRESS  Alias: CA
    resc: 3579.864371  card 1307.756551  bytes:   deg: 1  resp: 3579.864371
  Inner table:  CUSTOMER  Alias: C
    resc: 6343.174339  card: 1080000.000000  bytes:   deg: 1  resp: 6343.174339
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 6 Row size:     34 Total Rows:           1308
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39668949
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 3835 Row size:     29 Total Rows:        1080000
      Initial runs:   2 Merge passes:  1 IO Cost / pass:       2078
      Total IO sort cost: 5913.000000      Total CPU sort cost: 1108751040
      Total Temp space used: 60826000
  SM join: Resc: 15865.441029  Resp: 15865.441029  [multiMatchCost=0.000000]
SM Join
  SM cost: 15865.441029 
     resc: 15865.441029 resc_io: 15815.000000 resc_cpu: 1970167258
     resp: 15865.441029 resp_io: 15815.000000 resp_cpu: 1970167258
SM Join (with index on outer)
 ****** Costing Index CA_ADDRESS_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (FullScan)
    Index: CA_ADDRESS_PK_IDX
    resc_io: 13412.000000  resc_cpu: 494985634
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 13424.672825  Resp: 13424.672825  Degree: 1
  Outer table:  CUSTOMER_ADDRESS  Alias: CA
    resc: 13424.672825  card 1307.756551  bytes:   deg: 1  resp: 13424.672825
  Inner table:  CUSTOMER  Alias: C
    resc: 6343.174339  card: 1080000.000000  bytes:   deg: 1  resp: 6343.174339
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 3835 Row size:     29 Total Rows:        1080000
      Initial runs:   2 Merge passes:  1 IO Cost / pass:       2078
      Total IO sort cost: 5913.000000      Total CPU sort cost: 1108751040
      Total Temp space used: 60826000
  SM join: Resc: 25709.233862  Resp: 25709.233862  [multiMatchCost=0.000000]
  Outer table:  CUSTOMER_ADDRESS  Alias: CA
    resc: 3579.864371  card 1307.756551  bytes:   deg: 1  resp: 3579.864371
  Inner table:  CUSTOMER  Alias: C
    resc: 6343.174339  card: 1080000.000000  bytes:   deg: 1  resp: 6343.174339
    using dmeth: 2  #groups: 1
    Cost per ptn: 2.785445  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 6  probefrag: 3824  ppasses: 1
  Hash join: Resc: 9925.824155  Resp: 9925.824155  [multiMatchCost=0.000000]
HA Join
  HA cost: 9925.824155  
     resc: 9925.824155 resc_io: 9902.000000 resc_cpu: 930543470
     resp: 9925.824155 resp_io: 9902.000000 resp_cpu: 930543470
GROUP BY sort
GROUP BY/Correlated Subquery Filter adjustment factor: 1.000000
GROUP BY cardinality:  3087.000000, TABLE cardinality:  3087.000000
Vector group by not costed because no SYS_OP_XLATE_USE in group by.
kdmoGByPushdownValid: more than one table in group by    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 20 Row size:     52 Total Rows:           3087
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 40671077
      Total Temp space used: 0
Best:: JoinMethod: Hash
       Cost: 9926.865433  Degree: 1  Resp: 9926.865433  Card: 3087.351958 Bytes: 
***********************
Best so far:  Table#: 0  cost: 3579.864371  card: 1307.756551  bytes: 27468.000000
              Table#: 1  cost: 9926.865433  card: 3087.351958  bytes: 117306.000000
***********************

*********************************
Number of join permutations tried: 1
*********************************
Enumerating distribution method (advanced)
--- Distribution method for 
join between CA[CUSTOMER_ADDRESS](serial) and C[CUSTOMER](serial); jm = 1; right side access path = TableScan
---- serial Hash-Join -> NONE

kkoaccsqf: Current query block SEL$ACBFB8CC (#12) is serial
kkoaccsqf: correlated subquery query block SEL$2 (#2) in filter               : serial
Final adjusted join cardinality: 1.000000, sq. fil. factor: 1080000.000000
(newjo-save)    [1 0 ]
GROUP BY/Correlated Subquery Filter adjustment factor: 1.000000
GROUP BY cardinality:  1.000000, TABLE cardinality:  1.000000
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     52 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39058824
      Total Temp space used: 0
LORE: Or-Expansion validity checks failed on query block SEL$ACBFB8CC (#12) because Cost based OR expansion enabled
Transfer Optimizer annotations for query block SEL$ACBFB8CC (#12)
Final cost for query block SEL$ACBFB8CC (#12) - All Rows Plan:
  Best join order: 1
  Cost: 9926.865433  Degree: 1  Card: 1.000000  Bytes: 117306.000000
  Resc: 9926.865433  Resc_io: 9902.000000  Resc_cpu: 971214547
  Resp: 9926.865433  Resp_io: 9902.000000  Resc_cpu: 971214547
kkoqbc-subheap (delete addr=0x7f0471ea5688, in-use=53736, alloc=65704)
kkoqbc-end:
        :
    call(in-use=1324760, alloc=1408768), compile(in-use=2975288, alloc=2978944), execution(in-use=47920, alloc=48648)

kkoqbc: finish optimizing query block SEL$ACBFB8CC (#12)
kkoqbc: optimizing query block SEL$26749286 (#13)
        
        :
    call(in-use=1322552, alloc=1408768), compile(in-use=2979432, alloc=2982704), execution(in-use=48032, alloc=48648)

kkoqbc-subheap (create addr=0x7f0471ea5688)
****************
QUERY BLOCK TEXT
****************
Not available.
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$26749286 nbfros=1 flg=0
  fro(0): flg=0 objn=74170 hint_alias="CUSTOMER_DEMOGRAPHICS"@"SEL$1"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3255 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
  #Rows: 1920800  SSZ: 0  LGR: 0  #Blks:  17254  AvgRowLen:  54.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
Index Stats::
  Index: CD_DEMO_PK_IDX  Col#: 1
  LVLS: 2  #LB: 4138  #DK: 1920800  LB/K: 1.00  DB/K: 1.00  CLUF: 795806.00  NRW: 1920800.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
try to generate single-table filter predicates from ORs for query block SEL$26749286 (#13)
=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$26749286 (#13)
Applicable DS directives:
   dirid = 7754152966831092939, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {EC(74170)[3, 4]}
Checking valid directives for the query block
  SPD: Return code in qosdDSDirSetup: NODIR, estType = QUERY_BLOCK
Return code in qosdSetupDirCtx4QB: EXISTS
=====================================
SPD: END context at query block level
=====================================
Access path analysis for CUSTOMER_DEMOGRAPHICS
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS] 
  SPD: Return code in qosdDSDirSetup: NODIR, estType = TABLE
  Table: CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
    Card: Original: 1920800.000000  Rounded: 1920800  Computed: 1920800.000000  Non Adjusted: 1920800.000000
  Scan IO  Cost (Disk) =   4675.000000
  Scan CPU Cost (Disk) =   718321325.760000
  Total Scan IO  Cost  =   4675.000000 (scan (Disk))
                       =   4675.000000
  Total Scan CPU  Cost =   718321325.760000 (scan (Disk))
                       =   718321325.760000
  Access Path: TableScan
    Cost:  4693.390757  Resp: 4693.390757  Degree: 0
      Cost_io: 4675.000000  Cost_cpu: 718321326
      Resp_io: 4675.000000  Resp_cpu: 718321326
  Best:: AccessPath: TableScan
         Cost: 4693.390757  Degree: 1  Resp: 4693.390757  Card: 1920800.000000  Bytes: 0.000000

***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE:  Bypassed; QB has a single table SEL$26749286 (#13)
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS]#0
***********************
Best so far:  Table#: 0  cost: 4693.390757  card: 1920800.000000  bytes: 103723200.000000
***********************

*********************************
Number of join permutations tried: 1
*********************************
Enumerating distribution method (advanced)

LORE: Or-Expansion validity checks failed on query block SEL$26749286 (#13) because Cost based OR expansion enabled
Transfer Optimizer annotations for query block SEL$26749286 (#13)
Final cost for query block SEL$26749286 (#13) - All Rows Plan:
  Best join order: 1
  Cost: 4693.390757  Degree: 1  Card: 1920800.000000  Bytes: 103723200.000000
  Resc: 4693.390757  Resc_io: 4675.000000  Resc_cpu: 718321326
  Resp: 4693.390757  Resp_io: 4675.000000  Resc_cpu: 718321326
kkoqbc-subheap (delete addr=0x7f0471ea5688, in-use=24640, alloc=32840)
kkoqbc-end:
        :
    call(in-use=1330056, alloc=1408768), compile(in-use=2995680, alloc=2998464), execution(in-use=48032, alloc=48648)

kkoqbc: finish optimizing query block SEL$26749286 (#13)
kkoqbc: optimizing query block SEL$FBA97E11 (#1)
        
        :
    call(in-use=1327848, alloc=1408768), compile(in-use=3001736, alloc=3002608), execution(in-use=48192, alloc=48648)

kkoqbc-subheap (create addr=0x7f0471ea5688)
****************
QUERY BLOCK TEXT
****************
SELECT /*query10*/
    cd_gender,
    cd_marital_status,
    cd_education_status,
    COUNT(*) cnt1,
    cd_purchase_estimate,
    COUNT(*) cnt2,
    cd_credit_rating,
    COUNT(*) cnt3,
    cd_dep_count,
    COUNT(*) cnt4,
    cd_dep_employed_count,
    COUNT(*) cnt5,
    cd_dep_college_count,
    COUNT(*) cnt6
FROM
    customer c,
    customer_address ca,
    customer_demographics
WHERE
    -- join predicates
        c.c_current_addr_sk = ca.ca_address_sk
    AND cd_demo_sk = c.c_current_cdemo_sk
    -- filter predicates
    AND ca.ca_county IN (
        'Chouteau County',
        'Dixie County',
        'Harrisonburg city',
        'Lowndes County',
        'Dinwiddie County'
    )
    -- filter predicate (subquery)
    AND EXISTS (
        SELECT
            *
        FROM
            store_sales ss,
            date_dim
        WHERE
            c.c_customer_sk = ss.ss_customer_sk
            AND ss_sold_date_sk = d_date_sk
            AND d_year = 2001
            AND d_moy BETWEEN 1 AND 1 + 3
            AND ( EXISTS (
                SELECT
                    *
                FROM
                    web_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = ws_bill_customer_sk
                    AND ws_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            )
                  OR EXISTS (
                SELECT
                    *
                FROM
                    catalog_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = cs_ship_customer_sk
                    AND cs_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            ) )
    )
GROUP BY
    cd_gender,
    cd_marital_status,
    cd_education_status,
    cd_purchase_estimate,
    cd_credit_rating,
    cd_dep_count,
    cd_dep_employed_count,
    cd_dep_college_count

---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$FBA97E11 nbfros=2 flg=0
  fro(0): flg=1 objn=0 hint_alias="VW_GBF_9"@"SEL$67676F75"
  fro(1): flg=1 objn=0 hint_alias="VW_GBC_8"@"SEL$8E90090D"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3255 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: VW_GBC_8  Alias: VW_GBC_8  (NOT ANALYZED)
  #Rows: 0  SSZ: 0  LGR: 0  #Blks:  0  AvgRowLen:  0.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 0
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
***********************
Table Stats::
  Table: VW_GBF_9  Alias: VW_GBF_9  (NOT ANALYZED)
  #Rows: 0  SSZ: 0  LGR: 0  #Blks:  0  AvgRowLen:  0.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 0
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#8): ITEM_8(CHARACTER)
    AvgLen: 2 NDV: 2 Nulls: 0 Density: 0.249925
    Histogram: Freq  #Bkts: 2  UncompBkts: 1920800  EndPtVals: 2  ActualVal: no 
  Column (#9): ITEM_9(CHARACTER)
    AvgLen: 2 NDV: 5 Nulls: 0 Density: 0.098953
    Histogram: Freq  #Bkts: 5  UncompBkts: 1920800  EndPtVals: 5  ActualVal: yes
  Column (#10): ITEM_10(CHARACTER)
    AvgLen: 21 NDV: 7 Nulls: 0 Density: 0.070771
    Histogram: Freq  #Bkts: 7  UncompBkts: 1920800  EndPtVals: 7  ActualVal: yes
  Column (#11): ITEM_11(NUMBER)
    AvgLen: 4 NDV: 9500 Nulls: 0 Density: 0.000105 Min: 500.000000 Max: 9999.000000
  Column (#12): ITEM_12(CHARACTER)
    AvgLen: 11 NDV: 4 Nulls: 0 Density: 0.250000
  Column (#13): ITEM_13(NUMBER)
    AvgLen: 3 NDV: 6 Nulls: 0 Density: 0.166667 Min: 0.000000 Max: 5.000000
  Column (#14): ITEM_14(NUMBER)
    AvgLen: 3 NDV: 6 Nulls: 0 Density: 0.166667 Min: 0.000000 Max: 5.000000
  Column (#15): ITEM_15(NUMBER)
    AvgLen: 3 NDV: 6 Nulls: 0 Density: 0.166667 Min: 0.000000 Max: 5.000000
  Column (#1): ITEM_1(NUMBER)
    AvgLen: 6 NDV: 1920800 Nulls: 0 Density: 0.000001 Min: 1.000000 Max: 1920800.000000
  Column (#1): ITEM_1(NUMBER)
    AvgLen: 6 NDV: 772544 Nulls: 0 Density: 0.000001 Min: 18.000000 Max: 1920799.000000
try to generate single-table filter predicates from ORs for query block SEL$FBA97E11 (#1)
finally: "VW_GBF_9"."ITEM_1"="VW_GBC_8"."ITEM_1"

=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$FBA97E11 (#1)
Applicable DS directives:
Return code in qosdSetupDirCtx4QB: NODIR
=====================================
SPD: END context at query block level
=====================================
Access path analysis for VW_GBF_9

Access path analysis for VW_GBC_8

Grouping column cardinality [    ITEM_8]    2
Grouping column cardinality [    ITEM_9]    5
Grouping column cardinality [   ITEM_10]    7
Grouping column cardinality [   ITEM_11]    9500
Grouping column cardinality [   ITEM_12]    4
Grouping column cardinality [   ITEM_13]    6
Grouping column cardinality [   ITEM_14]    6
Grouping column cardinality [   ITEM_15]    6
***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE:  Bypassed; QB is not duplicate insignificant SEL$FBA97E11 (#1)
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  VW_GBC_8[VW_GBC_8]#0  VW_GBF_9[VW_GBF_9]#1

***************
Now joining: VW_GBF_9[VW_GBF_9]#1
***************
NL Join
  Outer table: Card: 1.000000  Cost: 5.000000  Resp: 0.000000  Degree: 0  Bytes: 
Access path analysis for VW_GBF_9
  Inner table: VW_GBF_9  Alias: VW_GBF_9
  Access Path: TableScan
    NL Join:  Cost: 0.000000  Resp: 0.000000  Degree: 0
      Cost_io: 0.000000  Cost_cpu: 0
      Resp_io: 0.000000  Resp_cpu: 0

  Best NL cost: 0.000000
          resc: 0.000000  resc_io: 0.000000  resc_cpu: 0
          resp: 0.000000  resp_io: 0.000000  resc_cpu: 0
  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = JOIN
Join Card:  1.000000 = outer (1.000000) * inner (1920800.000000) * sel (5.2062e-07)
Join Card - Rounded: 1 Computed: 1.000000
Grouping column cardinality [    ITEM_8]    2
Grouping column cardinality [    ITEM_9]    5
Grouping column cardinality [   ITEM_10]    7
Grouping column cardinality [   ITEM_11]    9500
Grouping column cardinality [   ITEM_12]    4
Grouping column cardinality [   ITEM_13]    6
Grouping column cardinality [   ITEM_14]    6
Grouping column cardinality [   ITEM_15]    6
  Outer table:  VW_GBC_8  Alias: VW_GBC_8
    resc: 0.000000  card 1.000000  bytes:   deg: 0  resp: 0.000000
  Inner table:  VW_GBF_9  Alias: VW_GBF_9
    resc: 0.000000  card: 1920800.000000  bytes:   deg: 0  resp: 0.000000
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     103 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39058824
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 21400 Row size:     91 Total Rows:        1920800
      Initial runs:   2 Merge passes:  1 IO Cost / pass:      11592
      Total IO sort cost: 32992.000000      Total CPU sort cost: 2372445463
      Total Temp space used: 419619000
  SM join: Resc: 33053.740321  Resp: 33053.740321  [multiMatchCost=0.000000]
SM Join
  SM cost: 33053.740321 
     resc: 33053.740321 resc_io: 32992.000000 resc_cpu: 2411504286
     resp: 33053.740321 resp_io: 32992.000000 resp_cpu: 2411504286
  Outer table:  VW_GBC_8  Alias: VW_GBC_8
    resc: 0.000000  card 1.000000  bytes:   deg: 0  resp: 0.000000
  Inner table:  VW_GBF_9  Alias: VW_GBF_9
    resc: 0.000000  card: 1920800.000000  bytes:   deg: 0  resp: 0.000000
    using dmeth: 2  #groups: 1
    Cost per ptn: 4.933076  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 1  probefrag: 19931  ppasses: 1
  Hash join: Resc: 4.933076  Resp: 4.933076  [multiMatchCost=0.000000]
HA Join
  HA cost: 4.933076  
     resc: 4.933076 resc_io: 0.000000 resc_cpu: 192680150
     resp: 4.933076 resp_io: 0.000000 resp_cpu: 192680150
GROUP BY sort
GROUP BY/Correlated Subquery Filter adjustment factor: 0.088388
GROUP BY cardinality:  1.000000, TABLE cardinality:  1.000000
Vector group by not costed because no SYS_OP_XLATE_USE in group by.
kdmoGByPushdownValid: more than one table in group by    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     183 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39058824
      Total Temp space used: 0
Best:: JoinMethod: Hash
       Cost: 5.933076  Degree: 0  Resp: 5.933076  Card: 1.000000 Bytes: 
***********************
Best so far:  Table#: 0  cost: 5.000000  card: 1.000000  bytes: 84.000000
              Table#: 1  cost: 5.933076  card: 1.000000  bytes: 157.000000
***********************

*********************************
Number of join permutations tried: 1
*********************************
Enumerating distribution method (advanced)
--- Distribution method for 
join between VW_GBC_8[VW_GBC_8](serial) and VW_GBF_9[VW_GBF_9](serial); jm = 1; right side access path = TableScan
---- serial Hash-Join -> NONE

(newjo-save)    [0 1 ]
GROUP BY/Correlated Subquery Filter adjustment factor: 0.088388
GROUP BY cardinality:  1.000000, TABLE cardinality:  1.000000
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     183 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39058824
      Total Temp space used: 0
LORE: Or-Expansion validity checks failed on query block SEL$FBA97E11 (#1) because Cost based OR expansion enabled
Transfer Optimizer annotations for query block SEL$FBA97E11 (#1)
Final cost for query block SEL$FBA97E11 (#1) - All Rows Plan:
  Best join order: 1
  Cost: 5.933076  Degree: 0  Card: 1.000000  Bytes: 157.000000
  Resc: 5.933076  Resc_io: 0.000000  Resc_cpu: 231738974
  Resp: 5.933076  Resp_io: 0.000000  Resc_cpu: 231738974
kkoqbc-subheap (delete addr=0x7f0471ea5688, in-use=37344, alloc=49272)
kkoqbc-end:
        :
    call(in-use=1344664, alloc=1408768), compile(in-use=3005792, alloc=3006752), execution(in-use=48592, alloc=52704)

kkoqbc: finish optimizing query block SEL$FBA97E11 (#1)
First K Rows: K = 1.00, N = 120.00
First K Rows: K = 1.00, N = 69.00
First K Rows: K = 1.00, N = 37.00
First K Rows: Setup end
***********************
CBQT: Looking for cost annotations for query block SEL$3, key = SEL$3_00010000_0
CBQT: Replaced cost annotations in query block SEL$3.
CBQT: Looking for cost annotations for query block SEL$4, key = SEL$4_00010000_0
CBQT: Replaced cost annotations in query block SEL$4.
CBQT: Looking for cost annotations for query block SEL$2, key = SEL$2_00010000_0
CBQT: Replaced cost annotations in query block SEL$2.
CBQT: Looking for cost annotations for query block SEL$ACBFB8CC, key = SEL$ACBFB8CC_00008040_2
CBQT: Could not find stored cost annotations.
CBQT: Looking for cost annotations for query block SEL$26749286, key = SEL$26749286_00008040_2
CBQT: Could not find stored cost annotations.
kkoqbc: optimizing query block SEL$3 (#4)
        
        :
    call(in-use=1342456, alloc=1408768), compile(in-use=3007024, alloc=3010896), execution(in-use=48592, alloc=52704)

kkoqbc-end:
        :
    call(in-use=1342456, alloc=1408768), compile(in-use=3007024, alloc=3010896), execution(in-use=48592, alloc=52704)

kkoqbc: finish optimizing query block SEL$3 (#4)
kkoqbc: optimizing query block SEL$4 (#3)
        
        :
    call(in-use=1342456, alloc=1408768), compile(in-use=3007120, alloc=3010896), execution(in-use=48592, alloc=52704)

kkoqbc-end:
        :
    call(in-use=1342456, alloc=1408768), compile(in-use=3007120, alloc=3010896), execution(in-use=48592, alloc=52704)

kkoqbc: finish optimizing query block SEL$4 (#3)
kkoqbc: optimizing query block SEL$2 (#2)
        
        :
    call(in-use=1342456, alloc=1408768), compile(in-use=3007216, alloc=3010896), execution(in-use=48592, alloc=52704)

kkoqbc-end:
        :
    call(in-use=1342456, alloc=1408768), compile(in-use=3007216, alloc=3010896), execution(in-use=48592, alloc=52704)

kkoqbc: finish optimizing query block SEL$2 (#2)
kkoqbc: optimizing query block SEL$ACBFB8CC (#12)
        
        :
    call(in-use=1342456, alloc=1408768), compile(in-use=3007216, alloc=3010896), execution(in-use=48592, alloc=52704)

kkoqbc-subheap (create addr=0x7f0471ea5688)
****************
QUERY BLOCK TEXT
****************
Not available.
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$ACBFB8CC nbfros=2 flg=0
  fro(0): flg=0 objn=74168 hint_alias="C"@"SEL$1"
  fro(1): flg=0 objn=74169 hint_alias="CA"@"SEL$1"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3255 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: CUSTOMER  Alias:  C
  #Rows: 1080000  SSZ: 0  LGR: 0  #Blks:  23374  AvgRowLen:  138.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#3): C_CURRENT_CDEMO_SK(NUMBER)
    AvgLen: 6 NDV: 772544 Nulls: 0 Density: 0.000001 Min: 18.000000 Max: 1920799.000000
  Column (#1): C_CUSTOMER_SK(NUMBER)
    AvgLen: 6 NDV: 1080000 Nulls: 0 Density: 0.000001 Min: 1.000000 Max: 1080000.000000
  Column (#5): C_CURRENT_ADDR_SK(NUMBER)
    AvgLen: 5 NDV: 457472 Nulls: 0 Density: 0.000002 Min: 1.000000 Max: 539997.000000
Index Stats::
  Index: CUSTOMER_PK_IDX  Col#: 1
  LVLS: 2  #LB: 2266  #DK: 1080000  LB/K: 1.00  DB/K: 1.00  CLUF: 75684.00  NRW: 1080000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table: CUSTOMER_ADDRESS  Alias: CA
  #Rows: 540000  SSZ: 0  LGR: 0  #Blks:  13174  AvgRowLen:  152.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): CA_ADDRESS_SK(NUMBER)
    AvgLen: 5 NDV: 540000 Nulls: 0 Density: 0.000002 Min: 1.000000 Max: 540000.000000
  Column (#8): CA_COUNTY(VARCHAR2)
    AvgLen: 16 NDV: 1877 Nulls: 0 Density: 0.000471
    Histogram: Hybrid  #Bkts: 254  UncompBkts: 5580  EndPtVals: 254  ActualVal: yes
Index Stats::
  Index: CA_ADDRESS_PK_IDX  Col#: 1
  LVLS: 2  #LB: 1127  #DK: 540000  LB/K: 1.00  DB/K: 1.00  CLUF: 12283.00  NRW: 540000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
try to generate single-table filter predicates from ORs for query block SEL$ACBFB8CC (#12)
finally: ("CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County') AND "C"."C_CURRENT_ADDR_SK"="CA"."CA_ADDRESS_SK" AND  EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM")

=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$ACBFB8CC (#12)
Applicable DS directives:
   dirid = 18439699102505563871, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {EC(74169)[8]}
   dirid = 5181560337004891843, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74169)[]; (74168)[3]}
   dirid = 9316027922818115912, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74168)[3, 5]}
Checking valid directives for the query block
  SPD: Directive valid: dirid = 5181560337004891843, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74169)[]; (74168)[3]}
  SPD: Return code in qosdDSDirSetup: EXISTS, estType = GROUP_BY
  SPD: Return code in qosdDSDirSetup: NODIR, estType = QUERY_BLOCK
Return code in qosdSetupDirCtx4QB: EXISTS
=====================================
SPD: END context at query block level
=====================================
Access path analysis for CUSTOMER_ADDRESS
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for CUSTOMER_ADDRESS[CA] 
  SPD: Directive valid: dirid = 18439699102505563871, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {EC(74169)[8]}
  SPD: Return code in qosdDSDirSetup: EXISTS, estType = TABLE

 kkecdn: Single Table Predicate:"CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County'
  Using density: 4.7103e-04 of col #8 as selectivity of pred having unreasonably low value
  Using density: 4.7103e-04 of col #8 as selectivity of pred having unreasonably low value
  Using density: 4.7103e-04 of col #8 as selectivity of pred having unreasonably low value
  Using density: 4.7103e-04 of col #8 as selectivity of pred having unreasonably low value
  Estimated selectivity: 5.3763e-04 , endpoint value predicate, col: #8 
  Table: CUSTOMER_ADDRESS  Alias: CA
    Card: Original: 540000.000000  Rounded: 1308  Computed: 1307.756551  Non Adjusted: 1307.756551
  Scan IO  Cost (Disk) =   3570.000000
  Scan CPU Cost (Disk) =   250417850.560000
  Cost of predicates:
    io = 0.000000, cpu = 249.764594, sel = 0.002422 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Chouteau County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Dinwiddie County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Dixie County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Harrisonburg city')
      io = NOCOST, cpu = 50.000000, sel = 0.000538 flag = 2048  ("CA"."CA_COUNTY"='Lowndes County')
  Total Scan IO  Cost  =   3570.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 540000.000000 (#rows))
                       =   3570.000000
  Total Scan CPU  Cost =   250417850.560000 (scan (Disk))
                         + 134872880.645405 (cpu filter eval) (= 249.764594 (per row) * 540000.000000 (#rows))
                       =   385290731.205405
  Access Path: TableScan
    Cost:  3579.864371  Resp: 3579.864371  Degree: 0
      Cost_io: 3570.000000  Cost_cpu: 385290731
      Resp_io: 3570.000000  Resp_cpu: 385290731
  ****** trying bitmap/domain indexes ******
 ****** Costing Index CA_ADDRESS_PK_IDX
  Access Path: index (FullScan)
    Index: CA_ADDRESS_PK_IDX
    resc_io: 1129.000000  resc_cpu: 116040106
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1131.970906  Resp: 1131.970906  Degree: 0
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: TableScan
         Cost: 3579.864371  Degree: 1  Resp: 3579.864371  Card: 1307.756551  Bytes: 0.000000

Access path analysis for CUSTOMER
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for CUSTOMER[C] 
  SPD: Return code in qosdDSDirSetup: NODIR, estType = TABLE

 kkecdn: Single Table Predicate: EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM")
  Table: CUSTOMER  Alias: C
    Card: Original: 1080000.000000  Rounded: 1080000  Computed: 1080000.000000  Non Adjusted: 1080000.000000
  Scan IO  Cost (Disk) =   6332.000000
  Scan CPU Cost (Disk) =   414856538.560000
  Cost of predicates:
    io = NOCOST, cpu = 20.000000, sel = 0.050000 flag = 2562  ( EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM"))
  Total Scan IO  Cost  =   6332.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 1080000.000000 (#rows))
                       =   6332.000000
  Total Scan CPU  Cost =   414856538.560000 (scan (Disk))
                         + 21600000.000000 (cpu filter eval) (= 20.000000 (per row) * 1080000.000000 (#rows))
                       =   436456538.560000
  Access Path: TableScan
    Cost:  6343.174339  Resp: 6343.174339  Degree: 0
      Cost_io: 6332.000000  Cost_cpu: 436456539
      Resp_io: 6332.000000  Resp_cpu: 436456539
  ****** trying bitmap/domain indexes ******
 ****** Costing Index CUSTOMER_PK_IDX
  Access Path: index (FullScan)
    Index: CUSTOMER_PK_IDX
    resc_io: 2268.000000  resc_cpu: 232151426
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 2273.943636  Resp: 2273.943636  Degree: 0
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: TableScan
         Cost: 6343.174339  Degree: 1  Resp: 6343.174339  Card: 1080000.000000  Bytes: 0.000000

Grouping column cardinality [C_CURRENT_]    772544
***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE:  Bypassed; QB is not duplicate insignificant SEL$ACBFB8CC (#12)
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  CUSTOMER_ADDRESS[CA]#0  CUSTOMER[C]#1

***************
Now joining: CUSTOMER[C]#1
***************
NL Join
  Outer table: Card: 1307.756551  Cost: 3579.864371  Resp: 3579.864371  Degree: 1  Bytes: 
Access path analysis for CUSTOMER
  Scan IO  Cost (Disk) =   6330.459480
  Scan CPU Cost (Disk) =   414856538.560000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000002 flag = 2048  ("C"."C_CURRENT_ADDR_SK"="CA"."CA_ADDRESS_SK")
    io = NOCOST, cpu = 20.000000, sel = 0.050000 flag = 2562  ( EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM"))
  Total Scan IO  Cost  =   6330.459480 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 1080000.000000 (#rows))
                       =   6330.459480
  Total Scan CPU  Cost =   414856538.560000 (scan (Disk))
                         + 24300000.000000 (cpu filter eval) (= 22.500000 (per row) * 1080000.000000 (#rows))
                       =   439156538.560000
  Inner table: CUSTOMER  Alias: C
  Access Path: TableScan
    NL Join:  Cost: 8298527.317370  Resp: 8298527.317370  Degree: 1
      Cost_io: 8283811.000000  Cost_cpu: 574802043168
      Resp_io: 8283811.000000  Resp_cpu: 574802043168
  ****** trying bitmap/domain indexes ******
 ****** Costing Index CUSTOMER_PK_IDX
  Access Path: index (FullScan)
    Index: CUSTOMER_PK_IDX
    resc_io: 2268.000000  resc_cpu: 232151426
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 2273.943636  Resp: 2273.943636  Degree: 0
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 8298527.317370
          resc: 8298527.317370  resc_io: 8283811.000000  resc_cpu: 574802043168
          resp: 8298527.317370  resp_io: 8283811.000000  resc_cpu: 574802043168
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Join Card:  3087.351958 = outer (1307.756551) * inner (1080000.000000) * sel (2.1859e-06)
Join Card - Rounded: 3087 Computed: 3087.351958
Grouping column cardinality [C_CURRENT_]    772544
  Outer table:  CUSTOMER_ADDRESS  Alias: CA
    resc: 3579.864371  card 1307.756551  bytes:   deg: 1  resp: 3579.864371
  Inner table:  CUSTOMER  Alias: C
    resc: 6343.174339  card: 1080000.000000  bytes:   deg: 1  resp: 6343.174339
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 6 Row size:     34 Total Rows:           1308
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39668949
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 3835 Row size:     29 Total Rows:        1080000
      Initial runs:   2 Merge passes:  1 IO Cost / pass:       2078
      Total IO sort cost: 5913.000000      Total CPU sort cost: 1108751040
      Total Temp space used: 60826000
  SM join: Resc: 15865.441029  Resp: 15865.441029  [multiMatchCost=0.000000]
SM Join
  SM cost: 15865.441029 
     resc: 15865.441029 resc_io: 15815.000000 resc_cpu: 1970167258
     resp: 15865.441029 resp_io: 15815.000000 resp_cpu: 1970167258
SM Join (with index on outer)
 ****** Costing Index CA_ADDRESS_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (FullScan)
    Index: CA_ADDRESS_PK_IDX
    resc_io: 13412.000000  resc_cpu: 494985634
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 13424.672825  Resp: 13424.672825  Degree: 1
  Outer table:  CUSTOMER_ADDRESS  Alias: CA
    resc: 13424.672825  card 1307.756551  bytes:   deg: 1  resp: 13424.672825
  Inner table:  CUSTOMER  Alias: C
    resc: 6343.174339  card: 1080000.000000  bytes:   deg: 1  resp: 6343.174339
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 3835 Row size:     29 Total Rows:        1080000
      Initial runs:   2 Merge passes:  1 IO Cost / pass:       2078
      Total IO sort cost: 5913.000000      Total CPU sort cost: 1108751040
      Total Temp space used: 60826000
  SM join: Resc: 25709.233862  Resp: 25709.233862  [multiMatchCost=0.000000]
  Outer table:  CUSTOMER_ADDRESS  Alias: CA
    resc: 3579.864371  card 1307.756551  bytes:   deg: 1  resp: 3579.864371
  Inner table:  CUSTOMER  Alias: C
    resc: 6343.174339  card: 1080000.000000  bytes:   deg: 1  resp: 6343.174339
    using dmeth: 2  #groups: 1
    Cost per ptn: 2.785445  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 6  probefrag: 3824  ppasses: 1
  Hash join: Resc: 9925.824155  Resp: 9925.824155  [multiMatchCost=0.000000]
HA Join
  HA cost: 9925.824155  
     resc: 9925.824155 resc_io: 9902.000000 resc_cpu: 930543470
     resp: 9925.824155 resp_io: 9902.000000 resp_cpu: 930543470
GROUP BY sort
GROUP BY/Correlated Subquery Filter adjustment factor: 1.000000
GROUP BY cardinality:  3087.000000, TABLE cardinality:  3087.000000
Vector group by not costed because no SYS_OP_XLATE_USE in group by.
kdmoGByPushdownValid: more than one table in group by    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 20 Row size:     52 Total Rows:           3087
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 40671077
      Total Temp space used: 0
Best:: JoinMethod: Hash
       Cost: 9926.865433  Degree: 1  Resp: 9926.865433  Card: 3087.351958 Bytes: 
***********************
Best so far:  Table#: 0  cost: 3579.864371  card: 1307.756551  bytes: 27468.000000
              Table#: 1  cost: 9926.865433  card: 3087.351958  bytes: 117306.000000
***********************
Join order[2]:  CUSTOMER[C]#1  CUSTOMER_ADDRESS[CA]#0

***************
Now joining: CUSTOMER_ADDRESS[CA]#0
***************
NL Join
  Outer table: Card: 1080000.000000  Cost: 6343.174339  Resp: 6343.174339  Degree: 1  Bytes: 
Access path analysis for CUSTOMER_ADDRESS
  Scan IO  Cost (Disk) =   3567.958334
  Scan CPU Cost (Disk) =   250417850.560000
  Cost of predicates:
    io = 0.000000, cpu = 249.764594, sel = 0.002422 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Chouteau County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Dinwiddie County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Dixie County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Harrisonburg city')
      io = NOCOST, cpu = 50.000000, sel = 0.000538 flag = 2048  ("CA"."CA_COUNTY"='Lowndes County')
    io = NOCOST, cpu = 50.000000, sel = 0.000002 flag = 2048  ("C"."C_CURRENT_ADDR_SK"="CA"."CA_ADDRESS_SK")
  Total Scan IO  Cost  =   3567.958334 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 540000.000000 (#rows))
                       =   3567.958334
  Total Scan CPU  Cost =   250417850.560000 (scan (Disk))
                         + 27000294.822154 (cpu filter eval) (= 50.000546 (per row) * 540000.000000 (#rows))
                       =   277418145.382154
  Inner table: CUSTOMER_ADDRESS  Alias: CA
  Access Path: TableScan
    NL Join:  Cost: 3861072123.013520  Resp: 3861072123.013520  Degree: 1
      Cost_io: 3853401333.000000  Cost_cpu: 299612033469265
      Resp_io: 3853401333.000000  Resp_cpu: 299612033469265
 ****** Costing Index CA_ADDRESS_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: CA_ADDRESS_PK_IDX
    resc_io: 2.000000  resc_cpu: 16683
    ix_sel: 1.8519e-06  ix_sel_with_filters: 1.8519e-06 
    NL Join : Cost: 2166804.459512  Resp: 2166804.459512  Degree: 1
      Cost_io: 2166332.000000  Cost_cpu: 18453712700
      Resp_io: 2166332.000000  Resp_cpu: 18453712700
 ****** Costing Index CA_ADDRESS_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: CA_ADDRESS_PK_IDX
    resc_io: 2.000000  resc_cpu: 16683
    ix_sel: 1.8519e-06  ix_sel_with_filters: 1.8519e-06 
    NL Join : Cost: 2166804.459512  Resp: 2166804.459512  Degree: 1
      Cost_io: 2166332.000000  Cost_cpu: 18453712700
      Resp_io: 2166332.000000  Resp_cpu: 18453712700
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 2166804.459512
          resc: 2166804.459512  resc_io: 2166332.000000  resc_cpu: 18453712700
          resp: 2166804.459512  resp_io: 2166332.000000  resc_cpu: 18453712700
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Join Card:  3087.351958 = outer (1080000.000000) * inner (1307.756551) * sel (2.1859e-06)
Join Card - Rounded: 3087 Computed: 3087.351958
Grouping column cardinality [C_CURRENT_]    772544
  Outer table:  CUSTOMER  Alias: C
    resc: 6343.174339  card 1080000.000000  bytes:   deg: 1  resp: 6343.174339
  Inner table:  CUSTOMER_ADDRESS  Alias: CA
    resc: 3579.864371  card: 1307.756551  bytes:   deg: 1  resp: 3579.864371
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 3835 Row size:     29 Total Rows:        1080000
      Initial runs:   2 Merge passes:  1 IO Cost / pass:       2078
      Total IO sort cost: 5913.000000      Total CPU sort cost: 1108751040
      Total Temp space used: 60826000
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 6 Row size:     34 Total Rows:           1308
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39668949
      Total Temp space used: 0
  SM join: Resc: 15865.441029  Resp: 15865.441029  [multiMatchCost=0.000000]
SM Join
  SM cost: 15865.441029 
     resc: 15865.441029 resc_io: 15815.000000 resc_cpu: 1970167258
     resp: 15865.441029 resp_io: 15815.000000 resp_cpu: 1970167258
  Outer table:  CUSTOMER  Alias: C
    resc: 6343.174339  card 1080000.000000  bytes:   deg: 1  resp: 6343.174339
  Inner table:  CUSTOMER_ADDRESS  Alias: CA
    resc: 3579.864371  card: 1307.756551  bytes:   deg: 1  resp: 3579.864371
    using dmeth: 2  #groups: 1
    Cost per ptn: 1487.571924  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 3824  probefrag: 6  ppasses: 1
  Hash join: Resc: 11410.615189  Resp: 11410.615189  [multiMatchCost=0.004555]
  Outer table:  CUSTOMER_ADDRESS  Alias: CA
    resc: 3579.864371  card 1307.756551  bytes:   deg: 1  resp: 3579.864371
  Inner table:  CUSTOMER  Alias: C
    resc: 6343.174339  card: 1080000.000000  bytes:   deg: 1  resp: 6343.174339
    using dmeth: 2  #groups: 1
    Cost per ptn: 2.785445  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 6  probefrag: 3824  ppasses: 1
  Hash join: Resc: 9925.824155  Resp: 9925.824155  [multiMatchCost=0.000000]
HA Join
  HA cost: 9925.824155 swapped 
     resc: 9925.824155 resc_io: 9902.000000 resc_cpu: 930543470
     resp: 9925.824155 resp_io: 9902.000000 resp_cpu: 930543470
GROUP BY sort
GROUP BY/Correlated Subquery Filter adjustment factor: 1.000000
GROUP BY cardinality:  3087.000000, TABLE cardinality:  3087.000000
Vector group by not costed because no SYS_OP_XLATE_USE in group by.
kdmoGByPushdownValid: more than one table in group by    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 20 Row size:     52 Total Rows:           3087
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 40671077
      Total Temp space used: 0
Join order aborted: cost > best plan cost
***********************
(newjo-stop-1) k:0, spcnt:0, perm:2, maxperm:2000

*********************************
Number of join permutations tried: 2
*********************************
Enumerating distribution method (advanced)
--- Distribution method for 
join between CA[CUSTOMER_ADDRESS](serial) and C[CUSTOMER](serial); jm = 1; right side access path = TableScan
---- serial Hash-Join -> NONE

kkoaccsqf: Current query block SEL$ACBFB8CC (#12) is serial
kkoaccsqf: correlated subquery query block SEL$2 (#2) in filter               : serial
Final adjusted join cardinality: 1.000000, sq. fil. factor: 1080000.000000
(newjo-save)    [1 0 ]
GROUP BY/Correlated Subquery Filter adjustment factor: 1.000000
GROUP BY cardinality:  1.000000, TABLE cardinality:  1.000000
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     52 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39058824
      Total Temp space used: 0
LORE: Or-Expansion validity checks failed on query block SEL$ACBFB8CC (#12) because Cost based OR expansion enabled
Transfer Optimizer annotations for query block SEL$ACBFB8CC (#12)
Final cost for query block SEL$ACBFB8CC (#12) - All Rows Plan:
  Best join order: 1
  Cost: 29998.814031  Degree: 1  Card: 1.000000  Bytes: 117344.000000
  Resc: 29998.814031  Resc_io: 29969.787726  Resc_cpu: 1133733341
  Resp: 29998.814031  Resp_io: 29969.787726  Resc_cpu: 1133733341
kkoqbc-subheap (delete addr=0x7f0471ea5688, in-use=80560, alloc=92432)
kkoqbc-end:
        :
    call(in-use=1352208, alloc=1468376), compile(in-use=3016288, alloc=3018800), execution(in-use=48592, alloc=52704)

kkoqbc: finish optimizing query block SEL$ACBFB8CC (#12)
kkoqbc: optimizing query block SEL$26749286 (#13)
        
        :
    call(in-use=1352208, alloc=1468376), compile(in-use=3016288, alloc=3018800), execution(in-use=48592, alloc=52704)

kkoqbc-subheap (create addr=0x7f0471ea5688)
****************
QUERY BLOCK TEXT
****************
Not available.
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$26749286 nbfros=1 flg=0
  fro(0): flg=0 objn=74170 hint_alias="CUSTOMER_DEMOGRAPHICS"@"SEL$1"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3255 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
  #Rows: 1920800  SSZ: 0  LGR: 0  #Blks:  17254  AvgRowLen:  54.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): CD_DEMO_SK(NUMBER)
    AvgLen: 6 NDV: 1920800 Nulls: 0 Density: 0.000001 Min: 1.000000 Max: 1920800.000000
  Column (#9): CD_DEP_COLLEGE_COUNT(NUMBER)
    AvgLen: 3 NDV: 6 Nulls: 0 Density: 0.166667 Min: 0.000000 Max: 5.000000
  Column (#8): CD_DEP_EMPLOYED_COUNT(NUMBER)
    AvgLen: 3 NDV: 6 Nulls: 0 Density: 0.166667 Min: 0.000000 Max: 5.000000
  Column (#7): CD_DEP_COUNT(NUMBER)
    AvgLen: 3 NDV: 6 Nulls: 0 Density: 0.166667 Min: 0.000000 Max: 5.000000
  Column (#6): CD_CREDIT_RATING(CHARACTER)
    AvgLen: 11 NDV: 4 Nulls: 0 Density: 0.250000
  Column (#5): CD_PURCHASE_ESTIMATE(NUMBER)
    AvgLen: 4 NDV: 9500 Nulls: 0 Density: 0.000105 Min: 500.000000 Max: 9999.000000
  Column (#4): CD_EDUCATION_STATUS(CHARACTER)
    AvgLen: 21 NDV: 7 Nulls: 0 Density: 0.070771
    Histogram: Freq  #Bkts: 7  UncompBkts: 1920800  EndPtVals: 7  ActualVal: yes
  Column (#3): CD_MARITAL_STATUS(CHARACTER)
    AvgLen: 2 NDV: 5 Nulls: 0 Density: 0.098953
    Histogram: Freq  #Bkts: 5  UncompBkts: 1920800  EndPtVals: 5  ActualVal: yes
  Column (#2): CD_GENDER(CHARACTER)
    AvgLen: 2 NDV: 2 Nulls: 0 Density: 0.249925
    Histogram: Freq  #Bkts: 2  UncompBkts: 1920800  EndPtVals: 2  ActualVal: no 
Index Stats::
  Index: CD_DEMO_PK_IDX  Col#: 1
  LVLS: 2  #LB: 4138  #DK: 1920800  LB/K: 1.00  DB/K: 1.00  CLUF: 795806.00  NRW: 1920800.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
try to generate single-table filter predicates from ORs for query block SEL$26749286 (#13)
=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$26749286 (#13)
Applicable DS directives:
   dirid = 7754152966831092939, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {EC(74170)[3, 4]}
Checking valid directives for the query block
  SPD: Return code in qosdDSDirSetup: NODIR, estType = QUERY_BLOCK
Return code in qosdSetupDirCtx4QB: EXISTS
=====================================
SPD: END context at query block level
=====================================
Access path analysis for CUSTOMER_DEMOGRAPHICS
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS] 
  SPD: Return code in qosdDSDirSetup: NODIR, estType = TABLE
  Table: CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
    Card: Original: 1920800.000000  Rounded: 1920800  Computed: 1920800.000000  Non Adjusted: 1920800.000000
  Scan IO  Cost (Disk) =   4675.000000
  Scan CPU Cost (Disk) =   718321325.760000
  Total Scan IO  Cost  =   4675.000000 (scan (Disk))
                       =   4675.000000
  Total Scan CPU  Cost =   718321325.760000 (scan (Disk))
                       =   718321325.760000
  Access Path: TableScan
    Cost:  4693.390757  Resp: 4693.390757  Degree: 0
      Cost_io: 4675.000000  Cost_cpu: 718321326
      Resp_io: 4675.000000  Resp_cpu: 718321326
  Best:: AccessPath: TableScan
         Cost: 4693.390757  Degree: 1  Resp: 4693.390757  Card: 1920800.000000  Bytes: 0.000000

***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE:  Bypassed; QB has a single table SEL$26749286 (#13)
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS]#0
***********************
Best so far:  Table#: 0  cost: 4693.390757  card: 1920800.000000  bytes: 103723200.000000
***********************
(newjo-stop-1) k:0, spcnt:0, perm:1, maxperm:2000

*********************************
Number of join permutations tried: 1
*********************************
Enumerating distribution method (advanced)

LORE: Or-Expansion validity checks failed on query block SEL$26749286 (#13) because Cost based OR expansion enabled
Transfer Optimizer annotations for query block SEL$26749286 (#13)
Final cost for query block SEL$26749286 (#13) - All Rows Plan:
  Best join order: 1
  Cost: 4693.390757  Degree: 1  Card: 1920800.000000  Bytes: 207446400.000000
  Resc: 4693.390757  Resc_io: 4675.000000  Resc_cpu: 718321326
  Resp: 4693.390757  Resp_io: 4675.000000  Resc_cpu: 718321326
kkoqbc-subheap (delete addr=0x7f0471ea5688, in-use=24640, alloc=32840)
kkoqbc-end:
        :
    call(in-use=1356712, alloc=1468376), compile(in-use=3016528, alloc=3018800), execution(in-use=48592, alloc=52704)

kkoqbc: finish optimizing query block SEL$26749286 (#13)
kkoqbc: optimizing query block SEL$FBA97E11 (#1)
        
        :
    call(in-use=1356712, alloc=1468376), compile(in-use=3016528, alloc=3018800), execution(in-use=48592, alloc=52704)

kkoqbc-subheap (create addr=0x7f0471ea5688)
****************
QUERY BLOCK TEXT
****************
SELECT /*query10*/
    cd_gender,
    cd_marital_status,
    cd_education_status,
    COUNT(*) cnt1,
    cd_purchase_estimate,
    COUNT(*) cnt2,
    cd_credit_rating,
    COUNT(*) cnt3,
    cd_dep_count,
    COUNT(*) cnt4,
    cd_dep_employed_count,
    COUNT(*) cnt5,
    cd_dep_college_count,
    COUNT(*) cnt6
FROM
    customer c,
    customer_address ca,
    customer_demographics
WHERE
    -- join predicates
        c.c_current_addr_sk = ca.ca_address_sk
    AND cd_demo_sk = c.c_current_cdemo_sk
    -- filter predicates
    AND ca.ca_county IN (
        'Chouteau County',
        'Dixie County',
        'Harrisonburg city',
        'Lowndes County',
        'Dinwiddie County'
    )
    -- filter predicate (subquery)
    AND EXISTS (
        SELECT
            *
        FROM
            store_sales ss,
            date_dim
        WHERE
            c.c_customer_sk = ss.ss_customer_sk
            AND ss_sold_date_sk = d_date_sk
            AND d_year = 2001
            AND d_moy BETWEEN 1 AND 1 + 3
            AND ( EXISTS (
                SELECT
                    *
                FROM
                    web_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = ws_bill_customer_sk
                    AND ws_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            )
                  OR EXISTS (
                SELECT
                    *
                FROM
                    catalog_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = cs_ship_customer_sk
                    AND cs_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            ) )
    )
GROUP BY
    cd_gender,
    cd_marital_status,
    cd_education_status,
    cd_purchase_estimate,
    cd_credit_rating,
    cd_dep_count,
    cd_dep_employed_count,
    cd_dep_college_count

---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$FBA97E11 nbfros=2 flg=0
  fro(0): flg=1 objn=0 hint_alias="VW_GBF_9"@"SEL$67676F75"
  fro(1): flg=1 objn=0 hint_alias="VW_GBC_8"@"SEL$8E90090D"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3255 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: VW_GBC_8  Alias: VW_GBC_8  (NOT ANALYZED)
  #Rows: 0  SSZ: 0  LGR: 0  #Blks:  0  AvgRowLen:  0.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 0
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
***********************
Table Stats::
  Table: VW_GBF_9  Alias: VW_GBF_9  (NOT ANALYZED)
  #Rows: 0  SSZ: 0  LGR: 0  #Blks:  0  AvgRowLen:  0.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 0
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#8): ITEM_8(CHARACTER)  Part#: 0
    AvgLen: 2 NDV: 2 Nulls: 0 Density: 0.249925
    Histogram: Freq  #Bkts: 2  UncompBkts: 1920800  EndPtVals: 2  ActualVal: no 
  Column (#9): ITEM_9(CHARACTER)  Part#: 0
    AvgLen: 2 NDV: 5 Nulls: 0 Density: 0.098953
    Histogram: Freq  #Bkts: 5  UncompBkts: 1920800  EndPtVals: 5  ActualVal: yes
  Column (#10): ITEM_10(CHARACTER)  Part#: 0
    AvgLen: 21 NDV: 7 Nulls: 0 Density: 0.070771
    Histogram: Freq  #Bkts: 7  UncompBkts: 1920800  EndPtVals: 7  ActualVal: yes
  Column (#11): ITEM_11(NUMBER)  Part#: 0
    AvgLen: 4 NDV: 9500 Nulls: 0 Density: 0.000105 Min: 500.000000 Max: 9999.000000
  Column (#12): ITEM_12(CHARACTER)  Part#: 0
    AvgLen: 11 NDV: 4 Nulls: 0 Density: 0.250000
  Column (#13): ITEM_13(NUMBER)  Part#: 0
    AvgLen: 3 NDV: 6 Nulls: 0 Density: 0.166667 Min: 0.000000 Max: 5.000000
  Column (#14): ITEM_14(NUMBER)  Part#: 0
    AvgLen: 3 NDV: 6 Nulls: 0 Density: 0.166667 Min: 0.000000 Max: 5.000000
  Column (#15): ITEM_15(NUMBER)  Part#: 0
    AvgLen: 3 NDV: 6 Nulls: 0 Density: 0.166667 Min: 0.000000 Max: 5.000000
  Column (#1): ITEM_1(NUMBER)  Part#: 0
    AvgLen: 6 NDV: 1920800 Nulls: 0 Density: 0.000001 Min: 1.000000 Max: 1920800.000000
  Column (#1): ITEM_1(NUMBER)
    AvgLen: 6 NDV: 772544 Nulls: 0 Density: 0.000001 Min: 18.000000 Max: 1920799.000000
try to generate single-table filter predicates from ORs for query block SEL$FBA97E11 (#1)
finally: "VW_GBF_9"."ITEM_1"="VW_GBC_8"."ITEM_1"

=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$FBA97E11 (#1)
Applicable DS directives:
Return code in qosdSetupDirCtx4QB: NODIR
=====================================
SPD: END context at query block level
=====================================
Access path analysis for VW_GBF_9

Access path analysis for VW_GBC_8

Grouping column cardinality [    ITEM_8]    2
Grouping column cardinality [    ITEM_9]    5
Grouping column cardinality [   ITEM_10]    7
Grouping column cardinality [   ITEM_11]    9500
Grouping column cardinality [   ITEM_12]    4
Grouping column cardinality [   ITEM_13]    6
Grouping column cardinality [   ITEM_14]    6
Grouping column cardinality [   ITEM_15]    6
***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE:  Bypassed; QB is not duplicate insignificant SEL$FBA97E11 (#1)
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  VW_GBC_8[VW_GBC_8]#0  VW_GBF_9[VW_GBF_9]#1

***************
Now joining: VW_GBF_9[VW_GBF_9]#1
***************
NL Join
  Outer table: Card: 1.000000  Cost: 29998.814031  Resp: 29998.814031  Degree: 1  Bytes: 
Access path analysis for VW_GBF_9
  Inner table: VW_GBF_9  Alias: VW_GBF_9
  Access Path: TableScan
    NL Join:  Cost: 34692.204788  Resp: 34692.204788  Degree: 1
      Cost_io: 34644.787726  Cost_cpu: 1852054667
      Resp_io: 34644.787726  Resp_cpu: 1852054667

  Best NL cost: 34692.204788
          resc: 34692.204788  resc_io: 34644.787726  resc_cpu: 1852054667
          resp: 34692.204788  resp_io: 34644.787726  resc_cpu: 1852054667
  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = JOIN
Join Card:  1.000000 = outer (1.000000) * inner (1920800.000000) * sel (5.2062e-07)
Join Card - Rounded: 1 Computed: 1.000000
Grouping column cardinality [    ITEM_8]    2
Grouping column cardinality [    ITEM_9]    5
Grouping column cardinality [   ITEM_10]    7
Grouping column cardinality [   ITEM_11]    9500
Grouping column cardinality [   ITEM_12]    4
Grouping column cardinality [   ITEM_13]    6
Grouping column cardinality [   ITEM_14]    6
Grouping column cardinality [   ITEM_15]    6
  Outer table:  VW_GBC_8  Alias: VW_GBC_8
    resc: 29998.814031  card 1.000000  bytes:   deg: 1  resp: 29998.814031
  Inner table:  VW_GBF_9  Alias: VW_GBF_9
    resc: 4693.390757  card: 1920800.000000  bytes:   deg: 1  resp: 4693.390757
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 21400 Row size:     91 Total Rows:        1920800
      Initial runs:   2 Merge passes:  1 IO Cost / pass:      11592
      Total IO sort cost: 32992.000000      Total CPU sort cost: 2372445463
      Total Temp space used: 419619000
  SM join: Resc: 67744.945109  Resp: 67744.945109  [multiMatchCost=0.000000]
SM Join
  SM cost: 67744.945109 
     resc: 67744.945109 resc_io: 67636.787726 resc_cpu: 4224500130
     resp: 67744.945109 resp_io: 67636.787726 resp_cpu: 4224500130
  Outer table:  VW_GBC_8  Alias: VW_GBC_8
    resc: 29998.814031  card 1.000000  bytes:   deg: 1  resp: 29998.814031
  Inner table:  VW_GBF_9  Alias: VW_GBF_9
    resc: 4693.390757  card: 1920800.000000  bytes:   deg: 1  resp: 4693.390757
    using dmeth: 2  #groups: 1
    Cost per ptn: 4.933076  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 1  probefrag: 19931  ppasses: 1
  Hash join: Resc: 34697.137864  Resp: 34697.137864  [multiMatchCost=0.000000]
HA Join
  HA cost: 34697.137864  
     resc: 34697.137864 resc_io: 34644.787726 resc_cpu: 2044734817
     resp: 34697.137864 resp_io: 34644.787726 resp_cpu: 2044734817
GROUP BY sort
GROUP BY/Correlated Subquery Filter adjustment factor: 0.088388
GROUP BY cardinality:  1.000000, TABLE cardinality:  1.000000
Vector group by not costed because no SYS_OP_XLATE_USE in group by.
kdmoGByPushdownValid: more than one table in group by    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     183 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39058824
      Total Temp space used: 0
Best:: JoinMethod: Hash
       Cost: 34698.137864  Degree: 1  Resp: 34698.137864  Card: 1.000000 Bytes: 
***********************
Best so far:  Table#: 0  cost: 29998.814031  card: 1.000000  bytes: 84.000000
              Table#: 1  cost: 34698.137864  card: 1.000000  bytes: 157.000000
***********************
Join order[2]:  VW_GBF_9[VW_GBF_9]#1  VW_GBC_8[VW_GBC_8]#0

***************
Now joining: VW_GBC_8[VW_GBC_8]#0
***************
NL Join
  Outer table: Card: 1920800.000000  Cost: 4693.390757  Resp: 4693.390757  Degree: 1  Bytes: 
Access path analysis for VW_GBC_8
  Inner table: VW_GBC_8  Alias: VW_GBC_8
  Access Path: TableScan
    NL Join:  Cost: 57621726684.727562  Resp: 57621726684.727562  Degree: 1
      Cost_io: 57565972938.867218  Cost_cpu: 2177675720662901
      Resp_io: 57565972938.867218  Resp_cpu: 2177675720662901

  Best NL cost: 57621726684.727562
          resc: 57621726684.727562  resc_io: 57565972938.867218  resc_cpu: 2177675720662901
          resp: 57621726684.727562  resp_io: 57565972938.867218  resc_cpu: 2177675720662901
  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = JOIN
Join Card:  1.000000 = outer (1920800.000000) * inner (1.000000) * sel (5.2062e-07)
Join Card - Rounded: 1 Computed: 1.000000
Grouping column cardinality [    ITEM_8]    2
Grouping column cardinality [    ITEM_9]    5
Grouping column cardinality [   ITEM_10]    7
Grouping column cardinality [   ITEM_11]    9500
Grouping column cardinality [   ITEM_12]    4
Grouping column cardinality [   ITEM_13]    6
Grouping column cardinality [   ITEM_14]    6
Grouping column cardinality [   ITEM_15]    6
  Outer table:  VW_GBF_9  Alias: VW_GBF_9
    resc: 4693.390757  card 1920800.000000  bytes:   deg: 1  resp: 4693.390757
  Inner table:  VW_GBC_8  Alias: VW_GBC_8
    resc: 29998.814031  card: 1.000000  bytes:   deg: 1  resp: 29998.814031
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 21400 Row size:     91 Total Rows:        1920800
      Initial runs:   2 Merge passes:  1 IO Cost / pass:      11592
      Total IO sort cost: 32992.000000      Total CPU sort cost: 2372445463
      Total Temp space used: 419619000
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     103 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39058824
      Total Temp space used: 0
  SM join: Resc: 67745.945109  Resp: 67745.945109  [multiMatchCost=0.000000]
SM Join
  SM cost: 67745.945109 
     resc: 67745.945109 resc_io: 67636.787726 resc_cpu: 4263558953
     resp: 67745.945109 resp_io: 67636.787726 resp_cpu: 4263558953
  Outer table:  VW_GBF_9  Alias: VW_GBF_9
    resc: 4693.390757  card 1920800.000000  bytes:   deg: 1  resp: 4693.390757
  Inner table:  VW_GBC_8  Alias: VW_GBC_8
    resc: 29998.814031  card: 1.000000  bytes:   deg: 1  resp: 29998.814031
    using dmeth: 2  #groups: 1
    Cost per ptn: 11399.496731  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 19931  probefrag: 1  ppasses: 1
  Hash join: Resc: 46091.701520  Resp: 46091.701520  [multiMatchCost=0.000000]
  Outer table:  VW_GBC_8  Alias: VW_GBC_8
    resc: 29998.814031  card 1.000000  bytes:   deg: 1  resp: 29998.814031
  Inner table:  VW_GBF_9  Alias: VW_GBF_9
    resc: 4693.390757  card: 1920800.000000  bytes:   deg: 1  resp: 4693.390757
    using dmeth: 2  #groups: 1
    Cost per ptn: 4.933076  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 1  probefrag: 19931  ppasses: 1
  Hash join: Resc: 34697.137864  Resp: 34697.137864  [multiMatchCost=0.000000]
HA Join
  HA cost: 34697.137864 swapped 
     resc: 34697.137864 resc_io: 34644.787726 resc_cpu: 2044734817
     resp: 34697.137864 resp_io: 34644.787726 resp_cpu: 2044734817
GROUP BY sort
GROUP BY/Correlated Subquery Filter adjustment factor: 0.088388
GROUP BY cardinality:  1.000000, TABLE cardinality:  1.000000
Vector group by not costed because no SYS_OP_XLATE_USE in group by.
kdmoGByPushdownValid: more than one table in group by    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     183 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39058824
      Total Temp space used: 0
Join order aborted: cost > best plan cost
***********************
(newjo-stop-1) k:0, spcnt:0, perm:2, maxperm:2000

*********************************
Number of join permutations tried: 2
*********************************
Enumerating distribution method (advanced)
--- Distribution method for 
join between VW_GBC_8[VW_GBC_8](serial) and VW_GBF_9[VW_GBF_9](serial); jm = 1; right side access path = TableScan
---- serial Hash-Join -> NONE

(newjo-save)    [0 1 ]
GROUP BY/Correlated Subquery Filter adjustment factor: 0.088388
GROUP BY cardinality:  1.000000, TABLE cardinality:  1.000000
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     183 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39058824
      Total Temp space used: 0
LORE: Or-Expansion validity checks failed on query block SEL$FBA97E11 (#1) because Cost based OR expansion enabled
Transfer Optimizer annotations for query block SEL$FBA97E11 (#1)
Final cost for query block SEL$FBA97E11 (#1) - All Rows Plan:
  Best join order: 1
  Cost: 34698.137864  Degree: 1  Card: 1.000000  Bytes: 314.000000
  Resc: 34698.137864  Resc_io: 34644.787726  Resc_cpu: 2083793641
  Resp: 34698.137864  Resp_io: 34644.787726  Resc_cpu: 2083793641
kkoqbc-subheap (delete addr=0x7f0471ea5688, in-use=37344, alloc=49272)
kkoqbc-end:
        :
    call(in-use=1375056, alloc=1441608), compile(in-use=3020232, alloc=3022944), execution(in-use=48592, alloc=52704)

kkoqbc: finish optimizing query block SEL$FBA97E11 (#1)
CBQT: Saved costed qb# 4 (SEL$3), key = SEL$3_00010000_0
CBQT: Saved costed qb# 3 (SEL$4), key = SEL$4_00010000_0
CBQT: Saved costed qb# 2 (SEL$2), key = SEL$2_00010000_0
CBQT: Saved costed qb# 12 (SEL$ACBFB8CC), key = SEL$ACBFB8CC_00008040_2
CBQT: Saved costed qb# 13 (SEL$26749286), key = SEL$26749286_00008040_2
CBQT: Saved costed qb# 1 (SEL$FBA97E11), key = SEL$FBA97E11_00000040_0
GBP: Not update best state, Cost = 34698.137864
GBP: Starting iteration 8, state space = (1,2,3) : (0,F,F)
QB before group-by removal:******* UNPARSED QUERY IS *******
SELECT "CUSTOMER_DEMOGRAPHICS"."CD_GENDER" "CD_GENDER","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS" "CD_MARITAL_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS" "CD_EDUCATION_STATUS",SUM("VW_GBF_10"."ITEM_2") "CNT1","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE" "CD_PURCHASE_ESTIMATE",SUM("VW_GBF_10"."ITEM_3") "CNT2","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING" "CD_CREDIT_RATING",SUM("VW_GBF_10"."ITEM_4") "CNT3","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT" "CD_DEP_COUNT",SUM("VW_GBF_10"."ITEM_5") "CNT4","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT" "CD_DEP_EMPLOYED_COUNT",SUM("VW_GBF_10"."ITEM_6") "CNT5","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT" "CD_DEP_COLLEGE_COUNT",SUM("VW_GBF_10"."ITEM_7") "CNT6" FROM  (SELECT "C"."C_CURRENT_CDEMO_SK" "ITEM_1",COUNT(*) "ITEM_2",COUNT(*) "ITEM_3",COUNT(*) "ITEM_4",COUNT(*) "ITEM_5",COUNT(*) "ITEM_6",COUNT(*) "ITEM_7" FROM "TPCDS"."CUSTOMER_ADDRESS" "CA","TPCDS"."CUSTOMER" "C" WHERE ("CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County') AND "C"."C_CURRENT_ADDR_SK"="CA"."CA_ADDRESS_SK" AND  EXISTS (SELECT 0 FROM "TPCDS"."STORE_SALES" "SS","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="SS"."SS_CUSTOMER_SK" AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3 AND ( EXISTS (SELECT 0 FROM "TPCDS"."WEB_SALES" "WEB_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="WEB_SALES"."WS_BILL_CUSTOMER_SK" AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3) OR  EXISTS (SELECT 0 FROM "TPCDS"."CATALOG_SALES" "CATALOG_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="CATALOG_SALES"."CS_SHIP_CUSTOMER_SK" AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3))) GROUP BY "C"."C_CURRENT_CDEMO_SK") "VW_GBF_10","TPCDS"."CUSTOMER_DEMOGRAPHICS" "CUSTOMER_DEMOGRAPHICS" WHERE "CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK"="VW_GBF_10"."ITEM_1" GROUP BY "CUSTOMER_DEMOGRAPHICS"."CD_GENDER","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT" ORDER BY "CUSTOMER_DEMOGRAPHICS"."CD_GENDER","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT"
Registered qb: SEL$DAF89EE2 0x71ed8240 (UNKNOWN QUERY BLOCK ORIGIN SEL$1; SEL$1; LIST 10)
---------------------
QUERY BLOCK SIGNATURE
---------------------
  signature (): qb_name=SEL$DAF89EE2 nbfros=2 flg=0
    fro(0): flg=0 objn=74170 hint_alias="CUSTOMER_DEMOGRAPHICS"@"SEL$1"
    fro(1): flg=1 objn=0 hint_alias="VW_GBF_10"@"SEL$8E90090D"

GBP: Transformed query
******* UNPARSED QUERY IS *******
SELECT "CUSTOMER_DEMOGRAPHICS"."CD_GENDER" "CD_GENDER","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS" "CD_MARITAL_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS" "CD_EDUCATION_STATUS",SUM("VW_GBF_10"."ITEM_2") "CNT1","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE" "CD_PURCHASE_ESTIMATE",SUM("VW_GBF_10"."ITEM_3") "CNT2","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING" "CD_CREDIT_RATING",SUM("VW_GBF_10"."ITEM_4") "CNT3","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT" "CD_DEP_COUNT",SUM("VW_GBF_10"."ITEM_5") "CNT4","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT" "CD_DEP_EMPLOYED_COUNT",SUM("VW_GBF_10"."ITEM_6") "CNT5","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT" "CD_DEP_COLLEGE_COUNT",SUM("VW_GBF_10"."ITEM_7") "CNT6" FROM  (SELECT "C"."C_CURRENT_CDEMO_SK" "ITEM_1",COUNT(*) "ITEM_2",COUNT(*) "ITEM_3",COUNT(*) "ITEM_4",COUNT(*) "ITEM_5",COUNT(*) "ITEM_6",COUNT(*) "ITEM_7" FROM "TPCDS"."CUSTOMER_ADDRESS" "CA","TPCDS"."CUSTOMER" "C" WHERE ("CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County') AND "C"."C_CURRENT_ADDR_SK"="CA"."CA_ADDRESS_SK" AND  EXISTS (SELECT 0 FROM "TPCDS"."STORE_SALES" "SS","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="SS"."SS_CUSTOMER_SK" AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3 AND ( EXISTS (SELECT 0 FROM "TPCDS"."WEB_SALES" "WEB_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="WEB_SALES"."WS_BILL_CUSTOMER_SK" AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3) OR  EXISTS (SELECT 0 FROM "TPCDS"."CATALOG_SALES" "CATALOG_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="CATALOG_SALES"."CS_SHIP_CUSTOMER_SK" AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3))) GROUP BY "C"."C_CURRENT_CDEMO_SK") "VW_GBF_10","TPCDS"."CUSTOMER_DEMOGRAPHICS" "CUSTOMER_DEMOGRAPHICS" WHERE "CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK"="VW_GBF_10"."ITEM_1" GROUP BY "CUSTOMER_DEMOGRAPHICS"."CD_GENDER","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT" ORDER BY "CUSTOMER_DEMOGRAPHICS"."CD_GENDER","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT"
FPD: Considering simple filter push in query block SEL$DAF89EE2 (#1)
"CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK"="VW_GBF_10"."ITEM_1"
try to generate transitive predicate from check constraints for query block SEL$DAF89EE2 (#1)
finally: "CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK"="VW_GBF_10"."ITEM_1"

FPD: Considering simple filter push in query block SEL$ACBFB8CC (#14)
("CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County') AND "C"."C_CURRENT_ADDR_SK"="CA"."CA_ADDRESS_SK" AND  EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM")
FPD: Considering simple filter push in query block SEL$2 (#2)
"SS"."SS_CUSTOMER_SK"=:B1 AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND ( EXISTS (SELECT 0 FROM "WEB_SALES" "WEB_SALES","DATE_DIM" "DATE_DIM") OR  EXISTS (SELECT 0 FROM "CATALOG_SALES" "CATALOG_SALES","DATE_DIM" "DATE_DIM"))
FPD: Considering simple filter push in query block SEL$3 (#4)
"WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B1 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4
try to generate transitive predicate from check constraints for query block SEL$3 (#4)
finally: "WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B1 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1

FPD:   transitive predicates are generated in query block SEL$3 (#4)
"WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B1 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1
FPD: Considering simple filter push in query block SEL$4 (#3)
"CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B1 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4
try to generate transitive predicate from check constraints for query block SEL$4 (#3)
finally: "CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B1 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1

FPD:   transitive predicates are generated in query block SEL$4 (#3)
"CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B1 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1
try to generate transitive predicate from check constraints for query block SEL$2 (#2)
finally: "SS"."SS_CUSTOMER_SK"=:B1 AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND ( EXISTS (SELECT 0 FROM "WEB_SALES" "WEB_SALES","DATE_DIM" "DATE_DIM") OR  EXISTS (SELECT 0 FROM "CATALOG_SALES" "CATALOG_SALES","DATE_DIM" "DATE_DIM"))

try to generate transitive predicate from check constraints for query block SEL$ACBFB8CC (#14)
finally: ("CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County') AND "C"."C_CURRENT_ADDR_SK"="CA"."CA_ADDRESS_SK" AND  EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM")

OJE: Begin: find best directive for query block SEL$ACBFB8CC (#14)
OJE: End: finding best directive for query block SEL$ACBFB8CC (#14)
GBP: Costing transformed query.
*************************
First K Rows: Setup begin
kkoqbc: optimizing query block SEL$3 (#4)
        
        :
    call(in-use=1383344, alloc=1408664), compile(in-use=3205320, alloc=3207000), execution(in-use=49864, alloc=52704)

kkoqbc-subheap (create addr=0x7f0471ea9ee0)
****************
QUERY BLOCK TEXT
****************
SELECT
                    *
                FROM
                    web_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = ws_bill_customer_sk
                    AND ws_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$3 nbfros=2 flg=0
  fro(0): flg=0 objn=74171 hint_alias="DATE_DIM"@"SEL$3"
  fro(1): flg=0 objn=74195 hint_alias="WEB_SALES"@"SEL$3"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3255 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: DATE_DIM  Alias: DATE_DIM
  #Rows: 73049  SSZ: 0  LGR: 0  #Blks:  1510  AvgRowLen:  128.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): D_DATE_SK(NUMBER)
    AvgLen: 6 NDV: 73049 Nulls: 0 Density: 0.000014 Min: 2415022.000000 Max: 2488070.000000
Index Stats::
  Index: D_DATE_PK_IDX  Col#: 1
  LVLS: 1  #LB: 163  #DK: 73049  LB/K: 1.00  DB/K: 1.00  CLUF: 1402.00  NRW: 73049.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table: WEB_SALES  Alias: WEB_SALES  (Using composite stats)
  #Rows: 35969200  SSZ: 0  LGR: 0  #Blks:  829566  AvgRowLen:  167.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
Index Stats::
  Index: WEB_SALES_IDX2  Col#: 5 1
  LVLS: 3  #LB: 130617  #DK: 2992994  LB/K: 1.00  DB/K: 12.00  CLUF: 35969159.00  NRW: 35969200.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
  Index: WEB_SALES_PK_IDX  Col#: 4 18
  LVLS: 2  #LB: 122502  #DK: 35304428  LB/K: 1.00  DB/K: 1.00  CLUF: 35300490.00  NRW: 35304428.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
try to generate single-table filter predicates from ORs for query block SEL$3 (#4)
finally: "WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B1 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4

=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$3 (#4)
Applicable DS directives:
   dirid = 4510913066701158191, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {(74195)[]; (74171)[]}
   dirid = 14910903719618111890, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74195)[5]}
   dirid = 13969931850241126217, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {C(74171)[7, 9]}
   dirid = 13683461771316641482, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74195)[5]; (74171)[7]}
Checking valid directives for the query block
  SPD: Return code in qosdDSDirSetup: NODIR, estType = QUERY_BLOCK
Return code in qosdSetupDirCtx4QB: EXISTS
=====================================
SPD: END context at query block level
=====================================
Access path analysis for WEB_SALES
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for WEB_SALES[WEB_SALES] 
  SPD: Return code in qosdDSDirSetup: NODIR, estType = TABLE

 kkecdn: Single Table Predicate:"WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B1
NOTE: ignoring histogram of column (WEB_SALES.WS_BILL_CUSTOMER_SK)
      used only for incremental stats maintenance
  Column (#5): WS_BILL_CUSTOMER_SK(NUMBER)
    AvgLen: 6 NDV: 973580 Nulls: 0 Density: 0.000001 Min: 2.000000 Max: 1079999.000000
  Estimated selectivity: 1.0271e-06 , col: #5 
  Table: WEB_SALES  Alias: WEB_SALES
    Card: Original: 35969200.000000  Rounded: 37  Computed: 36.945295  Non Adjusted: 36.945295
  Scan IO  Cost (Disk) =   224676.000000
  Scan CPU Cost (Disk) =   14180620495.040001
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000001 flag = 2048  ("WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B1)
  Total Scan IO  Cost  =   224676.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 35969200.000000 (#rows))
                       =   224676.000000
  Total Scan CPU  Cost =   14180620495.040001 (scan (Disk))
                         + 1798460000.000000 (cpu filter eval) (= 50.000000 (per row) * 35969200.000000 (#rows))
                       =   15979080495.040001
  Access Path: TableScan
    Cost:  225085.102964  Resp: 225085.102964  Degree: 0
      Cost_io: 224676.000000  Cost_cpu: 15979080495
      Resp_io: 224676.000000  Resp_cpu: 15979080495
  Access Path: index (index (FFS))
    Index: WEB_SALES_IDX2
    resc_io: 35377.000000  resc_cpu: 7044945128
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  35557.367571  Resp: 35557.367571  Degree: 1
      Cost_io: 35377.000000  Cost_cpu: 7044945128
      Resp_io: 35377.000000  Resp_cpu: 7044945128
 ****** Costing Index WEB_SALES_IDX2
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER

  Estimated selectivity: 1.0271e-06 , col: #5 
  Access Path: index (IndexOnly)
    Index: WEB_SALES_IDX2
    resc_io: 4.000000  resc_cpu: 35886
    ix_sel: 1.0271e-06  ix_sel_with_filters: 1.0271e-06 
    Cost: 4.000919  Resp: 4.000919  Degree: 1
  Best:: AccessPath: IndexRange
  Index: WEB_SALES_IDX2
         Cost: 4.000919  Degree: 1  Resp: 4.000919  Card: 36.945295  Bytes: 0.000000

Access path analysis for DATE_DIM
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for DATE_DIM[DATE_DIM] 
  SPD: Directive valid: dirid = 13969931850241126217, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {C(74171)[7, 9]}
  SPD: Return code in qosdDSDirSetup: EXISTS, estType = TABLE
  Column (#7): 
    NewDensity:0.000007, OldDensity:0.000007 BktCnt:73049.000000, PopBktCnt:73048.000000, PopValCnt:200, NDV:201
  Column (#7): D_YEAR(NUMBER)
    AvgLen: 4 NDV: 201 Nulls: 0 Density: 0.000007 Min: 1900.000000 Max: 2100.000000
    Histogram: Freq  #Bkts: 201  UncompBkts: 73049  EndPtVals: 201  ActualVal: yes
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 


 kkecdn: Single Table Predicate:"DATE_DIM"."D_YEAR"=2001
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY">=1
  Column (#9): 
    NewDensity:0.038666, OldDensity:0.000007 BktCnt:73049.000000, PopBktCnt:73049.000000, PopValCnt:12, NDV:12
  Column (#9): D_MOY(NUMBER)
    AvgLen: 3 NDV: 12 Nulls: 0 Density: 0.038666 Min: 1.000000 Max: 12.000000
    Histogram: Freq  #Bkts: 12  UncompBkts: 73049  EndPtVals: 12  ActualVal: yes
  Estimated selectivity: 1.000000 , endpoint value predicate, col: #9 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY"<=4
  Estimated selectivity: 0.329224 , endpoint value predicate, col: #9 
  Table: DATE_DIM  Alias: DATE_DIM
    Card: Original: 73049.000000  Rounded: 120  Computed: 120.166840  Non Adjusted: 120.166840
  Scan IO  Cost (Disk) =   411.000000
  Scan CPU Cost (Disk) =   33398564.400000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.004997 flag = 2048  ("DATE_DIM"."D_YEAR"=2001)
    io = NOCOST, cpu = 50.000000, sel = 0.329224 flag = 2048  ("DATE_DIM"."D_MOY"<=4)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("DATE_DIM"."D_MOY">=1)
  Total Scan IO  Cost  =   411.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 73049.000000 (#rows))
                       =   411.000000
  Total Scan CPU  Cost =   33398564.400000 (scan (Disk))
                         + 3676708.342003 (cpu filter eval) (= 50.332083 (per row) * 73049.000000 (#rows))
                       =   37075272.742003
  Access Path: TableScan
    Cost:  411.949216  Resp: 411.949216  Degree: 0
      Cost_io: 411.000000  Cost_cpu: 37075273
      Resp_io: 411.000000  Resp_cpu: 37075273
  Best:: AccessPath: TableScan
         Cost: 411.949216  Degree: 1  Resp: 411.949216  Card: 120.166840  Bytes: 0.000000

***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE: Checking validity of partial join eval on query block SEL$3 (#4)
PJE: Passed validity of partial join eval by query block SEL$3 (#4)
number: [0]
PJE: Partial join eval conversion for query block SEL$3 (#4).
PJE: Table marked for partial join eval: DATE_DIM[DATE_DIM]#1
***********************
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  WEB_SALES[WEB_SALES]#0  DATE_DIM[DATE_DIM]#1

***************
Now joining: DATE_DIM[DATE_DIM]#1
***************
NL Join
  Outer table: Card: 36.945295  Cost: 4.000919  Resp: 4.000919  Degree: 1  Bytes: 
Access path analysis for DATE_DIM
  Scan IO  Cost (Disk) =   409.000000
  Scan CPU Cost (Disk) =   33398564.400000
NOTE: ignoring histogram of column (WEB_SALES.WS_SOLD_DATE_SK)
      used only for incremental stats maintenance
  Column (#1): WS_SOLD_DATE_SK(NUMBER)
    AvgLen: 6 NDV: 1839 Nulls: 0 Density: 0.000544 Min: 2450816.000000 Max: 2452641.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.008264 flag = 2048  ("WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK")
    io = NOCOST, cpu = 50.000000, sel = 0.004997 flag = 2048  ("DATE_DIM"."D_YEAR"=2001)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("DATE_DIM"."D_MOY">=1)
    io = NOCOST, cpu = 50.000000, sel = 0.329224 flag = 2048  ("DATE_DIM"."D_MOY"<=4)
  Total Scan IO  Cost  =   409.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 73049.000000 (#rows))
                       =   409.000000
  Total Scan CPU  Cost =   33398564.400000 (scan (Disk))
                         + 3670900.482165 (cpu filter eval) (= 50.252577 (per row) * 73049.000000 (#rows))
                       =   37069464.882165
  Inner table: DATE_DIM  Alias: DATE_DIM
  Access Path: TableScan
    NL Join:  Cost: 15172.116421  Resp: 15172.116421  Degree: 1
      Cost_io: 15137.000000  Cost_cpu: 1371606086
      Resp_io: 15137.000000  Resp_cpu: 1371606086
 ****** Costing Index D_DATE_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: D_DATE_PK_IDX
    resc_io: 1.000000  resc_cpu: 9382
    ix_sel: 1.3689e-05  ix_sel_with_filters: 1.3689e-05 
    NL Join (ordered): Cost: 41.009806  Resp: 41.009806  Degree: 1
      Cost_io: 41.000000  Cost_cpu: 383011
      Resp_io: 41.000000  Resp_cpu: 383011
 ****** Costing Index D_DATE_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 
  Estimated selectivity: 1.000000 , endpoint value predicate, col: #9 
  Estimated selectivity: 0.329224 , endpoint value predicate, col: #9 
  Access Path: index (AllEqUnique)
    Index: D_DATE_PK_IDX
    resc_io: 1.000000  resc_cpu: 9382
    ix_sel: 1.3689e-05  ix_sel_with_filters: 1.3689e-05 
    NL Join (ordered): Cost: 41.009806  Resp: 41.009806  Degree: 1
      Cost_io: 41.000000  Cost_cpu: 383011
      Resp_io: 41.000000  Resp_cpu: 383011

  Best NL cost: 41.009806
          resc: 41.009806  resc_io: 41.000000  resc_cpu: 383011
          resp: 41.009806  resp_io: 41.000000  resc_cpu: 383011
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Capping Semi Join Card of HJ/SMJ by inner = 36.690903
Capping Semi Join Card of HJ/SMJ (no post filters) by inner = 36.690903
Capping Semi Join Card of NL by inner = 36.690903
Capping Semi Join Card of without POSQ by inner = 36.690903
Capping Semi Join Card of non adjusted NSQ by inner = 36.690903
Semi Join Card (capped by inner join):  36.690903 = outer (36.945295) * inner (120.166840) * sel (0.008264)
Join Card - Rounded: 37 Computed: 36.690903
  Outer table:  WEB_SALES  Alias: WEB_SALES
    resc: 4.000919  card 36.945295  bytes:   deg: 1  resp: 4.000919
  Inner table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card: 120.166840  bytes:   deg: 1  resp: 411.949216
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     25 Total Rows:            120
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39096166
      Total Temp space used: 0
  SM join: Resc: 416.951091  Resp: 416.951091  [multiMatchCost=0.000000]
SM Join
  SM cost: 416.951091 
     resc: 416.951091 resc_io: 415.000000 resc_cpu: 76207324
     resp: 416.951091 resp_io: 415.000000 resp_cpu: 76207324
  Outer table:  WEB_SALES  Alias: WEB_SALES
    resc: 4.000919  card 36.945295  bytes:   deg: 1  resp: 4.000919
  Inner table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card: 120.166840  bytes:   deg: 1  resp: 411.949216
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.015811  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 415.965946  Resp: 415.965946  [multiMatchCost=0.000000]
HA Join
  HA cost: 415.965946  
     resc: 415.965946 resc_io: 415.000000 resc_cpu: 37728709
     resp: 415.965946 resp_io: 415.000000 resp_cpu: 37728709
Best:: JoinMethod: NestedLoopSemi
       Cost: 41.009806  Degree: 1  Resp: 41.009806  Card: 36.690903 Bytes: 
***********************
Best so far:  Table#: 0  cost: 4.000919  card: 36.945295  bytes: 444.000000
              Table#: 1  cost: 41.009806  card: 36.690903  bytes: 925.000000
***********************

*********************************
Number of join permutations tried: 1
*********************************
*********************
PJE: Partial join eval conversion for query block SEL$3 (#4).
PJE: Table marked for partial join eval: DATE_DIM[DATE_DIM]#1
***********************
Enumerating distribution method (advanced)
--- Distribution method for 
join between WEB_SALES[WEB_SALES](serial) and DATE_DIM[DATE_DIM](serial); jm = 15; right side access path = IndexUnique
kkopqIsSerialJoin: serial NLJ: both inputs serial
---- serial NL-Join -> SERIAL

(newjo-save)    [1 0 ]
LORE: Or-Expansion validity checks failed on query block SEL$3 (#4) because Cost based OR expansion enabled
Transfer Optimizer annotations for query block SEL$3 (#4)
Final cost for query block SEL$3 (#4) - All Rows Plan:
  Best join order: 1
  Cost: 41.009806  Degree: 1  Card: 37.000000  Bytes: 925.000000
  Resc: 41.009806  Resc_io: 41.000000  Resc_cpu: 383011
  Resp: 41.009806  Resp_io: 41.000000  Resc_cpu: 383011
kkoqbc-subheap (delete addr=0x7f0471ea9ee0, in-use=44952, alloc=49272)
kkoqbc-end:
        :
    call(in-use=1422496, alloc=1490816), compile(in-use=3237712, alloc=3239032), execution(in-use=50272, alloc=52704)

kkoqbc: finish optimizing query block SEL$3 (#4)
kkoqbc: optimizing query block SEL$4 (#3)
        
        :
    call(in-use=1420288, alloc=1490816), compile(in-use=3244104, alloc=3247320), execution(in-use=50448, alloc=52704)

kkoqbc-subheap (create addr=0x7f0471ea9ee0)
****************
QUERY BLOCK TEXT
****************
SELECT
                    *
                FROM
                    catalog_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = cs_ship_customer_sk
                    AND cs_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$4 nbfros=2 flg=0
  fro(0): flg=0 objn=74185 hint_alias="CATALOG_SALES"@"SEL$4"
  fro(1): flg=0 objn=74171 hint_alias="DATE_DIM"@"SEL$4"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3255 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: DATE_DIM  Alias: DATE_DIM
  #Rows: 73049  SSZ: 0  LGR: 0  #Blks:  1510  AvgRowLen:  128.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): D_DATE_SK(NUMBER)
    AvgLen: 6 NDV: 73049 Nulls: 0 Density: 0.000014 Min: 2415022.000000 Max: 2488070.000000
Index Stats::
  Index: D_DATE_PK_IDX  Col#: 1
  LVLS: 1  #LB: 163  #DK: 73049  LB/K: 1.00  DB/K: 1.00  CLUF: 1402.00  NRW: 73049.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table: CATALOG_SALES  Alias: CATALOG_SALES  (Using composite stats)
  #Rows: 72077400  SSZ: 0  LGR: 0  #Blks:  1645494  AvgRowLen:  168.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
Index Stats::
  Index: CATALOG_SALES_IDX2  Col#: 8 1
  LVLS: 3  #LB: 261734  #DK: 5997411  LB/K: 1.00  DB/K: 12.00  CLUF: 72077362.00  NRW: 72077400.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
  Index: CATALOG_SALES_PK_IDX  Col#: 16 18
  LVLS: 2  #LB: 249644  #DK: 71913105  LB/K: 1.00  DB/K: 1.00  CLUF: 71898009.00  NRW: 71913105.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
try to generate single-table filter predicates from ORs for query block SEL$4 (#3)
finally: "CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B1 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4

=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$4 (#3)
Applicable DS directives:
   dirid = 11267665714990475542, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74185)[8]}
   dirid = 13969931850241126217, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {C(74171)[7, 9]}
   dirid = 2090373381697137251, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {(74185)[]; F(74171)[]}
   dirid = 14483145493039253896, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {(74185)[]; (74171)[]}
Checking valid directives for the query block
  SPD: Return code in qosdDSDirSetup: NODIR, estType = QUERY_BLOCK
Return code in qosdSetupDirCtx4QB: EXISTS
=====================================
SPD: END context at query block level
=====================================
Access path analysis for CATALOG_SALES
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for CATALOG_SALES[CATALOG_SALES] 
  SPD: Return code in qosdDSDirSetup: NODIR, estType = TABLE

 kkecdn: Single Table Predicate:"CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B1
NOTE: ignoring histogram of column (CATALOG_SALES.CS_SHIP_CUSTOMER_SK)
      used only for incremental stats maintenance
  Column (#8): CS_SHIP_CUSTOMER_SK(NUMBER)
    AvgLen: 6 NDV: 1037120 Nulls: 0 Density: 0.000001 Min: 1.000000 Max: 1079999.000000
  Estimated selectivity: 9.6421e-07 , col: #8 
  Table: CATALOG_SALES  Alias: CATALOG_SALES
    Card: Original: 72077400.000000  Rounded: 69  Computed: 69.497647  Non Adjusted: 69.497647
  Scan IO  Cost (Disk) =   445656.000000
  Scan CPU Cost (Disk) =   32620732791.360001
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000001 flag = 2048  ("CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B1)
  Total Scan IO  Cost  =   445656.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 72077400.000000 (#rows))
                       =   445656.000000
  Total Scan CPU  Cost =   32620732791.360001 (scan (Disk))
                         + 3603870000.000000 (cpu filter eval) (= 50.000000 (per row) * 72077400.000000 (#rows))
                       =   36224602791.360001
  Access Path: TableScan
    Cost:  446583.437120  Resp: 446583.437120  Degree: 0
      Cost_io: 445656.000000  Cost_cpu: 36224602791
      Resp_io: 445656.000000  Resp_cpu: 36224602791
  Access Path: index (index (FFS))
    Index: CATALOG_SALES_IDX2
    resc_io: 70888.000000  resc_cpu: 14117080977
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  71249.431290  Resp: 71249.431290  Degree: 1
      Cost_io: 70888.000000  Cost_cpu: 14117080977
      Resp_io: 70888.000000  Resp_cpu: 14117080977
 ****** Costing Index CATALOG_SALES_IDX2
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER

  Estimated selectivity: 9.6421e-07 , col: #8 
  Access Path: index (IndexOnly)
    Index: CATALOG_SALES_IDX2
    resc_io: 4.000000  resc_cpu: 42486
    ix_sel: 9.6421e-07  ix_sel_with_filters: 9.6421e-07 
    Cost: 4.001088  Resp: 4.001088  Degree: 1
  Best:: AccessPath: IndexRange
  Index: CATALOG_SALES_IDX2
         Cost: 4.001088  Degree: 1  Resp: 4.001088  Card: 69.497647  Bytes: 0.000000

Access path analysis for DATE_DIM
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for DATE_DIM[DATE_DIM] 
  SPD: Directive valid: dirid = 13969931850241126217, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {C(74171)[7, 9]}
  SPD: Return code in qosdDSDirSetup: EXISTS, estType = TABLE
  Column (#7): 
    NewDensity:0.000007, OldDensity:0.000007 BktCnt:73049.000000, PopBktCnt:73048.000000, PopValCnt:200, NDV:201
  Column (#7): D_YEAR(NUMBER)
    AvgLen: 4 NDV: 201 Nulls: 0 Density: 0.000007 Min: 1900.000000 Max: 2100.000000
    Histogram: Freq  #Bkts: 201  UncompBkts: 73049  EndPtVals: 201  ActualVal: yes
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 


 kkecdn: Single Table Predicate:"DATE_DIM"."D_YEAR"=2001
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY">=1
  Column (#9): 
    NewDensity:0.038666, OldDensity:0.000007 BktCnt:73049.000000, PopBktCnt:73049.000000, PopValCnt:12, NDV:12
  Column (#9): D_MOY(NUMBER)
    AvgLen: 3 NDV: 12 Nulls: 0 Density: 0.038666 Min: 1.000000 Max: 12.000000
    Histogram: Freq  #Bkts: 12  UncompBkts: 73049  EndPtVals: 12  ActualVal: yes
  Estimated selectivity: 1.000000 , endpoint value predicate, col: #9 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY"<=4
  Estimated selectivity: 0.329224 , endpoint value predicate, col: #9 
  Table: DATE_DIM  Alias: DATE_DIM
    Card: Original: 73049.000000  Rounded: 120  Computed: 120.166840  Non Adjusted: 120.166840
  Scan IO  Cost (Disk) =   411.000000
  Scan CPU Cost (Disk) =   33398564.400000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.004997 flag = 2048  ("DATE_DIM"."D_YEAR"=2001)
    io = NOCOST, cpu = 50.000000, sel = 0.329224 flag = 2048  ("DATE_DIM"."D_MOY"<=4)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("DATE_DIM"."D_MOY">=1)
  Total Scan IO  Cost  =   411.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 73049.000000 (#rows))
                       =   411.000000
  Total Scan CPU  Cost =   33398564.400000 (scan (Disk))
                         + 3676708.342003 (cpu filter eval) (= 50.332083 (per row) * 73049.000000 (#rows))
                       =   37075272.742003
  Access Path: TableScan
    Cost:  411.949216  Resp: 411.949216  Degree: 0
      Cost_io: 411.000000  Cost_cpu: 37075273
      Resp_io: 411.000000  Resp_cpu: 37075273
  Best:: AccessPath: TableScan
         Cost: 411.949216  Degree: 1  Resp: 411.949216  Card: 120.166840  Bytes: 0.000000

***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE: Checking validity of partial join eval on query block SEL$4 (#3)
PJE: Passed validity of partial join eval by query block SEL$4 (#3)
number: [0]
PJE: Partial join eval conversion for query block SEL$4 (#3).
PJE: Table marked for partial join eval: DATE_DIM[DATE_DIM]#1
***********************
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  CATALOG_SALES[CATALOG_SALES]#0  DATE_DIM[DATE_DIM]#1

***************
Now joining: DATE_DIM[DATE_DIM]#1
***************
NL Join
  Outer table: Card: 69.497647  Cost: 4.001088  Resp: 4.001088  Degree: 1  Bytes: 
Access path analysis for DATE_DIM
  Scan IO  Cost (Disk) =   408.985507
  Scan CPU Cost (Disk) =   33398564.400000
NOTE: ignoring histogram of column (CATALOG_SALES.CS_SOLD_DATE_SK)
      used only for incremental stats maintenance
  Column (#1): CS_SOLD_DATE_SK(NUMBER)
    AvgLen: 6 NDV: 1849 Nulls: 0 Density: 0.000541 Min: 2450815.000000 Max: 2452647.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.008264 flag = 2048  ("CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK")
    io = NOCOST, cpu = 50.000000, sel = 0.004997 flag = 2048  ("DATE_DIM"."D_YEAR"=2001)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("DATE_DIM"."D_MOY">=1)
    io = NOCOST, cpu = 50.000000, sel = 0.329224 flag = 2048  ("DATE_DIM"."D_MOY"<=4)
  Total Scan IO  Cost  =   408.985507 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 73049.000000 (#rows))
                       =   408.985507
  Total Scan CPU  Cost =   33398564.400000 (scan (Disk))
                         + 3670900.482165 (cpu filter eval) (= 50.252577 (per row) * 73049.000000 (#rows))
                       =   37069464.882165
  Inner table: DATE_DIM  Alias: DATE_DIM
  Access Path: TableScan
    NL Join:  Cost: 28289.486754  Resp: 28289.486754  Degree: 1
      Cost_io: 28224.000000  Cost_cpu: 2557835563
      Resp_io: 28224.000000  Resp_cpu: 2557835563
 ****** Costing Index D_DATE_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: D_DATE_PK_IDX
    resc_io: 1.000000  resc_cpu: 9382
    ix_sel: 1.3689e-05  ix_sel_with_filters: 1.3689e-05 
    NL Join (ordered): Cost: 73.017661  Resp: 73.017661  Degree: 1
      Cost_io: 73.000000  Cost_cpu: 689828
      Resp_io: 73.000000  Resp_cpu: 689828
 ****** Costing Index D_DATE_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 
  Estimated selectivity: 1.000000 , endpoint value predicate, col: #9 
  Estimated selectivity: 0.329224 , endpoint value predicate, col: #9 
  Access Path: index (AllEqUnique)
    Index: D_DATE_PK_IDX
    resc_io: 1.000000  resc_cpu: 9382
    ix_sel: 1.3689e-05  ix_sel_with_filters: 1.3689e-05 
    NL Join (ordered): Cost: 73.017661  Resp: 73.017661  Degree: 1
      Cost_io: 73.000000  Cost_cpu: 689828
      Resp_io: 73.000000  Resp_cpu: 689828

  Best NL cost: 73.017661
          resc: 73.017661  resc_io: 73.000000  resc_cpu: 689828
          resp: 73.017661  resp_io: 73.000000  resc_cpu: 689828
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Capping Semi Join Card of HJ/SMJ by inner = 69.019113
Capping Semi Join Card of HJ/SMJ (no post filters) by inner = 69.019113
Capping Semi Join Card of NL by inner = 69.019113
Capping Semi Join Card of without POSQ by inner = 69.019113
Capping Semi Join Card of non adjusted NSQ by inner = 69.019113
Semi Join Card (capped by inner join):  69.019113 = outer (69.497647) * inner (120.166840) * sel (0.008264)
Join Card - Rounded: 69 Computed: 69.019113
  Outer table:  CATALOG_SALES  Alias: CATALOG_SALES
    resc: 4.001088  card 69.497647  bytes:   deg: 1  resp: 4.001088
  Inner table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card: 120.166840  bytes:   deg: 1  resp: 411.949216
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     25 Total Rows:            120
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39096166
      Total Temp space used: 0
  SM join: Resc: 416.951260  Resp: 416.951260  [multiMatchCost=0.000000]
SM Join
  SM cost: 416.951260 
     resc: 416.951260 resc_io: 415.000000 resc_cpu: 76213924
     resp: 416.951260 resp_io: 415.000000 resp_cpu: 76213924
  Outer table:  CATALOG_SALES  Alias: CATALOG_SALES
    resc: 4.001088  card 69.497647  bytes:   deg: 1  resp: 4.001088
  Inner table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card: 120.166840  bytes:   deg: 1  resp: 411.949216
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.015934  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 415.966238  Resp: 415.966238  [multiMatchCost=0.000000]
HA Join
  HA cost: 415.966238  
     resc: 415.966238 resc_io: 415.000000 resc_cpu: 37740109
     resp: 415.966238 resp_io: 415.000000 resp_cpu: 37740109
Best:: JoinMethod: NestedLoopSemi
       Cost: 73.017661  Degree: 1  Resp: 73.017661  Card: 69.019113 Bytes: 
***********************
Best so far:  Table#: 0  cost: 4.001088  card: 69.497647  bytes: 828.000000
              Table#: 1  cost: 73.017661  card: 69.019113  bytes: 1725.000000
***********************

*********************************
Number of join permutations tried: 1
*********************************
*********************
PJE: Partial join eval conversion for query block SEL$4 (#3).
PJE: Table marked for partial join eval: DATE_DIM[DATE_DIM]#1
***********************
Enumerating distribution method (advanced)
--- Distribution method for 
join between CATALOG_SALES[CATALOG_SALES](serial) and DATE_DIM[DATE_DIM](serial); jm = 15; right side access path = IndexUnique
kkopqIsSerialJoin: serial NLJ: both inputs serial
---- serial NL-Join -> SERIAL

(newjo-save)    [1 0 ]
LORE: Or-Expansion validity checks failed on query block SEL$4 (#3) because Cost based OR expansion enabled
Transfer Optimizer annotations for query block SEL$4 (#3)
Final cost for query block SEL$4 (#3) - All Rows Plan:
  Best join order: 1
  Cost: 73.017661  Degree: 1  Card: 69.000000  Bytes: 1725.000000
  Resc: 73.017661  Resc_io: 73.000000  Resc_cpu: 689828
  Resp: 73.017661  Resp_io: 73.000000  Resc_cpu: 689828
kkoqbc-subheap (delete addr=0x7f0471ea9ee0, in-use=52808, alloc=65704)
kkoqbc-end:
        :
    call(in-use=1459368, alloc=1540024), compile(in-use=3276520, alloc=3279352), execution(in-use=50856, alloc=52704)

kkoqbc: finish optimizing query block SEL$4 (#3)
kkoqbc: optimizing query block SEL$2 (#2)
        
        :
    call(in-use=1457160, alloc=1540024), compile(in-use=3283016, alloc=3283496), execution(in-use=51016, alloc=52704)

kkoqbc-subheap (create addr=0x7f0471ea9ee0)
****************
QUERY BLOCK TEXT
****************
SELECT
            *
        FROM
            store_sales ss,
            date_dim
        WHERE
            c.c_customer_sk = ss.ss_customer_sk
            AND ss_sold_date_sk = d_date_sk
            AND d_year = 2001
            AND d_moy BETWEEN 1 AND 1 + 3
            AND ( EXISTS (
                SELECT
                    *
                FROM
                    web_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = ws_bill_customer_sk
                    AND ws_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            )
                  OR EXISTS (
                SELECT
                    *
                FROM
                    catalog_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = cs_ship_customer_sk
                    AND cs_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            ) )
    
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$2 nbfros=2 flg=0
  fro(0): flg=0 objn=74171 hint_alias="DATE_DIM"@"SEL$2"
  fro(1): flg=0 objn=74191 hint_alias="SS"@"SEL$2"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3255 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: DATE_DIM  Alias: DATE_DIM
  #Rows: 73049  SSZ: 0  LGR: 0  #Blks:  1510  AvgRowLen:  128.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): D_DATE_SK(NUMBER)
    AvgLen: 6 NDV: 73049 Nulls: 0 Density: 0.000014 Min: 2415022.000000 Max: 2488070.000000
Index Stats::
  Index: D_DATE_PK_IDX  Col#: 1
  LVLS: 1  #LB: 163  #DK: 73049  LB/K: 1.00  DB/K: 1.00  CLUF: 1402.00  NRW: 73049.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table: STORE_SALES  Alias: SS  (Using composite stats)
  #Rows: 144020200  SSZ: 0  LGR: 0  #Blks:  2304802  AvgRowLen:  117.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
Index Stats::
  Index: STORE_SALES_IDX2  Col#: 4 1
  LVLS: 3  #LB: 522970  #DK: 11965122  LB/K: 1.00  DB/K: 12.00  CLUF: 143898920.00  NRW: 144020200.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
  Index: STORE_SALES_PK_IDX  Col#: 3 10
  LVLS: 3  #LB: 497464  #DK: 141527398  LB/K: 1.00  DB/K: 1.00  CLUF: 141365556.00  NRW: 141527398.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
try to generate single-table filter predicates from ORs for query block SEL$2 (#2)
finally: "SS"."SS_CUSTOMER_SK"=:B1 AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND ( EXISTS (SELECT 0 FROM "WEB_SALES" "WEB_SALES","DATE_DIM" "DATE_DIM" WHERE "WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B2 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1) OR  EXISTS (SELECT 0 FROM "CATALOG_SALES" "CATALOG_SALES","DATE_DIM" "DATE_DIM" WHERE "CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B3 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1))

=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$2 (#2)
Applicable DS directives:
   dirid = 10827845680942532126, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {F(74191)[]; F(74171)[]}
   dirid = 7660518587836633700, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74191)[4]}
   dirid = 13969931850241126217, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {C(74171)[7, 9]}
   dirid = 2361553282592865451, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {(74191)[]; F(74171)[]}
   dirid = 12943986683386070018, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {(74191)[]; (74171)[]}
Checking valid directives for the query block
  SPD: Return code in qosdDSDirSetup: NODIR, estType = QUERY_BLOCK
Return code in qosdSetupDirCtx4QB: EXISTS
=====================================
SPD: END context at query block level
=====================================
Access path analysis for STORE_SALES
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for STORE_SALES[SS] 
  SPD: Return code in qosdDSDirSetup: NODIR, estType = TABLE

 kkecdn: Single Table Predicate:"SS"."SS_CUSTOMER_SK"=:B1
NOTE: ignoring histogram of column (STORE_SALES.SS_CUSTOMER_SK)
      used only for incremental stats maintenance
  Column (#4): SS_CUSTOMER_SK(NUMBER)
    AvgLen: 6 NDV: 1039371 Nulls: 0 Density: 0.000001 Min: 1.000000 Max: 1079999.000000
  Estimated selectivity: 9.6212e-07 , col: #4 
  Table: STORE_SALES  Alias: SS
    Card: Original: 144020200.000000  Rounded: 139  Computed: 138.564767  Non Adjusted: 138.564767
  Scan IO  Cost (Disk) =   624219.000000
  Scan CPU Cost (Disk) =   46657751154.880005
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000001 flag = 2048  ("SS"."SS_CUSTOMER_SK"=:B1)
  Total Scan IO  Cost  =   624219.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 144020200.000000 (#rows))
                       =   624219.000000
  Total Scan CPU  Cost =   46657751154.880005 (scan (Disk))
                         + 7201010000.000000 (cpu filter eval) (= 50.000000 (per row) * 144020200.000000 (#rows))
                       =   53858761154.880005
  Access Path: TableScan
    Cost:  625597.914066  Resp: 625597.914066  Degree: 0
      Cost_io: 624219.000000  Cost_cpu: 53858761155
      Resp_io: 624219.000000  Resp_cpu: 53858761155
  Access Path: index (index (FFS))
    Index: STORE_SALES_IDX2
    resc_io: 141639.000000  resc_cpu: 28207733477
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  142361.185947  Resp: 142361.185947  Degree: 1
      Cost_io: 141639.000000  Cost_cpu: 28207733477
      Resp_io: 141639.000000  Resp_cpu: 28207733477
 ****** Costing Index STORE_SALES_IDX2
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER

  Estimated selectivity: 9.6212e-07 , col: #4 
  Access Path: index (IndexOnly)
    Index: STORE_SALES_IDX2
    resc_io: 4.000000  resc_cpu: 56286
    ix_sel: 9.6212e-07  ix_sel_with_filters: 9.6212e-07 
    Cost: 4.001441  Resp: 4.001441  Degree: 1
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: IndexRange
  Index: STORE_SALES_IDX2
         Cost: 4.001441  Degree: 1  Resp: 4.001441  Card: 138.564767  Bytes: 0.000000

Access path analysis for DATE_DIM
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for DATE_DIM[DATE_DIM] 
  SPD: Directive valid: dirid = 13969931850241126217, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {C(74171)[7, 9]}
  SPD: Return code in qosdDSDirSetup: EXISTS, estType = TABLE
  Column (#7): 
    NewDensity:0.000007, OldDensity:0.000007 BktCnt:73049.000000, PopBktCnt:73048.000000, PopValCnt:200, NDV:201
  Column (#7): D_YEAR(NUMBER)
    AvgLen: 4 NDV: 201 Nulls: 0 Density: 0.000007 Min: 1900.000000 Max: 2100.000000
    Histogram: Freq  #Bkts: 201  UncompBkts: 73049  EndPtVals: 201  ActualVal: yes
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 


 kkecdn: Single Table Predicate:"DATE_DIM"."D_YEAR"=2001
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY">=1
  Column (#9): 
    NewDensity:0.038666, OldDensity:0.000007 BktCnt:73049.000000, PopBktCnt:73049.000000, PopValCnt:12, NDV:12
  Column (#9): D_MOY(NUMBER)
    AvgLen: 3 NDV: 12 Nulls: 0 Density: 0.038666 Min: 1.000000 Max: 12.000000
    Histogram: Freq  #Bkts: 12  UncompBkts: 73049  EndPtVals: 12  ActualVal: yes
  Estimated selectivity: 1.000000 , endpoint value predicate, col: #9 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY"<=4
  Estimated selectivity: 0.329224 , endpoint value predicate, col: #9 
  Table: DATE_DIM  Alias: DATE_DIM
    Card: Original: 73049.000000  Rounded: 120  Computed: 120.166840  Non Adjusted: 120.166840
  Scan IO  Cost (Disk) =   411.000000
  Scan CPU Cost (Disk) =   33398564.400000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.004997 flag = 2048  ("DATE_DIM"."D_YEAR"=2001)
    io = NOCOST, cpu = 50.000000, sel = 0.329224 flag = 2048  ("DATE_DIM"."D_MOY"<=4)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("DATE_DIM"."D_MOY">=1)
  Total Scan IO  Cost  =   411.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 73049.000000 (#rows))
                       =   411.000000
  Total Scan CPU  Cost =   33398564.400000 (scan (Disk))
                         + 3676708.342003 (cpu filter eval) (= 50.332083 (per row) * 73049.000000 (#rows))
                       =   37075272.742003
  Access Path: TableScan
    Cost:  411.949216  Resp: 411.949216  Degree: 0
      Cost_io: 411.000000  Cost_cpu: 37075273
      Resp_io: 411.000000  Resp_cpu: 37075273
  ****** trying bitmap/domain indexes ******
 ****** Costing Index D_DATE_PK_IDX
  Access Path: index (FullScan)
    Index: D_DATE_PK_IDX
    resc_io: 164.000000  resc_cpu: 15777716
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 164.403948  Resp: 164.403948  Degree: 0
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: TableScan
         Cost: 411.949216  Degree: 1  Resp: 411.949216  Card: 120.166840  Bytes: 0.000000

***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE: Checking validity of partial join eval on query block SEL$2 (#2)
PJE: Passed validity of partial join eval by query block SEL$2 (#2)
number: [0]
PJE: Partial join eval conversion for query block SEL$2 (#2).
PJE: Table marked for partial join eval: STORE_SALES[SS]#1
***********************
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  DATE_DIM[DATE_DIM]#0  STORE_SALES[SS]#1

***************
Now joining: STORE_SALES[SS]#1
***************
NL Join
  Outer table: Card: 120.166840  Cost: 411.949216  Resp: 411.949216  Degree: 1  Bytes: 
Access path analysis for STORE_SALES
  Scan IO  Cost (Disk) =   624217.216667
  Scan CPU Cost (Disk) =   46657751154.880005
NOTE: ignoring histogram of column (STORE_SALES.SS_SOLD_DATE_SK)
      used only for incremental stats maintenance
  Column (#1): SS_SOLD_DATE_SK(NUMBER)
    AvgLen: 6 NDV: 1849 Nulls: 0 Density: 0.000541 Min: 2450816.000000 Max: 2452651.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000001 flag = 2064  ("SS"."SS_CUSTOMER_SK"=:B1)
    io = NOCOST, cpu = 50.000000, sel = 0.007463 flag = 2048  ("SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK")
  Total Scan IO  Cost  =   624217.216667 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 144020200.000000 (#rows))
                       =   624217.216667
  Total Scan CPU  Cost =   46657751154.880005 (scan (Disk))
                         + 7201016928.238328 (cpu filter eval) (= 50.000048 (per row) * 144020200.000000 (#rows))
                       =   53858768083.118332
  Inner table: STORE_SALES  Alias: SS
  Access Path: TableScan
    NL Join:  Cost: 75071947.658387  Resp: 75071947.658387  Degree: 1
      Cost_io: 74906477.000000  Cost_cpu: 6463089245247
      Resp_io: 74906477.000000  Resp_cpu: 6463089245247
  Access Path: index (index (FFS))
    Index: STORE_SALES_IDX2
    resc_io: 141637.716667  resc_cpu: 28207740405
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: STORE_SALES  Alias: SS
  Access Path: index (FFS)
    NL Join:  Cost: 17083600.284196  Resp: 17083600.284196  Degree: 1
      Cost_io: 16996937.000000  Cost_cpu: 3384965923877
      Resp_io: 16996937.000000  Resp_cpu: 3384965923877
 ****** Costing Index STORE_SALES_IDX2
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 8.3576e-08
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 8.3576e-08
  Estimated selectivity: 9.6212e-07 , col: #4 
  Access Path: index (AllEqJoinGuess)
    Index: STORE_SALES_IDX2
    resc_io: 3.000000  resc_cpu: 22414
    ix_sel: 6.9435e-09  ix_sel_with_filters: 6.9435e-09 
    NL Join : Cost: 772.018080  Resp: 772.018080  Degree: 1
      Cost_io: 771.000000  Cost_cpu: 39764991
      Resp_io: 771.000000  Resp_cpu: 39764991
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 772.018080
          resc: 772.018080  resc_io: 771.000000  resc_cpu: 39764991
          resp: 772.018080  resp_io: 771.000000  resc_cpu: 39764991
  SPD: Directive valid: dirid = 10827845680942532126, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {F(74191)[]; F(74171)[]}
  SPD: Return code in qosdDSDirSetup: EXISTS, estType = JOIN
Semi Join Card:  120.166840 = outer (120.166840) * sel (1.000000)
Join Card - Rounded: 120 Computed: 120.166840
  Outer table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card 120.166840  bytes:   deg: 1  resp: 411.949216
  Inner table:  STORE_SALES  Alias: SS
    resc: 4.001441  card: 138.564767  bytes:   deg: 1  resp: 4.001441
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     25 Total Rows:            120
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39096166
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     24 Total Rows:            139
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39103407
      Total Temp space used: 0
  SM join: Resc: 417.952755  Resp: 417.952755  [multiMatchCost=0.000000]
SM Join
  SM cost: 417.952755 
     resc: 417.952755 resc_io: 415.000000 resc_cpu: 115331131
     resp: 417.952755 resp_io: 415.000000 resp_cpu: 115331131
SM Join (with index on outer)
 ****** Costing Index D_DATE_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (FullScan)
    Index: D_DATE_PK_IDX
    resc_io: 1566.000000  resc_cpu: 52083873
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1567.333473  Resp: 1567.333473  Degree: 1
  Outer table:  DATE_DIM  Alias: DATE_DIM
    resc: 1567.333473  card 120.166840  bytes:   deg: 1  resp: 1567.333473
  Inner table:  STORE_SALES  Alias: SS
    resc: 4.001441  card: 138.564767  bytes:   deg: 1  resp: 4.001441
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     24 Total Rows:            139
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39103407
      Total Temp space used: 0
  SM join: Resc: 1572.336055  Resp: 1572.336055  [multiMatchCost=0.000000]
  Outer table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card 120.166840  bytes:   deg: 1  resp: 411.949216
  Inner table:  STORE_SALES  Alias: SS
    resc: 4.001441  card: 138.564767  bytes:   deg: 1  resp: 4.001441
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016178  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 415.966836  Resp: 415.966836  [multiMatchCost=0.000000]
HA Join
  HA cost: 415.966836  
     resc: 415.966836 resc_io: 415.000000 resc_cpu: 37763459
     resp: 415.966836 resp_io: 415.000000 resp_cpu: 37763459
Best:: JoinMethod: HashSemi
       Cost: 415.966836  Degree: 1  Resp: 415.966836  Card: 120.166840 Bytes: 
***********************
Best so far:  Table#: 0  cost: 411.949216  card: 120.166840  bytes: 1560.000000
              Table#: 1  cost: 415.966836  card: 120.166840  bytes: 3000.000000
***********************

*********************************
Number of join permutations tried: 1
*********************************
*********************
PJE: Partial join eval conversion for query block SEL$2 (#2).
PJE: Table marked for partial join eval: STORE_SALES[SS]#1
***********************
Enumerating distribution method (advanced)
--- Distribution method for 
join between DATE_DIM[DATE_DIM](serial) and SS[STORE_SALES](serial); jm = 2; right side access path = IndexRange
---- serial Hash-Join -> NONE

kkoaccsqf: Current query block SEL$2 (#2) is serial
kkoaccsqf: correlated subquery query block SEL$3 (#4) in filter               : serial
(newjo-save)    [0 1 ]
LORE: Or-Expansion validity checks failed on query block SEL$2 (#2) because Cost based OR expansion enabled
Transfer Optimizer annotations for query block SEL$2 (#2)
Final cost for query block SEL$2 (#2) - All Rows Plan:
  Best join order: 1
  Cost: 415.966836  Degree: 1  Card: 120.000000  Bytes: 3000.000000
  Resc: 415.966836  Resc_io: 415.000000  Resc_cpu: 37763459
  Resp: 415.966836  Resp_io: 415.000000  Resc_cpu: 37763459
kkoqbc-subheap (delete addr=0x7f0471ea9ee0, in-use=63832, alloc=65704)
kkoqbc-end:
        :
    call(in-use=1495880, alloc=1572760), compile(in-use=3318432, alloc=3319472), execution(in-use=51832, alloc=52704)

kkoqbc: finish optimizing query block SEL$2 (#2)
kkoqbc: optimizing query block SEL$ACBFB8CC (#14)
        
        :
    call(in-use=1493672, alloc=1572760), compile(in-use=3325016, alloc=3327760), execution(in-use=51992, alloc=52704)

kkoqbc-subheap (create addr=0x7f0471ea9ee0)
****************
QUERY BLOCK TEXT
****************
Not available.
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$ACBFB8CC nbfros=2 flg=0
  fro(0): flg=0 objn=74168 hint_alias="C"@"SEL$1"
  fro(1): flg=0 objn=74169 hint_alias="CA"@"SEL$1"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3255 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: CUSTOMER  Alias:  C
  #Rows: 1080000  SSZ: 0  LGR: 0  #Blks:  23374  AvgRowLen:  138.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): C_CUSTOMER_SK(NUMBER)
    AvgLen: 6 NDV: 1080000 Nulls: 0 Density: 0.000001 Min: 1.000000 Max: 1080000.000000
  Column (#5): C_CURRENT_ADDR_SK(NUMBER)
    AvgLen: 5 NDV: 457472 Nulls: 0 Density: 0.000002 Min: 1.000000 Max: 539997.000000
Index Stats::
  Index: CUSTOMER_PK_IDX  Col#: 1
  LVLS: 2  #LB: 2266  #DK: 1080000  LB/K: 1.00  DB/K: 1.00  CLUF: 75684.00  NRW: 1080000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table: CUSTOMER_ADDRESS  Alias: CA
  #Rows: 540000  SSZ: 0  LGR: 0  #Blks:  13174  AvgRowLen:  152.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): CA_ADDRESS_SK(NUMBER)
    AvgLen: 5 NDV: 540000 Nulls: 0 Density: 0.000002 Min: 1.000000 Max: 540000.000000
  Column (#8): CA_COUNTY(VARCHAR2)
    AvgLen: 16 NDV: 1877 Nulls: 0 Density: 0.000471
    Histogram: Hybrid  #Bkts: 254  UncompBkts: 5580  EndPtVals: 254  ActualVal: yes
Index Stats::
  Index: CA_ADDRESS_PK_IDX  Col#: 1
  LVLS: 2  #LB: 1127  #DK: 540000  LB/K: 1.00  DB/K: 1.00  CLUF: 12283.00  NRW: 540000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
  Column (#3): C_CURRENT_CDEMO_SK(NUMBER)
    AvgLen: 6 NDV: 772544 Nulls: 0 Density: 0.000001 Min: 18.000000 Max: 1920799.000000
try to generate single-table filter predicates from ORs for query block SEL$ACBFB8CC (#14)
finally: ("CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County') AND "C"."C_CURRENT_ADDR_SK"="CA"."CA_ADDRESS_SK" AND  EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM" WHERE "SS"."SS_CUSTOMER_SK"=:B1 AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND ( EXISTS (SELECT 0 FROM "WEB_SALES" "WEB_SALES","DATE_DIM" "DATE_DIM" WHERE "WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B2 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1) OR  EXISTS (SELECT 0 FROM "CATALOG_SALES" "CATALOG_SALES","DATE_DIM" "DATE_DIM" WHERE "CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B3 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1)))

=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$ACBFB8CC (#14)
Applicable DS directives:
   dirid = 18439699102505563871, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {EC(74169)[8]}
   dirid = 5181560337004891843, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74169)[]; (74168)[3]}
   dirid = 9316027922818115912, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74168)[3, 5]}
Checking valid directives for the query block
  SPD: Directive valid: dirid = 5181560337004891843, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74169)[]; (74168)[3]}
  SPD: Return code in qosdDSDirSetup: EXISTS, estType = GROUP_BY
  SPD: Return code in qosdDSDirSetup: NODIR, estType = QUERY_BLOCK
Return code in qosdSetupDirCtx4QB: EXISTS
=====================================
SPD: END context at query block level
=====================================
Access path analysis for CUSTOMER_ADDRESS
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for CUSTOMER_ADDRESS[CA] 
  SPD: Directive valid: dirid = 18439699102505563871, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {EC(74169)[8]}
  SPD: Return code in qosdDSDirSetup: EXISTS, estType = TABLE

 kkecdn: Single Table Predicate:"CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County'
  Using density: 4.7103e-04 of col #8 as selectivity of pred having unreasonably low value
  Using density: 4.7103e-04 of col #8 as selectivity of pred having unreasonably low value
  Using density: 4.7103e-04 of col #8 as selectivity of pred having unreasonably low value
  Using density: 4.7103e-04 of col #8 as selectivity of pred having unreasonably low value
  Estimated selectivity: 5.3763e-04 , endpoint value predicate, col: #8 
  Table: CUSTOMER_ADDRESS  Alias: CA
    Card: Original: 540000.000000  Rounded: 1308  Computed: 1307.756551  Non Adjusted: 1307.756551
  Scan IO  Cost (Disk) =   3570.000000
  Scan CPU Cost (Disk) =   250417850.560000
  Cost of predicates:
    io = 0.000000, cpu = 249.764594, sel = 0.002422 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Chouteau County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Dinwiddie County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Dixie County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Harrisonburg city')
      io = NOCOST, cpu = 50.000000, sel = 0.000538 flag = 2048  ("CA"."CA_COUNTY"='Lowndes County')
  Total Scan IO  Cost  =   3570.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 540000.000000 (#rows))
                       =   3570.000000
  Total Scan CPU  Cost =   250417850.560000 (scan (Disk))
                         + 134872880.645405 (cpu filter eval) (= 249.764594 (per row) * 540000.000000 (#rows))
                       =   385290731.205405
  Access Path: TableScan
    Cost:  3579.864371  Resp: 3579.864371  Degree: 0
      Cost_io: 3570.000000  Cost_cpu: 385290731
      Resp_io: 3570.000000  Resp_cpu: 385290731
  ****** trying bitmap/domain indexes ******
 ****** Costing Index CA_ADDRESS_PK_IDX
  Access Path: index (FullScan)
    Index: CA_ADDRESS_PK_IDX
    resc_io: 1129.000000  resc_cpu: 116040106
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1131.970906  Resp: 1131.970906  Degree: 0
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: TableScan
         Cost: 3579.864371  Degree: 1  Resp: 3579.864371  Card: 1307.756551  Bytes: 0.000000

Access path analysis for CUSTOMER
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for CUSTOMER[C] 
  SPD: Return code in qosdDSDirSetup: NODIR, estType = TABLE

 kkecdn: Single Table Predicate: EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM" WHERE "SS"."SS_CUSTOMER_SK"=:B1 AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND ( EXISTS (SELECT 0 FROM "WEB_SALES" "WEB_SALES","DATE_DIM" "DATE_DIM" WHERE "WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B2 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1) OR  EXISTS (SELECT 0 FROM "CATALOG_SALES" "CATALOG_SALES","DATE_DIM" "DATE_DIM" WHERE "CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B3 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1)))
  Column (#1): C_CUSTOMER_SK(NUMBER)
    AvgLen: 6 NDV: 1080000 Nulls: 0 Density: 0.000001 Min: 1.000000 Max: 1080000.000000
  Table: CUSTOMER  Alias: C
    Card: Original: 1080000.000000  Rounded: 1080000  Computed: 1080000.000000  Non Adjusted: 1080000.000000
  Scan IO  Cost (Disk) =   6332.000000
  Scan CPU Cost (Disk) =   414856538.560000
  Cost of predicates:
    io = NOCOST, cpu = 20.000000, sel = 0.050000 flag = 2562  ( EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM" WHERE "SS"."SS_CUSTOMER_SK"=:B1 AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND ( EXISTS (SELECT 0 FROM "WEB_SALES" "WEB_SALES","DATE_DIM" "DATE_DIM" WHERE "WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B2 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1) OR  EXISTS (SELECT 0 FROM "CATALOG_SALES" "CATALOG_SALES","DATE_DIM" "DATE_DIM" WHERE "CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B3 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1))))
  Total Scan IO  Cost  =   6332.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 1080000.000000 (#rows))
                       =   6332.000000
  Total Scan CPU  Cost =   414856538.560000 (scan (Disk))
                         + 21600000.000000 (cpu filter eval) (= 20.000000 (per row) * 1080000.000000 (#rows))
                       =   436456538.560000
  Access Path: TableScan
    Cost:  6343.174339  Resp: 6343.174339  Degree: 0
      Cost_io: 6332.000000  Cost_cpu: 436456539
      Resp_io: 6332.000000  Resp_cpu: 436456539
  ****** trying bitmap/domain indexes ******
 ****** Costing Index CUSTOMER_PK_IDX
  Access Path: index (FullScan)
    Index: CUSTOMER_PK_IDX
    resc_io: 2268.000000  resc_cpu: 232151426
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 2273.943636  Resp: 2273.943636  Degree: 0
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: TableScan
         Cost: 6343.174339  Degree: 1  Resp: 6343.174339  Card: 1080000.000000  Bytes: 0.000000

Grouping column cardinality [C_CURRENT_]    772544
***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE:  Bypassed; QB is not duplicate insignificant SEL$ACBFB8CC (#14)
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  CUSTOMER_ADDRESS[CA]#0  CUSTOMER[C]#1

***************
Now joining: CUSTOMER[C]#1
***************
NL Join
  Outer table: Card: 1307.756551  Cost: 3579.864371  Resp: 3579.864371  Degree: 1  Bytes: 
Access path analysis for CUSTOMER
  Scan IO  Cost (Disk) =   6330.459480
  Scan CPU Cost (Disk) =   414856538.560000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000002 flag = 2048  ("C"."C_CURRENT_ADDR_SK"="CA"."CA_ADDRESS_SK")
    io = NOCOST, cpu = 20.000000, sel = 0.050000 flag = 2562  ( EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM" WHERE "SS"."SS_CUSTOMER_SK"=:B1 AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND ( EXISTS (SELECT 0 FROM "WEB_SALES" "WEB_SALES","DATE_DIM" "DATE_DIM" WHERE "WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B2 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1) OR  EXISTS (SELECT 0 FROM "CATALOG_SALES" "CATALOG_SALES","DATE_DIM" "DATE_DIM" WHERE "CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B3 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1))))
  Total Scan IO  Cost  =   6330.459480 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 1080000.000000 (#rows))
                       =   6330.459480
  Total Scan CPU  Cost =   414856538.560000 (scan (Disk))
                         + 24300000.000000 (cpu filter eval) (= 22.500000 (per row) * 1080000.000000 (#rows))
                       =   439156538.560000
  Inner table: CUSTOMER  Alias: C
  Access Path: TableScan
    NL Join:  Cost: 8298527.317370  Resp: 8298527.317370  Degree: 1
      Cost_io: 8283811.000000  Cost_cpu: 574802043168
      Resp_io: 8283811.000000  Resp_cpu: 574802043168
  ****** trying bitmap/domain indexes ******
 ****** Costing Index CUSTOMER_PK_IDX
  Access Path: index (FullScan)
    Index: CUSTOMER_PK_IDX
    resc_io: 2268.000000  resc_cpu: 232151426
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 2273.943636  Resp: 2273.943636  Degree: 0
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 8298527.317370
          resc: 8298527.317370  resc_io: 8283811.000000  resc_cpu: 574802043168
          resp: 8298527.317370  resp_io: 8283811.000000  resc_cpu: 574802043168
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Join Card:  3087.351958 = outer (1307.756551) * inner (1080000.000000) * sel (2.1859e-06)
Join Card - Rounded: 3087 Computed: 3087.351958
Grouping column cardinality [C_CURRENT_]    772544
  Outer table:  CUSTOMER_ADDRESS  Alias: CA
    resc: 3579.864371  card 1307.756551  bytes:   deg: 1  resp: 3579.864371
  Inner table:  CUSTOMER  Alias: C
    resc: 6343.174339  card: 1080000.000000  bytes:   deg: 1  resp: 6343.174339
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 6 Row size:     34 Total Rows:           1308
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39668949
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 3835 Row size:     29 Total Rows:        1080000
      Initial runs:   2 Merge passes:  1 IO Cost / pass:       2078
      Total IO sort cost: 5913.000000      Total CPU sort cost: 1108751040
      Total Temp space used: 60826000
  SM join: Resc: 15865.441029  Resp: 15865.441029  [multiMatchCost=0.000000]
SM Join
  SM cost: 15865.441029 
     resc: 15865.441029 resc_io: 15815.000000 resc_cpu: 1970167258
     resp: 15865.441029 resp_io: 15815.000000 resp_cpu: 1970167258
SM Join (with index on outer)
 ****** Costing Index CA_ADDRESS_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (FullScan)
    Index: CA_ADDRESS_PK_IDX
    resc_io: 13412.000000  resc_cpu: 494985634
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 13424.672825  Resp: 13424.672825  Degree: 1
  Outer table:  CUSTOMER_ADDRESS  Alias: CA
    resc: 13424.672825  card 1307.756551  bytes:   deg: 1  resp: 13424.672825
  Inner table:  CUSTOMER  Alias: C
    resc: 6343.174339  card: 1080000.000000  bytes:   deg: 1  resp: 6343.174339
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 3835 Row size:     29 Total Rows:        1080000
      Initial runs:   2 Merge passes:  1 IO Cost / pass:       2078
      Total IO sort cost: 5913.000000      Total CPU sort cost: 1108751040
      Total Temp space used: 60826000
  SM join: Resc: 25709.233862  Resp: 25709.233862  [multiMatchCost=0.000000]
  Outer table:  CUSTOMER_ADDRESS  Alias: CA
    resc: 3579.864371  card 1307.756551  bytes:   deg: 1  resp: 3579.864371
  Inner table:  CUSTOMER  Alias: C
    resc: 6343.174339  card: 1080000.000000  bytes:   deg: 1  resp: 6343.174339
    using dmeth: 2  #groups: 1
    Cost per ptn: 2.785445  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 6  probefrag: 3824  ppasses: 1
  Hash join: Resc: 9925.824155  Resp: 9925.824155  [multiMatchCost=0.000000]
HA Join
  HA cost: 9925.824155  
     resc: 9925.824155 resc_io: 9902.000000 resc_cpu: 930543470
     resp: 9925.824155 resp_io: 9902.000000 resp_cpu: 930543470
GROUP BY sort
GROUP BY/Correlated Subquery Filter adjustment factor: 1.000000
GROUP BY cardinality:  3087.000000, TABLE cardinality:  3087.000000
Vector group by not costed because no SYS_OP_XLATE_USE in group by.
kdmoGByPushdownValid: more than one table in group by    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 20 Row size:     52 Total Rows:           3087
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 40671077
      Total Temp space used: 0
Best:: JoinMethod: Hash
       Cost: 9926.865433  Degree: 1  Resp: 9926.865433  Card: 3087.351958 Bytes: 
***********************
Best so far:  Table#: 0  cost: 3579.864371  card: 1307.756551  bytes: 27468.000000
              Table#: 1  cost: 9926.865433  card: 3087.351958  bytes: 117306.000000
***********************

*********************************
Number of join permutations tried: 1
*********************************
Enumerating distribution method (advanced)
--- Distribution method for 
join between CA[CUSTOMER_ADDRESS](serial) and C[CUSTOMER](serial); jm = 1; right side access path = TableScan
---- serial Hash-Join -> NONE

kkoaccsqf: Current query block SEL$ACBFB8CC (#14) is serial
kkoaccsqf: correlated subquery query block SEL$2 (#2) in filter               : serial
Final adjusted join cardinality: 1.000000, sq. fil. factor: 1080000.000000
(newjo-save)    [1 0 ]
GROUP BY/Correlated Subquery Filter adjustment factor: 1.000000
GROUP BY cardinality:  1.000000, TABLE cardinality:  1.000000
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     52 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39058824
      Total Temp space used: 0
LORE: Or-Expansion validity checks failed on query block SEL$ACBFB8CC (#14) because Cost based OR expansion enabled
Transfer Optimizer annotations for query block SEL$ACBFB8CC (#14)
Final cost for query block SEL$ACBFB8CC (#14) - All Rows Plan:
  Best join order: 1
  Cost: 9926.865433  Degree: 1  Card: 1.000000  Bytes: 117306.000000
  Resc: 9926.865433  Resc_io: 9902.000000  Resc_cpu: 971214547
  Resp: 9926.865433  Resp_io: 9902.000000  Resc_cpu: 971214547
kkoqbc-subheap (delete addr=0x7f0471ea9ee0, in-use=53736, alloc=65704)
kkoqbc-end:
        :
    call(in-use=1537808, alloc=1621864), compile(in-use=3349816, alloc=3351528), execution(in-use=53632, alloc=56760)

kkoqbc: finish optimizing query block SEL$ACBFB8CC (#14)
kkoqbc: optimizing query block SEL$DAF89EE2 (#1)
        
        :
    call(in-use=1535600, alloc=1621864), compile(in-use=3355968, alloc=3359816), execution(in-use=53840, alloc=56760)

kkoqbc-subheap (create addr=0x7f0471ea9ee0)
****************
QUERY BLOCK TEXT
****************
SELECT /*query10*/
    cd_gender,
    cd_marital_status,
    cd_education_status,
    COUNT(*) cnt1,
    cd_purchase_estimate,
    COUNT(*) cnt2,
    cd_credit_rating,
    COUNT(*) cnt3,
    cd_dep_count,
    COUNT(*) cnt4,
    cd_dep_employed_count,
    COUNT(*) cnt5,
    cd_dep_college_count,
    COUNT(*) cnt6
FROM
    customer c,
    customer_address ca,
    customer_demographics
WHERE
    -- join predicates
        c.c_current_addr_sk = ca.ca_address_sk
    AND cd_demo_sk = c.c_current_cdemo_sk
    -- filter predicates
    AND ca.ca_county IN (
        'Chouteau County',
        'Dixie County',
        'Harrisonburg city',
        'Lowndes County',
        'Dinwiddie County'
    )
    -- filter predicate (subquery)
    AND EXISTS (
        SELECT
            *
        FROM
            store_sales ss,
            date_dim
        WHERE
            c.c_customer_sk = ss.ss_customer_sk
            AND ss_sold_date_sk = d_date_sk
            AND d_year = 2001
            AND d_moy BETWEEN 1 AND 1 + 3
            AND ( EXISTS (
                SELECT
                    *
                FROM
                    web_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = ws_bill_customer_sk
                    AND ws_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            )
                  OR EXISTS (
                SELECT
                    *
                FROM
                    catalog_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = cs_ship_customer_sk
                    AND cs_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            ) )
    )
GROUP BY
    cd_gender,
    cd_marital_status,
    cd_education_status,
    cd_purchase_estimate,
    cd_credit_rating,
    cd_dep_count,
    cd_dep_employed_count,
    cd_dep_college_count

---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$DAF89EE2 nbfros=2 flg=0
  fro(0): flg=0 objn=74170 hint_alias="CUSTOMER_DEMOGRAPHICS"@"SEL$1"
  fro(1): flg=1 objn=0 hint_alias="VW_GBF_10"@"SEL$8E90090D"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3255 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
  #Rows: 1920800  SSZ: 0  LGR: 0  #Blks:  17254  AvgRowLen:  54.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): CD_DEMO_SK(NUMBER)
    AvgLen: 6 NDV: 1920800 Nulls: 0 Density: 0.000001 Min: 1.000000 Max: 1920800.000000
Index Stats::
  Index: CD_DEMO_PK_IDX  Col#: 1
  LVLS: 2  #LB: 4138  #DK: 1920800  LB/K: 1.00  DB/K: 1.00  CLUF: 795806.00  NRW: 1920800.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table: VW_GBF_10  Alias: VW_GBF_10  (NOT ANALYZED)
  #Rows: 0  SSZ: 0  LGR: 0  #Blks:  0  AvgRowLen:  0.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 0
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#2): 
    NewDensity:0.249925, OldDensity:0.000000 BktCnt:1920800.000000, PopBktCnt:1920800.000000, PopValCnt:2, NDV:2
  Column (#2): CD_GENDER(CHARACTER)
    AvgLen: 2 NDV: 2 Nulls: 0 Density: 0.249925
    Histogram: Freq  #Bkts: 2  UncompBkts: 1920800  EndPtVals: 2  ActualVal: no 
  Column (#3): 
    NewDensity:0.098953, OldDensity:0.000000 BktCnt:1920800.000000, PopBktCnt:1920800.000000, PopValCnt:5, NDV:5
  Column (#3): CD_MARITAL_STATUS(CHARACTER)
    AvgLen: 2 NDV: 5 Nulls: 0 Density: 0.098953
    Histogram: Freq  #Bkts: 5  UncompBkts: 1920800  EndPtVals: 5  ActualVal: yes
  Column (#4): 
    NewDensity:0.070771, OldDensity:0.000000 BktCnt:1920800.000000, PopBktCnt:1920800.000000, PopValCnt:7, NDV:7
  Column (#4): CD_EDUCATION_STATUS(CHARACTER)
    AvgLen: 21 NDV: 7 Nulls: 0 Density: 0.070771
    Histogram: Freq  #Bkts: 7  UncompBkts: 1920800  EndPtVals: 7  ActualVal: yes
  Column (#5): CD_PURCHASE_ESTIMATE(NUMBER)
    AvgLen: 4 NDV: 9500 Nulls: 0 Density: 0.000105 Min: 500.000000 Max: 9999.000000
  Column (#6): CD_CREDIT_RATING(CHARACTER)
    AvgLen: 11 NDV: 4 Nulls: 0 Density: 0.250000
  Column (#7): CD_DEP_COUNT(NUMBER)
    AvgLen: 3 NDV: 6 Nulls: 0 Density: 0.166667 Min: 0.000000 Max: 5.000000
  Column (#8): CD_DEP_EMPLOYED_COUNT(NUMBER)
    AvgLen: 3 NDV: 6 Nulls: 0 Density: 0.166667 Min: 0.000000 Max: 5.000000
  Column (#9): CD_DEP_COLLEGE_COUNT(NUMBER)
    AvgLen: 3 NDV: 6 Nulls: 0 Density: 0.166667 Min: 0.000000 Max: 5.000000
  Column (#1): ITEM_1(NUMBER)
    AvgLen: 6 NDV: 772544 Nulls: 0 Density: 0.000001 Min: 18.000000 Max: 1920799.000000
try to generate single-table filter predicates from ORs for query block SEL$DAF89EE2 (#1)
finally: "CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK"="VW_GBF_10"."ITEM_1"

=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$DAF89EE2 (#1)
Applicable DS directives:
   dirid = 7754152966831092939, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {EC(74170)[3, 4]}
Checking valid directives for the query block
  SPD: Return code in qosdDSDirSetup: NODIR, estType = GROUP_BY
  SPD: Return code in qosdDSDirSetup: NODIR, estType = QUERY_BLOCK
Return code in qosdSetupDirCtx4QB: EXISTS
=====================================
SPD: END context at query block level
=====================================
Access path analysis for VW_GBF_10

Access path analysis for CUSTOMER_DEMOGRAPHICS
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS] 
  SPD: Return code in qosdDSDirSetup: NODIR, estType = TABLE
  Table: CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
    Card: Original: 1920800.000000  Rounded: 1920800  Computed: 1920800.000000  Non Adjusted: 1920800.000000
  Scan IO  Cost (Disk) =   4675.000000
  Scan CPU Cost (Disk) =   718321325.760000
  Total Scan IO  Cost  =   4675.000000 (scan (Disk))
                       =   4675.000000
  Total Scan CPU  Cost =   718321325.760000 (scan (Disk))
                       =   718321325.760000
  Access Path: TableScan
    Cost:  4693.390757  Resp: 4693.390757  Degree: 0
      Cost_io: 4675.000000  Cost_cpu: 718321326
      Resp_io: 4675.000000  Resp_cpu: 718321326
  Best:: AccessPath: TableScan
         Cost: 4693.390757  Degree: 1  Resp: 4693.390757  Card: 1920800.000000  Bytes: 0.000000

Grouping column cardinality [ CD_GENDER]    2
Grouping column cardinality [CD_MARITAL]    5
Grouping column cardinality [CD_EDUCATI]    7
Grouping column cardinality [CD_PURCHAS]    9500
Grouping column cardinality [CD_CREDIT_]    4
Grouping column cardinality [CD_DEP_COU]    6
Grouping column cardinality [CD_DEP_EMP]    6
Grouping column cardinality [CD_DEP_COL]    6
***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE:  Bypassed; QB is not duplicate insignificant SEL$DAF89EE2 (#1)
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  VW_GBF_10[VW_GBF_10]#0  CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS]#1

***************
Now joining: CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS]#1
***************
NL Join
  Outer table: Card: 1.000000  Cost: 5.000000  Resp: 0.000000  Degree: 0  Bytes: 
Access path analysis for CUSTOMER_DEMOGRAPHICS
  Scan IO  Cost (Disk) =   4675.000000
  Scan CPU Cost (Disk) =   718321325.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000001 flag = 2048  ("CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK"="VW_GBF_10"."ITEM_1")
  Total Scan IO  Cost  =   4675.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 1920800.000000 (#rows))
                       =   4675.000000
  Total Scan CPU  Cost =   718321325.760000 (scan (Disk))
                         + 96040000.000000 (cpu filter eval) (= 50.000000 (per row) * 1920800.000000 (#rows))
                       =   814361325.760000
  Inner table: CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
  Access Path: TableScan
    NL Join:  Cost: 4695.849612  Resp: 4695.849612  Degree: 1
      Cost_io: 4675.000000  Cost_cpu: 814361326
      Resp_io: 4675.000000  Resp_cpu: 814361326
 ****** Costing Index CD_DEMO_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: CD_DEMO_PK_IDX
    resc_io: 2.000000  resc_cpu: 16453
    ix_sel: 5.2062e-07  ix_sel_with_filters: 5.2062e-07 
    NL Join : Cost: 2.000421  Resp: 2.000421  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 16453
      Resp_io: 2.000000  Resp_cpu: 16453
 ****** Costing Index CD_DEMO_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: CD_DEMO_PK_IDX
    resc_io: 2.000000  resc_cpu: 16453
    ix_sel: 5.2062e-07  ix_sel_with_filters: 5.2062e-07 
    NL Join : Cost: 2.000421  Resp: 2.000421  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 16453
      Resp_io: 2.000000  Resp_cpu: 16453

  Best NL cost: 2.000421
          resc: 2.000421  resc_io: 2.000000  resc_cpu: 16453
          resp: 2.000421  resp_io: 2.000000  resc_cpu: 16453
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Join Card:  1.000000 = outer (1.000000) * inner (1920800.000000) * sel (5.2062e-07)
Join Card - Rounded: 1 Computed: 1.000000
Grouping column cardinality [ CD_GENDER]    2
Grouping column cardinality [CD_MARITAL]    5
Grouping column cardinality [CD_EDUCATI]    7
Grouping column cardinality [CD_PURCHAS]    9500
Grouping column cardinality [CD_CREDIT_]    4
Grouping column cardinality [CD_DEP_COU]    6
Grouping column cardinality [CD_DEP_EMP]    6
Grouping column cardinality [CD_DEP_COL]    6
  Outer table:  VW_GBF_10  Alias: VW_GBF_10
    resc: 0.000000  card 1.000000  bytes:   deg: 0  resp: 0.000000
  Inner table:  CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
    resc: 4693.390757  card: 1920800.000000  bytes:   deg: 1  resp: 4693.390757
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     103 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39058824
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 16462 Row size:     70 Total Rows:        1920800
      Initial runs:   2 Merge passes:  1 IO Cost / pass:       8918
      Total IO sort cost: 25380.000000      Total CPU sort cost: 2250842275
      Total Temp space used: 294134000
  SM join: Resc: 30132.017743  Resp: 30132.017743  [multiMatchCost=0.000000]
SM Join
  SM cost: 30132.017743 
     resc: 30132.017743 resc_io: 30055.000000 resc_cpu: 3008222424
     resp: 30132.017743 resp_io: 30055.000000 resp_cpu: 3008222424
  Outer table:  VW_GBF_10  Alias: VW_GBF_10
    resc: 0.000000  card 1.000000  bytes:   deg: 0  resp: 0.000000
  Inner table:  CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
    resc: 4693.390757  card: 1920800.000000  bytes:   deg: 1  resp: 4693.390757
    using dmeth: 2  #groups: 1
    Cost per ptn: 4.933076  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 1  probefrag: 15476  ppasses: 1
  Hash join: Resc: 4698.323833  Resp: 4698.323833  [multiMatchCost=0.000000]
HA Join
  HA cost: 4698.323833  
     resc: 4698.323833 resc_io: 4675.000000 resc_cpu: 911001476
     resp: 4698.323833 resp_io: 4675.000000 resp_cpu: 911001476
GROUP BY sort

GROUP BY/Correlated Subquery Filter adjustment factor: 0.088388
GROUP BY cardinality:  1.000000, TABLE cardinality:  1.000000
Vector group by not costed because no SYS_OP_XLATE_USE in group by.
kdmoGByPushdownValid: more than one table in group by    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     162 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39058824
      Total Temp space used: 0
Best:: JoinMethod: NestedLoop
       Cost: 3.000421  Degree: 1  Resp: 3.000421  Card: 1.000000 Bytes: 
***********************
Best so far:  Table#: 0  cost: 5.000000  card: 1.000000  bytes: 84.000000
              Table#: 1  cost: 3.000421  card: 1.000000  bytes: 138.000000
***********************

*********************************
Number of join permutations tried: 1
*********************************
Enumerating distribution method (advanced)
--- Distribution method for 
join between VW_GBF_10[VW_GBF_10](serial) and CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS](serial); jm = 14; right side access path = IndexUnique
kkopqIsSerialJoin: serial NLJ: both inputs serial
---- serial NL-Join -> SERIAL

(newjo-save)    [1 0 ]

GROUP BY/Correlated Subquery Filter adjustment factor: 0.088388
GROUP BY cardinality:  1.000000, TABLE cardinality:  1.000000
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     162 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39058824
      Total Temp space used: 0
LORE: Or-Expansion validity checks failed on query block SEL$DAF89EE2 (#1) because Cost based OR expansion enabled
Transfer Optimizer annotations for query block SEL$DAF89EE2 (#1)
Final cost for query block SEL$DAF89EE2 (#1) - All Rows Plan:
  Best join order: 1
  Cost: 3.000421  Degree: 1  Card: 1.000000  Bytes: 138.000000
  Resc: 3.000421  Resc_io: 2.000000  Resc_cpu: 39075276
  Resp: 3.000421  Resp_io: 2.000000  Resc_cpu: 39075276
kkoqbc-subheap (delete addr=0x7f0471ea9ee0, in-use=37888, alloc=49272)
kkoqbc-end:
        :
    call(in-use=1546584, alloc=1605392), compile(in-use=3373384, alloc=3375576), execution(in-use=54040, alloc=56760)

kkoqbc: finish optimizing query block SEL$DAF89EE2 (#1)
First K Rows: K = 1.00, N = 120.00
First K Rows: K = 1.00, N = 69.00
First K Rows: K = 1.00, N = 37.00
First K Rows: Setup end
***********************
CBQT: Looking for cost annotations for query block SEL$3, key = SEL$3_00010000_0
CBQT: Replaced cost annotations in query block SEL$3.
CBQT: Looking for cost annotations for query block SEL$4, key = SEL$4_00010000_0
CBQT: Replaced cost annotations in query block SEL$4.
CBQT: Looking for cost annotations for query block SEL$2, key = SEL$2_00010000_0
CBQT: Replaced cost annotations in query block SEL$2.
CBQT: Looking for cost annotations for query block SEL$ACBFB8CC, key = SEL$ACBFB8CC_00008040_2
CBQT: Replaced cost annotations in query block SEL$ACBFB8CC.
CBQT: Looking for cost annotations for query block SEL$DAF89EE2, key = SEL$DAF89EE2_00000040_0
CBQT: Could not find stored cost annotations.
kkoqbc: optimizing query block SEL$3 (#4)
        
        :
    call(in-use=1545336, alloc=1605392), compile(in-use=3374568, alloc=3375576), execution(in-use=54040, alloc=56760)

kkoqbc-end:
        :
    call(in-use=1545336, alloc=1605392), compile(in-use=3374568, alloc=3375576), execution(in-use=54040, alloc=56760)

kkoqbc: finish optimizing query block SEL$3 (#4)
kkoqbc: optimizing query block SEL$4 (#3)
        
        :
    call(in-use=1545336, alloc=1605392), compile(in-use=3374664, alloc=3375576), execution(in-use=54040, alloc=56760)

kkoqbc-end:
        :
    call(in-use=1545336, alloc=1605392), compile(in-use=3374664, alloc=3375576), execution(in-use=54040, alloc=56760)

kkoqbc: finish optimizing query block SEL$4 (#3)
kkoqbc: optimizing query block SEL$2 (#2)
        
        :
    call(in-use=1545336, alloc=1605392), compile(in-use=3374760, alloc=3375576), execution(in-use=54040, alloc=56760)

kkoqbc-end:
        :
    call(in-use=1545336, alloc=1605392), compile(in-use=3374760, alloc=3375576), execution(in-use=54040, alloc=56760)

kkoqbc: finish optimizing query block SEL$2 (#2)
kkoqbc: optimizing query block SEL$ACBFB8CC (#14)
        
        :
    call(in-use=1545336, alloc=1605392), compile(in-use=3374856, alloc=3375576), execution(in-use=54040, alloc=56760)

kkoqbc-end:
        :
    call(in-use=1545336, alloc=1605392), compile(in-use=3374856, alloc=3375576), execution(in-use=54040, alloc=56760)

kkoqbc: finish optimizing query block SEL$ACBFB8CC (#14)
kkoqbc: optimizing query block SEL$DAF89EE2 (#1)
        
        :
    call(in-use=1545336, alloc=1605392), compile(in-use=3374856, alloc=3375576), execution(in-use=54040, alloc=56760)

kkoqbc-subheap (create addr=0x7f0471ea9ee0)
****************
QUERY BLOCK TEXT
****************
SELECT /*query10*/
    cd_gender,
    cd_marital_status,
    cd_education_status,
    COUNT(*) cnt1,
    cd_purchase_estimate,
    COUNT(*) cnt2,
    cd_credit_rating,
    COUNT(*) cnt3,
    cd_dep_count,
    COUNT(*) cnt4,
    cd_dep_employed_count,
    COUNT(*) cnt5,
    cd_dep_college_count,
    COUNT(*) cnt6
FROM
    customer c,
    customer_address ca,
    customer_demographics
WHERE
    -- join predicates
        c.c_current_addr_sk = ca.ca_address_sk
    AND cd_demo_sk = c.c_current_cdemo_sk
    -- filter predicates
    AND ca.ca_county IN (
        'Chouteau County',
        'Dixie County',
        'Harrisonburg city',
        'Lowndes County',
        'Dinwiddie County'
    )
    -- filter predicate (subquery)
    AND EXISTS (
        SELECT
            *
        FROM
            store_sales ss,
            date_dim
        WHERE
            c.c_customer_sk = ss.ss_customer_sk
            AND ss_sold_date_sk = d_date_sk
            AND d_year = 2001
            AND d_moy BETWEEN 1 AND 1 + 3
            AND ( EXISTS (
                SELECT
                    *
                FROM
                    web_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = ws_bill_customer_sk
                    AND ws_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            )
                  OR EXISTS (
                SELECT
                    *
                FROM
                    catalog_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = cs_ship_customer_sk
                    AND cs_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            ) )
    )
GROUP BY
    cd_gender,
    cd_marital_status,
    cd_education_status,
    cd_purchase_estimate,
    cd_credit_rating,
    cd_dep_count,
    cd_dep_employed_count,
    cd_dep_college_count

---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$DAF89EE2 nbfros=2 flg=0
  fro(0): flg=0 objn=74170 hint_alias="CUSTOMER_DEMOGRAPHICS"@"SEL$1"
  fro(1): flg=1 objn=0 hint_alias="VW_GBF_10"@"SEL$8E90090D"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3255 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
  #Rows: 1920800  SSZ: 0  LGR: 0  #Blks:  17254  AvgRowLen:  54.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#9): CD_DEP_COLLEGE_COUNT(NUMBER)
    AvgLen: 3 NDV: 6 Nulls: 0 Density: 0.166667 Min: 0.000000 Max: 5.000000
  Column (#8): CD_DEP_EMPLOYED_COUNT(NUMBER)
    AvgLen: 3 NDV: 6 Nulls: 0 Density: 0.166667 Min: 0.000000 Max: 5.000000
  Column (#7): CD_DEP_COUNT(NUMBER)
    AvgLen: 3 NDV: 6 Nulls: 0 Density: 0.166667 Min: 0.000000 Max: 5.000000
  Column (#6): CD_CREDIT_RATING(CHARACTER)
    AvgLen: 11 NDV: 4 Nulls: 0 Density: 0.250000
  Column (#5): CD_PURCHASE_ESTIMATE(NUMBER)
    AvgLen: 4 NDV: 9500 Nulls: 0 Density: 0.000105 Min: 500.000000 Max: 9999.000000
  Column (#4): CD_EDUCATION_STATUS(CHARACTER)
    AvgLen: 21 NDV: 7 Nulls: 0 Density: 0.070771
    Histogram: Freq  #Bkts: 7  UncompBkts: 1920800  EndPtVals: 7  ActualVal: yes
  Column (#3): CD_MARITAL_STATUS(CHARACTER)
    AvgLen: 2 NDV: 5 Nulls: 0 Density: 0.098953
    Histogram: Freq  #Bkts: 5  UncompBkts: 1920800  EndPtVals: 5  ActualVal: yes
  Column (#2): CD_GENDER(CHARACTER)
    AvgLen: 2 NDV: 2 Nulls: 0 Density: 0.249925
    Histogram: Freq  #Bkts: 2  UncompBkts: 1920800  EndPtVals: 2  ActualVal: no 
  Column (#1): CD_DEMO_SK(NUMBER)
    AvgLen: 6 NDV: 1920800 Nulls: 0 Density: 0.000001 Min: 1.000000 Max: 1920800.000000
Index Stats::
  Index: CD_DEMO_PK_IDX  Col#: 1
  LVLS: 2  #LB: 4138  #DK: 1920800  LB/K: 1.00  DB/K: 1.00  CLUF: 795806.00  NRW: 1920800.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table: VW_GBF_10  Alias: VW_GBF_10  (NOT ANALYZED)
  #Rows: 0  SSZ: 0  LGR: 0  #Blks:  0  AvgRowLen:  0.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 0
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): ITEM_1(NUMBER)
    AvgLen: 6 NDV: 772544 Nulls: 0 Density: 0.000001 Min: 18.000000 Max: 1920799.000000
try to generate single-table filter predicates from ORs for query block SEL$DAF89EE2 (#1)
finally: "CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK"="VW_GBF_10"."ITEM_1"

=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$DAF89EE2 (#1)
Applicable DS directives:
   dirid = 7754152966831092939, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {EC(74170)[3, 4]}
Checking valid directives for the query block
  SPD: Return code in qosdDSDirSetup: NODIR, estType = GROUP_BY
  SPD: Return code in qosdDSDirSetup: NODIR, estType = QUERY_BLOCK
Return code in qosdSetupDirCtx4QB: EXISTS
=====================================
SPD: END context at query block level
=====================================
Access path analysis for VW_GBF_10

Access path analysis for CUSTOMER_DEMOGRAPHICS
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS] 
  SPD: Return code in qosdDSDirSetup: NODIR, estType = TABLE
  Table: CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
    Card: Original: 1920800.000000  Rounded: 1920800  Computed: 1920800.000000  Non Adjusted: 1920800.000000
  Scan IO  Cost (Disk) =   4675.000000
  Scan CPU Cost (Disk) =   718321325.760000
  Total Scan IO  Cost  =   4675.000000 (scan (Disk))
                       =   4675.000000
  Total Scan CPU  Cost =   718321325.760000 (scan (Disk))
                       =   718321325.760000
  Access Path: TableScan
    Cost:  4693.390757  Resp: 4693.390757  Degree: 0
      Cost_io: 4675.000000  Cost_cpu: 718321326
      Resp_io: 4675.000000  Resp_cpu: 718321326
  Best:: AccessPath: TableScan
         Cost: 4693.390757  Degree: 1  Resp: 4693.390757  Card: 1920800.000000  Bytes: 0.000000

Grouping column cardinality [ CD_GENDER]    2
Grouping column cardinality [CD_MARITAL]    5
Grouping column cardinality [CD_EDUCATI]    7
Grouping column cardinality [CD_PURCHAS]    9500
Grouping column cardinality [CD_CREDIT_]    4
Grouping column cardinality [CD_DEP_COU]    6
Grouping column cardinality [CD_DEP_EMP]    6
Grouping column cardinality [CD_DEP_COL]    6
***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE:  Bypassed; QB is not duplicate insignificant SEL$DAF89EE2 (#1)
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  VW_GBF_10[VW_GBF_10]#0  CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS]#1

***************
Now joining: CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS]#1
***************
NL Join
  Outer table: Card: 1.000000  Cost: 29998.814031  Resp: 29998.814031  Degree: 1  Bytes: 
Access path analysis for CUSTOMER_DEMOGRAPHICS
  Scan IO  Cost (Disk) =   4675.000000
  Scan CPU Cost (Disk) =   718321325.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000001 flag = 2048  ("CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK"="VW_GBF_10"."ITEM_1")
  Total Scan IO  Cost  =   4675.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 1920800.000000 (#rows))
                       =   4675.000000
  Total Scan CPU  Cost =   718321325.760000 (scan (Disk))
                         + 96040000.000000 (cpu filter eval) (= 50.000000 (per row) * 1920800.000000 (#rows))
                       =   814361325.760000
  Inner table: CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
  Access Path: TableScan
    NL Join:  Cost: 34694.663644  Resp: 34694.663644  Degree: 1
      Cost_io: 34644.787726  Cost_cpu: 1948094667
      Resp_io: 34644.787726  Resp_cpu: 1948094667
 ****** Costing Index CD_DEMO_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: CD_DEMO_PK_IDX
    resc_io: 2.000000  resc_cpu: 16453
    ix_sel: 5.2062e-07  ix_sel_with_filters: 5.2062e-07 
    NL Join : Cost: 30000.814453  Resp: 30000.814453  Degree: 1
      Cost_io: 29971.787726  Cost_cpu: 1133749794
      Resp_io: 29971.787726  Resp_cpu: 1133749794
 ****** Costing Index CD_DEMO_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: CD_DEMO_PK_IDX
    resc_io: 2.000000  resc_cpu: 16453
    ix_sel: 5.2062e-07  ix_sel_with_filters: 5.2062e-07 
    NL Join : Cost: 30000.814453  Resp: 30000.814453  Degree: 1
      Cost_io: 29971.787726  Cost_cpu: 1133749794
      Resp_io: 29971.787726  Resp_cpu: 1133749794

  Best NL cost: 30000.814453
          resc: 30000.814453  resc_io: 29971.787726  resc_cpu: 1133749794
          resp: 30000.814453  resp_io: 29971.787726  resc_cpu: 1133749794
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Join Card:  1.000000 = outer (1.000000) * inner (1920800.000000) * sel (5.2062e-07)
Join Card - Rounded: 1 Computed: 1.000000
Grouping column cardinality [ CD_GENDER]    2
Grouping column cardinality [CD_MARITAL]    5
Grouping column cardinality [CD_EDUCATI]    7
Grouping column cardinality [CD_PURCHAS]    9500
Grouping column cardinality [CD_CREDIT_]    4
Grouping column cardinality [CD_DEP_COU]    6
Grouping column cardinality [CD_DEP_EMP]    6
Grouping column cardinality [CD_DEP_COL]    6
  Outer table:  VW_GBF_10  Alias: VW_GBF_10
    resc: 29998.814031  card 1.000000  bytes:   deg: 1  resp: 29998.814031
  Inner table:  CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
    resc: 4693.390757  card: 1920800.000000  bytes:   deg: 1  resp: 4693.390757
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     103 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39058824
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 16462 Row size:     70 Total Rows:        1920800
      Initial runs:   2 Merge passes:  1 IO Cost / pass:       8918
      Total IO sort cost: 25380.000000      Total CPU sort cost: 2250842275
      Total Temp space used: 294134000
  SM join: Resc: 60130.831774  Resp: 60130.831774  [multiMatchCost=0.000000]
SM Join
  SM cost: 60130.831774 
     resc: 60130.831774 resc_io: 60024.787726 resc_cpu: 4141955765
     resp: 60130.831774 resp_io: 60024.787726 resp_cpu: 4141955765
  Outer table:  VW_GBF_10  Alias: VW_GBF_10
    resc: 29998.814031  card 1.000000  bytes:   deg: 1  resp: 29998.814031
  Inner table:  CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
    resc: 4693.390757  card: 1920800.000000  bytes:   deg: 1  resp: 4693.390757
    using dmeth: 2  #groups: 1
    Cost per ptn: 4.933076  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 1  probefrag: 15476  ppasses: 1
  Hash join: Resc: 34697.137864  Resp: 34697.137864  [multiMatchCost=0.000000]
HA Join
  HA cost: 34697.137864  
     resc: 34697.137864 resc_io: 34644.787726 resc_cpu: 2044734817
     resp: 34697.137864 resp_io: 34644.787726 resp_cpu: 2044734817
GROUP BY sort

GROUP BY/Correlated Subquery Filter adjustment factor: 0.088388
GROUP BY cardinality:  1.000000, TABLE cardinality:  1.000000
Vector group by not costed because no SYS_OP_XLATE_USE in group by.
kdmoGByPushdownValid: more than one table in group by    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     162 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39058824
      Total Temp space used: 0
Best:: JoinMethod: NestedLoop
       Cost: 30001.814453  Degree: 1  Resp: 30001.814453  Card: 1.000000 Bytes: 
***********************
Best so far:  Table#: 0  cost: 29998.814031  card: 1.000000  bytes: 84.000000
              Table#: 1  cost: 30001.814453  card: 1.000000  bytes: 138.000000
***********************
Join order[2]:  CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS]#1  VW_GBF_10[VW_GBF_10]#0

***************
Now joining: VW_GBF_10[VW_GBF_10]#0
***************
NL Join
  Outer table: Card: 1920800.000000  Cost: 4693.390757  Resp: 4693.390757  Degree: 1  Bytes: 
Access path analysis for VW_GBF_10
  Inner table: VW_GBF_10  Alias: VW_GBF_10
  Access Path: TableScan
    NL Join:  Cost: 57621726684.727562  Resp: 57621726684.727562  Degree: 1
      Cost_io: 57565972938.867218  Cost_cpu: 2177675720662901
      Resp_io: 57565972938.867218  Resp_cpu: 2177675720662901

  Best NL cost: 57621726684.727562
          resc: 57621726684.727562  resc_io: 57565972938.867218  resc_cpu: 2177675720662901
          resp: 57621726684.727562  resp_io: 57565972938.867218  resc_cpu: 2177675720662901
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Join Card:  1.000000 = outer (1920800.000000) * inner (1.000000) * sel (5.2062e-07)
Join Card - Rounded: 1 Computed: 1.000000
Grouping column cardinality [ CD_GENDER]    2
Grouping column cardinality [CD_MARITAL]    5
Grouping column cardinality [CD_EDUCATI]    7
Grouping column cardinality [CD_PURCHAS]    9500
Grouping column cardinality [CD_CREDIT_]    4
Grouping column cardinality [CD_DEP_COU]    6
Grouping column cardinality [CD_DEP_EMP]    6
Grouping column cardinality [CD_DEP_COL]    6
  Outer table:  CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
    resc: 4693.390757  card 1920800.000000  bytes:   deg: 1  resp: 4693.390757
  Inner table:  VW_GBF_10  Alias: VW_GBF_10
    resc: 29998.814031  card: 1.000000  bytes:   deg: 1  resp: 29998.814031
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 16462 Row size:     70 Total Rows:        1920800
      Initial runs:   2 Merge passes:  1 IO Cost / pass:       8918
      Total IO sort cost: 25380.000000      Total CPU sort cost: 2250842275
      Total Temp space used: 294134000
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     103 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39058824
      Total Temp space used: 0
  SM join: Resc: 60130.831774  Resp: 60130.831774  [multiMatchCost=0.000000]
SM Join
  SM cost: 60130.831774 
     resc: 60130.831774 resc_io: 60024.787726 resc_cpu: 4141955765
     resp: 60130.831774 resp_io: 60024.787726 resp_cpu: 4141955765
SM Join (with index on outer)
 ****** Costing Index CD_DEMO_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (FullScan)
    Index: CD_DEMO_PK_IDX
    resc_io: 799946.000000  resc_cpu: 6772415442
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 800119.390154  Resp: 800119.390154  Degree: 1
  Outer table:  CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
    resc: 800119.390154  card 1920800.000000  bytes:   deg: 1  resp: 800119.390154
  Inner table:  VW_GBF_10  Alias: VW_GBF_10
    resc: 29998.814031  card: 1.000000  bytes:   deg: 1  resp: 29998.814031
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     103 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39058824
      Total Temp space used: 0
  SM join: Resc: 830119.204186  Resp: 830119.204186  [multiMatchCost=0.000000]
  Outer table:  CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
    resc: 4693.390757  card 1920800.000000  bytes:   deg: 1  resp: 4693.390757
  Inner table:  VW_GBF_10  Alias: VW_GBF_10
    resc: 29998.814031  card: 1.000000  bytes:   deg: 1  resp: 29998.814031
    using dmeth: 2  #groups: 1
    Cost per ptn: 6001.017523  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 15476  probefrag: 1  ppasses: 1
  Hash join: Resc: 40693.222311  Resp: 40693.222311  [multiMatchCost=0.000000]
  Outer table:  VW_GBF_10  Alias: VW_GBF_10
    resc: 29998.814031  card 1.000000  bytes:   deg: 1  resp: 29998.814031
  Inner table:  CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
    resc: 4693.390757  card: 1920800.000000  bytes:   deg: 1  resp: 4693.390757
    using dmeth: 2  #groups: 1
    Cost per ptn: 4.933076  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 1  probefrag: 15476  ppasses: 1
  Hash join: Resc: 34697.137864  Resp: 34697.137864  [multiMatchCost=0.000000]
HA Join
  HA cost: 34697.137864 swapped 
     resc: 34697.137864 resc_io: 34644.787726 resc_cpu: 2044734817
     resp: 34697.137864 resp_io: 34644.787726 resp_cpu: 2044734817
GROUP BY sort

GROUP BY/Correlated Subquery Filter adjustment factor: 0.088388
GROUP BY cardinality:  1.000000, TABLE cardinality:  1.000000
Vector group by not costed because no SYS_OP_XLATE_USE in group by.
kdmoGByPushdownValid: more than one table in group by    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     162 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39058824
      Total Temp space used: 0
Join order aborted: cost > best plan cost
***********************
(newjo-stop-1) k:0, spcnt:0, perm:2, maxperm:2000

*********************************
Number of join permutations tried: 2
*********************************
Enumerating distribution method (advanced)
--- Distribution method for 
join between VW_GBF_10[VW_GBF_10](serial) and CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS](serial); jm = 14; right side access path = IndexUnique
kkopqIsSerialJoin: serial NLJ: both inputs serial
---- serial NL-Join -> SERIAL

(newjo-save)    [1 0 ]

GROUP BY/Correlated Subquery Filter adjustment factor: 0.088388
GROUP BY cardinality:  1.000000, TABLE cardinality:  1.000000
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     162 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39058824
      Total Temp space used: 0
LORE: Or-Expansion validity checks failed on query block SEL$DAF89EE2 (#1) because Cost based OR expansion enabled
Transfer Optimizer annotations for query block SEL$DAF89EE2 (#1)
Final cost for query block SEL$DAF89EE2 (#1) - All Rows Plan:
  Best join order: 1
  Cost: 30001.814453  Degree: 1  Card: 1.000000  Bytes: 276.000000
  Resc: 30001.814453  Resc_io: 29971.787726  Resc_cpu: 1172808618
  Resp: 30001.814453  Resp_io: 29971.787726  Resc_cpu: 1172808618
kkoqbc-subheap (delete addr=0x7f0471ea9ee0, in-use=37952, alloc=49272)
kkoqbc-end:
        :
    call(in-use=1554144, alloc=1621760), compile(in-use=3376072, alloc=3379720), execution(in-use=54040, alloc=56760)

kkoqbc: finish optimizing query block SEL$DAF89EE2 (#1)
CBQT: Saved costed qb# 4 (SEL$3), key = SEL$3_00010000_0
CBQT: Saved costed qb# 3 (SEL$4), key = SEL$4_00010000_0
CBQT: Saved costed qb# 2 (SEL$2), key = SEL$2_00010000_0
CBQT: Saved costed qb# 14 (SEL$ACBFB8CC), key = SEL$ACBFB8CC_00008040_2
CBQT: Saved costed qb# 1 (SEL$DAF89EE2), key = SEL$DAF89EE2_00000040_0
GBP: Updated best state, Cost = 30001.814453
GBP: Starting iteration 9, state space = (1,2,3) : (C,F,F)
Registered qb: SEL$4DBD13CE 0x71f4ec20 (QUERY BLOCK TABLES CHANGED SEL$FD007FC2)
---------------------
QUERY BLOCK SIGNATURE
---------------------
  signature (): qb_name=SEL$4DBD13CE nbfros=2 flg=0
    fro(0): flg=5 objn=0 hint_alias="VW_GBF_12"@"SEL$4DBD13CE"
    fro(1): flg=1 objn=0 hint_alias="VW_GBC_11"@"SEL$FD007FC2"

Registered qb: SEL$5A0F6FA7 0x71fca328 (SPLIT/MERGE QUERY BLOCKS SEL$4DBD13CE)
---------------------
QUERY BLOCK SIGNATURE
---------------------
  signature (): qb_name=SEL$5A0F6FA7 nbfros=2 flg=0
    fro(0): flg=0 objn=74168 hint_alias="C"@"SEL$1"
    fro(1): flg=0 objn=74169 hint_alias="CA"@"SEL$1"

QB before group-by removal:******* UNPARSED QUERY IS *******
SELECT "CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK" "ITEM_1",COUNT(*) "ITEM_2",COUNT(*) "ITEM_3",COUNT(*) "ITEM_4",COUNT(*) "ITEM_5",COUNT(*) "ITEM_6",COUNT(*) "ITEM_7","CUSTOMER_DEMOGRAPHICS"."CD_GENDER" "ITEM_8","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS" "ITEM_9","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS" "ITEM_10","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE" "ITEM_11","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING" "ITEM_12","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT" "ITEM_13","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT" "ITEM_14","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT" "ITEM_15" FROM "TPCDS"."CUSTOMER_DEMOGRAPHICS" "CUSTOMER_DEMOGRAPHICS" GROUP BY "CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK","CUSTOMER_DEMOGRAPHICS"."CD_GENDER","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT"
QB before group-by elimination:******* UNPARSED QUERY IS *******
SELECT "CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK" "ITEM_1",COUNT(*) "ITEM_2",COUNT(*) "ITEM_3",COUNT(*) "ITEM_4",COUNT(*) "ITEM_5",COUNT(*) "ITEM_6",COUNT(*) "ITEM_7","CUSTOMER_DEMOGRAPHICS"."CD_GENDER" "ITEM_8","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS" "ITEM_9","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS" "ITEM_10","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE" "ITEM_11","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING" "ITEM_12","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT" "ITEM_13","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT" "ITEM_14","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT" "ITEM_15" FROM "TPCDS"."CUSTOMER_DEMOGRAPHICS" "CUSTOMER_DEMOGRAPHICS" GROUP BY "CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK","CUSTOMER_DEMOGRAPHICS"."CD_GENDER","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT"
QB after group-by elimination:******* UNPARSED QUERY IS *******
SELECT "CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK" "ITEM_1",1 "ITEM_2",1 "ITEM_3",1 "ITEM_4",1 "ITEM_5",1 "ITEM_6",1 "ITEM_7","CUSTOMER_DEMOGRAPHICS"."CD_GENDER" "ITEM_8","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS" "ITEM_9","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS" "ITEM_10","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE" "ITEM_11","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING" "ITEM_12","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT" "ITEM_13","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT" "ITEM_14","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT" "ITEM_15" FROM "TPCDS"."CUSTOMER_DEMOGRAPHICS" "CUSTOMER_DEMOGRAPHICS"
QB after group-by removal:******* UNPARSED QUERY IS *******
SELECT "CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK" "ITEM_1",1 "ITEM_2",1 "ITEM_3",1 "ITEM_4",1 "ITEM_5",1 "ITEM_6",1 "ITEM_7","CUSTOMER_DEMOGRAPHICS"."CD_GENDER" "ITEM_8","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS" "ITEM_9","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS" "ITEM_10","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE" "ITEM_11","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING" "ITEM_12","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT" "ITEM_13","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT" "ITEM_14","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT" "ITEM_15" FROM "TPCDS"."CUSTOMER_DEMOGRAPHICS" "CUSTOMER_DEMOGRAPHICS"
Registered qb: SEL$67C23549 0x71f4ec20 (UNKNOWN QUERY BLOCK ORIGIN SEL$1; SEL$1; LIST LIST 11)
---------------------
QUERY BLOCK SIGNATURE
---------------------
  signature (): qb_name=SEL$67C23549 nbfros=2 flg=0
    fro(0): flg=1 objn=0 hint_alias="VW_GBF_12"@"SEL$4DBD13CE"
    fro(1): flg=1 objn=0 hint_alias="VW_GBC_11"@"SEL$FD007FC2"

GBP: Transformed query
******* UNPARSED QUERY IS *******
SELECT "VW_GBC_11"."ITEM_8" "CD_GENDER","VW_GBC_11"."ITEM_9" "CD_MARITAL_STATUS","VW_GBC_11"."ITEM_10" "CD_EDUCATION_STATUS",NVL(SUM("VW_GBC_11"."ITEM_2"*"VW_GBF_12"."ITEM_2"),0) "CNT1","VW_GBC_11"."ITEM_11" "CD_PURCHASE_ESTIMATE",NVL(SUM("VW_GBC_11"."ITEM_3"*"VW_GBF_12"."ITEM_3"),0) "CNT2","VW_GBC_11"."ITEM_12" "CD_CREDIT_RATING",NVL(SUM("VW_GBC_11"."ITEM_4"*"VW_GBF_12"."ITEM_4"),0) "CNT3","VW_GBC_11"."ITEM_13" "CD_DEP_COUNT",NVL(SUM("VW_GBC_11"."ITEM_5"*"VW_GBF_12"."ITEM_5"),0) "CNT4","VW_GBC_11"."ITEM_14" "CD_DEP_EMPLOYED_COUNT",NVL(SUM("VW_GBC_11"."ITEM_6"*"VW_GBF_12"."ITEM_6"),0) "CNT5","VW_GBC_11"."ITEM_15" "CD_DEP_COLLEGE_COUNT",NVL(SUM("VW_GBC_11"."ITEM_7"*"VW_GBF_12"."ITEM_7"),0) "CNT6" FROM  (SELECT "C"."C_CURRENT_CDEMO_SK" "ITEM_1",COUNT(*) "ITEM_2",COUNT(*) "ITEM_3",COUNT(*) "ITEM_4",COUNT(*) "ITEM_5",COUNT(*) "ITEM_6",COUNT(*) "ITEM_7" FROM "TPCDS"."CUSTOMER_ADDRESS" "CA","TPCDS"."CUSTOMER" "C" WHERE ("CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County') AND "C"."C_CURRENT_ADDR_SK"="CA"."CA_ADDRESS_SK" AND  EXISTS (SELECT 0 FROM "TPCDS"."STORE_SALES" "SS","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="SS"."SS_CUSTOMER_SK" AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3 AND ( EXISTS (SELECT 0 FROM "TPCDS"."WEB_SALES" "WEB_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="WEB_SALES"."WS_BILL_CUSTOMER_SK" AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3) OR  EXISTS (SELECT 0 FROM "TPCDS"."CATALOG_SALES" "CATALOG_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="CATALOG_SALES"."CS_SHIP_CUSTOMER_SK" AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3))) GROUP BY "C"."C_CURRENT_CDEMO_SK") "VW_GBF_12", (SELECT "CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK" "ITEM_1",1 "ITEM_2",1 "ITEM_3",1 "ITEM_4",1 "ITEM_5",1 "ITEM_6",1 "ITEM_7","CUSTOMER_DEMOGRAPHICS"."CD_GENDER" "ITEM_8","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS" "ITEM_9","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS" "ITEM_10","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE" "ITEM_11","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING" "ITEM_12","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT" "ITEM_13","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT" "ITEM_14","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT" "ITEM_15" FROM "TPCDS"."CUSTOMER_DEMOGRAPHICS" "CUSTOMER_DEMOGRAPHICS") "VW_GBC_11" WHERE "VW_GBC_11"."ITEM_1"="VW_GBF_12"."ITEM_1" GROUP BY "VW_GBC_11"."ITEM_8","VW_GBC_11"."ITEM_9","VW_GBC_11"."ITEM_10","VW_GBC_11"."ITEM_11","VW_GBC_11"."ITEM_12","VW_GBC_11"."ITEM_13","VW_GBC_11"."ITEM_14","VW_GBC_11"."ITEM_15" ORDER BY "VW_GBC_11"."ITEM_8","VW_GBC_11"."ITEM_9","VW_GBC_11"."ITEM_10","VW_GBC_11"."ITEM_11","VW_GBC_11"."ITEM_12","VW_GBC_11"."ITEM_13","VW_GBC_11"."ITEM_14","VW_GBC_11"."ITEM_15"
FPD: Considering simple filter push in query block SEL$67C23549 (#1)
"VW_GBC_11"."ITEM_1"="VW_GBF_12"."ITEM_1"
try to generate transitive predicate from check constraints for query block SEL$67C23549 (#1)
finally: "VW_GBC_11"."ITEM_1"="VW_GBF_12"."ITEM_1"

FPD: Considering simple filter push in query block SEL$5A0F6FA7 (#16)
("CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County') AND "C"."C_CURRENT_ADDR_SK"="CA"."CA_ADDRESS_SK" AND  EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM")
FPD: Considering simple filter push in query block SEL$2 (#2)
"SS"."SS_CUSTOMER_SK"=:B1 AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND ( EXISTS (SELECT 0 FROM "WEB_SALES" "WEB_SALES","DATE_DIM" "DATE_DIM") OR  EXISTS (SELECT 0 FROM "CATALOG_SALES" "CATALOG_SALES","DATE_DIM" "DATE_DIM"))
FPD: Considering simple filter push in query block SEL$3 (#4)
"WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B1 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4
try to generate transitive predicate from check constraints for query block SEL$3 (#4)
finally: "WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B1 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1

FPD:   transitive predicates are generated in query block SEL$3 (#4)
"WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B1 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1
FPD: Considering simple filter push in query block SEL$4 (#3)
"CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B1 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4
try to generate transitive predicate from check constraints for query block SEL$4 (#3)
finally: "CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B1 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1

FPD:   transitive predicates are generated in query block SEL$4 (#3)
"CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B1 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1
try to generate transitive predicate from check constraints for query block SEL$2 (#2)
finally: "SS"."SS_CUSTOMER_SK"=:B1 AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND ( EXISTS (SELECT 0 FROM "WEB_SALES" "WEB_SALES","DATE_DIM" "DATE_DIM") OR  EXISTS (SELECT 0 FROM "CATALOG_SALES" "CATALOG_SALES","DATE_DIM" "DATE_DIM"))

try to generate transitive predicate from check constraints for query block SEL$5A0F6FA7 (#16)
finally: ("CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County') AND "C"."C_CURRENT_ADDR_SK"="CA"."CA_ADDRESS_SK" AND  EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM")

OJE: Begin: find best directive for query block SEL$5A0F6FA7 (#16)
OJE: End: finding best directive for query block SEL$5A0F6FA7 (#16)
FPD: Considering simple filter push in query block SEL$4C89B77A (#15)
 ?? 
OJE: Begin: find best directive for query block SEL$4C89B77A (#15)
OJE: End: finding best directive for query block SEL$4C89B77A (#15)
GBP: Costing transformed query.
*************************
First K Rows: Setup begin
kkoqbc: optimizing query block SEL$4C89B77A (#15)
        
        :
    call(in-use=1560456, alloc=1588816), compile(in-use=3572920, alloc=3577048), execution(in-use=55240, alloc=56760)

kkoqbc-subheap (create addr=0x7f0471f29ee0)
****************
QUERY BLOCK TEXT
****************
Not available.
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$4C89B77A nbfros=1 flg=0
  fro(0): flg=0 objn=74170 hint_alias="CUSTOMER_DEMOGRAPHICS"@"SEL$1"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3255 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
  #Rows: 1920800  SSZ: 0  LGR: 0  #Blks:  17254  AvgRowLen:  54.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
Index Stats::
  Index: CD_DEMO_PK_IDX  Col#: 1
  LVLS: 2  #LB: 4138  #DK: 1920800  LB/K: 1.00  DB/K: 1.00  CLUF: 795806.00  NRW: 1920800.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
try to generate single-table filter predicates from ORs for query block SEL$4C89B77A (#15)
=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$4C89B77A (#15)
Applicable DS directives:
   dirid = 7754152966831092939, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {EC(74170)[3, 4]}
Checking valid directives for the query block
  SPD: Return code in qosdDSDirSetup: NODIR, estType = QUERY_BLOCK
Return code in qosdSetupDirCtx4QB: EXISTS
=====================================
SPD: END context at query block level
=====================================
Access path analysis for CUSTOMER_DEMOGRAPHICS
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS] 
  SPD: Return code in qosdDSDirSetup: NODIR, estType = TABLE
  Table: CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
    Card: Original: 1920800.000000  Rounded: 1920800  Computed: 1920800.000000  Non Adjusted: 1920800.000000
  Scan IO  Cost (Disk) =   4675.000000
  Scan CPU Cost (Disk) =   718321325.760000
  Total Scan IO  Cost  =   4675.000000 (scan (Disk))
                       =   4675.000000
  Total Scan CPU  Cost =   718321325.760000 (scan (Disk))
                       =   718321325.760000
  Access Path: TableScan
    Cost:  4693.390757  Resp: 4693.390757  Degree: 0
      Cost_io: 4675.000000  Cost_cpu: 718321326
      Resp_io: 4675.000000  Resp_cpu: 718321326
  Best:: AccessPath: TableScan
         Cost: 4693.390757  Degree: 1  Resp: 4693.390757  Card: 1920800.000000  Bytes: 0.000000

***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE:  Bypassed; QB has a single table SEL$4C89B77A (#15)
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS]#0
***********************
Best so far:  Table#: 0  cost: 4693.390757  card: 1920800.000000  bytes: 103723200.000000
***********************

*********************************
Number of join permutations tried: 1
*********************************
Enumerating distribution method (advanced)

LORE: Or-Expansion validity checks failed on query block SEL$4C89B77A (#15) because Cost based OR expansion enabled
Transfer Optimizer annotations for query block SEL$4C89B77A (#15)
Final cost for query block SEL$4C89B77A (#15) - All Rows Plan:
  Best join order: 1
  Cost: 4693.390757  Degree: 1  Card: 1920800.000000  Bytes: 103723200.000000
  Resc: 4693.390757  Resc_io: 4675.000000  Resc_cpu: 718321326
  Resp: 4693.390757  Resp_io: 4675.000000  Resc_cpu: 718321326
kkoqbc-subheap (delete addr=0x7f0471f29ee0, in-use=24640, alloc=32840)
kkoqbc-end:
        :
    call(in-use=1568000, alloc=1621760), compile(in-use=3589152, alloc=3593240), execution(in-use=55240, alloc=56760)

kkoqbc: finish optimizing query block SEL$4C89B77A (#15)
kkoqbc: optimizing query block SEL$3 (#4)
        
        :
    call(in-use=1565792, alloc=1621760), compile(in-use=3595712, alloc=3597384), execution(in-use=55416, alloc=56760)

kkoqbc-subheap (create addr=0x7f0471f29ee0)
****************
QUERY BLOCK TEXT
****************
SELECT
                    *
                FROM
                    web_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = ws_bill_customer_sk
                    AND ws_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$3 nbfros=2 flg=0
  fro(0): flg=0 objn=74171 hint_alias="DATE_DIM"@"SEL$3"
  fro(1): flg=0 objn=74195 hint_alias="WEB_SALES"@"SEL$3"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3255 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: DATE_DIM  Alias: DATE_DIM
  #Rows: 73049  SSZ: 0  LGR: 0  #Blks:  1510  AvgRowLen:  128.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): D_DATE_SK(NUMBER)
    AvgLen: 6 NDV: 73049 Nulls: 0 Density: 0.000014 Min: 2415022.000000 Max: 2488070.000000
Index Stats::
  Index: D_DATE_PK_IDX  Col#: 1
  LVLS: 1  #LB: 163  #DK: 73049  LB/K: 1.00  DB/K: 1.00  CLUF: 1402.00  NRW: 73049.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table: WEB_SALES  Alias: WEB_SALES  (Using composite stats)
  #Rows: 35969200  SSZ: 0  LGR: 0  #Blks:  829566  AvgRowLen:  167.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
Index Stats::
  Index: WEB_SALES_IDX2  Col#: 5 1
  LVLS: 3  #LB: 130617  #DK: 2992994  LB/K: 1.00  DB/K: 12.00  CLUF: 35969159.00  NRW: 35969200.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
  Index: WEB_SALES_PK_IDX  Col#: 4 18
  LVLS: 2  #LB: 122502  #DK: 35304428  LB/K: 1.00  DB/K: 1.00  CLUF: 35300490.00  NRW: 35304428.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
try to generate single-table filter predicates from ORs for query block SEL$3 (#4)
finally: "WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B1 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4

=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$3 (#4)
Applicable DS directives:
   dirid = 4510913066701158191, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {(74195)[]; (74171)[]}
   dirid = 14910903719618111890, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74195)[5]}
   dirid = 13969931850241126217, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {C(74171)[7, 9]}
   dirid = 13683461771316641482, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74195)[5]; (74171)[7]}
Checking valid directives for the query block
  SPD: Return code in qosdDSDirSetup: NODIR, estType = QUERY_BLOCK
Return code in qosdSetupDirCtx4QB: EXISTS
=====================================
SPD: END context at query block level
=====================================
Access path analysis for WEB_SALES
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for WEB_SALES[WEB_SALES] 
  SPD: Return code in qosdDSDirSetup: NODIR, estType = TABLE

 kkecdn: Single Table Predicate:"WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B1
NOTE: ignoring histogram of column (WEB_SALES.WS_BILL_CUSTOMER_SK)
      used only for incremental stats maintenance
  Column (#5): WS_BILL_CUSTOMER_SK(NUMBER)
    AvgLen: 6 NDV: 973580 Nulls: 0 Density: 0.000001 Min: 2.000000 Max: 1079999.000000
  Estimated selectivity: 1.0271e-06 , col: #5 
  Table: WEB_SALES  Alias: WEB_SALES
    Card: Original: 35969200.000000  Rounded: 37  Computed: 36.945295  Non Adjusted: 36.945295
  Scan IO  Cost (Disk) =   224676.000000
  Scan CPU Cost (Disk) =   14180620495.040001
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000001 flag = 2048  ("WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B1)
  Total Scan IO  Cost  =   224676.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 35969200.000000 (#rows))
                       =   224676.000000
  Total Scan CPU  Cost =   14180620495.040001 (scan (Disk))
                         + 1798460000.000000 (cpu filter eval) (= 50.000000 (per row) * 35969200.000000 (#rows))
                       =   15979080495.040001
  Access Path: TableScan
    Cost:  225085.102964  Resp: 225085.102964  Degree: 0
      Cost_io: 224676.000000  Cost_cpu: 15979080495
      Resp_io: 224676.000000  Resp_cpu: 15979080495
  Access Path: index (index (FFS))
    Index: WEB_SALES_IDX2
    resc_io: 35377.000000  resc_cpu: 7044945128
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  35557.367571  Resp: 35557.367571  Degree: 1
      Cost_io: 35377.000000  Cost_cpu: 7044945128
      Resp_io: 35377.000000  Resp_cpu: 7044945128
 ****** Costing Index WEB_SALES_IDX2
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER

  Estimated selectivity: 1.0271e-06 , col: #5 
  Access Path: index (IndexOnly)
    Index: WEB_SALES_IDX2
    resc_io: 4.000000  resc_cpu: 35886
    ix_sel: 1.0271e-06  ix_sel_with_filters: 1.0271e-06 
    Cost: 4.000919  Resp: 4.000919  Degree: 1
  Best:: AccessPath: IndexRange
  Index: WEB_SALES_IDX2
         Cost: 4.000919  Degree: 1  Resp: 4.000919  Card: 36.945295  Bytes: 0.000000

Access path analysis for DATE_DIM
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for DATE_DIM[DATE_DIM] 
  SPD: Directive valid: dirid = 13969931850241126217, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {C(74171)[7, 9]}
  SPD: Return code in qosdDSDirSetup: EXISTS, estType = TABLE
  Column (#7): 
    NewDensity:0.000007, OldDensity:0.000007 BktCnt:73049.000000, PopBktCnt:73048.000000, PopValCnt:200, NDV:201
  Column (#7): D_YEAR(NUMBER)
    AvgLen: 4 NDV: 201 Nulls: 0 Density: 0.000007 Min: 1900.000000 Max: 2100.000000
    Histogram: Freq  #Bkts: 201  UncompBkts: 73049  EndPtVals: 201  ActualVal: yes
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 


 kkecdn: Single Table Predicate:"DATE_DIM"."D_YEAR"=2001
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY">=1
  Column (#9): 
    NewDensity:0.038666, OldDensity:0.000007 BktCnt:73049.000000, PopBktCnt:73049.000000, PopValCnt:12, NDV:12
  Column (#9): D_MOY(NUMBER)
    AvgLen: 3 NDV: 12 Nulls: 0 Density: 0.038666 Min: 1.000000 Max: 12.000000
    Histogram: Freq  #Bkts: 12  UncompBkts: 73049  EndPtVals: 12  ActualVal: yes
  Estimated selectivity: 1.000000 , endpoint value predicate, col: #9 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY"<=4
  Estimated selectivity: 0.329224 , endpoint value predicate, col: #9 
  Table: DATE_DIM  Alias: DATE_DIM
    Card: Original: 73049.000000  Rounded: 120  Computed: 120.166840  Non Adjusted: 120.166840
  Scan IO  Cost (Disk) =   411.000000
  Scan CPU Cost (Disk) =   33398564.400000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.004997 flag = 2048  ("DATE_DIM"."D_YEAR"=2001)
    io = NOCOST, cpu = 50.000000, sel = 0.329224 flag = 2048  ("DATE_DIM"."D_MOY"<=4)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("DATE_DIM"."D_MOY">=1)
  Total Scan IO  Cost  =   411.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 73049.000000 (#rows))
                       =   411.000000
  Total Scan CPU  Cost =   33398564.400000 (scan (Disk))
                         + 3676708.342003 (cpu filter eval) (= 50.332083 (per row) * 73049.000000 (#rows))
                       =   37075272.742003
  Access Path: TableScan
    Cost:  411.949216  Resp: 411.949216  Degree: 0
      Cost_io: 411.000000  Cost_cpu: 37075273
      Resp_io: 411.000000  Resp_cpu: 37075273
  Best:: AccessPath: TableScan
         Cost: 411.949216  Degree: 1  Resp: 411.949216  Card: 120.166840  Bytes: 0.000000

***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE: Checking validity of partial join eval on query block SEL$3 (#4)
PJE: Passed validity of partial join eval by query block SEL$3 (#4)
number: [0]
PJE: Partial join eval conversion for query block SEL$3 (#4).
PJE: Table marked for partial join eval: DATE_DIM[DATE_DIM]#1
***********************
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  WEB_SALES[WEB_SALES]#0  DATE_DIM[DATE_DIM]#1

***************
Now joining: DATE_DIM[DATE_DIM]#1
***************
NL Join
  Outer table: Card: 36.945295  Cost: 4.000919  Resp: 4.000919  Degree: 1  Bytes: 
Access path analysis for DATE_DIM
  Scan IO  Cost (Disk) =   409.000000
  Scan CPU Cost (Disk) =   33398564.400000
NOTE: ignoring histogram of column (WEB_SALES.WS_SOLD_DATE_SK)
      used only for incremental stats maintenance
  Column (#1): WS_SOLD_DATE_SK(NUMBER)
    AvgLen: 6 NDV: 1839 Nulls: 0 Density: 0.000544 Min: 2450816.000000 Max: 2452641.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.008264 flag = 2048  ("WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK")
    io = NOCOST, cpu = 50.000000, sel = 0.004997 flag = 2048  ("DATE_DIM"."D_YEAR"=2001)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("DATE_DIM"."D_MOY">=1)
    io = NOCOST, cpu = 50.000000, sel = 0.329224 flag = 2048  ("DATE_DIM"."D_MOY"<=4)
  Total Scan IO  Cost  =   409.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 73049.000000 (#rows))
                       =   409.000000
  Total Scan CPU  Cost =   33398564.400000 (scan (Disk))
                         + 3670900.482165 (cpu filter eval) (= 50.252577 (per row) * 73049.000000 (#rows))
                       =   37069464.882165
  Inner table: DATE_DIM  Alias: DATE_DIM
  Access Path: TableScan
    NL Join:  Cost: 15172.116421  Resp: 15172.116421  Degree: 1
      Cost_io: 15137.000000  Cost_cpu: 1371606086
      Resp_io: 15137.000000  Resp_cpu: 1371606086
 ****** Costing Index D_DATE_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: D_DATE_PK_IDX
    resc_io: 1.000000  resc_cpu: 9382
    ix_sel: 1.3689e-05  ix_sel_with_filters: 1.3689e-05 
    NL Join (ordered): Cost: 41.009806  Resp: 41.009806  Degree: 1
      Cost_io: 41.000000  Cost_cpu: 383011
      Resp_io: 41.000000  Resp_cpu: 383011
 ****** Costing Index D_DATE_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 
  Estimated selectivity: 1.000000 , endpoint value predicate, col: #9 
  Estimated selectivity: 0.329224 , endpoint value predicate, col: #9 
  Access Path: index (AllEqUnique)
    Index: D_DATE_PK_IDX
    resc_io: 1.000000  resc_cpu: 9382
    ix_sel: 1.3689e-05  ix_sel_with_filters: 1.3689e-05 
    NL Join (ordered): Cost: 41.009806  Resp: 41.009806  Degree: 1
      Cost_io: 41.000000  Cost_cpu: 383011
      Resp_io: 41.000000  Resp_cpu: 383011

  Best NL cost: 41.009806
          resc: 41.009806  resc_io: 41.000000  resc_cpu: 383011
          resp: 41.009806  resp_io: 41.000000  resc_cpu: 383011
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Capping Semi Join Card of HJ/SMJ by inner = 36.690903
Capping Semi Join Card of HJ/SMJ (no post filters) by inner = 36.690903
Capping Semi Join Card of NL by inner = 36.690903
Capping Semi Join Card of without POSQ by inner = 36.690903
Capping Semi Join Card of non adjusted NSQ by inner = 36.690903
Semi Join Card (capped by inner join):  36.690903 = outer (36.945295) * inner (120.166840) * sel (0.008264)
Join Card - Rounded: 37 Computed: 36.690903
  Outer table:  WEB_SALES  Alias: WEB_SALES
    resc: 4.000919  card 36.945295  bytes:   deg: 1  resp: 4.000919
  Inner table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card: 120.166840  bytes:   deg: 1  resp: 411.949216
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     25 Total Rows:            120
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39096166
      Total Temp space used: 0
  SM join: Resc: 416.951091  Resp: 416.951091  [multiMatchCost=0.000000]
SM Join
  SM cost: 416.951091 
     resc: 416.951091 resc_io: 415.000000 resc_cpu: 76207324
     resp: 416.951091 resp_io: 415.000000 resp_cpu: 76207324
  Outer table:  WEB_SALES  Alias: WEB_SALES
    resc: 4.000919  card 36.945295  bytes:   deg: 1  resp: 4.000919
  Inner table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card: 120.166840  bytes:   deg: 1  resp: 411.949216
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.015811  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 415.965946  Resp: 415.965946  [multiMatchCost=0.000000]
HA Join
  HA cost: 415.965946  
     resc: 415.965946 resc_io: 415.000000 resc_cpu: 37728709
     resp: 415.965946 resp_io: 415.000000 resp_cpu: 37728709
Best:: JoinMethod: NestedLoopSemi
       Cost: 41.009806  Degree: 1  Resp: 41.009806  Card: 36.690903 Bytes: 
***********************
Best so far:  Table#: 0  cost: 4.000919  card: 36.945295  bytes: 444.000000
              Table#: 1  cost: 41.009806  card: 36.690903  bytes: 925.000000
***********************

*********************************
Number of join permutations tried: 1
*********************************
*********************
PJE: Partial join eval conversion for query block SEL$3 (#4).
PJE: Table marked for partial join eval: DATE_DIM[DATE_DIM]#1
***********************
Enumerating distribution method (advanced)
--- Distribution method for 
join between WEB_SALES[WEB_SALES](serial) and DATE_DIM[DATE_DIM](serial); jm = 15; right side access path = IndexUnique
kkopqIsSerialJoin: serial NLJ: both inputs serial
---- serial NL-Join -> SERIAL

(newjo-save)    [1 0 ]
LORE: Or-Expansion validity checks failed on query block SEL$3 (#4) because Cost based OR expansion enabled
Transfer Optimizer annotations for query block SEL$3 (#4)
Final cost for query block SEL$3 (#4) - All Rows Plan:
  Best join order: 1
  Cost: 41.009806  Degree: 1  Card: 37.000000  Bytes: 925.000000
  Resc: 41.009806  Resc_io: 41.000000  Resc_cpu: 383011
  Resp: 41.009806  Resp_io: 41.000000  Resc_cpu: 383011
kkoqbc-subheap (delete addr=0x7f0471f29ee0, in-use=52808, alloc=65704)
kkoqbc-end:
        :
    call(in-use=1604944, alloc=1687440), compile(in-use=3628144, alloc=3632256), execution(in-use=55824, alloc=56760)

kkoqbc: finish optimizing query block SEL$3 (#4)
kkoqbc: optimizing query block SEL$4 (#3)
        
        :
    call(in-use=1602736, alloc=1687440), compile(in-use=3634560, alloc=3636400), execution(in-use=56000, alloc=56760)

kkoqbc-subheap (create addr=0x7f0471f29ee0)
****************
QUERY BLOCK TEXT
****************
SELECT
                    *
                FROM
                    catalog_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = cs_ship_customer_sk
                    AND cs_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$4 nbfros=2 flg=0
  fro(0): flg=0 objn=74185 hint_alias="CATALOG_SALES"@"SEL$4"
  fro(1): flg=0 objn=74171 hint_alias="DATE_DIM"@"SEL$4"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3255 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: DATE_DIM  Alias: DATE_DIM
  #Rows: 73049  SSZ: 0  LGR: 0  #Blks:  1510  AvgRowLen:  128.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): D_DATE_SK(NUMBER)
    AvgLen: 6 NDV: 73049 Nulls: 0 Density: 0.000014 Min: 2415022.000000 Max: 2488070.000000
Index Stats::
  Index: D_DATE_PK_IDX  Col#: 1
  LVLS: 1  #LB: 163  #DK: 73049  LB/K: 1.00  DB/K: 1.00  CLUF: 1402.00  NRW: 73049.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table: CATALOG_SALES  Alias: CATALOG_SALES  (Using composite stats)
  #Rows: 72077400  SSZ: 0  LGR: 0  #Blks:  1645494  AvgRowLen:  168.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
Index Stats::
  Index: CATALOG_SALES_IDX2  Col#: 8 1
  LVLS: 3  #LB: 261734  #DK: 5997411  LB/K: 1.00  DB/K: 12.00  CLUF: 72077362.00  NRW: 72077400.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
  Index: CATALOG_SALES_PK_IDX  Col#: 16 18
  LVLS: 2  #LB: 249644  #DK: 71913105  LB/K: 1.00  DB/K: 1.00  CLUF: 71898009.00  NRW: 71913105.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
try to generate single-table filter predicates from ORs for query block SEL$4 (#3)
finally: "CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B1 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4

=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$4 (#3)
Applicable DS directives:
   dirid = 11267665714990475542, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74185)[8]}
   dirid = 13969931850241126217, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {C(74171)[7, 9]}
   dirid = 2090373381697137251, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {(74185)[]; F(74171)[]}
   dirid = 14483145493039253896, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {(74185)[]; (74171)[]}
Checking valid directives for the query block
  SPD: Return code in qosdDSDirSetup: NODIR, estType = QUERY_BLOCK
Return code in qosdSetupDirCtx4QB: EXISTS
=====================================
SPD: END context at query block level
=====================================
Access path analysis for CATALOG_SALES
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for CATALOG_SALES[CATALOG_SALES] 
  SPD: Return code in qosdDSDirSetup: NODIR, estType = TABLE

 kkecdn: Single Table Predicate:"CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B1
NOTE: ignoring histogram of column (CATALOG_SALES.CS_SHIP_CUSTOMER_SK)
      used only for incremental stats maintenance
  Column (#8): CS_SHIP_CUSTOMER_SK(NUMBER)
    AvgLen: 6 NDV: 1037120 Nulls: 0 Density: 0.000001 Min: 1.000000 Max: 1079999.000000
  Estimated selectivity: 9.6421e-07 , col: #8 
  Table: CATALOG_SALES  Alias: CATALOG_SALES
    Card: Original: 72077400.000000  Rounded: 69  Computed: 69.497647  Non Adjusted: 69.497647
  Scan IO  Cost (Disk) =   445656.000000
  Scan CPU Cost (Disk) =   32620732791.360001
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000001 flag = 2048  ("CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B1)
  Total Scan IO  Cost  =   445656.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 72077400.000000 (#rows))
                       =   445656.000000
  Total Scan CPU  Cost =   32620732791.360001 (scan (Disk))
                         + 3603870000.000000 (cpu filter eval) (= 50.000000 (per row) * 72077400.000000 (#rows))
                       =   36224602791.360001
  Access Path: TableScan
    Cost:  446583.437120  Resp: 446583.437120  Degree: 0
      Cost_io: 445656.000000  Cost_cpu: 36224602791
      Resp_io: 445656.000000  Resp_cpu: 36224602791
  Access Path: index (index (FFS))
    Index: CATALOG_SALES_IDX2
    resc_io: 70888.000000  resc_cpu: 14117080977
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  71249.431290  Resp: 71249.431290  Degree: 1
      Cost_io: 70888.000000  Cost_cpu: 14117080977
      Resp_io: 70888.000000  Resp_cpu: 14117080977
 ****** Costing Index CATALOG_SALES_IDX2
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER

  Estimated selectivity: 9.6421e-07 , col: #8 
  Access Path: index (IndexOnly)
    Index: CATALOG_SALES_IDX2
    resc_io: 4.000000  resc_cpu: 42486
    ix_sel: 9.6421e-07  ix_sel_with_filters: 9.6421e-07 
    Cost: 4.001088  Resp: 4.001088  Degree: 1
  Best:: AccessPath: IndexRange
  Index: CATALOG_SALES_IDX2
         Cost: 4.001088  Degree: 1  Resp: 4.001088  Card: 69.497647  Bytes: 0.000000

Access path analysis for DATE_DIM
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for DATE_DIM[DATE_DIM] 
  SPD: Directive valid: dirid = 13969931850241126217, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {C(74171)[7, 9]}
  SPD: Return code in qosdDSDirSetup: EXISTS, estType = TABLE
  Column (#7): 
    NewDensity:0.000007, OldDensity:0.000007 BktCnt:73049.000000, PopBktCnt:73048.000000, PopValCnt:200, NDV:201
  Column (#7): D_YEAR(NUMBER)
    AvgLen: 4 NDV: 201 Nulls: 0 Density: 0.000007 Min: 1900.000000 Max: 2100.000000
    Histogram: Freq  #Bkts: 201  UncompBkts: 73049  EndPtVals: 201  ActualVal: yes
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 


 kkecdn: Single Table Predicate:"DATE_DIM"."D_YEAR"=2001
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY">=1
  Column (#9): 
    NewDensity:0.038666, OldDensity:0.000007 BktCnt:73049.000000, PopBktCnt:73049.000000, PopValCnt:12, NDV:12
  Column (#9): D_MOY(NUMBER)
    AvgLen: 3 NDV: 12 Nulls: 0 Density: 0.038666 Min: 1.000000 Max: 12.000000
    Histogram: Freq  #Bkts: 12  UncompBkts: 73049  EndPtVals: 12  ActualVal: yes
  Estimated selectivity: 1.000000 , endpoint value predicate, col: #9 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY"<=4
  Estimated selectivity: 0.329224 , endpoint value predicate, col: #9 
  Table: DATE_DIM  Alias: DATE_DIM
    Card: Original: 73049.000000  Rounded: 120  Computed: 120.166840  Non Adjusted: 120.166840
  Scan IO  Cost (Disk) =   411.000000
  Scan CPU Cost (Disk) =   33398564.400000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.004997 flag = 2048  ("DATE_DIM"."D_YEAR"=2001)
    io = NOCOST, cpu = 50.000000, sel = 0.329224 flag = 2048  ("DATE_DIM"."D_MOY"<=4)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("DATE_DIM"."D_MOY">=1)
  Total Scan IO  Cost  =   411.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 73049.000000 (#rows))
                       =   411.000000
  Total Scan CPU  Cost =   33398564.400000 (scan (Disk))
                         + 3676708.342003 (cpu filter eval) (= 50.332083 (per row) * 73049.000000 (#rows))
                       =   37075272.742003
  Access Path: TableScan
    Cost:  411.949216  Resp: 411.949216  Degree: 0
      Cost_io: 411.000000  Cost_cpu: 37075273
      Resp_io: 411.000000  Resp_cpu: 37075273
  Best:: AccessPath: TableScan
         Cost: 411.949216  Degree: 1  Resp: 411.949216  Card: 120.166840  Bytes: 0.000000

***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE: Checking validity of partial join eval on query block SEL$4 (#3)
PJE: Passed validity of partial join eval by query block SEL$4 (#3)
number: [0]
PJE: Partial join eval conversion for query block SEL$4 (#3).
PJE: Table marked for partial join eval: DATE_DIM[DATE_DIM]#1
***********************
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  CATALOG_SALES[CATALOG_SALES]#0  DATE_DIM[DATE_DIM]#1

***************
Now joining: DATE_DIM[DATE_DIM]#1
***************
NL Join
  Outer table: Card: 69.497647  Cost: 4.001088  Resp: 4.001088  Degree: 1  Bytes: 
Access path analysis for DATE_DIM
  Scan IO  Cost (Disk) =   408.985507
  Scan CPU Cost (Disk) =   33398564.400000
NOTE: ignoring histogram of column (CATALOG_SALES.CS_SOLD_DATE_SK)
      used only for incremental stats maintenance
  Column (#1): CS_SOLD_DATE_SK(NUMBER)
    AvgLen: 6 NDV: 1849 Nulls: 0 Density: 0.000541 Min: 2450815.000000 Max: 2452647.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.008264 flag = 2048  ("CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK")
    io = NOCOST, cpu = 50.000000, sel = 0.004997 flag = 2048  ("DATE_DIM"."D_YEAR"=2001)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("DATE_DIM"."D_MOY">=1)
    io = NOCOST, cpu = 50.000000, sel = 0.329224 flag = 2048  ("DATE_DIM"."D_MOY"<=4)
  Total Scan IO  Cost  =   408.985507 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 73049.000000 (#rows))
                       =   408.985507
  Total Scan CPU  Cost =   33398564.400000 (scan (Disk))
                         + 3670900.482165 (cpu filter eval) (= 50.252577 (per row) * 73049.000000 (#rows))
                       =   37069464.882165
  Inner table: DATE_DIM  Alias: DATE_DIM
  Access Path: TableScan
    NL Join:  Cost: 28289.486754  Resp: 28289.486754  Degree: 1
      Cost_io: 28224.000000  Cost_cpu: 2557835563
      Resp_io: 28224.000000  Resp_cpu: 2557835563
 ****** Costing Index D_DATE_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: D_DATE_PK_IDX
    resc_io: 1.000000  resc_cpu: 9382
    ix_sel: 1.3689e-05  ix_sel_with_filters: 1.3689e-05 
    NL Join (ordered): Cost: 73.017661  Resp: 73.017661  Degree: 1
      Cost_io: 73.000000  Cost_cpu: 689828
      Resp_io: 73.000000  Resp_cpu: 689828
 ****** Costing Index D_DATE_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 
  Estimated selectivity: 1.000000 , endpoint value predicate, col: #9 
  Estimated selectivity: 0.329224 , endpoint value predicate, col: #9 
  Access Path: index (AllEqUnique)
    Index: D_DATE_PK_IDX
    resc_io: 1.000000  resc_cpu: 9382
    ix_sel: 1.3689e-05  ix_sel_with_filters: 1.3689e-05 
    NL Join (ordered): Cost: 73.017661  Resp: 73.017661  Degree: 1
      Cost_io: 73.000000  Cost_cpu: 689828
      Resp_io: 73.000000  Resp_cpu: 689828

  Best NL cost: 73.017661
          resc: 73.017661  resc_io: 73.000000  resc_cpu: 689828
          resp: 73.017661  resp_io: 73.000000  resc_cpu: 689828
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Capping Semi Join Card of HJ/SMJ by inner = 69.019113
Capping Semi Join Card of HJ/SMJ (no post filters) by inner = 69.019113
Capping Semi Join Card of NL by inner = 69.019113
Capping Semi Join Card of without POSQ by inner = 69.019113
Capping Semi Join Card of non adjusted NSQ by inner = 69.019113
Semi Join Card (capped by inner join):  69.019113 = outer (69.497647) * inner (120.166840) * sel (0.008264)
Join Card - Rounded: 69 Computed: 69.019113
  Outer table:  CATALOG_SALES  Alias: CATALOG_SALES
    resc: 4.001088  card 69.497647  bytes:   deg: 1  resp: 4.001088
  Inner table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card: 120.166840  bytes:   deg: 1  resp: 411.949216
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     25 Total Rows:            120
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39096166
      Total Temp space used: 0
  SM join: Resc: 416.951260  Resp: 416.951260  [multiMatchCost=0.000000]
SM Join
  SM cost: 416.951260 
     resc: 416.951260 resc_io: 415.000000 resc_cpu: 76213924
     resp: 416.951260 resp_io: 415.000000 resp_cpu: 76213924
  Outer table:  CATALOG_SALES  Alias: CATALOG_SALES
    resc: 4.001088  card 69.497647  bytes:   deg: 1  resp: 4.001088
  Inner table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card: 120.166840  bytes:   deg: 1  resp: 411.949216
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.015934  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 415.966238  Resp: 415.966238  [multiMatchCost=0.000000]
HA Join
  HA cost: 415.966238  
     resc: 415.966238 resc_io: 415.000000 resc_cpu: 37740109
     resp: 415.966238 resp_io: 415.000000 resp_cpu: 37740109
Best:: JoinMethod: NestedLoopSemi
       Cost: 73.017661  Degree: 1  Resp: 73.017661  Card: 69.019113 Bytes: 
***********************
Best so far:  Table#: 0  cost: 4.001088  card: 69.497647  bytes: 828.000000
              Table#: 1  cost: 73.017661  card: 69.019113  bytes: 1725.000000
***********************

*********************************
Number of join permutations tried: 1
*********************************
*********************
PJE: Partial join eval conversion for query block SEL$4 (#3).
PJE: Table marked for partial join eval: DATE_DIM[DATE_DIM]#1
***********************
Enumerating distribution method (advanced)
--- Distribution method for 
join between CATALOG_SALES[CATALOG_SALES](serial) and DATE_DIM[DATE_DIM](serial); jm = 15; right side access path = IndexUnique
kkopqIsSerialJoin: serial NLJ: both inputs serial
---- serial NL-Join -> SERIAL

(newjo-save)    [1 0 ]
LORE: Or-Expansion validity checks failed on query block SEL$4 (#3) because Cost based OR expansion enabled
Transfer Optimizer annotations for query block SEL$4 (#3)
Final cost for query block SEL$4 (#3) - All Rows Plan:
  Best join order: 1
  Cost: 73.017661  Degree: 1  Card: 69.000000  Bytes: 1725.000000
  Resc: 73.017661  Resc_io: 73.000000  Resc_cpu: 689828
  Resp: 73.017661  Resp_io: 73.000000  Resc_cpu: 689828
kkoqbc-subheap (delete addr=0x7f0471f29ee0, in-use=52808, alloc=65704)
kkoqbc-end:
        :
    call(in-use=1641816, alloc=1720176), compile(in-use=3666936, alloc=3668944), execution(in-use=56408, alloc=56760)

kkoqbc: finish optimizing query block SEL$4 (#3)
kkoqbc: optimizing query block SEL$2 (#2)
        
        :
    call(in-use=1639608, alloc=1720176), compile(in-use=3673504, alloc=3676336), execution(in-use=56568, alloc=56760)

kkoqbc-subheap (create addr=0x7f0471f29ee0)
****************
QUERY BLOCK TEXT
****************
SELECT
            *
        FROM
            store_sales ss,
            date_dim
        WHERE
            c.c_customer_sk = ss.ss_customer_sk
            AND ss_sold_date_sk = d_date_sk
            AND d_year = 2001
            AND d_moy BETWEEN 1 AND 1 + 3
            AND ( EXISTS (
                SELECT
                    *
                FROM
                    web_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = ws_bill_customer_sk
                    AND ws_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            )
                  OR EXISTS (
                SELECT
                    *
                FROM
                    catalog_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = cs_ship_customer_sk
                    AND cs_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            ) )
    
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$2 nbfros=2 flg=0
  fro(0): flg=0 objn=74171 hint_alias="DATE_DIM"@"SEL$2"
  fro(1): flg=0 objn=74191 hint_alias="SS"@"SEL$2"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3255 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: DATE_DIM  Alias: DATE_DIM
  #Rows: 73049  SSZ: 0  LGR: 0  #Blks:  1510  AvgRowLen:  128.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): D_DATE_SK(NUMBER)
    AvgLen: 6 NDV: 73049 Nulls: 0 Density: 0.000014 Min: 2415022.000000 Max: 2488070.000000
Index Stats::
  Index: D_DATE_PK_IDX  Col#: 1
  LVLS: 1  #LB: 163  #DK: 73049  LB/K: 1.00  DB/K: 1.00  CLUF: 1402.00  NRW: 73049.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table: STORE_SALES  Alias: SS  (Using composite stats)
  #Rows: 144020200  SSZ: 0  LGR: 0  #Blks:  2304802  AvgRowLen:  117.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
Index Stats::
  Index: STORE_SALES_IDX2  Col#: 4 1
  LVLS: 3  #LB: 522970  #DK: 11965122  LB/K: 1.00  DB/K: 12.00  CLUF: 143898920.00  NRW: 144020200.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
  Index: STORE_SALES_PK_IDX  Col#: 3 10
  LVLS: 3  #LB: 497464  #DK: 141527398  LB/K: 1.00  DB/K: 1.00  CLUF: 141365556.00  NRW: 141527398.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
try to generate single-table filter predicates from ORs for query block SEL$2 (#2)
finally: "SS"."SS_CUSTOMER_SK"=:B1 AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND ( EXISTS (SELECT 0 FROM "WEB_SALES" "WEB_SALES","DATE_DIM" "DATE_DIM" WHERE "WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B2 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1) OR  EXISTS (SELECT 0 FROM "CATALOG_SALES" "CATALOG_SALES","DATE_DIM" "DATE_DIM" WHERE "CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B3 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1))

=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$2 (#2)
Applicable DS directives:
   dirid = 10827845680942532126, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {F(74191)[]; F(74171)[]}
   dirid = 7660518587836633700, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74191)[4]}
   dirid = 13969931850241126217, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {C(74171)[7, 9]}
   dirid = 2361553282592865451, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {(74191)[]; F(74171)[]}
   dirid = 12943986683386070018, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {(74191)[]; (74171)[]}
Checking valid directives for the query block
  SPD: Return code in qosdDSDirSetup: NODIR, estType = QUERY_BLOCK
Return code in qosdSetupDirCtx4QB: EXISTS
=====================================
SPD: END context at query block level
=====================================
Access path analysis for STORE_SALES
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for STORE_SALES[SS] 
  SPD: Return code in qosdDSDirSetup: NODIR, estType = TABLE

 kkecdn: Single Table Predicate:"SS"."SS_CUSTOMER_SK"=:B1
NOTE: ignoring histogram of column (STORE_SALES.SS_CUSTOMER_SK)
      used only for incremental stats maintenance
  Column (#4): SS_CUSTOMER_SK(NUMBER)
    AvgLen: 6 NDV: 1039371 Nulls: 0 Density: 0.000001 Min: 1.000000 Max: 1079999.000000
  Estimated selectivity: 9.6212e-07 , col: #4 
  Table: STORE_SALES  Alias: SS
    Card: Original: 144020200.000000  Rounded: 139  Computed: 138.564767  Non Adjusted: 138.564767
  Scan IO  Cost (Disk) =   624219.000000
  Scan CPU Cost (Disk) =   46657751154.880005
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000001 flag = 2048  ("SS"."SS_CUSTOMER_SK"=:B1)
  Total Scan IO  Cost  =   624219.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 144020200.000000 (#rows))
                       =   624219.000000
  Total Scan CPU  Cost =   46657751154.880005 (scan (Disk))
                         + 7201010000.000000 (cpu filter eval) (= 50.000000 (per row) * 144020200.000000 (#rows))
                       =   53858761154.880005
  Access Path: TableScan
    Cost:  625597.914066  Resp: 625597.914066  Degree: 0
      Cost_io: 624219.000000  Cost_cpu: 53858761155
      Resp_io: 624219.000000  Resp_cpu: 53858761155
  Access Path: index (index (FFS))
    Index: STORE_SALES_IDX2
    resc_io: 141639.000000  resc_cpu: 28207733477
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  142361.185947  Resp: 142361.185947  Degree: 1
      Cost_io: 141639.000000  Cost_cpu: 28207733477
      Resp_io: 141639.000000  Resp_cpu: 28207733477
 ****** Costing Index STORE_SALES_IDX2
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER

  Estimated selectivity: 9.6212e-07 , col: #4 
  Access Path: index (IndexOnly)
    Index: STORE_SALES_IDX2
    resc_io: 4.000000  resc_cpu: 56286
    ix_sel: 9.6212e-07  ix_sel_with_filters: 9.6212e-07 
    Cost: 4.001441  Resp: 4.001441  Degree: 1
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: IndexRange
  Index: STORE_SALES_IDX2
         Cost: 4.001441  Degree: 1  Resp: 4.001441  Card: 138.564767  Bytes: 0.000000

Access path analysis for DATE_DIM
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for DATE_DIM[DATE_DIM] 
  SPD: Directive valid: dirid = 13969931850241126217, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {C(74171)[7, 9]}
  SPD: Return code in qosdDSDirSetup: EXISTS, estType = TABLE
  Column (#7): 
    NewDensity:0.000007, OldDensity:0.000007 BktCnt:73049.000000, PopBktCnt:73048.000000, PopValCnt:200, NDV:201
  Column (#7): D_YEAR(NUMBER)
    AvgLen: 4 NDV: 201 Nulls: 0 Density: 0.000007 Min: 1900.000000 Max: 2100.000000
    Histogram: Freq  #Bkts: 201  UncompBkts: 73049  EndPtVals: 201  ActualVal: yes
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 


 kkecdn: Single Table Predicate:"DATE_DIM"."D_YEAR"=2001
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY">=1
  Column (#9): 
    NewDensity:0.038666, OldDensity:0.000007 BktCnt:73049.000000, PopBktCnt:73049.000000, PopValCnt:12, NDV:12
  Column (#9): D_MOY(NUMBER)
    AvgLen: 3 NDV: 12 Nulls: 0 Density: 0.038666 Min: 1.000000 Max: 12.000000
    Histogram: Freq  #Bkts: 12  UncompBkts: 73049  EndPtVals: 12  ActualVal: yes
  Estimated selectivity: 1.000000 , endpoint value predicate, col: #9 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY"<=4
  Estimated selectivity: 0.329224 , endpoint value predicate, col: #9 
  Table: DATE_DIM  Alias: DATE_DIM
    Card: Original: 73049.000000  Rounded: 120  Computed: 120.166840  Non Adjusted: 120.166840
  Scan IO  Cost (Disk) =   411.000000
  Scan CPU Cost (Disk) =   33398564.400000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.004997 flag = 2048  ("DATE_DIM"."D_YEAR"=2001)
    io = NOCOST, cpu = 50.000000, sel = 0.329224 flag = 2048  ("DATE_DIM"."D_MOY"<=4)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("DATE_DIM"."D_MOY">=1)
  Total Scan IO  Cost  =   411.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 73049.000000 (#rows))
                       =   411.000000
  Total Scan CPU  Cost =   33398564.400000 (scan (Disk))
                         + 3676708.342003 (cpu filter eval) (= 50.332083 (per row) * 73049.000000 (#rows))
                       =   37075272.742003
  Access Path: TableScan
    Cost:  411.949216  Resp: 411.949216  Degree: 0
      Cost_io: 411.000000  Cost_cpu: 37075273
      Resp_io: 411.000000  Resp_cpu: 37075273
  ****** trying bitmap/domain indexes ******
 ****** Costing Index D_DATE_PK_IDX
  Access Path: index (FullScan)
    Index: D_DATE_PK_IDX
    resc_io: 164.000000  resc_cpu: 15777716
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 164.403948  Resp: 164.403948  Degree: 0
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: TableScan
         Cost: 411.949216  Degree: 1  Resp: 411.949216  Card: 120.166840  Bytes: 0.000000

***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE: Checking validity of partial join eval on query block SEL$2 (#2)
PJE: Passed validity of partial join eval by query block SEL$2 (#2)
number: [0]
PJE: Partial join eval conversion for query block SEL$2 (#2).
PJE: Table marked for partial join eval: STORE_SALES[SS]#1
***********************
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  DATE_DIM[DATE_DIM]#0  STORE_SALES[SS]#1

***************
Now joining: STORE_SALES[SS]#1
***************
NL Join
  Outer table: Card: 120.166840  Cost: 411.949216  Resp: 411.949216  Degree: 1  Bytes: 
Access path analysis for STORE_SALES
  Scan IO  Cost (Disk) =   624217.216667
  Scan CPU Cost (Disk) =   46657751154.880005
NOTE: ignoring histogram of column (STORE_SALES.SS_SOLD_DATE_SK)
      used only for incremental stats maintenance
  Column (#1): SS_SOLD_DATE_SK(NUMBER)
    AvgLen: 6 NDV: 1849 Nulls: 0 Density: 0.000541 Min: 2450816.000000 Max: 2452651.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000001 flag = 2064  ("SS"."SS_CUSTOMER_SK"=:B1)
    io = NOCOST, cpu = 50.000000, sel = 0.007463 flag = 2048  ("SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK")
  Total Scan IO  Cost  =   624217.216667 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 144020200.000000 (#rows))
                       =   624217.216667
  Total Scan CPU  Cost =   46657751154.880005 (scan (Disk))
                         + 7201016928.238328 (cpu filter eval) (= 50.000048 (per row) * 144020200.000000 (#rows))
                       =   53858768083.118332
  Inner table: STORE_SALES  Alias: SS
  Access Path: TableScan
    NL Join:  Cost: 75071947.658387  Resp: 75071947.658387  Degree: 1
      Cost_io: 74906477.000000  Cost_cpu: 6463089245247
      Resp_io: 74906477.000000  Resp_cpu: 6463089245247
  Access Path: index (index (FFS))
    Index: STORE_SALES_IDX2
    resc_io: 141637.716667  resc_cpu: 28207740405
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: STORE_SALES  Alias: SS
  Access Path: index (FFS)
    NL Join:  Cost: 17083600.284196  Resp: 17083600.284196  Degree: 1
      Cost_io: 16996937.000000  Cost_cpu: 3384965923877
      Resp_io: 16996937.000000  Resp_cpu: 3384965923877
 ****** Costing Index STORE_SALES_IDX2
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 8.3576e-08
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 8.3576e-08
  Estimated selectivity: 9.6212e-07 , col: #4 
  Access Path: index (AllEqJoinGuess)
    Index: STORE_SALES_IDX2
    resc_io: 3.000000  resc_cpu: 22414
    ix_sel: 6.9435e-09  ix_sel_with_filters: 6.9435e-09 
    NL Join : Cost: 772.018080  Resp: 772.018080  Degree: 1
      Cost_io: 771.000000  Cost_cpu: 39764991
      Resp_io: 771.000000  Resp_cpu: 39764991
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 772.018080
          resc: 772.018080  resc_io: 771.000000  resc_cpu: 39764991
          resp: 772.018080  resp_io: 771.000000  resc_cpu: 39764991
  SPD: Directive valid: dirid = 10827845680942532126, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {F(74191)[]; F(74171)[]}
  SPD: Return code in qosdDSDirSetup: EXISTS, estType = JOIN
Semi Join Card:  120.166840 = outer (120.166840) * sel (1.000000)
Join Card - Rounded: 120 Computed: 120.166840
  Outer table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card 120.166840  bytes:   deg: 1  resp: 411.949216
  Inner table:  STORE_SALES  Alias: SS
    resc: 4.001441  card: 138.564767  bytes:   deg: 1  resp: 4.001441
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     25 Total Rows:            120
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39096166
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     24 Total Rows:            139
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39103407
      Total Temp space used: 0
  SM join: Resc: 417.952755  Resp: 417.952755  [multiMatchCost=0.000000]
SM Join
  SM cost: 417.952755 
     resc: 417.952755 resc_io: 415.000000 resc_cpu: 115331131
     resp: 417.952755 resp_io: 415.000000 resp_cpu: 115331131
SM Join (with index on outer)
 ****** Costing Index D_DATE_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (FullScan)
    Index: D_DATE_PK_IDX
    resc_io: 1566.000000  resc_cpu: 52083873
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1567.333473  Resp: 1567.333473  Degree: 1
  Outer table:  DATE_DIM  Alias: DATE_DIM
    resc: 1567.333473  card 120.166840  bytes:   deg: 1  resp: 1567.333473
  Inner table:  STORE_SALES  Alias: SS
    resc: 4.001441  card: 138.564767  bytes:   deg: 1  resp: 4.001441
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     24 Total Rows:            139
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39103407
      Total Temp space used: 0
  SM join: Resc: 1572.336055  Resp: 1572.336055  [multiMatchCost=0.000000]
  Outer table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card 120.166840  bytes:   deg: 1  resp: 411.949216
  Inner table:  STORE_SALES  Alias: SS
    resc: 4.001441  card: 138.564767  bytes:   deg: 1  resp: 4.001441
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016178  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 415.966836  Resp: 415.966836  [multiMatchCost=0.000000]
HA Join
  HA cost: 415.966836  
     resc: 415.966836 resc_io: 415.000000 resc_cpu: 37763459
     resp: 415.966836 resp_io: 415.000000 resp_cpu: 37763459
Best:: JoinMethod: HashSemi
       Cost: 415.966836  Degree: 1  Resp: 415.966836  Card: 120.166840 Bytes: 
***********************
Best so far:  Table#: 0  cost: 411.949216  card: 120.166840  bytes: 1560.000000
              Table#: 1  cost: 415.966836  card: 120.166840  bytes: 3000.000000
***********************

*********************************
Number of join permutations tried: 1
*********************************
*********************
PJE: Partial join eval conversion for query block SEL$2 (#2).
PJE: Table marked for partial join eval: STORE_SALES[SS]#1
***********************
Enumerating distribution method (advanced)
--- Distribution method for 
join between DATE_DIM[DATE_DIM](serial) and SS[STORE_SALES](serial); jm = 2; right side access path = IndexRange
---- serial Hash-Join -> NONE

kkoaccsqf: Current query block SEL$2 (#2) is serial
kkoaccsqf: correlated subquery query block SEL$3 (#4) in filter               : serial
(newjo-save)    [0 1 ]
LORE: Or-Expansion validity checks failed on query block SEL$2 (#2) because Cost based OR expansion enabled
Transfer Optimizer annotations for query block SEL$2 (#2)
Final cost for query block SEL$2 (#2) - All Rows Plan:
  Best join order: 1
  Cost: 415.966836  Degree: 1  Card: 120.000000  Bytes: 3000.000000
  Resc: 415.966836  Resc_io: 415.000000  Resc_cpu: 37763459
  Resp: 415.966836  Resp_io: 415.000000  Resc_cpu: 37763459
kkoqbc-subheap (delete addr=0x7f0471f29ee0, in-use=63832, alloc=65704)
kkoqbc-end:
        :
    call(in-use=1678320, alloc=1752912), compile(in-use=3708904, alloc=3712616), execution(in-use=57416, alloc=60816)

kkoqbc: finish optimizing query block SEL$2 (#2)
kkoqbc: optimizing query block SEL$5A0F6FA7 (#16)
        
        :
    call(in-use=1676112, alloc=1752912), compile(in-use=3715456, alloc=3716760), execution(in-use=57576, alloc=60816)

kkoqbc-subheap (create addr=0x7f0471f29ee0)
****************
QUERY BLOCK TEXT
****************
Not available.
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$5A0F6FA7 nbfros=2 flg=0
  fro(0): flg=0 objn=74168 hint_alias="C"@"SEL$1"
  fro(1): flg=0 objn=74169 hint_alias="CA"@"SEL$1"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3255 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: CUSTOMER  Alias:  C
  #Rows: 1080000  SSZ: 0  LGR: 0  #Blks:  23374  AvgRowLen:  138.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): C_CUSTOMER_SK(NUMBER)
    AvgLen: 6 NDV: 1080000 Nulls: 0 Density: 0.000001 Min: 1.000000 Max: 1080000.000000
  Column (#5): C_CURRENT_ADDR_SK(NUMBER)
    AvgLen: 5 NDV: 457472 Nulls: 0 Density: 0.000002 Min: 1.000000 Max: 539997.000000
Index Stats::
  Index: CUSTOMER_PK_IDX  Col#: 1
  LVLS: 2  #LB: 2266  #DK: 1080000  LB/K: 1.00  DB/K: 1.00  CLUF: 75684.00  NRW: 1080000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table: CUSTOMER_ADDRESS  Alias: CA
  #Rows: 540000  SSZ: 0  LGR: 0  #Blks:  13174  AvgRowLen:  152.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): CA_ADDRESS_SK(NUMBER)
    AvgLen: 5 NDV: 540000 Nulls: 0 Density: 0.000002 Min: 1.000000 Max: 540000.000000
  Column (#8): CA_COUNTY(VARCHAR2)
    AvgLen: 16 NDV: 1877 Nulls: 0 Density: 0.000471
    Histogram: Hybrid  #Bkts: 254  UncompBkts: 5580  EndPtVals: 254  ActualVal: yes
Index Stats::
  Index: CA_ADDRESS_PK_IDX  Col#: 1
  LVLS: 2  #LB: 1127  #DK: 540000  LB/K: 1.00  DB/K: 1.00  CLUF: 12283.00  NRW: 540000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
  Column (#3): C_CURRENT_CDEMO_SK(NUMBER)
    AvgLen: 6 NDV: 772544 Nulls: 0 Density: 0.000001 Min: 18.000000 Max: 1920799.000000
try to generate single-table filter predicates from ORs for query block SEL$5A0F6FA7 (#16)
finally: ("CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County') AND "C"."C_CURRENT_ADDR_SK"="CA"."CA_ADDRESS_SK" AND  EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM" WHERE "SS"."SS_CUSTOMER_SK"=:B1 AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND ( EXISTS (SELECT 0 FROM "WEB_SALES" "WEB_SALES","DATE_DIM" "DATE_DIM" WHERE "WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B2 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1) OR  EXISTS (SELECT 0 FROM "CATALOG_SALES" "CATALOG_SALES","DATE_DIM" "DATE_DIM" WHERE "CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B3 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1)))

=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$5A0F6FA7 (#16)
Applicable DS directives:
   dirid = 18439699102505563871, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {EC(74169)[8]}
   dirid = 5181560337004891843, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74169)[]; (74168)[3]}
   dirid = 9316027922818115912, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74168)[3, 5]}
Checking valid directives for the query block
  SPD: Directive valid: dirid = 5181560337004891843, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74169)[]; (74168)[3]}
  SPD: Return code in qosdDSDirSetup: EXISTS, estType = GROUP_BY
  SPD: Return code in qosdDSDirSetup: NODIR, estType = QUERY_BLOCK
Return code in qosdSetupDirCtx4QB: EXISTS
=====================================
SPD: END context at query block level
=====================================
Access path analysis for CUSTOMER_ADDRESS
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for CUSTOMER_ADDRESS[CA] 
  SPD: Directive valid: dirid = 18439699102505563871, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {EC(74169)[8]}
  SPD: Return code in qosdDSDirSetup: EXISTS, estType = TABLE

 kkecdn: Single Table Predicate:"CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County'
  Using density: 4.7103e-04 of col #8 as selectivity of pred having unreasonably low value
  Using density: 4.7103e-04 of col #8 as selectivity of pred having unreasonably low value
  Using density: 4.7103e-04 of col #8 as selectivity of pred having unreasonably low value
  Using density: 4.7103e-04 of col #8 as selectivity of pred having unreasonably low value
  Estimated selectivity: 5.3763e-04 , endpoint value predicate, col: #8 
  Table: CUSTOMER_ADDRESS  Alias: CA
    Card: Original: 540000.000000  Rounded: 1308  Computed: 1307.756551  Non Adjusted: 1307.756551
  Scan IO  Cost (Disk) =   3570.000000
  Scan CPU Cost (Disk) =   250417850.560000
  Cost of predicates:
    io = 0.000000, cpu = 249.764594, sel = 0.002422 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Chouteau County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Dinwiddie County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Dixie County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Harrisonburg city')
      io = NOCOST, cpu = 50.000000, sel = 0.000538 flag = 2048  ("CA"."CA_COUNTY"='Lowndes County')
  Total Scan IO  Cost  =   3570.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 540000.000000 (#rows))
                       =   3570.000000
  Total Scan CPU  Cost =   250417850.560000 (scan (Disk))
                         + 134872880.645405 (cpu filter eval) (= 249.764594 (per row) * 540000.000000 (#rows))
                       =   385290731.205405
  Access Path: TableScan
    Cost:  3579.864371  Resp: 3579.864371  Degree: 0
      Cost_io: 3570.000000  Cost_cpu: 385290731
      Resp_io: 3570.000000  Resp_cpu: 385290731
  ****** trying bitmap/domain indexes ******
 ****** Costing Index CA_ADDRESS_PK_IDX
  Access Path: index (FullScan)
    Index: CA_ADDRESS_PK_IDX
    resc_io: 1129.000000  resc_cpu: 116040106
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1131.970906  Resp: 1131.970906  Degree: 0
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: TableScan
         Cost: 3579.864371  Degree: 1  Resp: 3579.864371  Card: 1307.756551  Bytes: 0.000000

Access path analysis for CUSTOMER
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for CUSTOMER[C] 
  SPD: Return code in qosdDSDirSetup: NODIR, estType = TABLE

 kkecdn: Single Table Predicate: EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM" WHERE "SS"."SS_CUSTOMER_SK"=:B1 AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND ( EXISTS (SELECT 0 FROM "WEB_SALES" "WEB_SALES","DATE_DIM" "DATE_DIM" WHERE "WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B2 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1) OR  EXISTS (SELECT 0 FROM "CATALOG_SALES" "CATALOG_SALES","DATE_DIM" "DATE_DIM" WHERE "CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B3 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1)))
  Column (#1): C_CUSTOMER_SK(NUMBER)
    AvgLen: 6 NDV: 1080000 Nulls: 0 Density: 0.000001 Min: 1.000000 Max: 1080000.000000
  Table: CUSTOMER  Alias: C
    Card: Original: 1080000.000000  Rounded: 1080000  Computed: 1080000.000000  Non Adjusted: 1080000.000000
  Scan IO  Cost (Disk) =   6332.000000
  Scan CPU Cost (Disk) =   414856538.560000
  Cost of predicates:
    io = NOCOST, cpu = 20.000000, sel = 0.050000 flag = 2562  ( EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM" WHERE "SS"."SS_CUSTOMER_SK"=:B1 AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND ( EXISTS (SELECT 0 FROM "WEB_SALES" "WEB_SALES","DATE_DIM" "DATE_DIM" WHERE "WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B2 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1) OR  EXISTS (SELECT 0 FROM "CATALOG_SALES" "CATALOG_SALES","DATE_DIM" "DATE_DIM" WHERE "CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B3 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1))))
  Total Scan IO  Cost  =   6332.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 1080000.000000 (#rows))
                       =   6332.000000
  Total Scan CPU  Cost =   414856538.560000 (scan (Disk))
                         + 21600000.000000 (cpu filter eval) (= 20.000000 (per row) * 1080000.000000 (#rows))
                       =   436456538.560000
  Access Path: TableScan
    Cost:  6343.174339  Resp: 6343.174339  Degree: 0
      Cost_io: 6332.000000  Cost_cpu: 436456539
      Resp_io: 6332.000000  Resp_cpu: 436456539
  ****** trying bitmap/domain indexes ******
 ****** Costing Index CUSTOMER_PK_IDX
  Access Path: index (FullScan)
    Index: CUSTOMER_PK_IDX
    resc_io: 2268.000000  resc_cpu: 232151426
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 2273.943636  Resp: 2273.943636  Degree: 0
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: TableScan
         Cost: 6343.174339  Degree: 1  Resp: 6343.174339  Card: 1080000.000000  Bytes: 0.000000

Grouping column cardinality [C_CURRENT_]    772544
***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE:  Bypassed; QB is not duplicate insignificant SEL$5A0F6FA7 (#16)
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  CUSTOMER_ADDRESS[CA]#0  CUSTOMER[C]#1

***************
Now joining: CUSTOMER[C]#1
***************
NL Join
  Outer table: Card: 1307.756551  Cost: 3579.864371  Resp: 3579.864371  Degree: 1  Bytes: 
Access path analysis for CUSTOMER
  Scan IO  Cost (Disk) =   6330.459480
  Scan CPU Cost (Disk) =   414856538.560000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000002 flag = 2048  ("C"."C_CURRENT_ADDR_SK"="CA"."CA_ADDRESS_SK")
    io = NOCOST, cpu = 20.000000, sel = 0.050000 flag = 2562  ( EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM" WHERE "SS"."SS_CUSTOMER_SK"=:B1 AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND ( EXISTS (SELECT 0 FROM "WEB_SALES" "WEB_SALES","DATE_DIM" "DATE_DIM" WHERE "WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B2 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1) OR  EXISTS (SELECT 0 FROM "CATALOG_SALES" "CATALOG_SALES","DATE_DIM" "DATE_DIM" WHERE "CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B3 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1))))
  Total Scan IO  Cost  =   6330.459480 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 1080000.000000 (#rows))
                       =   6330.459480
  Total Scan CPU  Cost =   414856538.560000 (scan (Disk))
                         + 24300000.000000 (cpu filter eval) (= 22.500000 (per row) * 1080000.000000 (#rows))
                       =   439156538.560000
  Inner table: CUSTOMER  Alias: C
  Access Path: TableScan
    NL Join:  Cost: 8298527.317370  Resp: 8298527.317370  Degree: 1
      Cost_io: 8283811.000000  Cost_cpu: 574802043168
      Resp_io: 8283811.000000  Resp_cpu: 574802043168
  ****** trying bitmap/domain indexes ******
 ****** Costing Index CUSTOMER_PK_IDX
  Access Path: index (FullScan)
    Index: CUSTOMER_PK_IDX
    resc_io: 2268.000000  resc_cpu: 232151426
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 2273.943636  Resp: 2273.943636  Degree: 0
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 8298527.317370
          resc: 8298527.317370  resc_io: 8283811.000000  resc_cpu: 574802043168
          resp: 8298527.317370  resp_io: 8283811.000000  resc_cpu: 574802043168
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Join Card:  3087.351958 = outer (1307.756551) * inner (1080000.000000) * sel (2.1859e-06)
Join Card - Rounded: 3087 Computed: 3087.351958
Grouping column cardinality [C_CURRENT_]    772544
  Outer table:  CUSTOMER_ADDRESS  Alias: CA
    resc: 3579.864371  card 1307.756551  bytes:   deg: 1  resp: 3579.864371
  Inner table:  CUSTOMER  Alias: C
    resc: 6343.174339  card: 1080000.000000  bytes:   deg: 1  resp: 6343.174339
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 6 Row size:     34 Total Rows:           1308
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39668949
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 3835 Row size:     29 Total Rows:        1080000
      Initial runs:   2 Merge passes:  1 IO Cost / pass:       2078
      Total IO sort cost: 5913.000000      Total CPU sort cost: 1108751040
      Total Temp space used: 60826000
  SM join: Resc: 15865.441029  Resp: 15865.441029  [multiMatchCost=0.000000]
SM Join
  SM cost: 15865.441029 
     resc: 15865.441029 resc_io: 15815.000000 resc_cpu: 1970167258
     resp: 15865.441029 resp_io: 15815.000000 resp_cpu: 1970167258
SM Join (with index on outer)
 ****** Costing Index CA_ADDRESS_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (FullScan)
    Index: CA_ADDRESS_PK_IDX
    resc_io: 13412.000000  resc_cpu: 494985634
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 13424.672825  Resp: 13424.672825  Degree: 1
  Outer table:  CUSTOMER_ADDRESS  Alias: CA
    resc: 13424.672825  card 1307.756551  bytes:   deg: 1  resp: 13424.672825
  Inner table:  CUSTOMER  Alias: C
    resc: 6343.174339  card: 1080000.000000  bytes:   deg: 1  resp: 6343.174339
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 3835 Row size:     29 Total Rows:        1080000
      Initial runs:   2 Merge passes:  1 IO Cost / pass:       2078
      Total IO sort cost: 5913.000000      Total CPU sort cost: 1108751040
      Total Temp space used: 60826000
  SM join: Resc: 25709.233862  Resp: 25709.233862  [multiMatchCost=0.000000]
  Outer table:  CUSTOMER_ADDRESS  Alias: CA
    resc: 3579.864371  card 1307.756551  bytes:   deg: 1  resp: 3579.864371
  Inner table:  CUSTOMER  Alias: C
    resc: 6343.174339  card: 1080000.000000  bytes:   deg: 1  resp: 6343.174339
    using dmeth: 2  #groups: 1
    Cost per ptn: 2.785445  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 6  probefrag: 3824  ppasses: 1
  Hash join: Resc: 9925.824155  Resp: 9925.824155  [multiMatchCost=0.000000]
HA Join
  HA cost: 9925.824155  
     resc: 9925.824155 resc_io: 9902.000000 resc_cpu: 930543470
     resp: 9925.824155 resp_io: 9902.000000 resp_cpu: 930543470
GROUP BY sort
GROUP BY/Correlated Subquery Filter adjustment factor: 1.000000
GROUP BY cardinality:  3087.000000, TABLE cardinality:  3087.000000
Vector group by not costed because no SYS_OP_XLATE_USE in group by.
kdmoGByPushdownValid: more than one table in group by    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 20 Row size:     52 Total Rows:           3087
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 40671077
      Total Temp space used: 0
Best:: JoinMethod: Hash
       Cost: 9926.865433  Degree: 1  Resp: 9926.865433  Card: 3087.351958 Bytes: 
***********************
Best so far:  Table#: 0  cost: 3579.864371  card: 1307.756551  bytes: 27468.000000
              Table#: 1  cost: 9926.865433  card: 3087.351958  bytes: 117306.000000
***********************

*********************************
Number of join permutations tried: 1
*********************************
Enumerating distribution method (advanced)
--- Distribution method for 
join between CA[CUSTOMER_ADDRESS](serial) and C[CUSTOMER](serial); jm = 1; right side access path = TableScan
---- serial Hash-Join -> NONE

kkoaccsqf: Current query block SEL$5A0F6FA7 (#16) is serial
kkoaccsqf: correlated subquery query block SEL$2 (#2) in filter               : serial
Final adjusted join cardinality: 1.000000, sq. fil. factor: 1080000.000000
(newjo-save)    [1 0 ]
GROUP BY/Correlated Subquery Filter adjustment factor: 1.000000
GROUP BY cardinality:  1.000000, TABLE cardinality:  1.000000
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     52 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39058824
      Total Temp space used: 0
LORE: Or-Expansion validity checks failed on query block SEL$5A0F6FA7 (#16) because Cost based OR expansion enabled
Transfer Optimizer annotations for query block SEL$5A0F6FA7 (#16)
Final cost for query block SEL$5A0F6FA7 (#16) - All Rows Plan:
  Best join order: 1
  Cost: 9926.865433  Degree: 1  Card: 1.000000  Bytes: 117306.000000
  Resc: 9926.865433  Resc_io: 9902.000000  Resc_cpu: 971214547
  Resp: 9926.865433  Resp_io: 9902.000000  Resc_cpu: 971214547
kkoqbc-subheap (delete addr=0x7f0471f29ee0, in-use=53736, alloc=65704)
kkoqbc-end:
        :
    call(in-use=1720256, alloc=1802016), compile(in-use=3740264, alloc=3740712), execution(in-use=59208, alloc=60816)

kkoqbc: finish optimizing query block SEL$5A0F6FA7 (#16)
kkoqbc: optimizing query block SEL$67C23549 (#1)
        
        :
    call(in-use=1718040, alloc=1802016), compile(in-use=3746400, alloc=3749000), execution(in-use=59400, alloc=60816)

kkoqbc-subheap (create addr=0x7f0471f29ee0)
****************
QUERY BLOCK TEXT
****************
SELECT /*query10*/
    cd_gender,
    cd_marital_status,
    cd_education_status,
    COUNT(*) cnt1,
    cd_purchase_estimate,
    COUNT(*) cnt2,
    cd_credit_rating,
    COUNT(*) cnt3,
    cd_dep_count,
    COUNT(*) cnt4,
    cd_dep_employed_count,
    COUNT(*) cnt5,
    cd_dep_college_count,
    COUNT(*) cnt6
FROM
    customer c,
    customer_address ca,
    customer_demographics
WHERE
    -- join predicates
        c.c_current_addr_sk = ca.ca_address_sk
    AND cd_demo_sk = c.c_current_cdemo_sk
    -- filter predicates
    AND ca.ca_county IN (
        'Chouteau County',
        'Dixie County',
        'Harrisonburg city',
        'Lowndes County',
        'Dinwiddie County'
    )
    -- filter predicate (subquery)
    AND EXISTS (
        SELECT
            *
        FROM
            store_sales ss,
            date_dim
        WHERE
            c.c_customer_sk = ss.ss_customer_sk
            AND ss_sold_date_sk = d_date_sk
            AND d_year = 2001
            AND d_moy BETWEEN 1 AND 1 + 3
            AND ( EXISTS (
                SELECT
                    *
                FROM
                    web_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = ws_bill_customer_sk
                    AND ws_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            )
                  OR EXISTS (
                SELECT
                    *
                FROM
                    catalog_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = cs_ship_customer_sk
                    AND cs_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            ) )
    )
GROUP BY
    cd_gender,
    cd_marital_status,
    cd_education_status,
    cd_purchase_estimate,
    cd_credit_rating,
    cd_dep_count,
    cd_dep_employed_count,
    cd_dep_college_count

---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$67C23549 nbfros=2 flg=0
  fro(0): flg=1 objn=0 hint_alias="VW_GBF_12"@"SEL$4DBD13CE"
  fro(1): flg=1 objn=0 hint_alias="VW_GBC_11"@"SEL$FD007FC2"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3255 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: VW_GBC_11  Alias: VW_GBC_11  (NOT ANALYZED)
  #Rows: 0  SSZ: 0  LGR: 0  #Blks:  0  AvgRowLen:  0.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 0
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
***********************
Table Stats::
  Table: VW_GBF_12  Alias: VW_GBF_12  (NOT ANALYZED)
  #Rows: 0  SSZ: 0  LGR: 0  #Blks:  0  AvgRowLen:  0.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 0
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#8): ITEM_8(CHARACTER)
    AvgLen: 2 NDV: 2 Nulls: 0 Density: 0.249925
    Histogram: Freq  #Bkts: 2  UncompBkts: 1920800  EndPtVals: 2  ActualVal: no 
  Column (#9): ITEM_9(CHARACTER)
    AvgLen: 2 NDV: 5 Nulls: 0 Density: 0.098953
    Histogram: Freq  #Bkts: 5  UncompBkts: 1920800  EndPtVals: 5  ActualVal: yes
  Column (#10): ITEM_10(CHARACTER)
    AvgLen: 21 NDV: 7 Nulls: 0 Density: 0.070771
    Histogram: Freq  #Bkts: 7  UncompBkts: 1920800  EndPtVals: 7  ActualVal: yes
  Column (#11): ITEM_11(NUMBER)
    AvgLen: 4 NDV: 9500 Nulls: 0 Density: 0.000105 Min: 500.000000 Max: 9999.000000
  Column (#12): ITEM_12(CHARACTER)
    AvgLen: 11 NDV: 4 Nulls: 0 Density: 0.250000
  Column (#13): ITEM_13(NUMBER)
    AvgLen: 3 NDV: 6 Nulls: 0 Density: 0.166667 Min: 0.000000 Max: 5.000000
  Column (#14): ITEM_14(NUMBER)
    AvgLen: 3 NDV: 6 Nulls: 0 Density: 0.166667 Min: 0.000000 Max: 5.000000
  Column (#15): ITEM_15(NUMBER)
    AvgLen: 3 NDV: 6 Nulls: 0 Density: 0.166667 Min: 0.000000 Max: 5.000000
  Column (#1): ITEM_1(NUMBER)
    AvgLen: 6 NDV: 1920800 Nulls: 0 Density: 0.000001 Min: 1.000000 Max: 1920800.000000
  Column (#1): ITEM_1(NUMBER)
    AvgLen: 6 NDV: 772544 Nulls: 0 Density: 0.000001 Min: 18.000000 Max: 1920799.000000
try to generate single-table filter predicates from ORs for query block SEL$67C23549 (#1)
finally: "VW_GBC_11"."ITEM_1"="VW_GBF_12"."ITEM_1"

=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$67C23549 (#1)
Applicable DS directives:
Return code in qosdSetupDirCtx4QB: NODIR
=====================================
SPD: END context at query block level
=====================================
Access path analysis for VW_GBF_12

Access path analysis for VW_GBC_11

Grouping column cardinality [    ITEM_8]    2
Grouping column cardinality [    ITEM_9]    5
Grouping column cardinality [   ITEM_10]    7
Grouping column cardinality [   ITEM_11]    9500
Grouping column cardinality [   ITEM_12]    4
Grouping column cardinality [   ITEM_13]    6
Grouping column cardinality [   ITEM_14]    6
Grouping column cardinality [   ITEM_15]    6
***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE:  Bypassed; QB is not duplicate insignificant SEL$67C23549 (#1)
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  VW_GBF_12[VW_GBF_12]#0  VW_GBC_11[VW_GBC_11]#1

***************
Now joining: VW_GBC_11[VW_GBC_11]#1
***************
NL Join
  Outer table: Card: 1.000000  Cost: 5.000000  Resp: 0.000000  Degree: 0  Bytes: 
Access path analysis for VW_GBC_11
  Inner table: VW_GBC_11  Alias: VW_GBC_11
  Access Path: TableScan
    NL Join:  Cost: 0.000000  Resp: 0.000000  Degree: 0
      Cost_io: 0.000000  Cost_cpu: 0
      Resp_io: 0.000000  Resp_cpu: 0

  Best NL cost: 0.000000
          resc: 0.000000  resc_io: 0.000000  resc_cpu: 0
          resp: 0.000000  resp_io: 0.000000  resc_cpu: 0
  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = JOIN
Join Card:  1.000000 = outer (1.000000) * inner (1920800.000000) * sel (5.2062e-07)
Join Card - Rounded: 1 Computed: 1.000000
Grouping column cardinality [    ITEM_8]    2
Grouping column cardinality [    ITEM_9]    5
Grouping column cardinality [   ITEM_10]    7
Grouping column cardinality [   ITEM_11]    9500
Grouping column cardinality [   ITEM_12]    4
Grouping column cardinality [   ITEM_13]    6
Grouping column cardinality [   ITEM_14]    6
Grouping column cardinality [   ITEM_15]    6
  Outer table:  VW_GBF_12  Alias: VW_GBF_12
    resc: 0.000000  card 1.000000  bytes:   deg: 0  resp: 0.000000
  Inner table:  VW_GBC_11  Alias: VW_GBC_11
    resc: 0.000000  card: 1920800.000000  bytes:   deg: 0  resp: 0.000000
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     103 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39058824
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 21400 Row size:     91 Total Rows:        1920800
      Initial runs:   2 Merge passes:  1 IO Cost / pass:      11592
      Total IO sort cost: 32992.000000      Total CPU sort cost: 2372445463
      Total Temp space used: 419619000
  SM join: Resc: 33053.740321  Resp: 33053.740321  [multiMatchCost=0.000000]
SM Join
  SM cost: 33053.740321 
     resc: 33053.740321 resc_io: 32992.000000 resc_cpu: 2411504286
     resp: 33053.740321 resp_io: 32992.000000 resp_cpu: 2411504286
  Outer table:  VW_GBF_12  Alias: VW_GBF_12
    resc: 0.000000  card 1.000000  bytes:   deg: 0  resp: 0.000000
  Inner table:  VW_GBC_11  Alias: VW_GBC_11
    resc: 0.000000  card: 1920800.000000  bytes:   deg: 0  resp: 0.000000
    using dmeth: 2  #groups: 1
    Cost per ptn: 4.933076  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 1  probefrag: 19931  ppasses: 1
  Hash join: Resc: 4.933076  Resp: 4.933076  [multiMatchCost=0.000000]
HA Join
  HA cost: 4.933076  
     resc: 4.933076 resc_io: 0.000000 resc_cpu: 192680150
     resp: 4.933076 resp_io: 0.000000 resp_cpu: 192680150
GROUP BY sort
GROUP BY/Correlated Subquery Filter adjustment factor: 0.088388
GROUP BY cardinality:  1.000000, TABLE cardinality:  1.000000
Vector group by not costed because no SYS_OP_XLATE_USE in group by.
kdmoGByPushdownValid: more than one table in group by    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     183 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39058824
      Total Temp space used: 0
Best:: JoinMethod: Hash
       Cost: 5.933076  Degree: 0  Resp: 5.933076  Card: 1.000000 Bytes: 
***********************
Best so far:  Table#: 0  cost: 5.000000  card: 1.000000  bytes: 84.000000
              Table#: 1  cost: 5.933076  card: 1.000000  bytes: 157.000000
***********************

*********************************
Number of join permutations tried: 1
*********************************
Enumerating distribution method (advanced)
--- Distribution method for 
join between VW_GBF_12[VW_GBF_12](serial) and VW_GBC_11[VW_GBC_11](serial); jm = 1; right side access path = TableScan
---- serial Hash-Join -> NONE

(newjo-save)    [1 0 ]
GROUP BY/Correlated Subquery Filter adjustment factor: 0.088388
GROUP BY cardinality:  1.000000, TABLE cardinality:  1.000000
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     183 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39058824
      Total Temp space used: 0
LORE: Or-Expansion validity checks failed on query block SEL$67C23549 (#1) because Cost based OR expansion enabled
Transfer Optimizer annotations for query block SEL$67C23549 (#1)
Final cost for query block SEL$67C23549 (#1) - All Rows Plan:
  Best join order: 1
  Cost: 5.933076  Degree: 0  Card: 1.000000  Bytes: 157.000000
  Resc: 5.933076  Resc_io: 0.000000  Resc_cpu: 231738974
  Resp: 5.933076  Resp_io: 0.000000  Resc_cpu: 231738974
kkoqbc-subheap (delete addr=0x7f0471f29ee0, in-use=37344, alloc=49272)
kkoqbc-end:
        :
    call(in-use=1734904, alloc=1801912), compile(in-use=3750480, alloc=3752328), execution(in-use=59800, alloc=60816)

kkoqbc: finish optimizing query block SEL$67C23549 (#1)
First K Rows: K = 1.00, N = 120.00
First K Rows: K = 1.00, N = 69.00
First K Rows: K = 1.00, N = 37.00
First K Rows: Setup end
***********************
CBQT: Looking for cost annotations for query block SEL$4C89B77A, key = SEL$4C89B77A_00008040_2
CBQT: Could not find stored cost annotations.
CBQT: Looking for cost annotations for query block SEL$3, key = SEL$3_00010000_0
CBQT: Replaced cost annotations in query block SEL$3.
CBQT: Looking for cost annotations for query block SEL$4, key = SEL$4_00010000_0
CBQT: Replaced cost annotations in query block SEL$4.
CBQT: Looking for cost annotations for query block SEL$2, key = SEL$2_00010000_0
CBQT: Replaced cost annotations in query block SEL$2.
CBQT: Looking for cost annotations for query block SEL$5A0F6FA7, key = SEL$5A0F6FA7_00008040_2
CBQT: Could not find stored cost annotations.
kkoqbc: optimizing query block SEL$4C89B77A (#15)
        
        :
    call(in-use=1732688, alloc=1801912), compile(in-use=3751488, alloc=3752328), execution(in-use=59800, alloc=60816)

kkoqbc-subheap (create addr=0x7f0471f29ee0)
****************
QUERY BLOCK TEXT
****************
Not available.
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$4C89B77A nbfros=1 flg=0
  fro(0): flg=0 objn=74170 hint_alias="CUSTOMER_DEMOGRAPHICS"@"SEL$1"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3255 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
  #Rows: 1920800  SSZ: 0  LGR: 0  #Blks:  17254  AvgRowLen:  54.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): CD_DEMO_SK(NUMBER)
    AvgLen: 6 NDV: 1920800 Nulls: 0 Density: 0.000001 Min: 1.000000 Max: 1920800.000000
  Column (#9): CD_DEP_COLLEGE_COUNT(NUMBER)
    AvgLen: 3 NDV: 6 Nulls: 0 Density: 0.166667 Min: 0.000000 Max: 5.000000
  Column (#8): CD_DEP_EMPLOYED_COUNT(NUMBER)
    AvgLen: 3 NDV: 6 Nulls: 0 Density: 0.166667 Min: 0.000000 Max: 5.000000
  Column (#7): CD_DEP_COUNT(NUMBER)
    AvgLen: 3 NDV: 6 Nulls: 0 Density: 0.166667 Min: 0.000000 Max: 5.000000
  Column (#6): CD_CREDIT_RATING(CHARACTER)
    AvgLen: 11 NDV: 4 Nulls: 0 Density: 0.250000
  Column (#5): CD_PURCHASE_ESTIMATE(NUMBER)
    AvgLen: 4 NDV: 9500 Nulls: 0 Density: 0.000105 Min: 500.000000 Max: 9999.000000
  Column (#4): CD_EDUCATION_STATUS(CHARACTER)
    AvgLen: 21 NDV: 7 Nulls: 0 Density: 0.070771
    Histogram: Freq  #Bkts: 7  UncompBkts: 1920800  EndPtVals: 7  ActualVal: yes
  Column (#3): CD_MARITAL_STATUS(CHARACTER)
    AvgLen: 2 NDV: 5 Nulls: 0 Density: 0.098953
    Histogram: Freq  #Bkts: 5  UncompBkts: 1920800  EndPtVals: 5  ActualVal: yes
  Column (#2): CD_GENDER(CHARACTER)
    AvgLen: 2 NDV: 2 Nulls: 0 Density: 0.249925
    Histogram: Freq  #Bkts: 2  UncompBkts: 1920800  EndPtVals: 2  ActualVal: no 
Index Stats::
  Index: CD_DEMO_PK_IDX  Col#: 1
  LVLS: 2  #LB: 4138  #DK: 1920800  LB/K: 1.00  DB/K: 1.00  CLUF: 795806.00  NRW: 1920800.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
try to generate single-table filter predicates from ORs for query block SEL$4C89B77A (#15)
=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$4C89B77A (#15)
Applicable DS directives:
   dirid = 7754152966831092939, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {EC(74170)[3, 4]}
Checking valid directives for the query block
  SPD: Return code in qosdDSDirSetup: NODIR, estType = QUERY_BLOCK
Return code in qosdSetupDirCtx4QB: EXISTS
=====================================
SPD: END context at query block level
=====================================
Access path analysis for CUSTOMER_DEMOGRAPHICS
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS] 
  SPD: Return code in qosdDSDirSetup: NODIR, estType = TABLE
  Table: CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
    Card: Original: 1920800.000000  Rounded: 1920800  Computed: 1920800.000000  Non Adjusted: 1920800.000000
  Scan IO  Cost (Disk) =   4675.000000
  Scan CPU Cost (Disk) =   718321325.760000
  Total Scan IO  Cost  =   4675.000000 (scan (Disk))
                       =   4675.000000
  Total Scan CPU  Cost =   718321325.760000 (scan (Disk))
                       =   718321325.760000
  Access Path: TableScan
    Cost:  4693.390757  Resp: 4693.390757  Degree: 0
      Cost_io: 4675.000000  Cost_cpu: 718321326
      Resp_io: 4675.000000  Resp_cpu: 718321326
  Best:: AccessPath: TableScan
         Cost: 4693.390757  Degree: 1  Resp: 4693.390757  Card: 1920800.000000  Bytes: 0.000000

***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE:  Bypassed; QB has a single table SEL$4C89B77A (#15)
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS]#0
***********************
Best so far:  Table#: 0  cost: 4693.390757  card: 1920800.000000  bytes: 103723200.000000
***********************
(newjo-stop-1) k:0, spcnt:0, perm:1, maxperm:2000

*********************************
Number of join permutations tried: 1
*********************************
Enumerating distribution method (advanced)

LORE: Or-Expansion validity checks failed on query block SEL$4C89B77A (#15) because Cost based OR expansion enabled
Transfer Optimizer annotations for query block SEL$4C89B77A (#15)
Final cost for query block SEL$4C89B77A (#15) - All Rows Plan:
  Best join order: 1
  Cost: 4693.390757  Degree: 1  Card: 1920800.000000  Bytes: 207446400.000000
  Resc: 4693.390757  Resc_io: 4675.000000  Resc_cpu: 718321326
  Resp: 4693.390757  Resp_io: 4675.000000  Resc_cpu: 718321326
kkoqbc-subheap (delete addr=0x7f0471f29ee0, in-use=24640, alloc=32840)
kkoqbc-end:
        :
    call(in-use=1737192, alloc=1801912), compile(in-use=3751728, alloc=3752328), execution(in-use=59800, alloc=60816)

kkoqbc: finish optimizing query block SEL$4C89B77A (#15)
kkoqbc: optimizing query block SEL$3 (#4)
        
        :
    call(in-use=1737192, alloc=1801912), compile(in-use=3751944, alloc=3752328), execution(in-use=59800, alloc=60816)

kkoqbc-end:
        :
    call(in-use=1737192, alloc=1801912), compile(in-use=3751944, alloc=3752328), execution(in-use=59800, alloc=60816)

kkoqbc: finish optimizing query block SEL$3 (#4)
kkoqbc: optimizing query block SEL$4 (#3)
        
        :
    call(in-use=1737192, alloc=1801912), compile(in-use=3752040, alloc=3752328), execution(in-use=59800, alloc=60816)

kkoqbc-end:
        :
    call(in-use=1737192, alloc=1801912), compile(in-use=3752040, alloc=3752328), execution(in-use=59800, alloc=60816)

kkoqbc: finish optimizing query block SEL$4 (#3)
kkoqbc: optimizing query block SEL$2 (#2)
        
        :
    call(in-use=1737192, alloc=1801912), compile(in-use=3752136, alloc=3752328), execution(in-use=59800, alloc=60816)

kkoqbc-end:
        :
    call(in-use=1737192, alloc=1801912), compile(in-use=3752136, alloc=3752328), execution(in-use=59800, alloc=60816)

kkoqbc: finish optimizing query block SEL$2 (#2)
kkoqbc: optimizing query block SEL$5A0F6FA7 (#16)
        
        :
    call(in-use=1737192, alloc=1801912), compile(in-use=3752136, alloc=3752328), execution(in-use=59800, alloc=60816)

kkoqbc-subheap (create addr=0x7f0471f29ee0)
****************
QUERY BLOCK TEXT
****************
Not available.
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$5A0F6FA7 nbfros=2 flg=0
  fro(0): flg=0 objn=74168 hint_alias="C"@"SEL$1"
  fro(1): flg=0 objn=74169 hint_alias="CA"@"SEL$1"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3255 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: CUSTOMER  Alias:  C
  #Rows: 1080000  SSZ: 0  LGR: 0  #Blks:  23374  AvgRowLen:  138.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#3): C_CURRENT_CDEMO_SK(NUMBER)
    AvgLen: 6 NDV: 772544 Nulls: 0 Density: 0.000001 Min: 18.000000 Max: 1920799.000000
  Column (#1): C_CUSTOMER_SK(NUMBER)
    AvgLen: 6 NDV: 1080000 Nulls: 0 Density: 0.000001 Min: 1.000000 Max: 1080000.000000
  Column (#5): C_CURRENT_ADDR_SK(NUMBER)
    AvgLen: 5 NDV: 457472 Nulls: 0 Density: 0.000002 Min: 1.000000 Max: 539997.000000
Index Stats::
  Index: CUSTOMER_PK_IDX  Col#: 1
  LVLS: 2  #LB: 2266  #DK: 1080000  LB/K: 1.00  DB/K: 1.00  CLUF: 75684.00  NRW: 1080000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table: CUSTOMER_ADDRESS  Alias: CA
  #Rows: 540000  SSZ: 0  LGR: 0  #Blks:  13174  AvgRowLen:  152.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): CA_ADDRESS_SK(NUMBER)
    AvgLen: 5 NDV: 540000 Nulls: 0 Density: 0.000002 Min: 1.000000 Max: 540000.000000
  Column (#8): CA_COUNTY(VARCHAR2)
    AvgLen: 16 NDV: 1877 Nulls: 0 Density: 0.000471
    Histogram: Hybrid  #Bkts: 254  UncompBkts: 5580  EndPtVals: 254  ActualVal: yes
Index Stats::
  Index: CA_ADDRESS_PK_IDX  Col#: 1
  LVLS: 2  #LB: 1127  #DK: 540000  LB/K: 1.00  DB/K: 1.00  CLUF: 12283.00  NRW: 540000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
try to generate single-table filter predicates from ORs for query block SEL$5A0F6FA7 (#16)
finally: ("CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County') AND "C"."C_CURRENT_ADDR_SK"="CA"."CA_ADDRESS_SK" AND  EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM")

=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$5A0F6FA7 (#16)
Applicable DS directives:
   dirid = 18439699102505563871, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {EC(74169)[8]}
   dirid = 5181560337004891843, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74169)[]; (74168)[3]}
   dirid = 9316027922818115912, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74168)[3, 5]}
Checking valid directives for the query block
  SPD: Directive valid: dirid = 5181560337004891843, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74169)[]; (74168)[3]}
  SPD: Return code in qosdDSDirSetup: EXISTS, estType = GROUP_BY
  SPD: Return code in qosdDSDirSetup: NODIR, estType = QUERY_BLOCK
Return code in qosdSetupDirCtx4QB: EXISTS
=====================================
SPD: END context at query block level
=====================================
Access path analysis for CUSTOMER_ADDRESS
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for CUSTOMER_ADDRESS[CA] 
  SPD: Directive valid: dirid = 18439699102505563871, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {EC(74169)[8]}
  SPD: Return code in qosdDSDirSetup: EXISTS, estType = TABLE

 kkecdn: Single Table Predicate:"CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County'
  Using density: 4.7103e-04 of col #8 as selectivity of pred having unreasonably low value
  Using density: 4.7103e-04 of col #8 as selectivity of pred having unreasonably low value
  Using density: 4.7103e-04 of col #8 as selectivity of pred having unreasonably low value
  Using density: 4.7103e-04 of col #8 as selectivity of pred having unreasonably low value
  Estimated selectivity: 5.3763e-04 , endpoint value predicate, col: #8 
  Table: CUSTOMER_ADDRESS  Alias: CA
    Card: Original: 540000.000000  Rounded: 1308  Computed: 1307.756551  Non Adjusted: 1307.756551
  Scan IO  Cost (Disk) =   3570.000000
  Scan CPU Cost (Disk) =   250417850.560000
  Cost of predicates:
    io = 0.000000, cpu = 249.764594, sel = 0.002422 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Chouteau County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Dinwiddie County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Dixie County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Harrisonburg city')
      io = NOCOST, cpu = 50.000000, sel = 0.000538 flag = 2048  ("CA"."CA_COUNTY"='Lowndes County')
  Total Scan IO  Cost  =   3570.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 540000.000000 (#rows))
                       =   3570.000000
  Total Scan CPU  Cost =   250417850.560000 (scan (Disk))
                         + 134872880.645405 (cpu filter eval) (= 249.764594 (per row) * 540000.000000 (#rows))
                       =   385290731.205405
  Access Path: TableScan
    Cost:  3579.864371  Resp: 3579.864371  Degree: 0
      Cost_io: 3570.000000  Cost_cpu: 385290731
      Resp_io: 3570.000000  Resp_cpu: 385290731
  ****** trying bitmap/domain indexes ******
 ****** Costing Index CA_ADDRESS_PK_IDX
  Access Path: index (FullScan)
    Index: CA_ADDRESS_PK_IDX
    resc_io: 1129.000000  resc_cpu: 116040106
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1131.970906  Resp: 1131.970906  Degree: 0
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: TableScan
         Cost: 3579.864371  Degree: 1  Resp: 3579.864371  Card: 1307.756551  Bytes: 0.000000

Access path analysis for CUSTOMER
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for CUSTOMER[C] 
  SPD: Return code in qosdDSDirSetup: NODIR, estType = TABLE

 kkecdn: Single Table Predicate: EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM")
  Table: CUSTOMER  Alias: C
    Card: Original: 1080000.000000  Rounded: 1080000  Computed: 1080000.000000  Non Adjusted: 1080000.000000
  Scan IO  Cost (Disk) =   6332.000000
  Scan CPU Cost (Disk) =   414856538.560000
  Cost of predicates:
    io = NOCOST, cpu = 20.000000, sel = 0.050000 flag = 2562  ( EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM"))
  Total Scan IO  Cost  =   6332.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 1080000.000000 (#rows))
                       =   6332.000000
  Total Scan CPU  Cost =   414856538.560000 (scan (Disk))
                         + 21600000.000000 (cpu filter eval) (= 20.000000 (per row) * 1080000.000000 (#rows))
                       =   436456538.560000
  Access Path: TableScan
    Cost:  6343.174339  Resp: 6343.174339  Degree: 0
      Cost_io: 6332.000000  Cost_cpu: 436456539
      Resp_io: 6332.000000  Resp_cpu: 436456539
  ****** trying bitmap/domain indexes ******
 ****** Costing Index CUSTOMER_PK_IDX
  Access Path: index (FullScan)
    Index: CUSTOMER_PK_IDX
    resc_io: 2268.000000  resc_cpu: 232151426
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 2273.943636  Resp: 2273.943636  Degree: 0
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: TableScan
         Cost: 6343.174339  Degree: 1  Resp: 6343.174339  Card: 1080000.000000  Bytes: 0.000000

Grouping column cardinality [C_CURRENT_]    772544
***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE:  Bypassed; QB is not duplicate insignificant SEL$5A0F6FA7 (#16)
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  CUSTOMER_ADDRESS[CA]#0  CUSTOMER[C]#1

***************
Now joining: CUSTOMER[C]#1
***************
NL Join
  Outer table: Card: 1307.756551  Cost: 3579.864371  Resp: 3579.864371  Degree: 1  Bytes: 
Access path analysis for CUSTOMER
  Scan IO  Cost (Disk) =   6330.459480
  Scan CPU Cost (Disk) =   414856538.560000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000002 flag = 2048  ("C"."C_CURRENT_ADDR_SK"="CA"."CA_ADDRESS_SK")
    io = NOCOST, cpu = 20.000000, sel = 0.050000 flag = 2562  ( EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM"))
  Total Scan IO  Cost  =   6330.459480 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 1080000.000000 (#rows))
                       =   6330.459480
  Total Scan CPU  Cost =   414856538.560000 (scan (Disk))
                         + 24300000.000000 (cpu filter eval) (= 22.500000 (per row) * 1080000.000000 (#rows))
                       =   439156538.560000
  Inner table: CUSTOMER  Alias: C
  Access Path: TableScan
    NL Join:  Cost: 8298527.317370  Resp: 8298527.317370  Degree: 1
      Cost_io: 8283811.000000  Cost_cpu: 574802043168
      Resp_io: 8283811.000000  Resp_cpu: 574802043168
  ****** trying bitmap/domain indexes ******
 ****** Costing Index CUSTOMER_PK_IDX
  Access Path: index (FullScan)
    Index: CUSTOMER_PK_IDX
    resc_io: 2268.000000  resc_cpu: 232151426
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 2273.943636  Resp: 2273.943636  Degree: 0
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 8298527.317370
          resc: 8298527.317370  resc_io: 8283811.000000  resc_cpu: 574802043168
          resp: 8298527.317370  resp_io: 8283811.000000  resc_cpu: 574802043168
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Join Card:  3087.351958 = outer (1307.756551) * inner (1080000.000000) * sel (2.1859e-06)
Join Card - Rounded: 3087 Computed: 3087.351958
Grouping column cardinality [C_CURRENT_]    772544
  Outer table:  CUSTOMER_ADDRESS  Alias: CA
    resc: 3579.864371  card 1307.756551  bytes:   deg: 1  resp: 3579.864371
  Inner table:  CUSTOMER  Alias: C
    resc: 6343.174339  card: 1080000.000000  bytes:   deg: 1  resp: 6343.174339
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 6 Row size:     34 Total Rows:           1308
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39668949
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 3835 Row size:     29 Total Rows:        1080000
      Initial runs:   2 Merge passes:  1 IO Cost / pass:       2078
      Total IO sort cost: 5913.000000      Total CPU sort cost: 1108751040
      Total Temp space used: 60826000
  SM join: Resc: 15865.441029  Resp: 15865.441029  [multiMatchCost=0.000000]
SM Join
  SM cost: 15865.441029 
     resc: 15865.441029 resc_io: 15815.000000 resc_cpu: 1970167258
     resp: 15865.441029 resp_io: 15815.000000 resp_cpu: 1970167258
SM Join (with index on outer)
 ****** Costing Index CA_ADDRESS_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (FullScan)
    Index: CA_ADDRESS_PK_IDX
    resc_io: 13412.000000  resc_cpu: 494985634
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 13424.672825  Resp: 13424.672825  Degree: 1
  Outer table:  CUSTOMER_ADDRESS  Alias: CA
    resc: 13424.672825  card 1307.756551  bytes:   deg: 1  resp: 13424.672825
  Inner table:  CUSTOMER  Alias: C
    resc: 6343.174339  card: 1080000.000000  bytes:   deg: 1  resp: 6343.174339
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 3835 Row size:     29 Total Rows:        1080000
      Initial runs:   2 Merge passes:  1 IO Cost / pass:       2078
      Total IO sort cost: 5913.000000      Total CPU sort cost: 1108751040
      Total Temp space used: 60826000
  SM join: Resc: 25709.233862  Resp: 25709.233862  [multiMatchCost=0.000000]
  Outer table:  CUSTOMER_ADDRESS  Alias: CA
    resc: 3579.864371  card 1307.756551  bytes:   deg: 1  resp: 3579.864371
  Inner table:  CUSTOMER  Alias: C
    resc: 6343.174339  card: 1080000.000000  bytes:   deg: 1  resp: 6343.174339
    using dmeth: 2  #groups: 1
    Cost per ptn: 2.785445  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 6  probefrag: 3824  ppasses: 1
  Hash join: Resc: 9925.824155  Resp: 9925.824155  [multiMatchCost=0.000000]
HA Join
  HA cost: 9925.824155  
     resc: 9925.824155 resc_io: 9902.000000 resc_cpu: 930543470
     resp: 9925.824155 resp_io: 9902.000000 resp_cpu: 930543470
GROUP BY sort
GROUP BY/Correlated Subquery Filter adjustment factor: 1.000000
GROUP BY cardinality:  3087.000000, TABLE cardinality:  3087.000000
Vector group by not costed because no SYS_OP_XLATE_USE in group by.
kdmoGByPushdownValid: more than one table in group by    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 20 Row size:     52 Total Rows:           3087
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 40671077
      Total Temp space used: 0
Best:: JoinMethod: Hash
       Cost: 9926.865433  Degree: 1  Resp: 9926.865433  Card: 3087.351958 Bytes: 
***********************
Best so far:  Table#: 0  cost: 3579.864371  card: 1307.756551  bytes: 27468.000000
              Table#: 1  cost: 9926.865433  card: 3087.351958  bytes: 117306.000000
***********************
Join order[2]:  CUSTOMER[C]#1  CUSTOMER_ADDRESS[CA]#0

***************
Now joining: CUSTOMER_ADDRESS[CA]#0
***************
NL Join
  Outer table: Card: 1080000.000000  Cost: 6343.174339  Resp: 6343.174339  Degree: 1  Bytes: 
Access path analysis for CUSTOMER_ADDRESS
  Scan IO  Cost (Disk) =   3567.958334
  Scan CPU Cost (Disk) =   250417850.560000
  Cost of predicates:
    io = 0.000000, cpu = 249.764594, sel = 0.002422 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Chouteau County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Dinwiddie County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Dixie County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Harrisonburg city')
      io = NOCOST, cpu = 50.000000, sel = 0.000538 flag = 2048  ("CA"."CA_COUNTY"='Lowndes County')
    io = NOCOST, cpu = 50.000000, sel = 0.000002 flag = 2048  ("C"."C_CURRENT_ADDR_SK"="CA"."CA_ADDRESS_SK")
  Total Scan IO  Cost  =   3567.958334 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 540000.000000 (#rows))
                       =   3567.958334
  Total Scan CPU  Cost =   250417850.560000 (scan (Disk))
                         + 27000294.822154 (cpu filter eval) (= 50.000546 (per row) * 540000.000000 (#rows))
                       =   277418145.382154
  Inner table: CUSTOMER_ADDRESS  Alias: CA
  Access Path: TableScan
    NL Join:  Cost: 3861072123.013520  Resp: 3861072123.013520  Degree: 1
      Cost_io: 3853401333.000000  Cost_cpu: 299612033469265
      Resp_io: 3853401333.000000  Resp_cpu: 299612033469265
 ****** Costing Index CA_ADDRESS_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: CA_ADDRESS_PK_IDX
    resc_io: 2.000000  resc_cpu: 16683
    ix_sel: 1.8519e-06  ix_sel_with_filters: 1.8519e-06 
    NL Join : Cost: 2166804.459512  Resp: 2166804.459512  Degree: 1
      Cost_io: 2166332.000000  Cost_cpu: 18453712700
      Resp_io: 2166332.000000  Resp_cpu: 18453712700
 ****** Costing Index CA_ADDRESS_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: CA_ADDRESS_PK_IDX
    resc_io: 2.000000  resc_cpu: 16683
    ix_sel: 1.8519e-06  ix_sel_with_filters: 1.8519e-06 
    NL Join : Cost: 2166804.459512  Resp: 2166804.459512  Degree: 1
      Cost_io: 2166332.000000  Cost_cpu: 18453712700
      Resp_io: 2166332.000000  Resp_cpu: 18453712700
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 2166804.459512
          resc: 2166804.459512  resc_io: 2166332.000000  resc_cpu: 18453712700
          resp: 2166804.459512  resp_io: 2166332.000000  resc_cpu: 18453712700
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Join Card:  3087.351958 = outer (1080000.000000) * inner (1307.756551) * sel (2.1859e-06)
Join Card - Rounded: 3087 Computed: 3087.351958
Grouping column cardinality [C_CURRENT_]    772544
  Outer table:  CUSTOMER  Alias: C
    resc: 6343.174339  card 1080000.000000  bytes:   deg: 1  resp: 6343.174339
  Inner table:  CUSTOMER_ADDRESS  Alias: CA
    resc: 3579.864371  card: 1307.756551  bytes:   deg: 1  resp: 3579.864371
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 3835 Row size:     29 Total Rows:        1080000
      Initial runs:   2 Merge passes:  1 IO Cost / pass:       2078
      Total IO sort cost: 5913.000000      Total CPU sort cost: 1108751040
      Total Temp space used: 60826000
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 6 Row size:     34 Total Rows:           1308
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39668949
      Total Temp space used: 0
  SM join: Resc: 15865.441029  Resp: 15865.441029  [multiMatchCost=0.000000]
SM Join
  SM cost: 15865.441029 
     resc: 15865.441029 resc_io: 15815.000000 resc_cpu: 1970167258
     resp: 15865.441029 resp_io: 15815.000000 resp_cpu: 1970167258
  Outer table:  CUSTOMER  Alias: C
    resc: 6343.174339  card 1080000.000000  bytes:   deg: 1  resp: 6343.174339
  Inner table:  CUSTOMER_ADDRESS  Alias: CA
    resc: 3579.864371  card: 1307.756551  bytes:   deg: 1  resp: 3579.864371
    using dmeth: 2  #groups: 1
    Cost per ptn: 1487.571924  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 3824  probefrag: 6  ppasses: 1
  Hash join: Resc: 11410.615189  Resp: 11410.615189  [multiMatchCost=0.004555]
  Outer table:  CUSTOMER_ADDRESS  Alias: CA
    resc: 3579.864371  card 1307.756551  bytes:   deg: 1  resp: 3579.864371
  Inner table:  CUSTOMER  Alias: C
    resc: 6343.174339  card: 1080000.000000  bytes:   deg: 1  resp: 6343.174339
    using dmeth: 2  #groups: 1
    Cost per ptn: 2.785445  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 6  probefrag: 3824  ppasses: 1
  Hash join: Resc: 9925.824155  Resp: 9925.824155  [multiMatchCost=0.000000]
HA Join
  HA cost: 9925.824155 swapped 
     resc: 9925.824155 resc_io: 9902.000000 resc_cpu: 930543470
     resp: 9925.824155 resp_io: 9902.000000 resp_cpu: 930543470
GROUP BY sort
GROUP BY/Correlated Subquery Filter adjustment factor: 1.000000
GROUP BY cardinality:  3087.000000, TABLE cardinality:  3087.000000
Vector group by not costed because no SYS_OP_XLATE_USE in group by.
kdmoGByPushdownValid: more than one table in group by    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 20 Row size:     52 Total Rows:           3087
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 40671077
      Total Temp space used: 0
Join order aborted: cost > best plan cost
***********************
(newjo-stop-1) k:0, spcnt:0, perm:2, maxperm:2000

*********************************
Number of join permutations tried: 2
*********************************
Enumerating distribution method (advanced)
--- Distribution method for 
join between CA[CUSTOMER_ADDRESS](serial) and C[CUSTOMER](serial); jm = 1; right side access path = TableScan
---- serial Hash-Join -> NONE

kkoaccsqf: Current query block SEL$5A0F6FA7 (#16) is serial
kkoaccsqf: correlated subquery query block SEL$2 (#2) in filter               : serial
Final adjusted join cardinality: 1.000000, sq. fil. factor: 1080000.000000
(newjo-save)    [1 0 ]
GROUP BY/Correlated Subquery Filter adjustment factor: 1.000000
GROUP BY cardinality:  1.000000, TABLE cardinality:  1.000000
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     52 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39058824
      Total Temp space used: 0
LORE: Or-Expansion validity checks failed on query block SEL$5A0F6FA7 (#16) because Cost based OR expansion enabled
Transfer Optimizer annotations for query block SEL$5A0F6FA7 (#16)
Final cost for query block SEL$5A0F6FA7 (#16) - All Rows Plan:
  Best join order: 1
  Cost: 29998.814031  Degree: 1  Card: 1.000000  Bytes: 117344.000000
  Resc: 29998.814031  Resc_io: 29969.787726  Resc_cpu: 1133733341
  Resp: 29998.814031  Resp_io: 29969.787726  Resc_cpu: 1133733341
kkoqbc-subheap (delete addr=0x7f0471f29ee0, in-use=80560, alloc=92432)
kkoqbc-end:
        :
    call(in-use=1746936, alloc=1861624), compile(in-use=3761184, alloc=3764760), execution(in-use=59800, alloc=60816)

kkoqbc: finish optimizing query block SEL$5A0F6FA7 (#16)
kkoqbc: optimizing query block SEL$67C23549 (#1)
        
        :
    call(in-use=1746936, alloc=1861624), compile(in-use=3761184, alloc=3764760), execution(in-use=59800, alloc=60816)

kkoqbc-subheap (create addr=0x7f0471f29ee0)
****************
QUERY BLOCK TEXT
****************
SELECT /*query10*/
    cd_gender,
    cd_marital_status,
    cd_education_status,
    COUNT(*) cnt1,
    cd_purchase_estimate,
    COUNT(*) cnt2,
    cd_credit_rating,
    COUNT(*) cnt3,
    cd_dep_count,
    COUNT(*) cnt4,
    cd_dep_employed_count,
    COUNT(*) cnt5,
    cd_dep_college_count,
    COUNT(*) cnt6
FROM
    customer c,
    customer_address ca,
    customer_demographics
WHERE
    -- join predicates
        c.c_current_addr_sk = ca.ca_address_sk
    AND cd_demo_sk = c.c_current_cdemo_sk
    -- filter predicates
    AND ca.ca_county IN (
        'Chouteau County',
        'Dixie County',
        'Harrisonburg city',
        'Lowndes County',
        'Dinwiddie County'
    )
    -- filter predicate (subquery)
    AND EXISTS (
        SELECT
            *
        FROM
            store_sales ss,
            date_dim
        WHERE
            c.c_customer_sk = ss.ss_customer_sk
            AND ss_sold_date_sk = d_date_sk
            AND d_year = 2001
            AND d_moy BETWEEN 1 AND 1 + 3
            AND ( EXISTS (
                SELECT
                    *
                FROM
                    web_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = ws_bill_customer_sk
                    AND ws_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            )
                  OR EXISTS (
                SELECT
                    *
                FROM
                    catalog_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = cs_ship_customer_sk
                    AND cs_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            ) )
    )
GROUP BY
    cd_gender,
    cd_marital_status,
    cd_education_status,
    cd_purchase_estimate,
    cd_credit_rating,
    cd_dep_count,
    cd_dep_employed_count,
    cd_dep_college_count

---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$67C23549 nbfros=2 flg=0
  fro(0): flg=1 objn=0 hint_alias="VW_GBF_12"@"SEL$4DBD13CE"
  fro(1): flg=1 objn=0 hint_alias="VW_GBC_11"@"SEL$FD007FC2"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3255 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: VW_GBC_11  Alias: VW_GBC_11  (NOT ANALYZED)
  #Rows: 0  SSZ: 0  LGR: 0  #Blks:  0  AvgRowLen:  0.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 0
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
***********************
Table Stats::
  Table: VW_GBF_12  Alias: VW_GBF_12  (NOT ANALYZED)
  #Rows: 0  SSZ: 0  LGR: 0  #Blks:  0  AvgRowLen:  0.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 0
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#8): ITEM_8(CHARACTER)  Part#: 0
    AvgLen: 2 NDV: 2 Nulls: 0 Density: 0.249925
    Histogram: Freq  #Bkts: 2  UncompBkts: 1920800  EndPtVals: 2  ActualVal: no 
  Column (#9): ITEM_9(CHARACTER)  Part#: 0
    AvgLen: 2 NDV: 5 Nulls: 0 Density: 0.098953
    Histogram: Freq  #Bkts: 5  UncompBkts: 1920800  EndPtVals: 5  ActualVal: yes
  Column (#10): ITEM_10(CHARACTER)  Part#: 0
    AvgLen: 21 NDV: 7 Nulls: 0 Density: 0.070771
    Histogram: Freq  #Bkts: 7  UncompBkts: 1920800  EndPtVals: 7  ActualVal: yes
  Column (#11): ITEM_11(NUMBER)  Part#: 0
    AvgLen: 4 NDV: 9500 Nulls: 0 Density: 0.000105 Min: 500.000000 Max: 9999.000000
  Column (#12): ITEM_12(CHARACTER)  Part#: 0
    AvgLen: 11 NDV: 4 Nulls: 0 Density: 0.250000
  Column (#13): ITEM_13(NUMBER)  Part#: 0
    AvgLen: 3 NDV: 6 Nulls: 0 Density: 0.166667 Min: 0.000000 Max: 5.000000
  Column (#14): ITEM_14(NUMBER)  Part#: 0
    AvgLen: 3 NDV: 6 Nulls: 0 Density: 0.166667 Min: 0.000000 Max: 5.000000
  Column (#15): ITEM_15(NUMBER)  Part#: 0
    AvgLen: 3 NDV: 6 Nulls: 0 Density: 0.166667 Min: 0.000000 Max: 5.000000
  Column (#1): ITEM_1(NUMBER)  Part#: 0
    AvgLen: 6 NDV: 1920800 Nulls: 0 Density: 0.000001 Min: 1.000000 Max: 1920800.000000
  Column (#1): ITEM_1(NUMBER)
    AvgLen: 6 NDV: 772544 Nulls: 0 Density: 0.000001 Min: 18.000000 Max: 1920799.000000
try to generate single-table filter predicates from ORs for query block SEL$67C23549 (#1)
finally: "VW_GBC_11"."ITEM_1"="VW_GBF_12"."ITEM_1"

=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$67C23549 (#1)
Applicable DS directives:
Return code in qosdSetupDirCtx4QB: NODIR
=====================================
SPD: END context at query block level
=====================================
Access path analysis for VW_GBF_12

Access path analysis for VW_GBC_11

Grouping column cardinality [    ITEM_8]    2
Grouping column cardinality [    ITEM_9]    5
Grouping column cardinality [   ITEM_10]    7
Grouping column cardinality [   ITEM_11]    9500
Grouping column cardinality [   ITEM_12]    4
Grouping column cardinality [   ITEM_13]    6
Grouping column cardinality [   ITEM_14]    6
Grouping column cardinality [   ITEM_15]    6
***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE:  Bypassed; QB is not duplicate insignificant SEL$67C23549 (#1)
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  VW_GBF_12[VW_GBF_12]#0  VW_GBC_11[VW_GBC_11]#1

***************
Now joining: VW_GBC_11[VW_GBC_11]#1
***************
NL Join
  Outer table: Card: 1.000000  Cost: 29998.814031  Resp: 29998.814031  Degree: 1  Bytes: 
Access path analysis for VW_GBC_11
  Inner table: VW_GBC_11  Alias: VW_GBC_11
  Access Path: TableScan
    NL Join:  Cost: 34692.204788  Resp: 34692.204788  Degree: 1
      Cost_io: 34644.787726  Cost_cpu: 1852054667
      Resp_io: 34644.787726  Resp_cpu: 1852054667

  Best NL cost: 34692.204788
          resc: 34692.204788  resc_io: 34644.787726  resc_cpu: 1852054667
          resp: 34692.204788  resp_io: 34644.787726  resc_cpu: 1852054667
  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = JOIN
Join Card:  1.000000 = outer (1.000000) * inner (1920800.000000) * sel (5.2062e-07)
Join Card - Rounded: 1 Computed: 1.000000
Grouping column cardinality [    ITEM_8]    2
Grouping column cardinality [    ITEM_9]    5
Grouping column cardinality [   ITEM_10]    7
Grouping column cardinality [   ITEM_11]    9500
Grouping column cardinality [   ITEM_12]    4
Grouping column cardinality [   ITEM_13]    6
Grouping column cardinality [   ITEM_14]    6
Grouping column cardinality [   ITEM_15]    6
  Outer table:  VW_GBF_12  Alias: VW_GBF_12
    resc: 29998.814031  card 1.000000  bytes:   deg: 1  resp: 29998.814031
  Inner table:  VW_GBC_11  Alias: VW_GBC_11
    resc: 4693.390757  card: 1920800.000000  bytes:   deg: 1  resp: 4693.390757
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 21400 Row size:     91 Total Rows:        1920800
      Initial runs:   2 Merge passes:  1 IO Cost / pass:      11592
      Total IO sort cost: 32992.000000      Total CPU sort cost: 2372445463
      Total Temp space used: 419619000
  SM join: Resc: 67744.945109  Resp: 67744.945109  [multiMatchCost=0.000000]
SM Join
  SM cost: 67744.945109 
     resc: 67744.945109 resc_io: 67636.787726 resc_cpu: 4224500130
     resp: 67744.945109 resp_io: 67636.787726 resp_cpu: 4224500130
  Outer table:  VW_GBF_12  Alias: VW_GBF_12
    resc: 29998.814031  card 1.000000  bytes:   deg: 1  resp: 29998.814031
  Inner table:  VW_GBC_11  Alias: VW_GBC_11
    resc: 4693.390757  card: 1920800.000000  bytes:   deg: 1  resp: 4693.390757
    using dmeth: 2  #groups: 1
    Cost per ptn: 4.933076  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 1  probefrag: 19931  ppasses: 1
  Hash join: Resc: 34697.137864  Resp: 34697.137864  [multiMatchCost=0.000000]
HA Join
  HA cost: 34697.137864  
     resc: 34697.137864 resc_io: 34644.787726 resc_cpu: 2044734817
     resp: 34697.137864 resp_io: 34644.787726 resp_cpu: 2044734817
GROUP BY sort
GROUP BY/Correlated Subquery Filter adjustment factor: 0.088388
GROUP BY cardinality:  1.000000, TABLE cardinality:  1.000000
Vector group by not costed because no SYS_OP_XLATE_USE in group by.
kdmoGByPushdownValid: more than one table in group by    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     183 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39058824
      Total Temp space used: 0
Best:: JoinMethod: Hash
       Cost: 34698.137864  Degree: 1  Resp: 34698.137864  Card: 1.000000 Bytes: 
***********************
Best so far:  Table#: 0  cost: 29998.814031  card: 1.000000  bytes: 84.000000
              Table#: 1  cost: 34698.137864  card: 1.000000  bytes: 157.000000
***********************
Join order[2]:  VW_GBC_11[VW_GBC_11]#1  VW_GBF_12[VW_GBF_12]#0

***************
Now joining: VW_GBF_12[VW_GBF_12]#0
***************
NL Join
  Outer table: Card: 1920800.000000  Cost: 4693.390757  Resp: 4693.390757  Degree: 1  Bytes: 
Access path analysis for VW_GBF_12
  Inner table: VW_GBF_12  Alias: VW_GBF_12
  Access Path: TableScan
    NL Join:  Cost: 57621726684.727562  Resp: 57621726684.727562  Degree: 1
      Cost_io: 57565972938.867218  Cost_cpu: 2177675720662901
      Resp_io: 57565972938.867218  Resp_cpu: 2177675720662901

  Best NL cost: 57621726684.727562
          resc: 57621726684.727562  resc_io: 57565972938.867218  resc_cpu: 2177675720662901
          resp: 57621726684.727562  resp_io: 57565972938.867218  resc_cpu: 2177675720662901
  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = JOIN
Join Card:  1.000000 = outer (1920800.000000) * inner (1.000000) * sel (5.2062e-07)
Join Card - Rounded: 1 Computed: 1.000000
Grouping column cardinality [    ITEM_8]    2
Grouping column cardinality [    ITEM_9]    5
Grouping column cardinality [   ITEM_10]    7
Grouping column cardinality [   ITEM_11]    9500
Grouping column cardinality [   ITEM_12]    4
Grouping column cardinality [   ITEM_13]    6
Grouping column cardinality [   ITEM_14]    6
Grouping column cardinality [   ITEM_15]    6
  Outer table:  VW_GBC_11  Alias: VW_GBC_11
    resc: 4693.390757  card 1920800.000000  bytes:   deg: 1  resp: 4693.390757
  Inner table:  VW_GBF_12  Alias: VW_GBF_12
    resc: 29998.814031  card: 1.000000  bytes:   deg: 1  resp: 29998.814031
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 21400 Row size:     91 Total Rows:        1920800
      Initial runs:   2 Merge passes:  1 IO Cost / pass:      11592
      Total IO sort cost: 32992.000000      Total CPU sort cost: 2372445463
      Total Temp space used: 419619000
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     103 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39058824
      Total Temp space used: 0
  SM join: Resc: 67745.945109  Resp: 67745.945109  [multiMatchCost=0.000000]
SM Join
  SM cost: 67745.945109 
     resc: 67745.945109 resc_io: 67636.787726 resc_cpu: 4263558953
     resp: 67745.945109 resp_io: 67636.787726 resp_cpu: 4263558953
  Outer table:  VW_GBC_11  Alias: VW_GBC_11
    resc: 4693.390757  card 1920800.000000  bytes:   deg: 1  resp: 4693.390757
  Inner table:  VW_GBF_12  Alias: VW_GBF_12
    resc: 29998.814031  card: 1.000000  bytes:   deg: 1  resp: 29998.814031
    using dmeth: 2  #groups: 1
    Cost per ptn: 11399.496731  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 19931  probefrag: 1  ppasses: 1
  Hash join: Resc: 46091.701520  Resp: 46091.701520  [multiMatchCost=0.000000]
  Outer table:  VW_GBF_12  Alias: VW_GBF_12
    resc: 29998.814031  card 1.000000  bytes:   deg: 1  resp: 29998.814031
  Inner table:  VW_GBC_11  Alias: VW_GBC_11
    resc: 4693.390757  card: 1920800.000000  bytes:   deg: 1  resp: 4693.390757
    using dmeth: 2  #groups: 1
    Cost per ptn: 4.933076  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 1  probefrag: 19931  ppasses: 1
  Hash join: Resc: 34697.137864  Resp: 34697.137864  [multiMatchCost=0.000000]
HA Join
  HA cost: 34697.137864 swapped 
     resc: 34697.137864 resc_io: 34644.787726 resc_cpu: 2044734817
     resp: 34697.137864 resp_io: 34644.787726 resp_cpu: 2044734817
GROUP BY sort
GROUP BY/Correlated Subquery Filter adjustment factor: 0.088388
GROUP BY cardinality:  1.000000, TABLE cardinality:  1.000000
Vector group by not costed because no SYS_OP_XLATE_USE in group by.
kdmoGByPushdownValid: more than one table in group by    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     183 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39058824
      Total Temp space used: 0
Join order aborted: cost > best plan cost
***********************
(newjo-stop-1) k:0, spcnt:0, perm:2, maxperm:2000

*********************************
Number of join permutations tried: 2
*********************************
Enumerating distribution method (advanced)
--- Distribution method for 
join between VW_GBF_12[VW_GBF_12](serial) and VW_GBC_11[VW_GBC_11](serial); jm = 1; right side access path = TableScan
---- serial Hash-Join -> NONE

(newjo-save)    [1 0 ]
GROUP BY/Correlated Subquery Filter adjustment factor: 0.088388
GROUP BY cardinality:  1.000000, TABLE cardinality:  1.000000
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     183 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39058824
      Total Temp space used: 0
LORE: Or-Expansion validity checks failed on query block SEL$67C23549 (#1) because Cost based OR expansion enabled
Transfer Optimizer annotations for query block SEL$67C23549 (#1)
Final cost for query block SEL$67C23549 (#1) - All Rows Plan:
  Best join order: 1
  Cost: 34698.137864  Degree: 1  Card: 1.000000  Bytes: 314.000000
  Resc: 34698.137864  Resc_io: 34644.787726  Resc_cpu: 2083793641
  Resp: 34698.137864  Resp_io: 34644.787726  Resc_cpu: 2083793641
kkoqbc-subheap (delete addr=0x7f0471f29ee0, in-use=37344, alloc=49272)
kkoqbc-end:
        :
    call(in-use=1765280, alloc=1834752), compile(in-use=3764888, alloc=3768904), execution(in-use=59800, alloc=60816)

kkoqbc: finish optimizing query block SEL$67C23549 (#1)
CBQT: Saved costed qb# 15 (SEL$4C89B77A), key = SEL$4C89B77A_00008040_2
CBQT: Saved costed qb# 4 (SEL$3), key = SEL$3_00010000_0
CBQT: Saved costed qb# 3 (SEL$4), key = SEL$4_00010000_0
CBQT: Saved costed qb# 2 (SEL$2), key = SEL$2_00010000_0
CBQT: Saved costed qb# 16 (SEL$5A0F6FA7), key = SEL$5A0F6FA7_00008040_2
CBQT: Saved costed qb# 1 (SEL$67C23549), key = SEL$67C23549_00000040_0
GBP: Not update best state, Cost = 34698.137864
GBP: Starting iteration 10, state space = (1,2,3) : (0,F,0)
QB before group-by removal:******* UNPARSED QUERY IS *******
SELECT "CUSTOMER_DEMOGRAPHICS"."CD_GENDER" "CD_GENDER","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS" "CD_MARITAL_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS" "CD_EDUCATION_STATUS",SUM("VW_GBF_13"."ITEM_2") "CNT1","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE" "CD_PURCHASE_ESTIMATE",SUM("VW_GBF_13"."ITEM_3") "CNT2","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING" "CD_CREDIT_RATING",SUM("VW_GBF_13"."ITEM_4") "CNT3","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT" "CD_DEP_COUNT",SUM("VW_GBF_13"."ITEM_5") "CNT4","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT" "CD_DEP_EMPLOYED_COUNT",SUM("VW_GBF_13"."ITEM_6") "CNT5","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT" "CD_DEP_COLLEGE_COUNT",SUM("VW_GBF_13"."ITEM_7") "CNT6" FROM  (SELECT "CA"."CA_ADDRESS_SK" "ITEM_1",COUNT(*) "ITEM_2",COUNT(*) "ITEM_3",COUNT(*) "ITEM_4",COUNT(*) "ITEM_5",COUNT(*) "ITEM_6",COUNT(*) "ITEM_7" FROM "TPCDS"."CUSTOMER_ADDRESS" "CA" WHERE "CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County' GROUP BY "CA"."CA_ADDRESS_SK") "VW_GBF_13","TPCDS"."CUSTOMER" "C","TPCDS"."CUSTOMER_DEMOGRAPHICS" "CUSTOMER_DEMOGRAPHICS" WHERE "C"."C_CURRENT_ADDR_SK"="VW_GBF_13"."ITEM_1" AND "CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK"="C"."C_CURRENT_CDEMO_SK" AND  EXISTS (SELECT 0 FROM "TPCDS"."STORE_SALES" "SS","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="SS"."SS_CUSTOMER_SK" AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3 AND ( EXISTS (SELECT 0 FROM "TPCDS"."WEB_SALES" "WEB_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="WEB_SALES"."WS_BILL_CUSTOMER_SK" AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3) OR  EXISTS (SELECT 0 FROM "TPCDS"."CATALOG_SALES" "CATALOG_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="CATALOG_SALES"."CS_SHIP_CUSTOMER_SK" AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3))) GROUP BY "CUSTOMER_DEMOGRAPHICS"."CD_GENDER","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT" ORDER BY "CUSTOMER_DEMOGRAPHICS"."CD_GENDER","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT"
Registered qb: SEL$1D24B11E 0x71fcdba0 (UNKNOWN QUERY BLOCK ORIGIN SEL$1; SEL$1; LIST 13)
---------------------
QUERY BLOCK SIGNATURE
---------------------
  signature (): qb_name=SEL$1D24B11E nbfros=3 flg=0
    fro(0): flg=0 objn=74168 hint_alias="C"@"SEL$1"
    fro(1): flg=0 objn=74170 hint_alias="CUSTOMER_DEMOGRAPHICS"@"SEL$1"
    fro(2): flg=1 objn=0 hint_alias="VW_GBF_13"@"SEL$7132965F"

GBP: Transformed query
******* UNPARSED QUERY IS *******
SELECT "CUSTOMER_DEMOGRAPHICS"."CD_GENDER" "CD_GENDER","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS" "CD_MARITAL_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS" "CD_EDUCATION_STATUS",SUM("VW_GBF_13"."ITEM_2") "CNT1","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE" "CD_PURCHASE_ESTIMATE",SUM("VW_GBF_13"."ITEM_3") "CNT2","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING" "CD_CREDIT_RATING",SUM("VW_GBF_13"."ITEM_4") "CNT3","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT" "CD_DEP_COUNT",SUM("VW_GBF_13"."ITEM_5") "CNT4","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT" "CD_DEP_EMPLOYED_COUNT",SUM("VW_GBF_13"."ITEM_6") "CNT5","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT" "CD_DEP_COLLEGE_COUNT",SUM("VW_GBF_13"."ITEM_7") "CNT6" FROM  (SELECT "CA"."CA_ADDRESS_SK" "ITEM_1",COUNT(*) "ITEM_2",COUNT(*) "ITEM_3",COUNT(*) "ITEM_4",COUNT(*) "ITEM_5",COUNT(*) "ITEM_6",COUNT(*) "ITEM_7" FROM "TPCDS"."CUSTOMER_ADDRESS" "CA" WHERE "CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County' GROUP BY "CA"."CA_ADDRESS_SK") "VW_GBF_13","TPCDS"."CUSTOMER" "C","TPCDS"."CUSTOMER_DEMOGRAPHICS" "CUSTOMER_DEMOGRAPHICS" WHERE "C"."C_CURRENT_ADDR_SK"="VW_GBF_13"."ITEM_1" AND "CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK"="C"."C_CURRENT_CDEMO_SK" AND  EXISTS (SELECT 0 FROM "TPCDS"."STORE_SALES" "SS","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="SS"."SS_CUSTOMER_SK" AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3 AND ( EXISTS (SELECT 0 FROM "TPCDS"."WEB_SALES" "WEB_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="WEB_SALES"."WS_BILL_CUSTOMER_SK" AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3) OR  EXISTS (SELECT 0 FROM "TPCDS"."CATALOG_SALES" "CATALOG_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="CATALOG_SALES"."CS_SHIP_CUSTOMER_SK" AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3))) GROUP BY "CUSTOMER_DEMOGRAPHICS"."CD_GENDER","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT" ORDER BY "CUSTOMER_DEMOGRAPHICS"."CD_GENDER","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT"
GBP: Not update best state, Cost = 34698.137864
GBP: Starting iteration 11, state space = (1,2,3) : (C,F,C)
Registered qb: SEL$7200397A 0x72074ff0 (QUERY BLOCK TABLES CHANGED SEL$C73B0CC3)
---------------------
QUERY BLOCK SIGNATURE
---------------------
  signature (): qb_name=SEL$7200397A nbfros=2 flg=0
    fro(0): flg=5 objn=0 hint_alias="VW_GBF_15"@"SEL$7200397A"
    fro(1): flg=1 objn=0 hint_alias="VW_GBC_14"@"SEL$C73B0CC3"

Registered qb: SEL$68F80278 0x7207c4e8 (SPLIT/MERGE QUERY BLOCKS SEL$7200397A)
---------------------
QUERY BLOCK SIGNATURE
---------------------
  signature (): qb_name=SEL$68F80278 nbfros=1 flg=0
    fro(0): flg=0 objn=74169 hint_alias="CA"@"SEL$1"

QB before group-by removal:******* UNPARSED QUERY IS *******
SELECT "C"."C_CURRENT_ADDR_SK" "ITEM_1",COUNT(*) "ITEM_2",COUNT(*) "ITEM_3",COUNT(*) "ITEM_4",COUNT(*) "ITEM_5",COUNT(*) "ITEM_6",COUNT(*) "ITEM_7","CUSTOMER_DEMOGRAPHICS"."CD_GENDER" "ITEM_8","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS" "ITEM_9","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS" "ITEM_10","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE" "ITEM_11","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING" "ITEM_12","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT" "ITEM_13","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT" "ITEM_14","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT" "ITEM_15" FROM "TPCDS"."CUSTOMER_DEMOGRAPHICS" "CUSTOMER_DEMOGRAPHICS","TPCDS"."CUSTOMER" "C" WHERE "CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK"="C"."C_CURRENT_CDEMO_SK" AND  EXISTS (SELECT 0 FROM "TPCDS"."STORE_SALES" "SS","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="SS"."SS_CUSTOMER_SK" AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3 AND ( EXISTS (SELECT 0 FROM "TPCDS"."WEB_SALES" "WEB_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="WEB_SALES"."WS_BILL_CUSTOMER_SK" AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3) OR  EXISTS (SELECT 0 FROM "TPCDS"."CATALOG_SALES" "CATALOG_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="CATALOG_SALES"."CS_SHIP_CUSTOMER_SK" AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3))) GROUP BY "C"."C_CURRENT_ADDR_SK","CUSTOMER_DEMOGRAPHICS"."CD_GENDER","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT"
Registered qb: SEL$8AF2EA6B 0x72074ff0 (UNKNOWN QUERY BLOCK ORIGIN SEL$1; SEL$1; LIST LIST 14)
---------------------
QUERY BLOCK SIGNATURE
---------------------
  signature (): qb_name=SEL$8AF2EA6B nbfros=2 flg=0
    fro(0): flg=1 objn=0 hint_alias="VW_GBF_15"@"SEL$7200397A"
    fro(1): flg=1 objn=0 hint_alias="VW_GBC_14"@"SEL$C73B0CC3"

GBP: Transformed query
******* UNPARSED QUERY IS *******
SELECT "VW_GBC_14"."ITEM_8" "CD_GENDER","VW_GBC_14"."ITEM_9" "CD_MARITAL_STATUS","VW_GBC_14"."ITEM_10" "CD_EDUCATION_STATUS",NVL(SUM("VW_GBC_14"."ITEM_2"*"VW_GBF_15"."ITEM_2"),0) "CNT1","VW_GBC_14"."ITEM_11" "CD_PURCHASE_ESTIMATE",NVL(SUM("VW_GBC_14"."ITEM_3"*"VW_GBF_15"."ITEM_3"),0) "CNT2","VW_GBC_14"."ITEM_12" "CD_CREDIT_RATING",NVL(SUM("VW_GBC_14"."ITEM_4"*"VW_GBF_15"."ITEM_4"),0) "CNT3","VW_GBC_14"."ITEM_13" "CD_DEP_COUNT",NVL(SUM("VW_GBC_14"."ITEM_5"*"VW_GBF_15"."ITEM_5"),0) "CNT4","VW_GBC_14"."ITEM_14" "CD_DEP_EMPLOYED_COUNT",NVL(SUM("VW_GBC_14"."ITEM_6"*"VW_GBF_15"."ITEM_6"),0) "CNT5","VW_GBC_14"."ITEM_15" "CD_DEP_COLLEGE_COUNT",NVL(SUM("VW_GBC_14"."ITEM_7"*"VW_GBF_15"."ITEM_7"),0) "CNT6" FROM  (SELECT "CA"."CA_ADDRESS_SK" "ITEM_1",COUNT(*) "ITEM_2",COUNT(*) "ITEM_3",COUNT(*) "ITEM_4",COUNT(*) "ITEM_5",COUNT(*) "ITEM_6",COUNT(*) "ITEM_7" FROM "TPCDS"."CUSTOMER_ADDRESS" "CA" WHERE "CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County' GROUP BY "CA"."CA_ADDRESS_SK") "VW_GBF_15", (SELECT "C"."C_CURRENT_ADDR_SK" "ITEM_1",COUNT(*) "ITEM_2",COUNT(*) "ITEM_3",COUNT(*) "ITEM_4",COUNT(*) "ITEM_5",COUNT(*) "ITEM_6",COUNT(*) "ITEM_7","CUSTOMER_DEMOGRAPHICS"."CD_GENDER" "ITEM_8","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS" "ITEM_9","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS" "ITEM_10","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE" "ITEM_11","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING" "ITEM_12","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT" "ITEM_13","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT" "ITEM_14","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT" "ITEM_15" FROM "TPCDS"."CUSTOMER_DEMOGRAPHICS" "CUSTOMER_DEMOGRAPHICS","TPCDS"."CUSTOMER" "C" WHERE "CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK"="C"."C_CURRENT_CDEMO_SK" AND  EXISTS (SELECT 0 FROM "TPCDS"."STORE_SALES" "SS","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="SS"."SS_CUSTOMER_SK" AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3 AND ( EXISTS (SELECT 0 FROM "TPCDS"."WEB_SALES" "WEB_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="WEB_SALES"."WS_BILL_CUSTOMER_SK" AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3) OR  EXISTS (SELECT 0 FROM "TPCDS"."CATALOG_SALES" "CATALOG_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="CATALOG_SALES"."CS_SHIP_CUSTOMER_SK" AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3))) GROUP BY "C"."C_CURRENT_ADDR_SK","CUSTOMER_DEMOGRAPHICS"."CD_GENDER","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT") "VW_GBC_14" WHERE "VW_GBC_14"."ITEM_1"="VW_GBF_15"."ITEM_1" GROUP BY "VW_GBC_14"."ITEM_8","VW_GBC_14"."ITEM_9","VW_GBC_14"."ITEM_10","VW_GBC_14"."ITEM_11","VW_GBC_14"."ITEM_12","VW_GBC_14"."ITEM_13","VW_GBC_14"."ITEM_14","VW_GBC_14"."ITEM_15" ORDER BY "VW_GBC_14"."ITEM_8","VW_GBC_14"."ITEM_9","VW_GBC_14"."ITEM_10","VW_GBC_14"."ITEM_11","VW_GBC_14"."ITEM_12","VW_GBC_14"."ITEM_13","VW_GBC_14"."ITEM_14","VW_GBC_14"."ITEM_15"
GBP: Not update best state, Cost = 34698.137864
GBP: Starting iteration 12, state space = (1,2,3) : (0,0,F)
QB before group-by removal:******* UNPARSED QUERY IS *******
SELECT "C"."C_CURRENT_CDEMO_SK" "ITEM_1","C"."C_CURRENT_ADDR_SK" "ITEM_2",COUNT(*) "ITEM_3",COUNT(*) "ITEM_4",COUNT(*) "ITEM_5",COUNT(*) "ITEM_6",COUNT(*) "ITEM_7",COUNT(*) "ITEM_8" FROM "TPCDS"."CUSTOMER" "C" WHERE  EXISTS (SELECT 0 FROM "TPCDS"."STORE_SALES" "SS","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="SS"."SS_CUSTOMER_SK" AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3 AND ( EXISTS (SELECT 0 FROM "TPCDS"."WEB_SALES" "WEB_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="WEB_SALES"."WS_BILL_CUSTOMER_SK" AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3) OR  EXISTS (SELECT 0 FROM "TPCDS"."CATALOG_SALES" "CATALOG_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="CATALOG_SALES"."CS_SHIP_CUSTOMER_SK" AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3))) GROUP BY "C"."C_CURRENT_CDEMO_SK","C"."C_CURRENT_ADDR_SK"
Registered qb: SEL$56FBA5F4 0x72080d88 (UNKNOWN QUERY BLOCK ORIGIN SEL$1; SEL$1; LIST 16)
---------------------
QUERY BLOCK SIGNATURE
---------------------
  signature (): qb_name=SEL$56FBA5F4 nbfros=3 flg=0
    fro(0): flg=0 objn=74169 hint_alias="CA"@"SEL$1"
    fro(1): flg=0 objn=74170 hint_alias="CUSTOMER_DEMOGRAPHICS"@"SEL$1"
    fro(2): flg=1 objn=0 hint_alias="VW_GBF_16"@"SEL$F67CBA62"

GBP: Transformed query
******* UNPARSED QUERY IS *******
SELECT "CUSTOMER_DEMOGRAPHICS"."CD_GENDER" "CD_GENDER","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS" "CD_MARITAL_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS" "CD_EDUCATION_STATUS",SUM("VW_GBF_16"."ITEM_3") "CNT1","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE" "CD_PURCHASE_ESTIMATE",SUM("VW_GBF_16"."ITEM_4") "CNT2","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING" "CD_CREDIT_RATING",SUM("VW_GBF_16"."ITEM_5") "CNT3","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT" "CD_DEP_COUNT",SUM("VW_GBF_16"."ITEM_6") "CNT4","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT" "CD_DEP_EMPLOYED_COUNT",SUM("VW_GBF_16"."ITEM_7") "CNT5","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT" "CD_DEP_COLLEGE_COUNT",SUM("VW_GBF_16"."ITEM_8") "CNT6" FROM  (SELECT "C"."C_CURRENT_CDEMO_SK" "ITEM_1","C"."C_CURRENT_ADDR_SK" "ITEM_2",COUNT(*) "ITEM_3",COUNT(*) "ITEM_4",COUNT(*) "ITEM_5",COUNT(*) "ITEM_6",COUNT(*) "ITEM_7",COUNT(*) "ITEM_8" FROM "TPCDS"."CUSTOMER" "C" WHERE  EXISTS (SELECT 0 FROM "TPCDS"."STORE_SALES" "SS","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="SS"."SS_CUSTOMER_SK" AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3 AND ( EXISTS (SELECT 0 FROM "TPCDS"."WEB_SALES" "WEB_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="WEB_SALES"."WS_BILL_CUSTOMER_SK" AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3) OR  EXISTS (SELECT 0 FROM "TPCDS"."CATALOG_SALES" "CATALOG_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="CATALOG_SALES"."CS_SHIP_CUSTOMER_SK" AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3))) GROUP BY "C"."C_CURRENT_CDEMO_SK","C"."C_CURRENT_ADDR_SK") "VW_GBF_16","TPCDS"."CUSTOMER_ADDRESS" "CA","TPCDS"."CUSTOMER_DEMOGRAPHICS" "CUSTOMER_DEMOGRAPHICS" WHERE "VW_GBF_16"."ITEM_2"="CA"."CA_ADDRESS_SK" AND "CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK"="VW_GBF_16"."ITEM_1" AND ("CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County') GROUP BY "CUSTOMER_DEMOGRAPHICS"."CD_GENDER","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT" ORDER BY "CUSTOMER_DEMOGRAPHICS"."CD_GENDER","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT"
  Column (#3): C_CURRENT_CDEMO_SK(NUMBER)
    AvgLen: 6 NDV: 772544 Nulls: 0 Density: 0.000001 Min: 18.000000 Max: 1920799.000000
  Column (#5): C_CURRENT_ADDR_SK(NUMBER)
    AvgLen: 5 NDV: 457472 Nulls: 0 Density: 0.000002 Min: 1.000000 Max: 539997.000000
FPD: Considering simple filter push in query block SEL$56FBA5F4 (#1)
"VW_GBF_16"."ITEM_2"="CA"."CA_ADDRESS_SK" AND "CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK"="VW_GBF_16"."ITEM_1" AND ("CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County')
try to generate transitive predicate from check constraints for query block SEL$56FBA5F4 (#1)
finally: "VW_GBF_16"."ITEM_2"="CA"."CA_ADDRESS_SK" AND "CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK"="VW_GBF_16"."ITEM_1" AND ("CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County')

FPD: Considering simple filter push in query block SEL$F5B72DD9 (#20)
 EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM")
FPD: Considering simple filter push in query block SEL$2 (#2)
"SS"."SS_CUSTOMER_SK"=:B1 AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND ( EXISTS (SELECT 0 FROM "WEB_SALES" "WEB_SALES","DATE_DIM" "DATE_DIM") OR  EXISTS (SELECT 0 FROM "CATALOG_SALES" "CATALOG_SALES","DATE_DIM" "DATE_DIM"))
FPD: Considering simple filter push in query block SEL$3 (#4)
"WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B1 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4
try to generate transitive predicate from check constraints for query block SEL$3 (#4)
finally: "WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B1 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1

FPD:   transitive predicates are generated in query block SEL$3 (#4)
"WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B1 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1
FPD: Considering simple filter push in query block SEL$4 (#3)
"CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B1 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4
try to generate transitive predicate from check constraints for query block SEL$4 (#3)
finally: "CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B1 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1

FPD:   transitive predicates are generated in query block SEL$4 (#3)
"CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B1 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1
try to generate transitive predicate from check constraints for query block SEL$2 (#2)
finally: "SS"."SS_CUSTOMER_SK"=:B1 AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND ( EXISTS (SELECT 0 FROM "WEB_SALES" "WEB_SALES","DATE_DIM" "DATE_DIM") OR  EXISTS (SELECT 0 FROM "CATALOG_SALES" "CATALOG_SALES","DATE_DIM" "DATE_DIM"))

try to generate transitive predicate from check constraints for query block SEL$F5B72DD9 (#20)
finally:  EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM")

OJE: Begin: find best directive for query block SEL$F5B72DD9 (#20)
OJE: End: finding best directive for query block SEL$F5B72DD9 (#20)
GBP: Costing transformed query.
*************************
First K Rows: Setup begin
kkoqbc: optimizing query block SEL$3 (#4)
        
        :
    call(in-use=1776168, alloc=1801912), compile(in-use=4142432, alloc=4143048), execution(in-use=61104, alloc=64872)

kkoqbc-subheap (create addr=0x7f0471fb7e60)
****************
QUERY BLOCK TEXT
****************
SELECT
                    *
                FROM
                    web_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = ws_bill_customer_sk
                    AND ws_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$3 nbfros=2 flg=0
  fro(0): flg=0 objn=74171 hint_alias="DATE_DIM"@"SEL$3"
  fro(1): flg=0 objn=74195 hint_alias="WEB_SALES"@"SEL$3"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3255 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: DATE_DIM  Alias: DATE_DIM
  #Rows: 73049  SSZ: 0  LGR: 0  #Blks:  1510  AvgRowLen:  128.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): D_DATE_SK(NUMBER)
    AvgLen: 6 NDV: 73049 Nulls: 0 Density: 0.000014 Min: 2415022.000000 Max: 2488070.000000
Index Stats::
  Index: D_DATE_PK_IDX  Col#: 1
  LVLS: 1  #LB: 163  #DK: 73049  LB/K: 1.00  DB/K: 1.00  CLUF: 1402.00  NRW: 73049.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table: WEB_SALES  Alias: WEB_SALES  (Using composite stats)
  #Rows: 35969200  SSZ: 0  LGR: 0  #Blks:  829566  AvgRowLen:  167.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
Index Stats::
  Index: WEB_SALES_IDX2  Col#: 5 1
  LVLS: 3  #LB: 130617  #DK: 2992994  LB/K: 1.00  DB/K: 12.00  CLUF: 35969159.00  NRW: 35969200.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
  Index: WEB_SALES_PK_IDX  Col#: 4 18
  LVLS: 2  #LB: 122502  #DK: 35304428  LB/K: 1.00  DB/K: 1.00  CLUF: 35300490.00  NRW: 35304428.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
try to generate single-table filter predicates from ORs for query block SEL$3 (#4)
finally: "WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B1 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4

=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$3 (#4)
Applicable DS directives:
   dirid = 4510913066701158191, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {(74195)[]; (74171)[]}
   dirid = 14910903719618111890, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74195)[5]}
   dirid = 13969931850241126217, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {C(74171)[7, 9]}
   dirid = 13683461771316641482, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74195)[5]; (74171)[7]}
Checking valid directives for the query block
  SPD: Return code in qosdDSDirSetup: NODIR, estType = QUERY_BLOCK
Return code in qosdSetupDirCtx4QB: EXISTS
=====================================
SPD: END context at query block level
=====================================
Access path analysis for WEB_SALES
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for WEB_SALES[WEB_SALES] 
  SPD: Return code in qosdDSDirSetup: NODIR, estType = TABLE

 kkecdn: Single Table Predicate:"WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B1
NOTE: ignoring histogram of column (WEB_SALES.WS_BILL_CUSTOMER_SK)
      used only for incremental stats maintenance
  Column (#5): WS_BILL_CUSTOMER_SK(NUMBER)
    AvgLen: 6 NDV: 973580 Nulls: 0 Density: 0.000001 Min: 2.000000 Max: 1079999.000000
  Estimated selectivity: 1.0271e-06 , col: #5 
  Table: WEB_SALES  Alias: WEB_SALES
    Card: Original: 35969200.000000  Rounded: 37  Computed: 36.945295  Non Adjusted: 36.945295
  Scan IO  Cost (Disk) =   224676.000000
  Scan CPU Cost (Disk) =   14180620495.040001
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000001 flag = 2048  ("WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B1)
  Total Scan IO  Cost  =   224676.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 35969200.000000 (#rows))
                       =   224676.000000
  Total Scan CPU  Cost =   14180620495.040001 (scan (Disk))
                         + 1798460000.000000 (cpu filter eval) (= 50.000000 (per row) * 35969200.000000 (#rows))
                       =   15979080495.040001
  Access Path: TableScan
    Cost:  225085.102964  Resp: 225085.102964  Degree: 0
      Cost_io: 224676.000000  Cost_cpu: 15979080495
      Resp_io: 224676.000000  Resp_cpu: 15979080495
  Access Path: index (index (FFS))
    Index: WEB_SALES_IDX2
    resc_io: 35377.000000  resc_cpu: 7044945128
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  35557.367571  Resp: 35557.367571  Degree: 1
      Cost_io: 35377.000000  Cost_cpu: 7044945128
      Resp_io: 35377.000000  Resp_cpu: 7044945128
 ****** Costing Index WEB_SALES_IDX2
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER

  Estimated selectivity: 1.0271e-06 , col: #5 
  Access Path: index (IndexOnly)
    Index: WEB_SALES_IDX2
    resc_io: 4.000000  resc_cpu: 35886
    ix_sel: 1.0271e-06  ix_sel_with_filters: 1.0271e-06 
    Cost: 4.000919  Resp: 4.000919  Degree: 1
  Best:: AccessPath: IndexRange
  Index: WEB_SALES_IDX2
         Cost: 4.000919  Degree: 1  Resp: 4.000919  Card: 36.945295  Bytes: 0.000000

Access path analysis for DATE_DIM
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for DATE_DIM[DATE_DIM] 
  SPD: Directive valid: dirid = 13969931850241126217, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {C(74171)[7, 9]}
  SPD: Return code in qosdDSDirSetup: EXISTS, estType = TABLE
  Column (#7): 
    NewDensity:0.000007, OldDensity:0.000007 BktCnt:73049.000000, PopBktCnt:73048.000000, PopValCnt:200, NDV:201
  Column (#7): D_YEAR(NUMBER)
    AvgLen: 4 NDV: 201 Nulls: 0 Density: 0.000007 Min: 1900.000000 Max: 2100.000000
    Histogram: Freq  #Bkts: 201  UncompBkts: 73049  EndPtVals: 201  ActualVal: yes
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 


 kkecdn: Single Table Predicate:"DATE_DIM"."D_YEAR"=2001
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY">=1
  Column (#9): 
    NewDensity:0.038666, OldDensity:0.000007 BktCnt:73049.000000, PopBktCnt:73049.000000, PopValCnt:12, NDV:12
  Column (#9): D_MOY(NUMBER)
    AvgLen: 3 NDV: 12 Nulls: 0 Density: 0.038666 Min: 1.000000 Max: 12.000000
    Histogram: Freq  #Bkts: 12  UncompBkts: 73049  EndPtVals: 12  ActualVal: yes
  Estimated selectivity: 1.000000 , endpoint value predicate, col: #9 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY"<=4
  Estimated selectivity: 0.329224 , endpoint value predicate, col: #9 
  Table: DATE_DIM  Alias: DATE_DIM
    Card: Original: 73049.000000  Rounded: 120  Computed: 120.166840  Non Adjusted: 120.166840
  Scan IO  Cost (Disk) =   411.000000
  Scan CPU Cost (Disk) =   33398564.400000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.004997 flag = 2048  ("DATE_DIM"."D_YEAR"=2001)
    io = NOCOST, cpu = 50.000000, sel = 0.329224 flag = 2048  ("DATE_DIM"."D_MOY"<=4)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("DATE_DIM"."D_MOY">=1)
  Total Scan IO  Cost  =   411.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 73049.000000 (#rows))
                       =   411.000000
  Total Scan CPU  Cost =   33398564.400000 (scan (Disk))
                         + 3676708.342003 (cpu filter eval) (= 50.332083 (per row) * 73049.000000 (#rows))
                       =   37075272.742003
  Access Path: TableScan
    Cost:  411.949216  Resp: 411.949216  Degree: 0
      Cost_io: 411.000000  Cost_cpu: 37075273
      Resp_io: 411.000000  Resp_cpu: 37075273
  Best:: AccessPath: TableScan
         Cost: 411.949216  Degree: 1  Resp: 411.949216  Card: 120.166840  Bytes: 0.000000

***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE: Checking validity of partial join eval on query block SEL$3 (#4)
PJE: Passed validity of partial join eval by query block SEL$3 (#4)
number: [0]
PJE: Partial join eval conversion for query block SEL$3 (#4).
PJE: Table marked for partial join eval: DATE_DIM[DATE_DIM]#1
***********************
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  WEB_SALES[WEB_SALES]#0  DATE_DIM[DATE_DIM]#1

***************
Now joining: DATE_DIM[DATE_DIM]#1
***************
NL Join
  Outer table: Card: 36.945295  Cost: 4.000919  Resp: 4.000919  Degree: 1  Bytes: 
Access path analysis for DATE_DIM
  Scan IO  Cost (Disk) =   409.000000
  Scan CPU Cost (Disk) =   33398564.400000
NOTE: ignoring histogram of column (WEB_SALES.WS_SOLD_DATE_SK)
      used only for incremental stats maintenance
  Column (#1): WS_SOLD_DATE_SK(NUMBER)
    AvgLen: 6 NDV: 1839 Nulls: 0 Density: 0.000544 Min: 2450816.000000 Max: 2452641.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.008264 flag = 2048  ("WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK")
    io = NOCOST, cpu = 50.000000, sel = 0.004997 flag = 2048  ("DATE_DIM"."D_YEAR"=2001)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("DATE_DIM"."D_MOY">=1)
    io = NOCOST, cpu = 50.000000, sel = 0.329224 flag = 2048  ("DATE_DIM"."D_MOY"<=4)
  Total Scan IO  Cost  =   409.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 73049.000000 (#rows))
                       =   409.000000
  Total Scan CPU  Cost =   33398564.400000 (scan (Disk))
                         + 3670900.482165 (cpu filter eval) (= 50.252577 (per row) * 73049.000000 (#rows))
                       =   37069464.882165
  Inner table: DATE_DIM  Alias: DATE_DIM
  Access Path: TableScan
    NL Join:  Cost: 15172.116421  Resp: 15172.116421  Degree: 1
      Cost_io: 15137.000000  Cost_cpu: 1371606086
      Resp_io: 15137.000000  Resp_cpu: 1371606086
 ****** Costing Index D_DATE_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: D_DATE_PK_IDX
    resc_io: 1.000000  resc_cpu: 9382
    ix_sel: 1.3689e-05  ix_sel_with_filters: 1.3689e-05 
    NL Join (ordered): Cost: 41.009806  Resp: 41.009806  Degree: 1
      Cost_io: 41.000000  Cost_cpu: 383011
      Resp_io: 41.000000  Resp_cpu: 383011
 ****** Costing Index D_DATE_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 
  Estimated selectivity: 1.000000 , endpoint value predicate, col: #9 
  Estimated selectivity: 0.329224 , endpoint value predicate, col: #9 
  Access Path: index (AllEqUnique)
    Index: D_DATE_PK_IDX
    resc_io: 1.000000  resc_cpu: 9382
    ix_sel: 1.3689e-05  ix_sel_with_filters: 1.3689e-05 
    NL Join (ordered): Cost: 41.009806  Resp: 41.009806  Degree: 1
      Cost_io: 41.000000  Cost_cpu: 383011
      Resp_io: 41.000000  Resp_cpu: 383011

  Best NL cost: 41.009806
          resc: 41.009806  resc_io: 41.000000  resc_cpu: 383011
          resp: 41.009806  resp_io: 41.000000  resc_cpu: 383011
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Capping Semi Join Card of HJ/SMJ by inner = 36.690903
Capping Semi Join Card of HJ/SMJ (no post filters) by inner = 36.690903
Capping Semi Join Card of NL by inner = 36.690903
Capping Semi Join Card of without POSQ by inner = 36.690903
Capping Semi Join Card of non adjusted NSQ by inner = 36.690903
Semi Join Card (capped by inner join):  36.690903 = outer (36.945295) * inner (120.166840) * sel (0.008264)
Join Card - Rounded: 37 Computed: 36.690903
  Outer table:  WEB_SALES  Alias: WEB_SALES
    resc: 4.000919  card 36.945295  bytes:   deg: 1  resp: 4.000919
  Inner table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card: 120.166840  bytes:   deg: 1  resp: 411.949216
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     25 Total Rows:            120
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39096166
      Total Temp space used: 0
  SM join: Resc: 416.951091  Resp: 416.951091  [multiMatchCost=0.000000]
SM Join
  SM cost: 416.951091 
     resc: 416.951091 resc_io: 415.000000 resc_cpu: 76207324
     resp: 416.951091 resp_io: 415.000000 resp_cpu: 76207324
  Outer table:  WEB_SALES  Alias: WEB_SALES
    resc: 4.000919  card 36.945295  bytes:   deg: 1  resp: 4.000919
  Inner table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card: 120.166840  bytes:   deg: 1  resp: 411.949216
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.015811  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 415.965946  Resp: 415.965946  [multiMatchCost=0.000000]
HA Join
  HA cost: 415.965946  
     resc: 415.965946 resc_io: 415.000000 resc_cpu: 37728709
     resp: 415.965946 resp_io: 415.000000 resp_cpu: 37728709
Best:: JoinMethod: NestedLoopSemi
       Cost: 41.009806  Degree: 1  Resp: 41.009806  Card: 36.690903 Bytes: 
***********************
Best so far:  Table#: 0  cost: 4.000919  card: 36.945295  bytes: 444.000000
              Table#: 1  cost: 41.009806  card: 36.690903  bytes: 925.000000
***********************

*********************************
Number of join permutations tried: 1
*********************************
*********************
PJE: Partial join eval conversion for query block SEL$3 (#4).
PJE: Table marked for partial join eval: DATE_DIM[DATE_DIM]#1
***********************
Enumerating distribution method (advanced)
--- Distribution method for 
join between WEB_SALES[WEB_SALES](serial) and DATE_DIM[DATE_DIM](serial); jm = 15; right side access path = IndexUnique
kkopqIsSerialJoin: serial NLJ: both inputs serial
---- serial NL-Join -> SERIAL

(newjo-save)    [1 0 ]
LORE: Or-Expansion validity checks failed on query block SEL$3 (#4) because Cost based OR expansion enabled
Transfer Optimizer annotations for query block SEL$3 (#4)
Final cost for query block SEL$3 (#4) - All Rows Plan:
  Best join order: 1
  Cost: 41.009806  Degree: 1  Card: 37.000000  Bytes: 925.000000
  Resc: 41.009806  Resc_io: 41.000000  Resc_cpu: 383011
  Resp: 41.009806  Resp_io: 41.000000  Resc_cpu: 383011
kkoqbc-subheap (delete addr=0x7f0471fb7e60, in-use=44952, alloc=49272)
kkoqbc-end:
        :
    call(in-use=1819504, alloc=1884064), compile(in-use=4174872, alloc=4178120), execution(in-use=61512, alloc=64872)

kkoqbc: finish optimizing query block SEL$3 (#4)
kkoqbc: optimizing query block SEL$4 (#3)
        
        :
    call(in-use=1817296, alloc=1884064), compile(in-use=4181280, alloc=4182264), execution(in-use=61688, alloc=64872)

kkoqbc-subheap (create addr=0x7f0471fb7e60)
****************
QUERY BLOCK TEXT
****************
SELECT
                    *
                FROM
                    catalog_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = cs_ship_customer_sk
                    AND cs_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$4 nbfros=2 flg=0
  fro(0): flg=0 objn=74185 hint_alias="CATALOG_SALES"@"SEL$4"
  fro(1): flg=0 objn=74171 hint_alias="DATE_DIM"@"SEL$4"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3255 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: DATE_DIM  Alias: DATE_DIM
  #Rows: 73049  SSZ: 0  LGR: 0  #Blks:  1510  AvgRowLen:  128.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): D_DATE_SK(NUMBER)
    AvgLen: 6 NDV: 73049 Nulls: 0 Density: 0.000014 Min: 2415022.000000 Max: 2488070.000000
Index Stats::
  Index: D_DATE_PK_IDX  Col#: 1
  LVLS: 1  #LB: 163  #DK: 73049  LB/K: 1.00  DB/K: 1.00  CLUF: 1402.00  NRW: 73049.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table: CATALOG_SALES  Alias: CATALOG_SALES  (Using composite stats)
  #Rows: 72077400  SSZ: 0  LGR: 0  #Blks:  1645494  AvgRowLen:  168.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
Index Stats::
  Index: CATALOG_SALES_IDX2  Col#: 8 1
  LVLS: 3  #LB: 261734  #DK: 5997411  LB/K: 1.00  DB/K: 12.00  CLUF: 72077362.00  NRW: 72077400.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
  Index: CATALOG_SALES_PK_IDX  Col#: 16 18
  LVLS: 2  #LB: 249644  #DK: 71913105  LB/K: 1.00  DB/K: 1.00  CLUF: 71898009.00  NRW: 71913105.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
try to generate single-table filter predicates from ORs for query block SEL$4 (#3)
finally: "CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B1 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4

=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$4 (#3)
Applicable DS directives:
   dirid = 11267665714990475542, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74185)[8]}
   dirid = 13969931850241126217, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {C(74171)[7, 9]}
   dirid = 2090373381697137251, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {(74185)[]; F(74171)[]}
   dirid = 14483145493039253896, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {(74185)[]; (74171)[]}
Checking valid directives for the query block
  SPD: Return code in qosdDSDirSetup: NODIR, estType = QUERY_BLOCK
Return code in qosdSetupDirCtx4QB: EXISTS
=====================================
SPD: END context at query block level
=====================================
Access path analysis for CATALOG_SALES
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for CATALOG_SALES[CATALOG_SALES] 
  SPD: Return code in qosdDSDirSetup: NODIR, estType = TABLE

 kkecdn: Single Table Predicate:"CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B1
NOTE: ignoring histogram of column (CATALOG_SALES.CS_SHIP_CUSTOMER_SK)
      used only for incremental stats maintenance
  Column (#8): CS_SHIP_CUSTOMER_SK(NUMBER)
    AvgLen: 6 NDV: 1037120 Nulls: 0 Density: 0.000001 Min: 1.000000 Max: 1079999.000000
  Estimated selectivity: 9.6421e-07 , col: #8 
  Table: CATALOG_SALES  Alias: CATALOG_SALES
    Card: Original: 72077400.000000  Rounded: 69  Computed: 69.497647  Non Adjusted: 69.497647
  Scan IO  Cost (Disk) =   445656.000000
  Scan CPU Cost (Disk) =   32620732791.360001
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000001 flag = 2048  ("CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B1)
  Total Scan IO  Cost  =   445656.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 72077400.000000 (#rows))
                       =   445656.000000
  Total Scan CPU  Cost =   32620732791.360001 (scan (Disk))
                         + 3603870000.000000 (cpu filter eval) (= 50.000000 (per row) * 72077400.000000 (#rows))
                       =   36224602791.360001
  Access Path: TableScan
    Cost:  446583.437120  Resp: 446583.437120  Degree: 0
      Cost_io: 445656.000000  Cost_cpu: 36224602791
      Resp_io: 445656.000000  Resp_cpu: 36224602791
  Access Path: index (index (FFS))
    Index: CATALOG_SALES_IDX2
    resc_io: 70888.000000  resc_cpu: 14117080977
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  71249.431290  Resp: 71249.431290  Degree: 1
      Cost_io: 70888.000000  Cost_cpu: 14117080977
      Resp_io: 70888.000000  Resp_cpu: 14117080977
 ****** Costing Index CATALOG_SALES_IDX2
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER

  Estimated selectivity: 9.6421e-07 , col: #8 
  Access Path: index (IndexOnly)
    Index: CATALOG_SALES_IDX2
    resc_io: 4.000000  resc_cpu: 42486
    ix_sel: 9.6421e-07  ix_sel_with_filters: 9.6421e-07 
    Cost: 4.001088  Resp: 4.001088  Degree: 1
  Best:: AccessPath: IndexRange
  Index: CATALOG_SALES_IDX2
         Cost: 4.001088  Degree: 1  Resp: 4.001088  Card: 69.497647  Bytes: 0.000000

Access path analysis for DATE_DIM
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for DATE_DIM[DATE_DIM] 
  SPD: Directive valid: dirid = 13969931850241126217, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {C(74171)[7, 9]}
  SPD: Return code in qosdDSDirSetup: EXISTS, estType = TABLE
  Column (#7): 
    NewDensity:0.000007, OldDensity:0.000007 BktCnt:73049.000000, PopBktCnt:73048.000000, PopValCnt:200, NDV:201
  Column (#7): D_YEAR(NUMBER)
    AvgLen: 4 NDV: 201 Nulls: 0 Density: 0.000007 Min: 1900.000000 Max: 2100.000000
    Histogram: Freq  #Bkts: 201  UncompBkts: 73049  EndPtVals: 201  ActualVal: yes
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 


 kkecdn: Single Table Predicate:"DATE_DIM"."D_YEAR"=2001
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY">=1
  Column (#9): 
    NewDensity:0.038666, OldDensity:0.000007 BktCnt:73049.000000, PopBktCnt:73049.000000, PopValCnt:12, NDV:12
  Column (#9): D_MOY(NUMBER)
    AvgLen: 3 NDV: 12 Nulls: 0 Density: 0.038666 Min: 1.000000 Max: 12.000000
    Histogram: Freq  #Bkts: 12  UncompBkts: 73049  EndPtVals: 12  ActualVal: yes
  Estimated selectivity: 1.000000 , endpoint value predicate, col: #9 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY"<=4
  Estimated selectivity: 0.329224 , endpoint value predicate, col: #9 
  Table: DATE_DIM  Alias: DATE_DIM
    Card: Original: 73049.000000  Rounded: 120  Computed: 120.166840  Non Adjusted: 120.166840
  Scan IO  Cost (Disk) =   411.000000
  Scan CPU Cost (Disk) =   33398564.400000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.004997 flag = 2048  ("DATE_DIM"."D_YEAR"=2001)
    io = NOCOST, cpu = 50.000000, sel = 0.329224 flag = 2048  ("DATE_DIM"."D_MOY"<=4)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("DATE_DIM"."D_MOY">=1)
  Total Scan IO  Cost  =   411.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 73049.000000 (#rows))
                       =   411.000000
  Total Scan CPU  Cost =   33398564.400000 (scan (Disk))
                         + 3676708.342003 (cpu filter eval) (= 50.332083 (per row) * 73049.000000 (#rows))
                       =   37075272.742003
  Access Path: TableScan
    Cost:  411.949216  Resp: 411.949216  Degree: 0
      Cost_io: 411.000000  Cost_cpu: 37075273
      Resp_io: 411.000000  Resp_cpu: 37075273
  Best:: AccessPath: TableScan
         Cost: 411.949216  Degree: 1  Resp: 411.949216  Card: 120.166840  Bytes: 0.000000

***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE: Checking validity of partial join eval on query block SEL$4 (#3)
PJE: Passed validity of partial join eval by query block SEL$4 (#3)
number: [0]
PJE: Partial join eval conversion for query block SEL$4 (#3).
PJE: Table marked for partial join eval: DATE_DIM[DATE_DIM]#1
***********************
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  CATALOG_SALES[CATALOG_SALES]#0  DATE_DIM[DATE_DIM]#1

***************
Now joining: DATE_DIM[DATE_DIM]#1
***************
NL Join
  Outer table: Card: 69.497647  Cost: 4.001088  Resp: 4.001088  Degree: 1  Bytes: 
Access path analysis for DATE_DIM
  Scan IO  Cost (Disk) =   408.985507
  Scan CPU Cost (Disk) =   33398564.400000
NOTE: ignoring histogram of column (CATALOG_SALES.CS_SOLD_DATE_SK)
      used only for incremental stats maintenance
  Column (#1): CS_SOLD_DATE_SK(NUMBER)
    AvgLen: 6 NDV: 1849 Nulls: 0 Density: 0.000541 Min: 2450815.000000 Max: 2452647.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.008264 flag = 2048  ("CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK")
    io = NOCOST, cpu = 50.000000, sel = 0.004997 flag = 2048  ("DATE_DIM"."D_YEAR"=2001)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("DATE_DIM"."D_MOY">=1)
    io = NOCOST, cpu = 50.000000, sel = 0.329224 flag = 2048  ("DATE_DIM"."D_MOY"<=4)
  Total Scan IO  Cost  =   408.985507 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 73049.000000 (#rows))
                       =   408.985507
  Total Scan CPU  Cost =   33398564.400000 (scan (Disk))
                         + 3670900.482165 (cpu filter eval) (= 50.252577 (per row) * 73049.000000 (#rows))
                       =   37069464.882165
  Inner table: DATE_DIM  Alias: DATE_DIM
  Access Path: TableScan
    NL Join:  Cost: 28289.486754  Resp: 28289.486754  Degree: 1
      Cost_io: 28224.000000  Cost_cpu: 2557835563
      Resp_io: 28224.000000  Resp_cpu: 2557835563
 ****** Costing Index D_DATE_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: D_DATE_PK_IDX
    resc_io: 1.000000  resc_cpu: 9382
    ix_sel: 1.3689e-05  ix_sel_with_filters: 1.3689e-05 
    NL Join (ordered): Cost: 73.017661  Resp: 73.017661  Degree: 1
      Cost_io: 73.000000  Cost_cpu: 689828
      Resp_io: 73.000000  Resp_cpu: 689828
 ****** Costing Index D_DATE_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 
  Estimated selectivity: 1.000000 , endpoint value predicate, col: #9 
  Estimated selectivity: 0.329224 , endpoint value predicate, col: #9 
  Access Path: index (AllEqUnique)
    Index: D_DATE_PK_IDX
    resc_io: 1.000000  resc_cpu: 9382
    ix_sel: 1.3689e-05  ix_sel_with_filters: 1.3689e-05 
    NL Join (ordered): Cost: 73.017661  Resp: 73.017661  Degree: 1
      Cost_io: 73.000000  Cost_cpu: 689828
      Resp_io: 73.000000  Resp_cpu: 689828

  Best NL cost: 73.017661
          resc: 73.017661  resc_io: 73.000000  resc_cpu: 689828
          resp: 73.017661  resp_io: 73.000000  resc_cpu: 689828
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Capping Semi Join Card of HJ/SMJ by inner = 69.019113
Capping Semi Join Card of HJ/SMJ (no post filters) by inner = 69.019113
Capping Semi Join Card of NL by inner = 69.019113
Capping Semi Join Card of without POSQ by inner = 69.019113
Capping Semi Join Card of non adjusted NSQ by inner = 69.019113
Semi Join Card (capped by inner join):  69.019113 = outer (69.497647) * inner (120.166840) * sel (0.008264)
Join Card - Rounded: 69 Computed: 69.019113
  Outer table:  CATALOG_SALES  Alias: CATALOG_SALES
    resc: 4.001088  card 69.497647  bytes:   deg: 1  resp: 4.001088
  Inner table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card: 120.166840  bytes:   deg: 1  resp: 411.949216
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     25 Total Rows:            120
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39096166
      Total Temp space used: 0
  SM join: Resc: 416.951260  Resp: 416.951260  [multiMatchCost=0.000000]
SM Join
  SM cost: 416.951260 
     resc: 416.951260 resc_io: 415.000000 resc_cpu: 76213924
     resp: 416.951260 resp_io: 415.000000 resp_cpu: 76213924
  Outer table:  CATALOG_SALES  Alias: CATALOG_SALES
    resc: 4.001088  card 69.497647  bytes:   deg: 1  resp: 4.001088
  Inner table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card: 120.166840  bytes:   deg: 1  resp: 411.949216
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.015934  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 415.966238  Resp: 415.966238  [multiMatchCost=0.000000]
HA Join
  HA cost: 415.966238  
     resc: 415.966238 resc_io: 415.000000 resc_cpu: 37740109
     resp: 415.966238 resp_io: 415.000000 resp_cpu: 37740109
Best:: JoinMethod: NestedLoopSemi
       Cost: 73.017661  Degree: 1  Resp: 73.017661  Card: 69.019113 Bytes: 
***********************
Best so far:  Table#: 0  cost: 4.001088  card: 69.497647  bytes: 828.000000
              Table#: 1  cost: 73.017661  card: 69.019113  bytes: 1725.000000
***********************

*********************************
Number of join permutations tried: 1
*********************************
*********************
PJE: Partial join eval conversion for query block SEL$4 (#3).
PJE: Table marked for partial join eval: DATE_DIM[DATE_DIM]#1
***********************
Enumerating distribution method (advanced)
--- Distribution method for 
join between CATALOG_SALES[CATALOG_SALES](serial) and DATE_DIM[DATE_DIM](serial); jm = 15; right side access path = IndexUnique
kkopqIsSerialJoin: serial NLJ: both inputs serial
---- serial NL-Join -> SERIAL

(newjo-save)    [1 0 ]
LORE: Or-Expansion validity checks failed on query block SEL$4 (#3) because Cost based OR expansion enabled
Transfer Optimizer annotations for query block SEL$4 (#3)
Final cost for query block SEL$4 (#3) - All Rows Plan:
  Best join order: 1
  Cost: 73.017661  Degree: 1  Card: 69.000000  Bytes: 1725.000000
  Resc: 73.017661  Resc_io: 73.000000  Resc_cpu: 689828
  Resp: 73.017661  Resp_io: 73.000000  Resc_cpu: 689828
kkoqbc-subheap (delete addr=0x7f0471fb7e60, in-use=52808, alloc=65704)
kkoqbc-end:
        :
    call(in-use=1856416, alloc=1933272), compile(in-use=4213672, alloc=4214016), execution(in-use=62096, alloc=64872)

kkoqbc: finish optimizing query block SEL$4 (#3)
kkoqbc: optimizing query block SEL$2 (#2)
        
        :
    call(in-use=1854208, alloc=1933272), compile(in-use=4220200, alloc=4221792), execution(in-use=62256, alloc=64872)

kkoqbc-subheap (create addr=0x7f0471fb7e60)
****************
QUERY BLOCK TEXT
****************
SELECT
            *
        FROM
            store_sales ss,
            date_dim
        WHERE
            c.c_customer_sk = ss.ss_customer_sk
            AND ss_sold_date_sk = d_date_sk
            AND d_year = 2001
            AND d_moy BETWEEN 1 AND 1 + 3
            AND ( EXISTS (
                SELECT
                    *
                FROM
                    web_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = ws_bill_customer_sk
                    AND ws_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            )
                  OR EXISTS (
                SELECT
                    *
                FROM
                    catalog_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = cs_ship_customer_sk
                    AND cs_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            ) )
    
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$2 nbfros=2 flg=0
  fro(0): flg=0 objn=74171 hint_alias="DATE_DIM"@"SEL$2"
  fro(1): flg=0 objn=74191 hint_alias="SS"@"SEL$2"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3255 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: DATE_DIM  Alias: DATE_DIM
  #Rows: 73049  SSZ: 0  LGR: 0  #Blks:  1510  AvgRowLen:  128.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): D_DATE_SK(NUMBER)
    AvgLen: 6 NDV: 73049 Nulls: 0 Density: 0.000014 Min: 2415022.000000 Max: 2488070.000000
Index Stats::
  Index: D_DATE_PK_IDX  Col#: 1
  LVLS: 1  #LB: 163  #DK: 73049  LB/K: 1.00  DB/K: 1.00  CLUF: 1402.00  NRW: 73049.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table: STORE_SALES  Alias: SS  (Using composite stats)
  #Rows: 144020200  SSZ: 0  LGR: 0  #Blks:  2304802  AvgRowLen:  117.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
Index Stats::
  Index: STORE_SALES_IDX2  Col#: 4 1
  LVLS: 3  #LB: 522970  #DK: 11965122  LB/K: 1.00  DB/K: 12.00  CLUF: 143898920.00  NRW: 144020200.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
  Index: STORE_SALES_PK_IDX  Col#: 3 10
  LVLS: 3  #LB: 497464  #DK: 141527398  LB/K: 1.00  DB/K: 1.00  CLUF: 141365556.00  NRW: 141527398.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
try to generate single-table filter predicates from ORs for query block SEL$2 (#2)
finally: "SS"."SS_CUSTOMER_SK"=:B1 AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND ( EXISTS (SELECT 0 FROM "WEB_SALES" "WEB_SALES","DATE_DIM" "DATE_DIM" WHERE "WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B2 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1) OR  EXISTS (SELECT 0 FROM "CATALOG_SALES" "CATALOG_SALES","DATE_DIM" "DATE_DIM" WHERE "CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B3 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1))

=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$2 (#2)
Applicable DS directives:
   dirid = 10827845680942532126, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {F(74191)[]; F(74171)[]}
   dirid = 7660518587836633700, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74191)[4]}
   dirid = 13969931850241126217, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {C(74171)[7, 9]}
   dirid = 2361553282592865451, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {(74191)[]; F(74171)[]}
   dirid = 12943986683386070018, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {(74191)[]; (74171)[]}
Checking valid directives for the query block
  SPD: Return code in qosdDSDirSetup: NODIR, estType = QUERY_BLOCK
Return code in qosdSetupDirCtx4QB: EXISTS
=====================================
SPD: END context at query block level
=====================================
Access path analysis for STORE_SALES
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for STORE_SALES[SS] 
  SPD: Return code in qosdDSDirSetup: NODIR, estType = TABLE

 kkecdn: Single Table Predicate:"SS"."SS_CUSTOMER_SK"=:B1
NOTE: ignoring histogram of column (STORE_SALES.SS_CUSTOMER_SK)
      used only for incremental stats maintenance
  Column (#4): SS_CUSTOMER_SK(NUMBER)
    AvgLen: 6 NDV: 1039371 Nulls: 0 Density: 0.000001 Min: 1.000000 Max: 1079999.000000
  Estimated selectivity: 9.6212e-07 , col: #4 
  Table: STORE_SALES  Alias: SS
    Card: Original: 144020200.000000  Rounded: 139  Computed: 138.564767  Non Adjusted: 138.564767
  Scan IO  Cost (Disk) =   624219.000000
  Scan CPU Cost (Disk) =   46657751154.880005
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000001 flag = 2048  ("SS"."SS_CUSTOMER_SK"=:B1)
  Total Scan IO  Cost  =   624219.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 144020200.000000 (#rows))
                       =   624219.000000
  Total Scan CPU  Cost =   46657751154.880005 (scan (Disk))
                         + 7201010000.000000 (cpu filter eval) (= 50.000000 (per row) * 144020200.000000 (#rows))
                       =   53858761154.880005
  Access Path: TableScan
    Cost:  625597.914066  Resp: 625597.914066  Degree: 0
      Cost_io: 624219.000000  Cost_cpu: 53858761155
      Resp_io: 624219.000000  Resp_cpu: 53858761155
  Access Path: index (index (FFS))
    Index: STORE_SALES_IDX2
    resc_io: 141639.000000  resc_cpu: 28207733477
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  142361.185947  Resp: 142361.185947  Degree: 1
      Cost_io: 141639.000000  Cost_cpu: 28207733477
      Resp_io: 141639.000000  Resp_cpu: 28207733477
 ****** Costing Index STORE_SALES_IDX2
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER

  Estimated selectivity: 9.6212e-07 , col: #4 
  Access Path: index (IndexOnly)
    Index: STORE_SALES_IDX2
    resc_io: 4.000000  resc_cpu: 56286
    ix_sel: 9.6212e-07  ix_sel_with_filters: 9.6212e-07 
    Cost: 4.001441  Resp: 4.001441  Degree: 1
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: IndexRange
  Index: STORE_SALES_IDX2
         Cost: 4.001441  Degree: 1  Resp: 4.001441  Card: 138.564767  Bytes: 0.000000

Access path analysis for DATE_DIM
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for DATE_DIM[DATE_DIM] 
  SPD: Directive valid: dirid = 13969931850241126217, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {C(74171)[7, 9]}
  SPD: Return code in qosdDSDirSetup: EXISTS, estType = TABLE
  Column (#7): 
    NewDensity:0.000007, OldDensity:0.000007 BktCnt:73049.000000, PopBktCnt:73048.000000, PopValCnt:200, NDV:201
  Column (#7): D_YEAR(NUMBER)
    AvgLen: 4 NDV: 201 Nulls: 0 Density: 0.000007 Min: 1900.000000 Max: 2100.000000
    Histogram: Freq  #Bkts: 201  UncompBkts: 73049  EndPtVals: 201  ActualVal: yes
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 


 kkecdn: Single Table Predicate:"DATE_DIM"."D_YEAR"=2001
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY">=1
  Column (#9): 
    NewDensity:0.038666, OldDensity:0.000007 BktCnt:73049.000000, PopBktCnt:73049.000000, PopValCnt:12, NDV:12
  Column (#9): D_MOY(NUMBER)
    AvgLen: 3 NDV: 12 Nulls: 0 Density: 0.038666 Min: 1.000000 Max: 12.000000
    Histogram: Freq  #Bkts: 12  UncompBkts: 73049  EndPtVals: 12  ActualVal: yes
  Estimated selectivity: 1.000000 , endpoint value predicate, col: #9 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY"<=4
  Estimated selectivity: 0.329224 , endpoint value predicate, col: #9 
  Table: DATE_DIM  Alias: DATE_DIM
    Card: Original: 73049.000000  Rounded: 120  Computed: 120.166840  Non Adjusted: 120.166840
  Scan IO  Cost (Disk) =   411.000000
  Scan CPU Cost (Disk) =   33398564.400000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.004997 flag = 2048  ("DATE_DIM"."D_YEAR"=2001)
    io = NOCOST, cpu = 50.000000, sel = 0.329224 flag = 2048  ("DATE_DIM"."D_MOY"<=4)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("DATE_DIM"."D_MOY">=1)
  Total Scan IO  Cost  =   411.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 73049.000000 (#rows))
                       =   411.000000
  Total Scan CPU  Cost =   33398564.400000 (scan (Disk))
                         + 3676708.342003 (cpu filter eval) (= 50.332083 (per row) * 73049.000000 (#rows))
                       =   37075272.742003
  Access Path: TableScan
    Cost:  411.949216  Resp: 411.949216  Degree: 0
      Cost_io: 411.000000  Cost_cpu: 37075273
      Resp_io: 411.000000  Resp_cpu: 37075273
  ****** trying bitmap/domain indexes ******
 ****** Costing Index D_DATE_PK_IDX
  Access Path: index (FullScan)
    Index: D_DATE_PK_IDX
    resc_io: 164.000000  resc_cpu: 15777716
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 164.403948  Resp: 164.403948  Degree: 0
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: TableScan
         Cost: 411.949216  Degree: 1  Resp: 411.949216  Card: 120.166840  Bytes: 0.000000

***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE: Checking validity of partial join eval on query block SEL$2 (#2)
PJE: Passed validity of partial join eval by query block SEL$2 (#2)
number: [0]
PJE: Partial join eval conversion for query block SEL$2 (#2).
PJE: Table marked for partial join eval: STORE_SALES[SS]#1
***********************
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  DATE_DIM[DATE_DIM]#0  STORE_SALES[SS]#1

***************
Now joining: STORE_SALES[SS]#1
***************
NL Join
  Outer table: Card: 120.166840  Cost: 411.949216  Resp: 411.949216  Degree: 1  Bytes: 
Access path analysis for STORE_SALES
  Scan IO  Cost (Disk) =   624217.216667
  Scan CPU Cost (Disk) =   46657751154.880005
NOTE: ignoring histogram of column (STORE_SALES.SS_SOLD_DATE_SK)
      used only for incremental stats maintenance
  Column (#1): SS_SOLD_DATE_SK(NUMBER)
    AvgLen: 6 NDV: 1849 Nulls: 0 Density: 0.000541 Min: 2450816.000000 Max: 2452651.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000001 flag = 2064  ("SS"."SS_CUSTOMER_SK"=:B1)
    io = NOCOST, cpu = 50.000000, sel = 0.007463 flag = 2048  ("SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK")
  Total Scan IO  Cost  =   624217.216667 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 144020200.000000 (#rows))
                       =   624217.216667
  Total Scan CPU  Cost =   46657751154.880005 (scan (Disk))
                         + 7201016928.238328 (cpu filter eval) (= 50.000048 (per row) * 144020200.000000 (#rows))
                       =   53858768083.118332
  Inner table: STORE_SALES  Alias: SS
  Access Path: TableScan
    NL Join:  Cost: 75071947.658387  Resp: 75071947.658387  Degree: 1
      Cost_io: 74906477.000000  Cost_cpu: 6463089245247
      Resp_io: 74906477.000000  Resp_cpu: 6463089245247
  Access Path: index (index (FFS))
    Index: STORE_SALES_IDX2
    resc_io: 141637.716667  resc_cpu: 28207740405
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: STORE_SALES  Alias: SS
  Access Path: index (FFS)
    NL Join:  Cost: 17083600.284196  Resp: 17083600.284196  Degree: 1
      Cost_io: 16996937.000000  Cost_cpu: 3384965923877
      Resp_io: 16996937.000000  Resp_cpu: 3384965923877
 ****** Costing Index STORE_SALES_IDX2
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 8.3576e-08
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 8.3576e-08
  Estimated selectivity: 9.6212e-07 , col: #4 
  Access Path: index (AllEqJoinGuess)
    Index: STORE_SALES_IDX2
    resc_io: 3.000000  resc_cpu: 22414
    ix_sel: 6.9435e-09  ix_sel_with_filters: 6.9435e-09 
    NL Join : Cost: 772.018080  Resp: 772.018080  Degree: 1
      Cost_io: 771.000000  Cost_cpu: 39764991
      Resp_io: 771.000000  Resp_cpu: 39764991
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 772.018080
          resc: 772.018080  resc_io: 771.000000  resc_cpu: 39764991
          resp: 772.018080  resp_io: 771.000000  resc_cpu: 39764991
  SPD: Directive valid: dirid = 10827845680942532126, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {F(74191)[]; F(74171)[]}
  SPD: Return code in qosdDSDirSetup: EXISTS, estType = JOIN
Semi Join Card:  120.166840 = outer (120.166840) * sel (1.000000)
Join Card - Rounded: 120 Computed: 120.166840
  Outer table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card 120.166840  bytes:   deg: 1  resp: 411.949216
  Inner table:  STORE_SALES  Alias: SS
    resc: 4.001441  card: 138.564767  bytes:   deg: 1  resp: 4.001441
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     25 Total Rows:            120
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39096166
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     24 Total Rows:            139
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39103407
      Total Temp space used: 0
  SM join: Resc: 417.952755  Resp: 417.952755  [multiMatchCost=0.000000]
SM Join
  SM cost: 417.952755 
     resc: 417.952755 resc_io: 415.000000 resc_cpu: 115331131
     resp: 417.952755 resp_io: 415.000000 resp_cpu: 115331131
SM Join (with index on outer)
 ****** Costing Index D_DATE_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (FullScan)
    Index: D_DATE_PK_IDX
    resc_io: 1566.000000  resc_cpu: 52083873
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1567.333473  Resp: 1567.333473  Degree: 1
  Outer table:  DATE_DIM  Alias: DATE_DIM
    resc: 1567.333473  card 120.166840  bytes:   deg: 1  resp: 1567.333473
  Inner table:  STORE_SALES  Alias: SS
    resc: 4.001441  card: 138.564767  bytes:   deg: 1  resp: 4.001441
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     24 Total Rows:            139
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39103407
      Total Temp space used: 0
  SM join: Resc: 1572.336055  Resp: 1572.336055  [multiMatchCost=0.000000]
  Outer table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card 120.166840  bytes:   deg: 1  resp: 411.949216
  Inner table:  STORE_SALES  Alias: SS
    resc: 4.001441  card: 138.564767  bytes:   deg: 1  resp: 4.001441
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016178  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 415.966836  Resp: 415.966836  [multiMatchCost=0.000000]
HA Join
  HA cost: 415.966836  
     resc: 415.966836 resc_io: 415.000000 resc_cpu: 37763459
     resp: 415.966836 resp_io: 415.000000 resp_cpu: 37763459
Best:: JoinMethod: HashSemi
       Cost: 415.966836  Degree: 1  Resp: 415.966836  Card: 120.166840 Bytes: 
***********************
Best so far:  Table#: 0  cost: 411.949216  card: 120.166840  bytes: 1560.000000
              Table#: 1  cost: 415.966836  card: 120.166840  bytes: 3000.000000
***********************

*********************************
Number of join permutations tried: 1
*********************************
*********************
PJE: Partial join eval conversion for query block SEL$2 (#2).
PJE: Table marked for partial join eval: STORE_SALES[SS]#1
***********************
Enumerating distribution method (advanced)
--- Distribution method for 
join between DATE_DIM[DATE_DIM](serial) and SS[STORE_SALES](serial); jm = 2; right side access path = IndexRange
---- serial Hash-Join -> NONE

kkoaccsqf: Current query block SEL$2 (#2) is serial
kkoaccsqf: correlated subquery query block SEL$3 (#4) in filter               : serial
(newjo-save)    [0 1 ]
LORE: Or-Expansion validity checks failed on query block SEL$2 (#2) because Cost based OR expansion enabled
Transfer Optimizer annotations for query block SEL$2 (#2)
Final cost for query block SEL$2 (#2) - All Rows Plan:
  Best join order: 1
  Cost: 415.966836  Degree: 1  Card: 120.000000  Bytes: 3000.000000
  Resc: 415.966836  Resc_io: 415.000000  Resc_cpu: 37763459
  Resp: 415.966836  Resp_io: 415.000000  Resc_cpu: 37763459
kkoqbc-subheap (delete addr=0x7f0471fb7e60, in-use=63832, alloc=65704)
kkoqbc-end:
        :
    call(in-use=1893000, alloc=1966008), compile(in-use=4255752, alloc=4258072), execution(in-use=63072, alloc=64872)

kkoqbc: finish optimizing query block SEL$2 (#2)
kkoqbc: optimizing query block SEL$F5B72DD9 (#20)
        
        :
    call(in-use=1890792, alloc=1966008), compile(in-use=4259888, alloc=4262216), execution(in-use=63152, alloc=64872)

kkoqbc-subheap (create addr=0x7f0471fb7e60)
****************
QUERY BLOCK TEXT
****************
Not available.
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$F5B72DD9 nbfros=1 flg=0
  fro(0): flg=0 objn=74168 hint_alias="C"@"SEL$1"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3255 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: CUSTOMER  Alias:  C
  #Rows: 1080000  SSZ: 0  LGR: 0  #Blks:  23374  AvgRowLen:  138.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#5): C_CURRENT_ADDR_SK(NUMBER)
    AvgLen: 5 NDV: 457472 Nulls: 0 Density: 0.000002 Min: 1.000000 Max: 539997.000000
  Column (#3): C_CURRENT_CDEMO_SK(NUMBER)
    AvgLen: 6 NDV: 772544 Nulls: 0 Density: 0.000001 Min: 18.000000 Max: 1920799.000000
  Column (#1): C_CUSTOMER_SK(NUMBER)
    AvgLen: 6 NDV: 1080000 Nulls: 0 Density: 0.000001 Min: 1.000000 Max: 1080000.000000
Index Stats::
  Index: CUSTOMER_PK_IDX  Col#: 1
  LVLS: 2  #LB: 2266  #DK: 1080000  LB/K: 1.00  DB/K: 1.00  CLUF: 75684.00  NRW: 1080000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
try to generate single-table filter predicates from ORs for query block SEL$F5B72DD9 (#20)
finally:  EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM" WHERE "SS"."SS_CUSTOMER_SK"=:B1 AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND ( EXISTS (SELECT 0 FROM "WEB_SALES" "WEB_SALES","DATE_DIM" "DATE_DIM" WHERE "WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B2 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1) OR  EXISTS (SELECT 0 FROM "CATALOG_SALES" "CATALOG_SALES","DATE_DIM" "DATE_DIM" WHERE "CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B3 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1)))

=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$F5B72DD9 (#20)
Applicable DS directives:
   dirid = 9316027922818115912, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74168)[3, 5]}
Checking valid directives for the query block
  SPD: Directive valid: dirid = 9316027922818115912, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74168)[3, 5]}
  SPD: Return code in qosdDSDirSetup: EXISTS, estType = GROUP_BY
  SPD: Return code in qosdDSDirSetup: NODIR, estType = QUERY_BLOCK
Return code in qosdSetupDirCtx4QB: EXISTS
=====================================
SPD: END context at query block level
=====================================
Access path analysis for CUSTOMER
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for CUSTOMER[C] 
  SPD: Return code in qosdDSDirSetup: NODIR, estType = TABLE

 kkecdn: Single Table Predicate: EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM" WHERE "SS"."SS_CUSTOMER_SK"=:B1 AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND ( EXISTS (SELECT 0 FROM "WEB_SALES" "WEB_SALES","DATE_DIM" "DATE_DIM" WHERE "WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B2 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1) OR  EXISTS (SELECT 0 FROM "CATALOG_SALES" "CATALOG_SALES","DATE_DIM" "DATE_DIM" WHERE "CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B3 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1)))
  Column (#1): C_CUSTOMER_SK(NUMBER)
    AvgLen: 6 NDV: 1080000 Nulls: 0 Density: 0.000001 Min: 1.000000 Max: 1080000.000000
  Table: CUSTOMER  Alias: C
    Card: Original: 1080000.000000  Rounded: 1080000  Computed: 1080000.000000  Non Adjusted: 1080000.000000
  Scan IO  Cost (Disk) =   6332.000000
  Scan CPU Cost (Disk) =   414856538.560000
  Cost of predicates:
    io = NOCOST, cpu = 20.000000, sel = 0.050000 flag = 2562  ( EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM" WHERE "SS"."SS_CUSTOMER_SK"=:B1 AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND ( EXISTS (SELECT 0 FROM "WEB_SALES" "WEB_SALES","DATE_DIM" "DATE_DIM" WHERE "WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B2 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1) OR  EXISTS (SELECT 0 FROM "CATALOG_SALES" "CATALOG_SALES","DATE_DIM" "DATE_DIM" WHERE "CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B3 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1))))
  Total Scan IO  Cost  =   6332.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 1080000.000000 (#rows))
                       =   6332.000000
  Total Scan CPU  Cost =   414856538.560000 (scan (Disk))
                         + 21600000.000000 (cpu filter eval) (= 20.000000 (per row) * 1080000.000000 (#rows))
                       =   436456538.560000
  Access Path: TableScan
    Cost:  6343.174339  Resp: 6343.174339  Degree: 0
      Cost_io: 6332.000000  Cost_cpu: 436456539
      Resp_io: 6332.000000  Resp_cpu: 436456539
  Best:: AccessPath: TableScan
         Cost: 6343.174339  Degree: 1  Resp: 6343.174339  Card: 1080000.000000  Bytes: 0.000000

Grouping column cardinality [C_CURRENT_]    772544
Grouping column cardinality [C_CURRENT_]    457472
***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE:  Bypassed; QB has a single table SEL$F5B72DD9 (#20)
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  CUSTOMER[C]#0
GROUP BY sort

GROUP BY/Correlated Subquery Filter adjustment factor: 0.707107
GROUP BY cardinality:  1080000.000000, TABLE cardinality:  1080000.000000
Vector group by not costed because no SYS_OP_XLATE_USE in group by.
kdmoGByPushdownValid: table is not in memory    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 3835 Row size:     29 Total Rows:        1080000
      Initial runs:   2 Merge passes:  1 IO Cost / pass:       2078
      Total IO sort cost: 5913.000000      Total CPU sort cost: 1108751040
      Total Temp space used: 30417000
***********************
Best so far:  Table#: 0  cost: 12284.561037  card: 1080000.000000  bytes: 18360000.000000
***********************

*********************************
Number of join permutations tried: 1
*********************************
Enumerating distribution method (advanced)

kkoaccsqf: Current query block SEL$F5B72DD9 (#20) is serial
kkoaccsqf: correlated subquery query block SEL$2 (#2) in filter               : serial
Final adjusted join cardinality: 1.000000, sq. fil. factor: 1080000.000000

GROUP BY/Correlated Subquery Filter adjustment factor: 0.707107
GROUP BY cardinality:  1.000000, TABLE cardinality:  1.000000
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     29 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39058824
      Total Temp space used: 0
LORE: Or-Expansion validity checks failed on query block SEL$F5B72DD9 (#20) because Cost based OR expansion enabled
Transfer Optimizer annotations for query block SEL$F5B72DD9 (#20)
Final cost for query block SEL$F5B72DD9 (#20) - All Rows Plan:
  Best join order: 1
  Cost: 12284.561037  Degree: 1  Card: 1.000000  Bytes: 18360000.000000
  Resc: 12284.561037  Resc_io: 12245.000000  Resc_cpu: 1545207578
  Resp: 12284.561037  Resp_io: 12245.000000  Resc_cpu: 1545207578
kkoqbc-subheap (delete addr=0x7f0471fb7e60, in-use=26928, alloc=32840)
kkoqbc-end:
        :
    call(in-use=1898936, alloc=1949432), compile(in-use=4261976, alloc=4262216), execution(in-use=64376, alloc=64872)

kkoqbc: finish optimizing query block SEL$F5B72DD9 (#20)
kkoqbc: optimizing query block SEL$56FBA5F4 (#1)
        
        :
    call(in-use=1896728, alloc=1949432), compile(in-use=4270600, alloc=4274648), execution(in-use=64664, alloc=64872)

kkoqbc-subheap (create addr=0x7f0471fb7e60)
****************
QUERY BLOCK TEXT
****************
SELECT /*query10*/
    cd_gender,
    cd_marital_status,
    cd_education_status,
    COUNT(*) cnt1,
    cd_purchase_estimate,
    COUNT(*) cnt2,
    cd_credit_rating,
    COUNT(*) cnt3,
    cd_dep_count,
    COUNT(*) cnt4,
    cd_dep_employed_count,
    COUNT(*) cnt5,
    cd_dep_college_count,
    COUNT(*) cnt6
FROM
    customer c,
    customer_address ca,
    customer_demographics
WHERE
    -- join predicates
        c.c_current_addr_sk = ca.ca_address_sk
    AND cd_demo_sk = c.c_current_cdemo_sk
    -- filter predicates
    AND ca.ca_county IN (
        'Chouteau County',
        'Dixie County',
        'Harrisonburg city',
        'Lowndes County',
        'Dinwiddie County'
    )
    -- filter predicate (subquery)
    AND EXISTS (
        SELECT
            *
        FROM
            store_sales ss,
            date_dim
        WHERE
            c.c_customer_sk = ss.ss_customer_sk
            AND ss_sold_date_sk = d_date_sk
            AND d_year = 2001
            AND d_moy BETWEEN 1 AND 1 + 3
            AND ( EXISTS (
                SELECT
                    *
                FROM
                    web_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = ws_bill_customer_sk
                    AND ws_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            )
                  OR EXISTS (
                SELECT
                    *
                FROM
                    catalog_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = cs_ship_customer_sk
                    AND cs_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            ) )
    )
GROUP BY
    cd_gender,
    cd_marital_status,
    cd_education_status,
    cd_purchase_estimate,
    cd_credit_rating,
    cd_dep_count,
    cd_dep_employed_count,
    cd_dep_college_count

---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$56FBA5F4 nbfros=3 flg=0
  fro(0): flg=0 objn=74169 hint_alias="CA"@"SEL$1"
  fro(1): flg=0 objn=74170 hint_alias="CUSTOMER_DEMOGRAPHICS"@"SEL$1"
  fro(2): flg=1 objn=0 hint_alias="VW_GBF_16"@"SEL$F67CBA62"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3255 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
  #Rows: 1920800  SSZ: 0  LGR: 0  #Blks:  17254  AvgRowLen:  54.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): CD_DEMO_SK(NUMBER)
    AvgLen: 6 NDV: 1920800 Nulls: 0 Density: 0.000001 Min: 1.000000 Max: 1920800.000000
Index Stats::
  Index: CD_DEMO_PK_IDX  Col#: 1
  LVLS: 2  #LB: 4138  #DK: 1920800  LB/K: 1.00  DB/K: 1.00  CLUF: 795806.00  NRW: 1920800.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table: CUSTOMER_ADDRESS  Alias: CA
  #Rows: 540000  SSZ: 0  LGR: 0  #Blks:  13174  AvgRowLen:  152.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): CA_ADDRESS_SK(NUMBER)
    AvgLen: 5 NDV: 540000 Nulls: 0 Density: 0.000002 Min: 1.000000 Max: 540000.000000
  Column (#8): CA_COUNTY(VARCHAR2)
    AvgLen: 16 NDV: 1877 Nulls: 0 Density: 0.000471
    Histogram: Hybrid  #Bkts: 254  UncompBkts: 5580  EndPtVals: 254  ActualVal: yes
Index Stats::
  Index: CA_ADDRESS_PK_IDX  Col#: 1
  LVLS: 2  #LB: 1127  #DK: 540000  LB/K: 1.00  DB/K: 1.00  CLUF: 12283.00  NRW: 540000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table: VW_GBF_16  Alias: VW_GBF_16  (NOT ANALYZED)
  #Rows: 0  SSZ: 0  LGR: 0  #Blks:  0  AvgRowLen:  0.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 0
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#2): 
    NewDensity:0.249925, OldDensity:0.000000 BktCnt:1920800.000000, PopBktCnt:1920800.000000, PopValCnt:2, NDV:2
  Column (#2): CD_GENDER(CHARACTER)
    AvgLen: 2 NDV: 2 Nulls: 0 Density: 0.249925
    Histogram: Freq  #Bkts: 2  UncompBkts: 1920800  EndPtVals: 2  ActualVal: no 
  Column (#3): 
    NewDensity:0.098953, OldDensity:0.000000 BktCnt:1920800.000000, PopBktCnt:1920800.000000, PopValCnt:5, NDV:5
  Column (#3): CD_MARITAL_STATUS(CHARACTER)
    AvgLen: 2 NDV: 5 Nulls: 0 Density: 0.098953
    Histogram: Freq  #Bkts: 5  UncompBkts: 1920800  EndPtVals: 5  ActualVal: yes
  Column (#4): 
    NewDensity:0.070771, OldDensity:0.000000 BktCnt:1920800.000000, PopBktCnt:1920800.000000, PopValCnt:7, NDV:7
  Column (#4): CD_EDUCATION_STATUS(CHARACTER)
    AvgLen: 21 NDV: 7 Nulls: 0 Density: 0.070771
    Histogram: Freq  #Bkts: 7  UncompBkts: 1920800  EndPtVals: 7  ActualVal: yes
  Column (#5): CD_PURCHASE_ESTIMATE(NUMBER)
    AvgLen: 4 NDV: 9500 Nulls: 0 Density: 0.000105 Min: 500.000000 Max: 9999.000000
  Column (#6): CD_CREDIT_RATING(CHARACTER)
    AvgLen: 11 NDV: 4 Nulls: 0 Density: 0.250000
  Column (#7): CD_DEP_COUNT(NUMBER)
    AvgLen: 3 NDV: 6 Nulls: 0 Density: 0.166667 Min: 0.000000 Max: 5.000000
  Column (#8): CD_DEP_EMPLOYED_COUNT(NUMBER)
    AvgLen: 3 NDV: 6 Nulls: 0 Density: 0.166667 Min: 0.000000 Max: 5.000000
  Column (#9): CD_DEP_COLLEGE_COUNT(NUMBER)
    AvgLen: 3 NDV: 6 Nulls: 0 Density: 0.166667 Min: 0.000000 Max: 5.000000
  Column (#2): ITEM_2(NUMBER)
    AvgLen: 5 NDV: 457472 Nulls: 0 Density: 0.000002 Min: 1.000000 Max: 539997.000000
  Column (#1): ITEM_1(NUMBER)
    AvgLen: 6 NDV: 772544 Nulls: 0 Density: 0.000001 Min: 18.000000 Max: 1920799.000000
try to generate single-table filter predicates from ORs for query block SEL$56FBA5F4 (#1)
finally: "VW_GBF_16"."ITEM_2"="CA"."CA_ADDRESS_SK" AND "CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK"="VW_GBF_16"."ITEM_1" AND ("CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County')

=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$56FBA5F4 (#1)
Applicable DS directives:
   dirid = 18439699102505563871, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {EC(74169)[8]}
   dirid = 7754152966831092939, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {EC(74170)[3, 4]}
Checking valid directives for the query block
  SPD: Return code in qosdDSDirSetup: NODIR, estType = GROUP_BY
  SPD: Return code in qosdDSDirSetup: NODIR, estType = QUERY_BLOCK
Return code in qosdSetupDirCtx4QB: EXISTS
=====================================
SPD: END context at query block level
=====================================
Access path analysis for VW_GBF_16

Access path analysis for CUSTOMER_ADDRESS
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for CUSTOMER_ADDRESS[CA] 
  SPD: Directive valid: dirid = 18439699102505563871, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {EC(74169)[8]}
  SPD: Return code in qosdDSDirSetup: EXISTS, estType = TABLE

 kkecdn: Single Table Predicate:"CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County'
  Using density: 4.7103e-04 of col #8 as selectivity of pred having unreasonably low value
  Using density: 4.7103e-04 of col #8 as selectivity of pred having unreasonably low value
  Using density: 4.7103e-04 of col #8 as selectivity of pred having unreasonably low value
  Using density: 4.7103e-04 of col #8 as selectivity of pred having unreasonably low value
  Estimated selectivity: 5.3763e-04 , endpoint value predicate, col: #8 
  Table: CUSTOMER_ADDRESS  Alias: CA
    Card: Original: 540000.000000  Rounded: 1308  Computed: 1307.756551  Non Adjusted: 1307.756551
  Scan IO  Cost (Disk) =   3570.000000
  Scan CPU Cost (Disk) =   250417850.560000
  Cost of predicates:
    io = 0.000000, cpu = 249.764594, sel = 0.002422 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Chouteau County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Dinwiddie County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Dixie County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Harrisonburg city')
      io = NOCOST, cpu = 50.000000, sel = 0.000538 flag = 2048  ("CA"."CA_COUNTY"='Lowndes County')
  Total Scan IO  Cost  =   3570.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 540000.000000 (#rows))
                       =   3570.000000
  Total Scan CPU  Cost =   250417850.560000 (scan (Disk))
                         + 134872880.645405 (cpu filter eval) (= 249.764594 (per row) * 540000.000000 (#rows))
                       =   385290731.205405
  Access Path: TableScan
    Cost:  3579.864371  Resp: 3579.864371  Degree: 0
      Cost_io: 3570.000000  Cost_cpu: 385290731
      Resp_io: 3570.000000  Resp_cpu: 385290731
  ****** trying bitmap/domain indexes ******
 ****** Costing Index CA_ADDRESS_PK_IDX
  Access Path: index (FullScan)
    Index: CA_ADDRESS_PK_IDX
    resc_io: 1129.000000  resc_cpu: 116040106
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1131.970906  Resp: 1131.970906  Degree: 0
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: TableScan
         Cost: 3579.864371  Degree: 1  Resp: 3579.864371  Card: 1307.756551  Bytes: 0.000000

Access path analysis for CUSTOMER_DEMOGRAPHICS
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS] 
  SPD: Return code in qosdDSDirSetup: NODIR, estType = TABLE
  Table: CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
    Card: Original: 1920800.000000  Rounded: 1920800  Computed: 1920800.000000  Non Adjusted: 1920800.000000
  Scan IO  Cost (Disk) =   4675.000000
  Scan CPU Cost (Disk) =   718321325.760000
  Total Scan IO  Cost  =   4675.000000 (scan (Disk))
                       =   4675.000000
  Total Scan CPU  Cost =   718321325.760000 (scan (Disk))
                       =   718321325.760000
  Access Path: TableScan
    Cost:  4693.390757  Resp: 4693.390757  Degree: 0
      Cost_io: 4675.000000  Cost_cpu: 718321326
      Resp_io: 4675.000000  Resp_cpu: 718321326
  ****** trying bitmap/domain indexes ******
 ****** Costing Index CD_DEMO_PK_IDX
  Access Path: index (FullScan)
    Index: CD_DEMO_PK_IDX
    resc_io: 4140.000000  resc_cpu: 413642762
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 4150.590251  Resp: 4150.590251  Degree: 0
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: TableScan
         Cost: 4693.390757  Degree: 1  Resp: 4693.390757  Card: 1920800.000000  Bytes: 0.000000

Grouping column cardinality [ CD_GENDER]    2
Grouping column cardinality [CD_MARITAL]    5
Grouping column cardinality [CD_EDUCATI]    7
Grouping column cardinality [CD_PURCHAS]    9500
Grouping column cardinality [CD_CREDIT_]    4
Grouping column cardinality [CD_DEP_COU]    6
Grouping column cardinality [CD_DEP_EMP]    6
Grouping column cardinality [CD_DEP_COL]    6
***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE:  Bypassed; QB is not duplicate insignificant SEL$56FBA5F4 (#1)
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  VW_GBF_16[VW_GBF_16]#0  CUSTOMER_ADDRESS[CA]#1  CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS]#2

***************
Now joining: CUSTOMER_ADDRESS[CA]#1
***************
NL Join
  Outer table: Card: 1.000000  Cost: 5.000000  Resp: 0.000000  Degree: 0  Bytes: 
Access path analysis for CUSTOMER_ADDRESS
  Scan IO  Cost (Disk) =   3570.000000
  Scan CPU Cost (Disk) =   250417850.560000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000765 flag = 2048  ("VW_GBF_16"."ITEM_2"="CA"."CA_ADDRESS_SK")
    io = 0.000000, cpu = 249.764594, sel = 0.002422 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Chouteau County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Dinwiddie County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Dixie County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Harrisonburg city')
      io = NOCOST, cpu = 50.000000, sel = 0.000538 flag = 2048  ("CA"."CA_COUNTY"='Lowndes County')
  Total Scan IO  Cost  =   3570.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 540000.000000 (#rows))
                       =   3570.000000
  Total Scan CPU  Cost =   250417850.560000 (scan (Disk))
                         + 27103113.823123 (cpu filter eval) (= 50.190952 (per row) * 540000.000000 (#rows))
                       =   277520964.383123
  Inner table: CUSTOMER_ADDRESS  Alias: CA
  Access Path: TableScan
    NL Join:  Cost: 3577.105205  Resp: 3577.105205  Degree: 1
      Cost_io: 3570.000000  Cost_cpu: 277520964
      Resp_io: 3570.000000  Resp_cpu: 277520964
 ****** Costing Index CA_ADDRESS_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: CA_ADDRESS_PK_IDX
    resc_io: 2.000000  resc_cpu: 16683
    ix_sel: 1.8519e-06  ix_sel_with_filters: 1.8519e-06 
    NL Join : Cost: 2.000427  Resp: 2.000427  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 16683
      Resp_io: 2.000000  Resp_cpu: 16683
 ****** Costing Index CA_ADDRESS_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: CA_ADDRESS_PK_IDX
    resc_io: 2.000000  resc_cpu: 16683
    ix_sel: 1.8519e-06  ix_sel_with_filters: 1.8519e-06 
    NL Join : Cost: 2.000427  Resp: 2.000427  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 16683
      Resp_io: 2.000000  Resp_cpu: 16683
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 2.000427
          resc: 2.000427  resc_io: 2.000000  resc_cpu: 16683
          resp: 2.000427  resp_io: 2.000000  resc_cpu: 16683
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Join Card:  0.999814 = outer (1.000000) * inner (1307.756551) * sel (7.6453e-04)
Join Card - Rounded: 1 Computed: 0.999814
Grouping column cardinality [ CD_GENDER]    2
Grouping column cardinality [CD_MARITAL]    5
Grouping column cardinality [CD_EDUCATI]    7
Grouping column cardinality [CD_PURCHAS]    9500
Grouping column cardinality [CD_CREDIT_]    4
Grouping column cardinality [CD_DEP_COU]    6
Grouping column cardinality [CD_DEP_EMP]    6
Grouping column cardinality [CD_DEP_COL]    6
  Outer table:  VW_GBF_16  Alias: VW_GBF_16
    resc: 0.000000  card 1.000000  bytes:   deg: 0  resp: 0.000000
  Inner table:  CUSTOMER_ADDRESS  Alias: CA
    resc: 3579.864371  card: 1307.756551  bytes:   deg: 1  resp: 3579.864371
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     108 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39058824
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 6 Row size:     34 Total Rows:           1308
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39668949
      Total Temp space used: 0
  SM join: Resc: 3581.879992  Resp: 3581.879992  [multiMatchCost=0.000000]
SM Join
  SM cost: 3581.879992 
     resc: 3581.879992 resc_io: 3570.000000 resc_cpu: 464018503
     resp: 3581.879992 resp_io: 3570.000000 resp_cpu: 464018503
  Outer table:  VW_GBF_16  Alias: VW_GBF_16
    resc: 0.000000  card 1.000000  bytes:   deg: 0  resp: 0.000000
  Inner table:  CUSTOMER_ADDRESS  Alias: CA
    resc: 3579.864371  card: 1307.756551  bytes:   deg: 1  resp: 3579.864371
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.018714  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 1  probefrag: 6  ppasses: 1
  Hash join: Resc: 3579.883085  Resp: 3579.883085  [multiMatchCost=0.000000]
HA Join
  HA cost: 3579.883085  
     resc: 3579.883085 resc_io: 3570.000000 resc_cpu: 386021681
     resp: 3579.883085 resp_io: 3570.000000 resp_cpu: 386021681
Best:: JoinMethod: NestedLoop
       Cost: 2.000427  Degree: 1  Resp: 2.000427  Card: 0.999814 Bytes: 

***************
Now joining: CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS]#2
***************
NL Join
  Outer table: Card: 0.999814  Cost: 2.000427  Resp: 2.000427  Degree: 1  Bytes: 
Access path analysis for CUSTOMER_DEMOGRAPHICS
  Scan IO  Cost (Disk) =   4675.000000
  Scan CPU Cost (Disk) =   718321325.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000001 flag = 2048  ("CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK"="VW_GBF_16"."ITEM_1")
  Total Scan IO  Cost  =   4675.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 1920800.000000 (#rows))
                       =   4675.000000
  Total Scan CPU  Cost =   718321325.760000 (scan (Disk))
                         + 96040000.000000 (cpu filter eval) (= 50.000000 (per row) * 1920800.000000 (#rows))
                       =   814361325.760000
  Inner table: CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
  Access Path: TableScan
    NL Join:  Cost: 4697.850039  Resp: 4697.850039  Degree: 1
      Cost_io: 4677.000000  Cost_cpu: 814378008
      Resp_io: 4677.000000  Resp_cpu: 814378008
 ****** Costing Index CD_DEMO_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: CD_DEMO_PK_IDX
    resc_io: 2.000000  resc_cpu: 16453
    ix_sel: 5.2062e-07  ix_sel_with_filters: 5.2062e-07 
    NL Join : Cost: 4.000848  Resp: 4.000848  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 33136
      Resp_io: 4.000000  Resp_cpu: 33136
 ****** Costing Index CD_DEMO_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: CD_DEMO_PK_IDX
    resc_io: 2.000000  resc_cpu: 16453
    ix_sel: 5.2062e-07  ix_sel_with_filters: 5.2062e-07 
    NL Join : Cost: 4.000848  Resp: 4.000848  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 33136
      Resp_io: 4.000000  Resp_cpu: 33136
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 4.000848
          resc: 4.000848  resc_io: 4.000000  resc_cpu: 33136
          resp: 4.000848  resp_io: 4.000000  resc_cpu: 33136
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Join Card:  0.999814 = outer (0.999814) * inner (1920800.000000) * sel (5.2062e-07)
Join Card - Rounded: 1 Computed: 0.999814
Grouping column cardinality [ CD_GENDER]    2
Grouping column cardinality [CD_MARITAL]    5
Grouping column cardinality [CD_EDUCATI]    7
Grouping column cardinality [CD_PURCHAS]    9500
Grouping column cardinality [CD_CREDIT_]    4
Grouping column cardinality [CD_DEP_COU]    6
Grouping column cardinality [CD_DEP_EMP]    6
Grouping column cardinality [CD_DEP_COL]    6
  Outer table:  CUSTOMER_ADDRESS  Alias: CA
    resc: 2.000427  card 0.999814  bytes:   deg: 1  resp: 2.000427
  Inner table:  CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
    resc: 4693.390757  card: 1920800.000000  bytes:   deg: 1  resp: 4693.390757
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     131 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39058824
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 16462 Row size:     70 Total Rows:        1920800
      Initial runs:   2 Merge passes:  1 IO Cost / pass:       8918
      Total IO sort cost: 25380.000000      Total CPU sort cost: 2250842275
      Total Temp space used: 294134000
  SM join: Resc: 30134.018170  Resp: 30134.018170  [multiMatchCost=0.000000]
SM Join
  SM cost: 30134.018170 
     resc: 30134.018170 resc_io: 30057.000000 resc_cpu: 3008239107
     resp: 30134.018170 resp_io: 30057.000000 resp_cpu: 3008239107
  Outer table:  CUSTOMER_ADDRESS  Alias: CA
    resc: 2.000427  card 0.999814  bytes:   deg: 1  resp: 2.000427
  Inner table:  CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
    resc: 4693.390757  card: 1920800.000000  bytes:   deg: 1  resp: 4693.390757
    using dmeth: 2  #groups: 1
    Cost per ptn: 4.933076  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 1  probefrag: 15476  ppasses: 1
  Hash join: Resc: 4700.324260  Resp: 4700.324260  [multiMatchCost=0.000000]
HA Join
  HA cost: 4700.324260  
     resc: 4700.324260 resc_io: 4677.000000 resc_cpu: 911018158
     resp: 4700.324260 resp_io: 4677.000000 resp_cpu: 911018158
GROUP BY sort

GROUP BY/Correlated Subquery Filter adjustment factor: 0.088388
GROUP BY cardinality:  1.000000, TABLE cardinality:  1.000000
Vector group by not costed because no SYS_OP_XLATE_USE in group by.
kdmoGByPushdownValid: more than one table in group by    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     191 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39058824
      Total Temp space used: 0
Best:: JoinMethod: NestedLoop
       Cost: 5.000848  Degree: 1  Resp: 5.000848  Card: 0.999814 Bytes: 
***********************
Best so far:  Table#: 0  cost: 5.000000  card: 1.000000  bytes: 89.000000
              Table#: 1  cost: 2.000427  card: 0.999814  bytes: 110.000000
              Table#: 2  cost: 5.000848  card: 0.999814  bytes: 164.000000
***********************

*********************************
Number of join permutations tried: 1
*********************************
Enumerating distribution method (advanced)
--- Distribution method for 
join between VW_GBF_16[VW_GBF_16](serial) and CA[CUSTOMER_ADDRESS](serial); jm = 14; right side access path = IndexUnique
kkopqIsSerialJoin: serial NLJ: both inputs serial
---- serial NL-Join -> SERIAL
--- Distribution method for 
join between CA[CUSTOMER_ADDRESS](serial) and CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS](serial); jm = 14; right side access path = IndexUnique
kkopqIsSerialJoin: serial NLJ: both inputs serial
kkopqIsSerialJoin: serial NLJ: both inputs serial
---- serial NL-Join -> SERIAL

(newjo-save)    [2 1 0 ]

GROUP BY/Correlated Subquery Filter adjustment factor: 0.088388
GROUP BY cardinality:  1.000000, TABLE cardinality:  1.000000
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     191 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39058824
      Total Temp space used: 0
LORE: Or-Expansion validity checks failed on query block SEL$56FBA5F4 (#1) because Cost based OR expansion enabled
Transfer Optimizer annotations for query block SEL$56FBA5F4 (#1)
Final cost for query block SEL$56FBA5F4 (#1) - All Rows Plan:
  Best join order: 1
  Cost: 5.000848  Degree: 1  Card: 1.000000  Bytes: 164.000000
  Resc: 5.000848  Resc_io: 4.000000  Resc_cpu: 39091959
  Resp: 5.000848  Resp_io: 4.000000  Resc_cpu: 39091959
kkoqbc-subheap (delete addr=0x7f0471fb7e60, in-use=92504, alloc=108864)
kkoqbc-end:
        :
    call(in-use=1943336, alloc=2074720), compile(in-use=4310832, alloc=4313976), execution(in-use=64864, alloc=68928)

kkoqbc: finish optimizing query block SEL$56FBA5F4 (#1)
First K Rows: K = 1.00, N = 120.00
First K Rows: K = 1.00, N = 69.00
First K Rows: K = 1.00, N = 37.00
First K Rows: Setup end
***********************
CBQT: Looking for cost annotations for query block SEL$3, key = SEL$3_00010000_0
CBQT: Replaced cost annotations in query block SEL$3.
CBQT: Looking for cost annotations for query block SEL$4, key = SEL$4_00010000_0
CBQT: Replaced cost annotations in query block SEL$4.
CBQT: Looking for cost annotations for query block SEL$2, key = SEL$2_00010000_0
CBQT: Replaced cost annotations in query block SEL$2.
CBQT: Looking for cost annotations for query block SEL$F5B72DD9, key = SEL$F5B72DD9_00008040_3
CBQT: Could not find stored cost annotations.
kkoqbc: optimizing query block SEL$3 (#4)
        
        :
    call(in-use=1941112, alloc=2074720), compile(in-use=4311848, alloc=4313976), execution(in-use=64864, alloc=68928)

kkoqbc-end:
        :
    call(in-use=1941112, alloc=2074720), compile(in-use=4311848, alloc=4313976), execution(in-use=64864, alloc=68928)

kkoqbc: finish optimizing query block SEL$3 (#4)
kkoqbc: optimizing query block SEL$4 (#3)
        
        :
    call(in-use=1941112, alloc=2074720), compile(in-use=4311944, alloc=4313976), execution(in-use=64864, alloc=68928)

kkoqbc-end:
        :
    call(in-use=1941112, alloc=2074720), compile(in-use=4311944, alloc=4313976), execution(in-use=64864, alloc=68928)

kkoqbc: finish optimizing query block SEL$4 (#3)
kkoqbc: optimizing query block SEL$2 (#2)
        
        :
    call(in-use=1941112, alloc=2074720), compile(in-use=4312040, alloc=4313976), execution(in-use=64864, alloc=68928)

kkoqbc-end:
        :
    call(in-use=1941112, alloc=2074720), compile(in-use=4312040, alloc=4313976), execution(in-use=64864, alloc=68928)

kkoqbc: finish optimizing query block SEL$2 (#2)
kkoqbc: optimizing query block SEL$F5B72DD9 (#20)
        
        :
    call(in-use=1941112, alloc=2074720), compile(in-use=4312040, alloc=4313976), execution(in-use=64864, alloc=68928)

kkoqbc-subheap (create addr=0x7f0471fb7e60)
****************
QUERY BLOCK TEXT
****************
Not available.
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$F5B72DD9 nbfros=1 flg=0
  fro(0): flg=0 objn=74168 hint_alias="C"@"SEL$1"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3255 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: CUSTOMER  Alias:  C
  #Rows: 1080000  SSZ: 0  LGR: 0  #Blks:  23374  AvgRowLen:  138.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#5): C_CURRENT_ADDR_SK(NUMBER)
    AvgLen: 5 NDV: 457472 Nulls: 0 Density: 0.000002 Min: 1.000000 Max: 539997.000000
  Column (#3): C_CURRENT_CDEMO_SK(NUMBER)
    AvgLen: 6 NDV: 772544 Nulls: 0 Density: 0.000001 Min: 18.000000 Max: 1920799.000000
  Column (#1): C_CUSTOMER_SK(NUMBER)
    AvgLen: 6 NDV: 1080000 Nulls: 0 Density: 0.000001 Min: 1.000000 Max: 1080000.000000
Index Stats::
  Index: CUSTOMER_PK_IDX  Col#: 1
  LVLS: 2  #LB: 2266  #DK: 1080000  LB/K: 1.00  DB/K: 1.00  CLUF: 75684.00  NRW: 1080000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
try to generate single-table filter predicates from ORs for query block SEL$F5B72DD9 (#20)
finally:  EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM")

=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$F5B72DD9 (#20)
Applicable DS directives:
   dirid = 9316027922818115912, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74168)[3, 5]}
Checking valid directives for the query block
  SPD: Directive valid: dirid = 9316027922818115912, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74168)[3, 5]}
  SPD: Return code in qosdDSDirSetup: EXISTS, estType = GROUP_BY
  SPD: Return code in qosdDSDirSetup: NODIR, estType = QUERY_BLOCK
Return code in qosdSetupDirCtx4QB: EXISTS
=====================================
SPD: END context at query block level
=====================================
Access path analysis for CUSTOMER
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for CUSTOMER[C] 
  SPD: Return code in qosdDSDirSetup: NODIR, estType = TABLE

 kkecdn: Single Table Predicate: EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM")
  Table: CUSTOMER  Alias: C
    Card: Original: 1080000.000000  Rounded: 1080000  Computed: 1080000.000000  Non Adjusted: 1080000.000000
  Scan IO  Cost (Disk) =   6332.000000
  Scan CPU Cost (Disk) =   414856538.560000
  Cost of predicates:
    io = NOCOST, cpu = 20.000000, sel = 0.050000 flag = 2562  ( EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM"))
  Total Scan IO  Cost  =   6332.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 1080000.000000 (#rows))
                       =   6332.000000
  Total Scan CPU  Cost =   414856538.560000 (scan (Disk))
                         + 21600000.000000 (cpu filter eval) (= 20.000000 (per row) * 1080000.000000 (#rows))
                       =   436456538.560000
  Access Path: TableScan
    Cost:  6343.174339  Resp: 6343.174339  Degree: 0
      Cost_io: 6332.000000  Cost_cpu: 436456539
      Resp_io: 6332.000000  Resp_cpu: 436456539
  Best:: AccessPath: TableScan
         Cost: 6343.174339  Degree: 1  Resp: 6343.174339  Card: 1080000.000000  Bytes: 0.000000

Grouping column cardinality [C_CURRENT_]    772544
Grouping column cardinality [C_CURRENT_]    457472
***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE:  Bypassed; QB has a single table SEL$F5B72DD9 (#20)
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  CUSTOMER[C]#0
GROUP BY sort

GROUP BY/Correlated Subquery Filter adjustment factor: 0.707107
GROUP BY cardinality:  1080000.000000, TABLE cardinality:  1080000.000000
Vector group by not costed because no SYS_OP_XLATE_USE in group by.
kdmoGByPushdownValid: table is not in memory    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 3835 Row size:     29 Total Rows:        1080000
      Initial runs:   2 Merge passes:  1 IO Cost / pass:       2078
      Total IO sort cost: 5913.000000      Total CPU sort cost: 1108751040
      Total Temp space used: 30417000
***********************
Best so far:  Table#: 0  cost: 12284.561037  card: 1080000.000000  bytes: 18360000.000000
***********************
(newjo-stop-1) k:0, spcnt:0, perm:1, maxperm:2000

*********************************
Number of join permutations tried: 1
*********************************
Enumerating distribution method (advanced)

kkoaccsqf: Current query block SEL$F5B72DD9 (#20) is serial
kkoaccsqf: correlated subquery query block SEL$2 (#2) in filter               : serial
Final adjusted join cardinality: 1.000000, sq. fil. factor: 1080000.000000

GROUP BY/Correlated Subquery Filter adjustment factor: 0.707107
GROUP BY cardinality:  1.000000, TABLE cardinality:  1.000000
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     29 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39058824
      Total Temp space used: 0
LORE: Or-Expansion validity checks failed on query block SEL$F5B72DD9 (#20) because Cost based OR expansion enabled
Transfer Optimizer annotations for query block SEL$F5B72DD9 (#20)
Final cost for query block SEL$F5B72DD9 (#20) - All Rows Plan:
  Best join order: 1
  Cost: 13933460.677293  Degree: 1  Card: 1.000000  Bytes: 18360017.000000
  Resc: 13933460.677293  Resc_io: 13930535.285714  Resc_cpu: 114262353426
  Resp: 13933460.677293  Resp_io: 13930535.285714  Resc_cpu: 114262353426
kkoqbc-subheap (delete addr=0x7f0471fb7e60, in-use=26928, alloc=32840)
kkoqbc-end:
        :
    call(in-use=1946768, alloc=1998536), compile(in-use=4312920, alloc=4313976), execution(in-use=64864, alloc=68928)

kkoqbc: finish optimizing query block SEL$F5B72DD9 (#20)
kkoqbc: optimizing query block SEL$56FBA5F4 (#1)
        
        :
    call(in-use=1946768, alloc=1998536), compile(in-use=4312920, alloc=4313976), execution(in-use=64864, alloc=68928)

kkoqbc-subheap (create addr=0x7f0471fb7e60)
****************
QUERY BLOCK TEXT
****************
SELECT /*query10*/
    cd_gender,
    cd_marital_status,
    cd_education_status,
    COUNT(*) cnt1,
    cd_purchase_estimate,
    COUNT(*) cnt2,
    cd_credit_rating,
    COUNT(*) cnt3,
    cd_dep_count,
    COUNT(*) cnt4,
    cd_dep_employed_count,
    COUNT(*) cnt5,
    cd_dep_college_count,
    COUNT(*) cnt6
FROM
    customer c,
    customer_address ca,
    customer_demographics
WHERE
    -- join predicates
        c.c_current_addr_sk = ca.ca_address_sk
    AND cd_demo_sk = c.c_current_cdemo_sk
    -- filter predicates
    AND ca.ca_county IN (
        'Chouteau County',
        'Dixie County',
        'Harrisonburg city',
        'Lowndes County',
        'Dinwiddie County'
    )
    -- filter predicate (subquery)
    AND EXISTS (
        SELECT
            *
        FROM
            store_sales ss,
            date_dim
        WHERE
            c.c_customer_sk = ss.ss_customer_sk
            AND ss_sold_date_sk = d_date_sk
            AND d_year = 2001
            AND d_moy BETWEEN 1 AND 1 + 3
            AND ( EXISTS (
                SELECT
                    *
                FROM
                    web_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = ws_bill_customer_sk
                    AND ws_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            )
                  OR EXISTS (
                SELECT
                    *
                FROM
                    catalog_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = cs_ship_customer_sk
                    AND cs_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            ) )
    )
GROUP BY
    cd_gender,
    cd_marital_status,
    cd_education_status,
    cd_purchase_estimate,
    cd_credit_rating,
    cd_dep_count,
    cd_dep_employed_count,
    cd_dep_college_count

---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$56FBA5F4 nbfros=3 flg=0
  fro(0): flg=0 objn=74169 hint_alias="CA"@"SEL$1"
  fro(1): flg=0 objn=74170 hint_alias="CUSTOMER_DEMOGRAPHICS"@"SEL$1"
  fro(2): flg=1 objn=0 hint_alias="VW_GBF_16"@"SEL$F67CBA62"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3255 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
  #Rows: 1920800  SSZ: 0  LGR: 0  #Blks:  17254  AvgRowLen:  54.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#9): CD_DEP_COLLEGE_COUNT(NUMBER)
    AvgLen: 3 NDV: 6 Nulls: 0 Density: 0.166667 Min: 0.000000 Max: 5.000000
  Column (#8): CD_DEP_EMPLOYED_COUNT(NUMBER)
    AvgLen: 3 NDV: 6 Nulls: 0 Density: 0.166667 Min: 0.000000 Max: 5.000000
  Column (#7): CD_DEP_COUNT(NUMBER)
    AvgLen: 3 NDV: 6 Nulls: 0 Density: 0.166667 Min: 0.000000 Max: 5.000000
  Column (#6): CD_CREDIT_RATING(CHARACTER)
    AvgLen: 11 NDV: 4 Nulls: 0 Density: 0.250000
  Column (#5): CD_PURCHASE_ESTIMATE(NUMBER)
    AvgLen: 4 NDV: 9500 Nulls: 0 Density: 0.000105 Min: 500.000000 Max: 9999.000000
  Column (#4): CD_EDUCATION_STATUS(CHARACTER)
    AvgLen: 21 NDV: 7 Nulls: 0 Density: 0.070771
    Histogram: Freq  #Bkts: 7  UncompBkts: 1920800  EndPtVals: 7  ActualVal: yes
  Column (#3): CD_MARITAL_STATUS(CHARACTER)
    AvgLen: 2 NDV: 5 Nulls: 0 Density: 0.098953
    Histogram: Freq  #Bkts: 5  UncompBkts: 1920800  EndPtVals: 5  ActualVal: yes
  Column (#2): CD_GENDER(CHARACTER)
    AvgLen: 2 NDV: 2 Nulls: 0 Density: 0.249925
    Histogram: Freq  #Bkts: 2  UncompBkts: 1920800  EndPtVals: 2  ActualVal: no 
  Column (#1): CD_DEMO_SK(NUMBER)
    AvgLen: 6 NDV: 1920800 Nulls: 0 Density: 0.000001 Min: 1.000000 Max: 1920800.000000
Index Stats::
  Index: CD_DEMO_PK_IDX  Col#: 1
  LVLS: 2  #LB: 4138  #DK: 1920800  LB/K: 1.00  DB/K: 1.00  CLUF: 795806.00  NRW: 1920800.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table: CUSTOMER_ADDRESS  Alias: CA
  #Rows: 540000  SSZ: 0  LGR: 0  #Blks:  13174  AvgRowLen:  152.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): CA_ADDRESS_SK(NUMBER)
    AvgLen: 5 NDV: 540000 Nulls: 0 Density: 0.000002 Min: 1.000000 Max: 540000.000000
  Column (#8): CA_COUNTY(VARCHAR2)
    AvgLen: 16 NDV: 1877 Nulls: 0 Density: 0.000471
    Histogram: Hybrid  #Bkts: 254  UncompBkts: 5580  EndPtVals: 254  ActualVal: yes
Index Stats::
  Index: CA_ADDRESS_PK_IDX  Col#: 1
  LVLS: 2  #LB: 1127  #DK: 540000  LB/K: 1.00  DB/K: 1.00  CLUF: 12283.00  NRW: 540000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table: VW_GBF_16  Alias: VW_GBF_16  (NOT ANALYZED)
  #Rows: 0  SSZ: 0  LGR: 0  #Blks:  0  AvgRowLen:  0.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 0
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#2): ITEM_2(NUMBER)
    AvgLen: 5 NDV: 457472 Nulls: 0 Density: 0.000002 Min: 1.000000 Max: 539997.000000
  Column (#1): ITEM_1(NUMBER)
    AvgLen: 6 NDV: 772544 Nulls: 0 Density: 0.000001 Min: 18.000000 Max: 1920799.000000
try to generate single-table filter predicates from ORs for query block SEL$56FBA5F4 (#1)
finally: "VW_GBF_16"."ITEM_2"="CA"."CA_ADDRESS_SK" AND "CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK"="VW_GBF_16"."ITEM_1" AND ("CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County')

=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$56FBA5F4 (#1)
Applicable DS directives:
   dirid = 18439699102505563871, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {EC(74169)[8]}
   dirid = 7754152966831092939, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {EC(74170)[3, 4]}
Checking valid directives for the query block
  SPD: Return code in qosdDSDirSetup: NODIR, estType = GROUP_BY
  SPD: Return code in qosdDSDirSetup: NODIR, estType = QUERY_BLOCK
Return code in qosdSetupDirCtx4QB: EXISTS
=====================================
SPD: END context at query block level
=====================================
Access path analysis for VW_GBF_16

Access path analysis for CUSTOMER_ADDRESS
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for CUSTOMER_ADDRESS[CA] 
  SPD: Directive valid: dirid = 18439699102505563871, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {EC(74169)[8]}
  SPD: Return code in qosdDSDirSetup: EXISTS, estType = TABLE

 kkecdn: Single Table Predicate:"CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County'
  Using density: 4.7103e-04 of col #8 as selectivity of pred having unreasonably low value
  Using density: 4.7103e-04 of col #8 as selectivity of pred having unreasonably low value
  Using density: 4.7103e-04 of col #8 as selectivity of pred having unreasonably low value
  Using density: 4.7103e-04 of col #8 as selectivity of pred having unreasonably low value
  Estimated selectivity: 5.3763e-04 , endpoint value predicate, col: #8 
  Table: CUSTOMER_ADDRESS  Alias: CA
    Card: Original: 540000.000000  Rounded: 1308  Computed: 1307.756551  Non Adjusted: 1307.756551
  Scan IO  Cost (Disk) =   3570.000000
  Scan CPU Cost (Disk) =   250417850.560000
  Cost of predicates:
    io = 0.000000, cpu = 249.764594, sel = 0.002422 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Chouteau County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Dinwiddie County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Dixie County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Harrisonburg city')
      io = NOCOST, cpu = 50.000000, sel = 0.000538 flag = 2048  ("CA"."CA_COUNTY"='Lowndes County')
  Total Scan IO  Cost  =   3570.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 540000.000000 (#rows))
                       =   3570.000000
  Total Scan CPU  Cost =   250417850.560000 (scan (Disk))
                         + 134872880.645405 (cpu filter eval) (= 249.764594 (per row) * 540000.000000 (#rows))
                       =   385290731.205405
  Access Path: TableScan
    Cost:  3579.864371  Resp: 3579.864371  Degree: 0
      Cost_io: 3570.000000  Cost_cpu: 385290731
      Resp_io: 3570.000000  Resp_cpu: 385290731
  ****** trying bitmap/domain indexes ******
 ****** Costing Index CA_ADDRESS_PK_IDX
  Access Path: index (FullScan)
    Index: CA_ADDRESS_PK_IDX
    resc_io: 1129.000000  resc_cpu: 116040106
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1131.970906  Resp: 1131.970906  Degree: 0
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: TableScan
         Cost: 3579.864371  Degree: 1  Resp: 3579.864371  Card: 1307.756551  Bytes: 0.000000

Access path analysis for CUSTOMER_DEMOGRAPHICS
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS] 
  SPD: Return code in qosdDSDirSetup: NODIR, estType = TABLE
  Table: CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
    Card: Original: 1920800.000000  Rounded: 1920800  Computed: 1920800.000000  Non Adjusted: 1920800.000000
  Scan IO  Cost (Disk) =   4675.000000
  Scan CPU Cost (Disk) =   718321325.760000
  Total Scan IO  Cost  =   4675.000000 (scan (Disk))
                       =   4675.000000
  Total Scan CPU  Cost =   718321325.760000 (scan (Disk))
                       =   718321325.760000
  Access Path: TableScan
    Cost:  4693.390757  Resp: 4693.390757  Degree: 0
      Cost_io: 4675.000000  Cost_cpu: 718321326
      Resp_io: 4675.000000  Resp_cpu: 718321326
  ****** trying bitmap/domain indexes ******
 ****** Costing Index CD_DEMO_PK_IDX
  Access Path: index (FullScan)
    Index: CD_DEMO_PK_IDX
    resc_io: 4140.000000  resc_cpu: 413642762
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 4150.590251  Resp: 4150.590251  Degree: 0
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: TableScan
         Cost: 4693.390757  Degree: 1  Resp: 4693.390757  Card: 1920800.000000  Bytes: 0.000000

Grouping column cardinality [ CD_GENDER]    2
Grouping column cardinality [CD_MARITAL]    5
Grouping column cardinality [CD_EDUCATI]    7
Grouping column cardinality [CD_PURCHAS]    9500
Grouping column cardinality [CD_CREDIT_]    4
Grouping column cardinality [CD_DEP_COU]    6
Grouping column cardinality [CD_DEP_EMP]    6
Grouping column cardinality [CD_DEP_COL]    6
***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE:  Bypassed; QB is not duplicate insignificant SEL$56FBA5F4 (#1)
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  VW_GBF_16[VW_GBF_16]#0  CUSTOMER_ADDRESS[CA]#1  CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS]#2

***************
Now joining: CUSTOMER_ADDRESS[CA]#1
***************
NL Join
  Outer table: Card: 1.000000  Cost: 13933460.677293  Resp: 13933460.677293  Degree: 1  Bytes: 
Access path analysis for CUSTOMER_ADDRESS
  Scan IO  Cost (Disk) =   3570.000000
  Scan CPU Cost (Disk) =   250417850.560000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000765 flag = 2048  ("VW_GBF_16"."ITEM_2"="CA"."CA_ADDRESS_SK")
    io = 0.000000, cpu = 249.764594, sel = 0.002422 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Chouteau County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Dinwiddie County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Dixie County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Harrisonburg city')
      io = NOCOST, cpu = 50.000000, sel = 0.000538 flag = 2048  ("CA"."CA_COUNTY"='Lowndes County')
  Total Scan IO  Cost  =   3570.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 540000.000000 (#rows))
                       =   3570.000000
  Total Scan CPU  Cost =   250417850.560000 (scan (Disk))
                         + 27103113.823123 (cpu filter eval) (= 50.190952 (per row) * 540000.000000 (#rows))
                       =   277520964.383123
  Inner table: CUSTOMER_ADDRESS  Alias: CA
  Access Path: TableScan
    NL Join:  Cost: 13937037.782498  Resp: 13937037.782498  Degree: 1
      Cost_io: 13934105.285714  Cost_cpu: 114539874390
      Resp_io: 13934105.285714  Resp_cpu: 114539874390
 ****** Costing Index CA_ADDRESS_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: CA_ADDRESS_PK_IDX
    resc_io: 2.000000  resc_cpu: 16683
    ix_sel: 1.8519e-06  ix_sel_with_filters: 1.8519e-06 
    NL Join : Cost: 13933462.677720  Resp: 13933462.677720  Degree: 1
      Cost_io: 13930537.285714  Cost_cpu: 114262370108
      Resp_io: 13930537.285714  Resp_cpu: 114262370108
 ****** Costing Index CA_ADDRESS_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: CA_ADDRESS_PK_IDX
    resc_io: 2.000000  resc_cpu: 16683
    ix_sel: 1.8519e-06  ix_sel_with_filters: 1.8519e-06 
    NL Join : Cost: 13933462.677720  Resp: 13933462.677720  Degree: 1
      Cost_io: 13930537.285714  Cost_cpu: 114262370108
      Resp_io: 13930537.285714  Resp_cpu: 114262370108
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 13933462.677720
          resc: 13933462.677720  resc_io: 13930537.285714  resc_cpu: 114262370108
          resp: 13933462.677720  resp_io: 13930537.285714  resc_cpu: 114262370108
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Join Card:  0.999814 = outer (1.000000) * inner (1307.756551) * sel (7.6453e-04)
Join Card - Rounded: 1 Computed: 0.999814
Grouping column cardinality [ CD_GENDER]    2
Grouping column cardinality [CD_MARITAL]    5
Grouping column cardinality [CD_EDUCATI]    7
Grouping column cardinality [CD_PURCHAS]    9500
Grouping column cardinality [CD_CREDIT_]    4
Grouping column cardinality [CD_DEP_COU]    6
Grouping column cardinality [CD_DEP_EMP]    6
Grouping column cardinality [CD_DEP_COL]    6
  Outer table:  VW_GBF_16  Alias: VW_GBF_16
    resc: 13933460.677293  card 1.000000  bytes:   deg: 1  resp: 13933460.677293
  Inner table:  CUSTOMER_ADDRESS  Alias: CA
    resc: 3579.864371  card: 1307.756551  bytes:   deg: 1  resp: 3579.864371
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     108 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39058824
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 6 Row size:     34 Total Rows:           1308
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39668949
      Total Temp space used: 0
  SM join: Resc: 13937042.557285  Resp: 13937042.557285  [multiMatchCost=0.000000]
SM Join
  SM cost: 13937042.557285 
     resc: 13937042.557285 resc_io: 13934105.285714 resc_cpu: 114726371929
     resp: 13937042.557285 resp_io: 13934105.285714 resp_cpu: 114726371929
  Outer table:  VW_GBF_16  Alias: VW_GBF_16
    resc: 13933460.677293  card 1.000000  bytes:   deg: 1  resp: 13933460.677293
  Inner table:  CUSTOMER_ADDRESS  Alias: CA
    resc: 3579.864371  card: 1307.756551  bytes:   deg: 1  resp: 3579.864371
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.018714  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 1  probefrag: 6  ppasses: 1
  Hash join: Resc: 13937040.560378  Resp: 13937040.560378  [multiMatchCost=0.000000]
HA Join
  HA cost: 13937040.560378  
     resc: 13937040.560378 resc_io: 13934105.285714 resc_cpu: 114648375107
     resp: 13937040.560378 resp_io: 13934105.285714 resp_cpu: 114648375107
Best:: JoinMethod: NestedLoop
       Cost: 13933462.677720  Degree: 1  Resp: 13933462.677720  Card: 0.999814 Bytes: 

***************
Now joining: CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS]#2
***************
NL Join
  Outer table: Card: 0.999814  Cost: 13933462.677720  Resp: 13933462.677720  Degree: 1  Bytes: 
Access path analysis for CUSTOMER_DEMOGRAPHICS
  Scan IO  Cost (Disk) =   4675.000000
  Scan CPU Cost (Disk) =   718321325.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000001 flag = 2048  ("CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK"="VW_GBF_16"."ITEM_1")
  Total Scan IO  Cost  =   4675.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 1920800.000000 (#rows))
                       =   4675.000000
  Total Scan CPU  Cost =   718321325.760000 (scan (Disk))
                         + 96040000.000000 (cpu filter eval) (= 50.000000 (per row) * 1920800.000000 (#rows))
                       =   814361325.760000
  Inner table: CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
  Access Path: TableScan
    NL Join:  Cost: 13938158.527332  Resp: 13938158.527332  Degree: 1
      Cost_io: 13935212.285714  Cost_cpu: 115076731434
      Resp_io: 13935212.285714  Resp_cpu: 115076731434
 ****** Costing Index CD_DEMO_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: CD_DEMO_PK_IDX
    resc_io: 2.000000  resc_cpu: 16453
    ix_sel: 5.2062e-07  ix_sel_with_filters: 5.2062e-07 
    NL Join : Cost: 13933464.678141  Resp: 13933464.678141  Degree: 1
      Cost_io: 13930539.285714  Cost_cpu: 114262386561
      Resp_io: 13930539.285714  Resp_cpu: 114262386561
 ****** Costing Index CD_DEMO_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: CD_DEMO_PK_IDX
    resc_io: 2.000000  resc_cpu: 16453
    ix_sel: 5.2062e-07  ix_sel_with_filters: 5.2062e-07 
    NL Join : Cost: 13933464.678141  Resp: 13933464.678141  Degree: 1
      Cost_io: 13930539.285714  Cost_cpu: 114262386561
      Resp_io: 13930539.285714  Resp_cpu: 114262386561
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 13933464.678141
          resc: 13933464.678141  resc_io: 13930539.285714  resc_cpu: 114262386561
          resp: 13933464.678141  resp_io: 13930539.285714  resc_cpu: 114262386561
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Join Card:  0.999814 = outer (0.999814) * inner (1920800.000000) * sel (5.2062e-07)
Join Card - Rounded: 1 Computed: 0.999814
Grouping column cardinality [ CD_GENDER]    2
Grouping column cardinality [CD_MARITAL]    5
Grouping column cardinality [CD_EDUCATI]    7
Grouping column cardinality [CD_PURCHAS]    9500
Grouping column cardinality [CD_CREDIT_]    4
Grouping column cardinality [CD_DEP_COU]    6
Grouping column cardinality [CD_DEP_EMP]    6
Grouping column cardinality [CD_DEP_COL]    6
  Outer table:  CUSTOMER_ADDRESS  Alias: CA
    resc: 13933462.677720  card 0.999814  bytes:   deg: 1  resp: 13933462.677720
  Inner table:  CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
    resc: 4693.390757  card: 1920800.000000  bytes:   deg: 1  resp: 4693.390757
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 16462 Row size:     70 Total Rows:        1920800
      Initial runs:   2 Merge passes:  1 IO Cost / pass:       8918
      Total IO sort cost: 25380.000000      Total CPU sort cost: 2250842275
      Total Temp space used: 294134000
  SM join: Resc: 13963593.695463  Resp: 13963593.695463  [multiMatchCost=0.000000]
SM Join
  SM cost: 13963593.695463 
     resc: 13963593.695463 resc_io: 13960592.285714 resc_cpu: 117231533709
     resp: 13963593.695463 resp_io: 13960592.285714 resp_cpu: 117231533709
  Outer table:  CUSTOMER_ADDRESS  Alias: CA
    resc: 13933462.677720  card 0.999814  bytes:   deg: 1  resp: 13933462.677720
  Inner table:  CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
    resc: 4693.390757  card: 1920800.000000  bytes:   deg: 1  resp: 4693.390757
    using dmeth: 2  #groups: 1
    Cost per ptn: 4.933076  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 1  probefrag: 15476  ppasses: 1
  Hash join: Resc: 13938161.001553  Resp: 13938161.001553  [multiMatchCost=0.000000]
HA Join
  HA cost: 13938161.001553  
     resc: 13938161.001553 resc_io: 13935212.285714 resc_cpu: 115173371584
     resp: 13938161.001553 resp_io: 13935212.285714 resp_cpu: 115173371584
GROUP BY sort

GROUP BY/Correlated Subquery Filter adjustment factor: 0.088388
GROUP BY cardinality:  1.000000, TABLE cardinality:  1.000000
Vector group by not costed because no SYS_OP_XLATE_USE in group by.
kdmoGByPushdownValid: more than one table in group by    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     191 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39058824
      Total Temp space used: 0
Best:: JoinMethod: NestedLoop
       Cost: 13933465.678141  Degree: 1  Resp: 13933465.678141  Card: 0.999814 Bytes: 
***********************
Best so far:  Table#: 0  cost: 13933460.677293  card: 1.000000  bytes: 89.000000
              Table#: 1  cost: 13933462.677720  card: 0.999814  bytes: 110.000000
              Table#: 2  cost: 13933465.678141  card: 0.999814  bytes: 164.000000
***********************
Join order[2]:  VW_GBF_16[VW_GBF_16]#0  CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS]#2  CUSTOMER_ADDRESS[CA]#1

***************
Now joining: CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS]#2
***************
NL Join
  Outer table: Card: 1.000000  Cost: 13933460.677293  Resp: 13933460.677293  Degree: 1  Bytes: 
Access path analysis for CUSTOMER_DEMOGRAPHICS
  Scan IO  Cost (Disk) =   4675.000000
  Scan CPU Cost (Disk) =   718321325.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000001 flag = 2064  ("CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK"="VW_GBF_16"."ITEM_1")
  Total Scan IO  Cost  =   4675.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 1920800.000000 (#rows))
                       =   4675.000000
  Total Scan CPU  Cost =   718321325.760000 (scan (Disk))
                         + 96040000.000000 (cpu filter eval) (= 50.000000 (per row) * 1920800.000000 (#rows))
                       =   814361325.760000
  Inner table: CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
  Access Path: TableScan
    NL Join:  Cost: 13938156.526905  Resp: 13938156.526905  Degree: 1
      Cost_io: 13935210.285714  Cost_cpu: 115076714752
      Resp_io: 13935210.285714  Resp_cpu: 115076714752
 ****** Costing Index CD_DEMO_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: CD_DEMO_PK_IDX
    resc_io: 2.000000  resc_cpu: 16453
    ix_sel: 5.2062e-07  ix_sel_with_filters: 5.2062e-07 
    NL Join (ordered): Cost: 13933462.677714  Resp: 13933462.677714  Degree: 1
      Cost_io: 13930537.285714  Cost_cpu: 114262369879
      Resp_io: 13930537.285714  Resp_cpu: 114262369879
 ****** Costing Index CD_DEMO_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: CD_DEMO_PK_IDX
    resc_io: 2.000000  resc_cpu: 16453
    ix_sel: 5.2062e-07  ix_sel_with_filters: 5.2062e-07 
    NL Join (ordered): Cost: 13933462.677714  Resp: 13933462.677714  Degree: 1
      Cost_io: 13930537.285714  Cost_cpu: 114262369879
      Resp_io: 13930537.285714  Resp_cpu: 114262369879
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 13933462.677714
          resc: 13933462.677714  resc_io: 13930537.285714  resc_cpu: 114262369879
          resp: 13933462.677714  resp_io: 13930537.285714  resc_cpu: 114262369879
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Join Card:  1.000000 = outer (1.000000) * inner (1920800.000000) * sel (5.2062e-07)
Join Card - Rounded: 1 Computed: 1.000000
Grouping column cardinality [ CD_GENDER]    2
Grouping column cardinality [CD_MARITAL]    5
Grouping column cardinality [CD_EDUCATI]    7
Grouping column cardinality [CD_PURCHAS]    9500
Grouping column cardinality [CD_CREDIT_]    4
Grouping column cardinality [CD_DEP_COU]    6
Grouping column cardinality [CD_DEP_EMP]    6
Grouping column cardinality [CD_DEP_COL]    6
  Outer table:  VW_GBF_16  Alias: VW_GBF_16
    resc: 13933460.677293  card 1.000000  bytes:   deg: 1  resp: 13933460.677293
  Inner table:  CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
    resc: 4693.390757  card: 1920800.000000  bytes:   deg: 1  resp: 4693.390757
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 16462 Row size:     70 Total Rows:        1920800
      Initial runs:   2 Merge passes:  1 IO Cost / pass:       8918
      Total IO sort cost: 25380.000000      Total CPU sort cost: 2250842275
      Total Temp space used: 294134000
  SM join: Resc: 13963591.695036  Resp: 13963591.695036  [multiMatchCost=0.000000]
SM Join
  SM cost: 13963591.695036 
     resc: 13963591.695036 resc_io: 13960590.285714 resc_cpu: 117231517026
     resp: 13963591.695036 resp_io: 13960590.285714 resp_cpu: 117231517026
  Outer table:  VW_GBF_16  Alias: VW_GBF_16
    resc: 13933460.677293  card 1.000000  bytes:   deg: 1  resp: 13933460.677293
  Inner table:  CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
    resc: 4693.390757  card: 1920800.000000  bytes:   deg: 1  resp: 4693.390757
    using dmeth: 2  #groups: 1
    Cost per ptn: 4.933076  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 1  probefrag: 15476  ppasses: 1
  Hash join: Resc: 13938159.001126  Resp: 13938159.001126  [multiMatchCost=0.000000]
HA Join
  HA cost: 13938159.001126  
     resc: 13938159.001126 resc_io: 13935210.285714 resc_cpu: 115173354902
     resp: 13938159.001126 resp_io: 13935210.285714 resp_cpu: 115173354902
Best:: JoinMethod: NestedLoop
       Cost: 13933462.677714  Degree: 1  Resp: 13933462.677714  Card: 1.000000 Bytes: 

***************
Now joining: CUSTOMER_ADDRESS[CA]#1
***************
NL Join
  Outer table: Card: 1.000000  Cost: 13933462.677714  Resp: 13933462.677714  Degree: 1  Bytes: 
Access path analysis for CUSTOMER_ADDRESS
  Scan IO  Cost (Disk) =   3570.000000
  Scan CPU Cost (Disk) =   250417850.560000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000765 flag = 2064  ("VW_GBF_16"."ITEM_2"="CA"."CA_ADDRESS_SK")
    io = 0.000000, cpu = 249.764594, sel = 0.002422 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Chouteau County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Dinwiddie County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Dixie County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Harrisonburg city')
      io = NOCOST, cpu = 50.000000, sel = 0.000538 flag = 2048  ("CA"."CA_COUNTY"='Lowndes County')
  Total Scan IO  Cost  =   3570.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 540000.000000 (#rows))
                       =   3570.000000
  Total Scan CPU  Cost =   250417850.560000 (scan (Disk))
                         + 27103113.823123 (cpu filter eval) (= 50.190952 (per row) * 540000.000000 (#rows))
                       =   277520964.383123
  Inner table: CUSTOMER_ADDRESS  Alias: CA
  Access Path: TableScan
    NL Join:  Cost: 13937039.782920  Resp: 13937039.782920  Degree: 1
      Cost_io: 13934107.285714  Cost_cpu: 114539890843
      Resp_io: 13934107.285714  Resp_cpu: 114539890843
 ****** Costing Index CA_ADDRESS_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: CA_ADDRESS_PK_IDX
    resc_io: 2.000000  resc_cpu: 16683
    ix_sel: 1.8519e-06  ix_sel_with_filters: 1.8519e-06 
    NL Join : Cost: 13933464.678141  Resp: 13933464.678141  Degree: 1
      Cost_io: 13930539.285714  Cost_cpu: 114262386561
      Resp_io: 13930539.285714  Resp_cpu: 114262386561
 ****** Costing Index CA_ADDRESS_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: CA_ADDRESS_PK_IDX
    resc_io: 2.000000  resc_cpu: 16683
    ix_sel: 1.8519e-06  ix_sel_with_filters: 1.8519e-06 
    NL Join : Cost: 13933464.678141  Resp: 13933464.678141  Degree: 1
      Cost_io: 13930539.285714  Cost_cpu: 114262386561
      Resp_io: 13930539.285714  Resp_cpu: 114262386561
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 13933464.678141
          resc: 13933464.678141  resc_io: 13930539.285714  resc_cpu: 114262386561
          resp: 13933464.678141  resp_io: 13930539.285714  resc_cpu: 114262386561
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Join Card:  0.999814 = outer (1.000000) * inner (1307.756551) * sel (7.6453e-04)
Join Card - Rounded: 1 Computed: 0.999814
Grouping column cardinality [ CD_GENDER]    2
Grouping column cardinality [CD_MARITAL]    5
Grouping column cardinality [CD_EDUCATI]    7
Grouping column cardinality [CD_PURCHAS]    9500
Grouping column cardinality [CD_CREDIT_]    4
Grouping column cardinality [CD_DEP_COU]    6
Grouping column cardinality [CD_DEP_EMP]    6
Grouping column cardinality [CD_DEP_COL]    6
  Outer table:  CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
    resc: 13933462.677714  card 1.000000  bytes:   deg: 1  resp: 13933462.677714
  Inner table:  CUSTOMER_ADDRESS  Alias: CA
    resc: 3579.864371  card: 1307.756551  bytes:   deg: 1  resp: 3579.864371
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     168 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39058824
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 6 Row size:     34 Total Rows:           1308
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39668949
      Total Temp space used: 0
  SM join: Resc: 13937044.557706  Resp: 13937044.557706  [multiMatchCost=0.000000]
SM Join
  SM cost: 13937044.557706 
     resc: 13937044.557706 resc_io: 13934107.285714 resc_cpu: 114726388382
     resp: 13937044.557706 resp_io: 13934107.285714 resp_cpu: 114726388382
  Outer table:  CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
    resc: 13933462.677714  card 1.000000  bytes:   deg: 1  resp: 13933462.677714
  Inner table:  CUSTOMER_ADDRESS  Alias: CA
    resc: 3579.864371  card: 1307.756551  bytes:   deg: 1  resp: 3579.864371
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.018714  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 1  probefrag: 6  ppasses: 1
  Hash join: Resc: 13937042.560799  Resp: 13937042.560799  [multiMatchCost=0.000000]
HA Join
  HA cost: 13937042.560799  
     resc: 13937042.560799 resc_io: 13934107.285714 resc_cpu: 114648391560
     resp: 13937042.560799 resp_io: 13934107.285714 resp_cpu: 114648391560
GROUP BY sort

GROUP BY/Correlated Subquery Filter adjustment factor: 0.088388
GROUP BY cardinality:  1.000000, TABLE cardinality:  1.000000
Vector group by not costed because no SYS_OP_XLATE_USE in group by.
kdmoGByPushdownValid: more than one table in group by    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     191 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39058824
      Total Temp space used: 0
Best:: JoinMethod: NestedLoop
       Cost: 13933465.678141  Degree: 1  Resp: 13933465.678141  Card: 0.999814 Bytes: 
***********************
Best so far:  Table#: 0  cost: 13933460.677293  card: 1.000000  bytes: 89.000000
              Table#: 2  cost: 13933462.677714  card: 1.000000  bytes: 143.000000
              Table#: 1  cost: 13933465.678141  card: 0.999814  bytes: 164.000000
***********************
Join order[3]:  CUSTOMER_ADDRESS[CA]#1  VW_GBF_16[VW_GBF_16]#0  CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS]#2

***************
Now joining: VW_GBF_16[VW_GBF_16]#0
***************
NL Join
  Outer table: Card: 1307.756551  Cost: 3579.864371  Resp: 3579.864371  Degree: 1  Bytes: 
Access path analysis for VW_GBF_16
  Inner table: VW_GBF_16  Alias: VW_GBF_16
  Access Path: TableScan
    NL Join:  Cost: 18224970145.763561  Resp: 18224970145.763561  Degree: 1
      Cost_io: 18221143723.714287  Cost_cpu: 149455543571670
      Resp_io: 18221143723.714287  Resp_cpu: 149455543571670

  Best NL cost: 18224970145.763561
          resc: 18224970145.763561  resc_io: 18221143723.714287  resc_cpu: 149455543571670
          resp: 18224970145.763561  resp_io: 18221143723.714287  resc_cpu: 149455543571670
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Join Card:  0.999814 = outer (1307.756551) * inner (1.000000) * sel (7.6453e-04)
Join Card - Rounded: 1 Computed: 0.999814
Grouping column cardinality [ CD_GENDER]    2
Grouping column cardinality [CD_MARITAL]    5
Grouping column cardinality [CD_EDUCATI]    7
Grouping column cardinality [CD_PURCHAS]    9500
Grouping column cardinality [CD_CREDIT_]    4
Grouping column cardinality [CD_DEP_COU]    6
Grouping column cardinality [CD_DEP_EMP]    6
Grouping column cardinality [CD_DEP_COL]    6
  Outer table:  CUSTOMER_ADDRESS  Alias: CA
    resc: 3579.864371  card 1307.756551  bytes:   deg: 1  resp: 3579.864371
  Inner table:  VW_GBF_16  Alias: VW_GBF_16
    resc: 13933460.677293  card: 1.000000  bytes:   deg: 1  resp: 13933460.677293
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 6 Row size:     34 Total Rows:           1308
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39668949
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     108 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39058824
      Total Temp space used: 0
  SM join: Resc: 13937042.557285  Resp: 13937042.557285  [multiMatchCost=0.000000]
SM Join
  SM cost: 13937042.557285 
     resc: 13937042.557285 resc_io: 13934105.285714 resc_cpu: 114726371929
     resp: 13937042.557285 resp_io: 13934105.285714 resp_cpu: 114726371929
SM Join (with index on outer)
 ****** Costing Index CA_ADDRESS_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (FullScan)
    Index: CA_ADDRESS_PK_IDX
    resc_io: 13412.000000  resc_cpu: 387215867
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 13421.913659  Resp: 13421.913659  Degree: 1
  Outer table:  CUSTOMER_ADDRESS  Alias: CA
    resc: 13421.913659  card 1307.756551  bytes:   deg: 1  resp: 13421.913659
  Inner table:  VW_GBF_16  Alias: VW_GBF_16
    resc: 13933460.677293  card: 1.000000  bytes:   deg: 1  resp: 13933460.677293
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     108 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39058824
      Total Temp space used: 0
  SM join: Resc: 13946883.590952  Resp: 13946883.590952  [multiMatchCost=0.000000]
  Outer table:  CUSTOMER_ADDRESS  Alias: CA
    resc: 3579.864371  card 1307.756551  bytes:   deg: 1  resp: 3579.864371
  Inner table:  VW_GBF_16  Alias: VW_GBF_16
    resc: 13933460.677293  card: 1.000000  bytes:   deg: 1  resp: 13933460.677293
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020387  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 6  probefrag: 1  ppasses: 1
  Hash join: Resc: 13937040.562051  Resp: 13937040.562051  [multiMatchCost=0.000000]
  Outer table:  VW_GBF_16  Alias: VW_GBF_16
    resc: 13933460.677293  card 1.000000  bytes:   deg: 1  resp: 13933460.677293
  Inner table:  CUSTOMER_ADDRESS  Alias: CA
    resc: 3579.864371  card: 1307.756551  bytes:   deg: 1  resp: 3579.864371
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.018714  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 1  probefrag: 6  ppasses: 1
  Hash join: Resc: 13937040.560378  Resp: 13937040.560378  [multiMatchCost=0.000000]
HA Join
  HA cost: 13937040.560378 swapped 
     resc: 13937040.560378 resc_io: 13934105.285714 resc_cpu: 114648375107
     resp: 13937040.560378 resp_io: 13934105.285714 resp_cpu: 114648375107
Join order aborted: cost > best plan cost
***********************
Join order[4]:  CUSTOMER_ADDRESS[CA]#1  CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS]#2  VW_GBF_16[VW_GBF_16]#0

***************
Now joining: CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS]#2
***************
NL Join
  Outer table: Card: 1307.756551  Cost: 3579.864371  Resp: 3579.864371  Degree: 1  Bytes: 
Access path analysis for CUSTOMER_DEMOGRAPHICS
  Scan IO  Cost (Disk) =   4672.959480
  Scan CPU Cost (Disk) =   718321325.760000
  Total Scan IO  Cost  =   4672.959480 (scan (Disk))
                       =   4672.959480
  Total Scan CPU  Cost =   718321325.760000 (scan (Disk))
                       =   718321325.760000
  Inner table: CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
  Access Path: TableScan
    NL Join:  Cost: 6139865.974310  Resp: 6139865.974310  Degree: 1
      Cost_io: 6115801.000000  Cost_cpu: 939949584825
      Resp_io: 6115801.000000  Resp_cpu: 939949584825
  ****** trying bitmap/domain indexes ******
 ****** Costing Index CD_DEMO_PK_IDX
  Access Path: index (FullScan)
    Index: CD_DEMO_PK_IDX
    resc_io: 4140.000000  resc_cpu: 413642762
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 4150.590251  Resp: 4150.590251  Degree: 0
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 6139865.974310
          resc: 6139865.974310  resc_io: 6115801.000000  resc_cpu: 939949584825
          resp: 6139865.974310  resp_io: 6115801.000000  resc_cpu: 939949584825
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Join Card:  2511938782.753941 = outer (1307.756551) * inner (1920800.000000) * sel (1.000000)
Join Card - Rounded: 2511938783 Computed: 2511938782.753941
Grouping column cardinality [ CD_GENDER]    2
Grouping column cardinality [CD_MARITAL]    5
Grouping column cardinality [CD_EDUCATI]    7
Grouping column cardinality [CD_PURCHAS]    9500
Grouping column cardinality [CD_CREDIT_]    4
Grouping column cardinality [CD_DEP_COU]    6
Grouping column cardinality [CD_DEP_EMP]    6
Grouping column cardinality [CD_DEP_COL]    6
Best:: JoinMethod: NestedLoop
       Cost: 6139865.974310  Degree: 1  Resp: 6139865.974310  Card: 2511938782.753941 Bytes: 

***************
Now joining: VW_GBF_16[VW_GBF_16]#0
***************
NL Join
  Outer table: Card: 2511938782.753941  Cost: 6139865.974310  Resp: 6139865.974310  Degree: 1  Bytes: 
Access path analysis for VW_GBF_16
  Inner table: VW_GBF_16  Alias: VW_GBF_16
  Access Path: TableScan
    NL Join:  Cost: 35000000262837492.000000  Resp: 35000000262837492.000000  Degree: 1
      Cost_io: 34992651858251500.000000  Cost_cpu: 287020037947053932544
      Resp_io: 34992651858251500.000000  Resp_cpu: 287020037947053932544

  Best NL cost: 35000000262837492.000000
          resc: 35000000262837492.000000  resc_io: 34992651858251500.000000  resc_cpu: 287020037947053932544
          resp: 35000000262837492.000000  resp_io: 34992651858251500.000000  resc_cpu: 287020037947053932544
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Join Card:  0.999814 = outer (2511938782.753941) * inner (1.000000) * sel (3.9802e-10)
Join Card - Rounded: 1 Computed: 0.999814
Grouping column cardinality [ CD_GENDER]    2
Grouping column cardinality [CD_MARITAL]    5
Grouping column cardinality [CD_EDUCATI]    7
Grouping column cardinality [CD_PURCHAS]    9500
Grouping column cardinality [CD_CREDIT_]    4
Grouping column cardinality [CD_DEP_COU]    6
Grouping column cardinality [CD_DEP_EMP]    6
Grouping column cardinality [CD_DEP_COL]    6
  Outer table:  CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
    resc: 6139865.974310  card 2511938782.753941  bytes:   deg: 1  resp: 6139865.974310
  Inner table:  VW_GBF_16  Alias: VW_GBF_16
    resc: 13933460.677293  card: 1.000000  bytes:   deg: 1  resp: 13933460.677293
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 28600675 Row size:     93 Total Rows:     2511938783
      Initial runs:   2228 Merge passes:  2 IO Cost / pass:    15492034
      Total IO sort cost: 59584743.000000      Total CPU sort cost: 4590517954039
      Total Temp space used: 508093924000
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     108 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39058824
      Total Temp space used: 0
  SM join: Resc: 79775598.972716  Resp: 79775598.972716  [multiMatchCost=0.000000]
SM Join
  SM cost: 79775598.972716 
     resc: 79775598.972716 resc_io: 79631079.285714 resc_cpu: 5644768951114
     resp: 79775598.972716 resp_io: 79631079.285714 resp_cpu: 5644768951114
  Outer table:  CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
    resc: 6139865.974310  card 2511938782.753941  bytes:   deg: 1  resp: 6139865.974310
  Inner table:  VW_GBF_16  Alias: VW_GBF_16
    resc: 13933460.677293  card: 1.000000  bytes:   deg: 1  resp: 13933460.677293
    using dmeth: 2  #groups: 1
    Cost per ptn: 10339064.733613  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 26677085  probefrag: 1  ppasses: 1
  Hash join: Resc: 30412391.385216  Resp: 30412391.385216  [multiMatchCost=0.000000]
  Outer table:  VW_GBF_16  Alias: VW_GBF_16
    resc: 13933460.677293  card 1.000000  bytes:   deg: 1  resp: 13933460.677293
  Inner table:  CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
    resc: 6139865.974310  card: 2511938782.753941  bytes:   deg: 1  resp: 6139865.974310
    using dmeth: 2  #groups: 1
    Cost per ptn: 6431.183936  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 1  probefrag: 26677085  ppasses: 1
  Hash join: Resc: 20079757.835539  Resp: 20079757.835539  [multiMatchCost=0.000000]
HA Join
  HA cost: 20079757.835539 swapped 
     resc: 20079757.835539 resc_io: 20046336.285714 resc_cpu: 1305406416701
     resp: 20079757.835539 resp_io: 20046336.285714 resp_cpu: 1305406416701
GROUP BY sort

GROUP BY/Correlated Subquery Filter adjustment factor: 0.088388
GROUP BY cardinality:  1.000000, TABLE cardinality:  1.000000
Vector group by not costed because no SYS_OP_XLATE_USE in group by.
kdmoGByPushdownValid: more than one table in group by    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     191 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39058824
      Total Temp space used: 0
Join order aborted: cost > best plan cost
***********************
Join order[5]:  CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS]#2  VW_GBF_16[VW_GBF_16]#0  CUSTOMER_ADDRESS[CA]#1

***************
Now joining: VW_GBF_16[VW_GBF_16]#0
***************
NL Join
  Outer table: Card: 1920800.000000  Cost: 4693.390757  Resp: 4693.390757  Degree: 1  Bytes: 
Access path analysis for VW_GBF_16
  Inner table: VW_GBF_16  Alias: VW_GBF_16
  Access Path: TableScan
    NL Join:  Cost: 26763391273637.703125  Resp: 26763391273637.703125  Degree: 1
      Cost_io: 26757772181475.000000  Cost_cpu: 219475129178586016
      Resp_io: 26757772181475.000000  Resp_cpu: 219475129178586016

  Best NL cost: 26763391273637.703125
          resc: 26763391273637.703125  resc_io: 26757772181475.000000  resc_cpu: 219475129178586016
          resp: 26763391273637.703125  resp_io: 26757772181475.000000  resc_cpu: 219475129178586016
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Join Card:  1.000000 = outer (1920800.000000) * inner (1.000000) * sel (5.2062e-07)
Join Card - Rounded: 1 Computed: 1.000000
Grouping column cardinality [ CD_GENDER]    2
Grouping column cardinality [CD_MARITAL]    5
Grouping column cardinality [CD_EDUCATI]    7
Grouping column cardinality [CD_PURCHAS]    9500
Grouping column cardinality [CD_CREDIT_]    4
Grouping column cardinality [CD_DEP_COU]    6
Grouping column cardinality [CD_DEP_EMP]    6
Grouping column cardinality [CD_DEP_COL]    6
  Outer table:  CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
    resc: 4693.390757  card 1920800.000000  bytes:   deg: 1  resp: 4693.390757
  Inner table:  VW_GBF_16  Alias: VW_GBF_16
    resc: 13933460.677293  card: 1.000000  bytes:   deg: 1  resp: 13933460.677293
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 16462 Row size:     70 Total Rows:        1920800
      Initial runs:   2 Merge passes:  1 IO Cost / pass:       8918
      Total IO sort cost: 25380.000000      Total CPU sort cost: 2250842275
      Total Temp space used: 294134000
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     108 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39058824
      Total Temp space used: 0
  SM join: Resc: 13963592.695036  Resp: 13963592.695036  [multiMatchCost=0.000000]
SM Join
  SM cost: 13963592.695036 
     resc: 13963592.695036 resc_io: 13960590.285714 resc_cpu: 117270575850
     resp: 13963592.695036 resp_io: 13960590.285714 resp_cpu: 117270575850
SM Join (with index on outer)
 ****** Costing Index CD_DEMO_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (FullScan)
    Index: CD_DEMO_PK_IDX
    resc_io: 799946.000000  resc_cpu: 6676375442
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 800116.931299  Resp: 800116.931299  Degree: 1
  Outer table:  CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
    resc: 800116.931299  card 1920800.000000  bytes:   deg: 1  resp: 800116.931299
  Inner table:  VW_GBF_16  Alias: VW_GBF_16
    resc: 13933460.677293  card: 1.000000  bytes:   deg: 1  resp: 13933460.677293
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     108 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39058824
      Total Temp space used: 0
  SM join: Resc: 14733578.608592  Resp: 14733578.608592  [multiMatchCost=0.000000]
  Outer table:  CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
    resc: 4693.390757  card 1920800.000000  bytes:   deg: 1  resp: 4693.390757
  Inner table:  VW_GBF_16  Alias: VW_GBF_16
    resc: 13933460.677293  card: 1.000000  bytes:   deg: 1  resp: 13933460.677293
    using dmeth: 2  #groups: 1
    Cost per ptn: 6001.017523  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 15476  probefrag: 1  ppasses: 1
  Hash join: Resc: 13944155.085573  Resp: 13944155.085573  [multiMatchCost=0.000000]
  Outer table:  VW_GBF_16  Alias: VW_GBF_16
    resc: 13933460.677293  card 1.000000  bytes:   deg: 1  resp: 13933460.677293
  Inner table:  CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
    resc: 4693.390757  card: 1920800.000000  bytes:   deg: 1  resp: 4693.390757
    using dmeth: 2  #groups: 1
    Cost per ptn: 4.933076  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 1  probefrag: 15476  ppasses: 1
  Hash join: Resc: 13938159.001126  Resp: 13938159.001126  [multiMatchCost=0.000000]
HA Join
  HA cost: 13938159.001126 swapped 
     resc: 13938159.001126 resc_io: 13935210.285714 resc_cpu: 115173354902
     resp: 13938159.001126 resp_io: 13935210.285714 resp_cpu: 115173354902
Join order aborted: cost > best plan cost
***********************
Join order[6]:  CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS]#2  CUSTOMER_ADDRESS[CA]#1  VW_GBF_16[VW_GBF_16]#0

***************
Now joining: CUSTOMER_ADDRESS[CA]#1
***************
NL Join
  Outer table: Card: 1920800.000000  Cost: 4693.390757  Resp: 4693.390757  Degree: 1  Bytes: 
Access path analysis for CUSTOMER_ADDRESS
  Scan IO  Cost (Disk) =   3567.958334
  Scan CPU Cost (Disk) =   250417850.560000
  Cost of predicates:
    io = 0.000000, cpu = 249.764594, sel = 0.002422 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Chouteau County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Dinwiddie County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Dixie County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Harrisonburg city')
      io = NOCOST, cpu = 50.000000, sel = 0.000538 flag = 2048  ("CA"."CA_COUNTY"='Lowndes County')
  Total Scan IO  Cost  =   3567.958334 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 540000.000000 (#rows))
                       =   3567.958334
  Total Scan CPU  Cost =   250417850.560000 (scan (Disk))
                         + 134872880.645405 (cpu filter eval) (= 249.764594 (per row) * 540000.000000 (#rows))
                       =   385290731.205405
  Inner table: CUSTOMER_ADDRESS  Alias: CA
  Access Path: TableScan
    NL Join:  Cost: 6872286545.457758  Resp: 6872286545.457758  Degree: 1
      Cost_io: 6853339043.000000  Cost_cpu: 740067154820668
      Resp_io: 6853339043.000000  Resp_cpu: 740067154820668
  ****** trying bitmap/domain indexes ******
 ****** Costing Index CA_ADDRESS_PK_IDX
  Access Path: index (FullScan)
    Index: CA_ADDRESS_PK_IDX
    resc_io: 1129.000000  resc_cpu: 116040106
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1131.970906  Resp: 1131.970906  Degree: 0
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 6872286545.457758
          resc: 6872286545.457758  resc_io: 6853339043.000000  resc_cpu: 740067154820668
          resp: 6872286545.457758  resp_io: 6853339043.000000  resc_cpu: 740067154820668
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Join Card:  2511938782.753941 = outer (1920800.000000) * inner (1307.756551) * sel (1.000000)
Join Card - Rounded: 2511938783 Computed: 2511938782.753941
Grouping column cardinality [ CD_GENDER]    2
Grouping column cardinality [CD_MARITAL]    5
Grouping column cardinality [CD_EDUCATI]    7
Grouping column cardinality [CD_PURCHAS]    9500
Grouping column cardinality [CD_CREDIT_]    4
Grouping column cardinality [CD_DEP_COU]    6
Grouping column cardinality [CD_DEP_EMP]    6
Grouping column cardinality [CD_DEP_COL]    6
Join order aborted: cost > best plan cost
***********************
(newjo-stop-1) k:0, spcnt:0, perm:6, maxperm:2000

*********************************
Number of join permutations tried: 6
*********************************
Enumerating distribution method (advanced)
--- Distribution method for 
join between VW_GBF_16[VW_GBF_16](serial) and CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS](serial); jm = 14; right side access path = IndexUnique
kkopqIsSerialJoin: serial NLJ: both inputs serial
---- serial NL-Join -> SERIAL
--- Distribution method for 
join between CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS](serial) and CA[CUSTOMER_ADDRESS](serial); jm = 14; right side access path = IndexUnique
kkopqIsSerialJoin: serial NLJ: both inputs serial
kkopqIsSerialJoin: serial NLJ: both inputs serial
---- serial NL-Join -> SERIAL

(newjo-save)    [2 0 1 ]

GROUP BY/Correlated Subquery Filter adjustment factor: 0.088388
GROUP BY cardinality:  1.000000, TABLE cardinality:  1.000000
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     191 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39058824
      Total Temp space used: 0
LORE: Or-Expansion validity checks failed on query block SEL$56FBA5F4 (#1) because Cost based OR expansion enabled
Transfer Optimizer annotations for query block SEL$56FBA5F4 (#1)
Final cost for query block SEL$56FBA5F4 (#1) - All Rows Plan:
  Best join order: 2
  Cost: 13933465.678141  Degree: 1  Card: 1.000000  Bytes: 328.000000
  Resc: 13933465.678141  Resc_io: 13930539.285714  Resc_cpu: 114301445385
  Resp: 13933465.678141  Resp_io: 13930539.285714  Resc_cpu: 114301445385
kkoqbc-subheap (delete addr=0x7f0471fb7e60, in-use=92632, alloc=108864)
kkoqbc-end:
        :
    call(in-use=1961576, alloc=2091088), compile(in-use=4322856, alloc=4326408), execution(in-use=64864, alloc=68928)

kkoqbc: finish optimizing query block SEL$56FBA5F4 (#1)
CBQT: Saved costed qb# 4 (SEL$3), key = SEL$3_00010000_0
CBQT: Saved costed qb# 3 (SEL$4), key = SEL$4_00010000_0
CBQT: Saved costed qb# 2 (SEL$2), key = SEL$2_00010000_0
CBQT: Saved costed qb# 20 (SEL$F5B72DD9), key = SEL$F5B72DD9_00008040_3
CBQT: Saved costed qb# 1 (SEL$56FBA5F4), key = SEL$56FBA5F4_00000040_0
GBP: Not update best state, Cost = 13933465.678141
QB before group-by removal:******* UNPARSED QUERY IS *******
SELECT "CUSTOMER_DEMOGRAPHICS"."CD_GENDER" "CD_GENDER","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS" "CD_MARITAL_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS" "CD_EDUCATION_STATUS",SUM("VW_GBF_17"."ITEM_7") "CNT1","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE" "CD_PURCHASE_ESTIMATE",SUM("VW_GBF_17"."ITEM_6") "CNT2","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING" "CD_CREDIT_RATING",SUM("VW_GBF_17"."ITEM_5") "CNT3","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT" "CD_DEP_COUNT",SUM("VW_GBF_17"."ITEM_4") "CNT4","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT" "CD_DEP_EMPLOYED_COUNT",SUM("VW_GBF_17"."ITEM_3") "CNT5","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT" "CD_DEP_COLLEGE_COUNT",SUM("VW_GBF_17"."ITEM_2") "CNT6" FROM  (SELECT "C"."C_CURRENT_CDEMO_SK" "ITEM_1",COUNT(*) "ITEM_2",COUNT(*) "ITEM_3",COUNT(*) "ITEM_4",COUNT(*) "ITEM_5",COUNT(*) "ITEM_6",COUNT(*) "ITEM_7" FROM "TPCDS"."CUSTOMER_ADDRESS" "CA","TPCDS"."CUSTOMER" "C" WHERE ("CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County') AND "C"."C_CURRENT_ADDR_SK"="CA"."CA_ADDRESS_SK" AND  EXISTS (SELECT 0 FROM "TPCDS"."STORE_SALES" "SS","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="SS"."SS_CUSTOMER_SK" AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3 AND ( EXISTS (SELECT 0 FROM "TPCDS"."WEB_SALES" "WEB_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="WEB_SALES"."WS_BILL_CUSTOMER_SK" AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3) OR  EXISTS (SELECT 0 FROM "TPCDS"."CATALOG_SALES" "CATALOG_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="CATALOG_SALES"."CS_SHIP_CUSTOMER_SK" AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3))) GROUP BY "C"."C_CURRENT_CDEMO_SK") "VW_GBF_17","TPCDS"."CUSTOMER_DEMOGRAPHICS" "CUSTOMER_DEMOGRAPHICS" WHERE "CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK"="VW_GBF_17"."ITEM_1" GROUP BY "CUSTOMER_DEMOGRAPHICS"."CD_GENDER","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT" ORDER BY "CUSTOMER_DEMOGRAPHICS"."CD_GENDER","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT"
GBP: transformed final query
******* UNPARSED QUERY IS *******
SELECT "CUSTOMER_DEMOGRAPHICS"."CD_GENDER" "CD_GENDER","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS" "CD_MARITAL_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS" "CD_EDUCATION_STATUS",SUM("VW_GBF_17"."ITEM_7") "CNT1","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE" "CD_PURCHASE_ESTIMATE",SUM("VW_GBF_17"."ITEM_6") "CNT2","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING" "CD_CREDIT_RATING",SUM("VW_GBF_17"."ITEM_5") "CNT3","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT" "CD_DEP_COUNT",SUM("VW_GBF_17"."ITEM_4") "CNT4","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT" "CD_DEP_EMPLOYED_COUNT",SUM("VW_GBF_17"."ITEM_3") "CNT5","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT" "CD_DEP_COLLEGE_COUNT",SUM("VW_GBF_17"."ITEM_2") "CNT6" FROM  (SELECT "C"."C_CURRENT_CDEMO_SK" "ITEM_1",COUNT(*) "ITEM_2",COUNT(*) "ITEM_3",COUNT(*) "ITEM_4",COUNT(*) "ITEM_5",COUNT(*) "ITEM_6",COUNT(*) "ITEM_7" FROM "TPCDS"."CUSTOMER_ADDRESS" "CA","TPCDS"."CUSTOMER" "C" WHERE ("CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County') AND "C"."C_CURRENT_ADDR_SK"="CA"."CA_ADDRESS_SK" AND  EXISTS (SELECT 0 FROM "TPCDS"."STORE_SALES" "SS","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="SS"."SS_CUSTOMER_SK" AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3 AND ( EXISTS (SELECT 0 FROM "TPCDS"."WEB_SALES" "WEB_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="WEB_SALES"."WS_BILL_CUSTOMER_SK" AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3) OR  EXISTS (SELECT 0 FROM "TPCDS"."CATALOG_SALES" "CATALOG_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "C"."C_CUSTOMER_SK"="CATALOG_SALES"."CS_SHIP_CUSTOMER_SK" AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3))) GROUP BY "C"."C_CURRENT_CDEMO_SK") "VW_GBF_17","TPCDS"."CUSTOMER_DEMOGRAPHICS" "CUSTOMER_DEMOGRAPHICS" WHERE "CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK"="VW_GBF_17"."ITEM_1" GROUP BY "CUSTOMER_DEMOGRAPHICS"."CD_GENDER","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT" ORDER BY "CUSTOMER_DEMOGRAPHICS"."CD_GENDER","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT"
kkqctdrvTD-cleanup: transform(in-use=429584, alloc=437608) :
    call(in-use=1963856, alloc=2091088), compile(in-use=4401432, alloc=4404936), execution(in-use=64864, alloc=68928)

kkqctdrvTD-end:
    call(in-use=1963856, alloc=2091088), compile(in-use=3963392, alloc=4404936), execution(in-use=64864, alloc=68928)

kkqctdrvTD-start on query block SEL$DAF89EE2 (#1)
kkqctdrvTD-start: :
    call(in-use=1963856, alloc=2091088), compile(in-use=3963392, alloc=4404936), execution(in-use=64864, alloc=68928)

TE: Checking validity of table expansion for query block SEL$3 (#5)
TE: Bypassed: No relevant table found.
TE: Checking validity of table expansion for query block SEL$4 (#4)
TE: Bypassed: No relevant table found.
TE: Checking validity of table expansion for query block SEL$2 (#3)
TE: Bypassed: No relevant table found.
TE: Checking validity of table expansion for query block SEL$ACBFB8CC (#2)
TE: Bypassed: No partitioned table in query block.
TE: Checking validity of table expansion for query block SEL$DAF89EE2 (#1)
TE: Bypassed: No partitioned table in query block.
kkqctdrvTD-cleanup: transform(in-use=0, alloc=0) :
    call(in-use=1963904, alloc=2091088), compile(in-use=3990656, alloc=4404936), execution(in-use=64864, alloc=68928)

kkqctdrvTD-end:
    call(in-use=1963904, alloc=2091088), compile(in-use=3994408, alloc=4404936), execution(in-use=64864, alloc=68928)

TE: Checking validity of table expansion for query block SEL$3 (#5)
TE: Bypassed: No relevant table found.
TE: Checking validity of table expansion for query block SEL$4 (#4)
TE: Bypassed: No relevant table found.
TE: Checking validity of table expansion for query block SEL$2 (#3)
TE: Bypassed: No relevant table found.
TE: Checking validity of table expansion for query block SEL$ACBFB8CC (#2)
TE: Bypassed: No partitioned table in query block.
TE: Checking validity of table expansion for query block SEL$DAF89EE2 (#1)
TE: Bypassed: No partitioned table in query block.
kkqctdrvTD-start on query block SEL$DAF89EE2 (#1)
kkqctdrvTD-start: :
    call(in-use=1963952, alloc=2091088), compile(in-use=4017600, alloc=4404936), execution(in-use=64864, alloc=68928)

ORE: Checking validity of OR Expansion for query block SEL$3 (#5)
ORE: Predicate chain before QB validity check - SEL$3
"WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B1 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3
ORE: Predicate chain after QB validity check - SEL$3
"WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B1 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3
ORE: bypassed - query block has subquery correlated to non-parent.
ORE: Checking validity of OR Expansion for query block SEL$4 (#4)
ORE: Predicate chain before QB validity check - SEL$4
"CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B1 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3
ORE: Predicate chain after QB validity check - SEL$4
"CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B1 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3
ORE: bypassed - query block has subquery correlated to non-parent.
ORE: Checking validity of OR Expansion for query block SEL$2 (#3)
ORE: Predicate chain before QB validity check - SEL$2
"SS"."SS_CUSTOMER_SK"=:B1 AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3 AND ( EXISTS (SELECT 0 FROM "WEB_SALES" "WEB_SALES","DATE_DIM" "DATE_DIM") OR  EXISTS (SELECT 0 FROM "CATALOG_SALES" "CATALOG_SALES","DATE_DIM" "DATE_DIM"))
ORE: Predicate chain after QB validity check - SEL$2
"SS"."SS_CUSTOMER_SK"=:B1 AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3 AND ( EXISTS (SELECT 0 FROM "WEB_SALES" "WEB_SALES","DATE_DIM" "DATE_DIM") OR  EXISTS (SELECT 0 FROM "CATALOG_SALES" "CATALOG_SALES","DATE_DIM" "DATE_DIM"))
ORE: bypassed - query block has subquery correlated to non-parent.
ORE: Checking validity of OR Expansion for query block SEL$ACBFB8CC (#2)
ORE: Predicate chain before QB validity check - SEL$ACBFB8CC
("CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County') AND "C"."C_CURRENT_ADDR_SK"="CA"."CA_ADDRESS_SK" AND  EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM")
ORE: Predicate chain after QB validity check - SEL$ACBFB8CC
("CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County') AND "C"."C_CURRENT_ADDR_SK"="CA"."CA_ADDRESS_SK" AND  EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM")
ORE: bypassed - query block has subquery correlated to non-parent.
ORE: Checking validity of OR Expansion for query block SEL$DAF89EE2 (#1)
ORE: Predicate chain before QB validity check - SEL$DAF89EE2
"CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK"="VW_GBF_17"."ITEM_1"
ORE: Predicate chain after QB validity check - SEL$DAF89EE2
"CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK"="VW_GBF_17"."ITEM_1"
ORE: bypassed - query block has subquery correlated to non-parent.
kkqctdrvTD-cleanup: transform(in-use=0, alloc=0) :
    call(in-use=1963952, alloc=2091088), compile(in-use=4021656, alloc=4404936), execution(in-use=65680, alloc=68928)

kkqctdrvTD-end:
    call(in-use=1963952, alloc=2091088), compile(in-use=4025384, alloc=4404936), execution(in-use=65680, alloc=68928)

ST: Query in kkqstardrv:******* UNPARSED QUERY IS *******
SELECT "CUSTOMER_DEMOGRAPHICS"."CD_GENDER" "CD_GENDER","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS" "CD_MARITAL_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS" "CD_EDUCATION_STATUS",SUM("VW_GBF_17"."ITEM_7") "CNT1","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE" "CD_PURCHASE_ESTIMATE",SUM("VW_GBF_17"."ITEM_6") "CNT2","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING" "CD_CREDIT_RATING",SUM("VW_GBF_17"."ITEM_5") "CNT3","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT" "CD_DEP_COUNT",SUM("VW_GBF_17"."ITEM_4") "CNT4","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT" "CD_DEP_EMPLOYED_COUNT",SUM("VW_GBF_17"."ITEM_3") "CNT5","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT" "CD_DEP_COLLEGE_COUNT",SUM("VW_GBF_17"."ITEM_2") "CNT6" FROM  (SELECT "C"."C_CURRENT_CDEMO_SK" "ITEM_1",COUNT(*) "ITEM_2",COUNT(*) "ITEM_3",COUNT(*) "ITEM_4",COUNT(*) "ITEM_5",COUNT(*) "ITEM_6",COUNT(*) "ITEM_7" FROM "TPCDS"."CUSTOMER_ADDRESS" "CA","TPCDS"."CUSTOMER" "C" WHERE ("CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County') AND "C"."C_CURRENT_ADDR_SK"="CA"."CA_ADDRESS_SK" AND  EXISTS (SELECT 0 FROM "TPCDS"."STORE_SALES" "SS","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "SS"."SS_CUSTOMER_SK"="C"."C_CUSTOMER_SK" AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3 AND ( EXISTS (SELECT 0 FROM "TPCDS"."WEB_SALES" "WEB_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "WEB_SALES"."WS_BILL_CUSTOMER_SK"="C"."C_CUSTOMER_SK" AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3) OR  EXISTS (SELECT 0 FROM "TPCDS"."CATALOG_SALES" "CATALOG_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"="C"."C_CUSTOMER_SK" AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=1+3))) GROUP BY "C"."C_CURRENT_CDEMO_SK") "VW_GBF_17","TPCDS"."CUSTOMER_DEMOGRAPHICS" "CUSTOMER_DEMOGRAPHICS" WHERE "CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK"="VW_GBF_17"."ITEM_1" GROUP BY "CUSTOMER_DEMOGRAPHICS"."CD_GENDER","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT" ORDER BY "CUSTOMER_DEMOGRAPHICS"."CD_GENDER","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT"
ST: not valid since star transformation parameter is FALSE
ST: not valid since star transformation parameter is FALSE
ST: not valid since star transformation parameter is FALSE
ST: not valid since star transformation parameter is FALSE
ST: not valid since star transformation parameter is FALSE
kkqctdrvTD-start on query block SEL$DAF89EE2 (#1)
kkqctdrvTD-start: :
    call(in-use=1965072, alloc=2091088), compile(in-use=4025384, alloc=4404936), execution(in-use=65680, alloc=68928)

JF: Checking validity of join factorization for query block SEL$3 (#5)
JF: Bypassed: not a UNION or UNION-ALL query block.
JF: Checking validity of join factorization for query block SEL$4 (#4)
JF: Bypassed: not a UNION or UNION-ALL query block.
JF: Checking validity of join factorization for query block SEL$2 (#3)
JF: Bypassed: not a UNION or UNION-ALL query block.
JF: Checking validity of join factorization for query block SEL$ACBFB8CC (#2)
JF: Bypassed: not a UNION or UNION-ALL query block.
JF: Checking validity of join factorization for query block SEL$DAF89EE2 (#1)
JF: Bypassed: has order-by clause.
kkqctdrvTD-cleanup: transform(in-use=0, alloc=0) :
    call(in-use=1965072, alloc=2091088), compile(in-use=4029432, alloc=4404936), execution(in-use=65680, alloc=68928)

kkqctdrvTD-end:
    call(in-use=1965072, alloc=2091088), compile(in-use=4033160, alloc=4404936), execution(in-use=65680, alloc=68928)

JPPD:  Considering Cost-based predicate pushdown from query block SEL$DAF89EE2 (#1)
************************************
Cost-based predicate pushdown (JPPD)
************************************
kkqctdrvTD-start on query block SEL$DAF89EE2 (#1)
kkqctdrvTD-start: :
    call(in-use=1965072, alloc=2091088), compile(in-use=4033160, alloc=4404936), execution(in-use=65680, alloc=68928)

Check Basic Validity for Non-Union View for query block SEL$ACBFB8CC (#2)
Registered qb: SEL$DAF89EE2 0x72273cf0 (COPY SEL$DAF89EE2)
---------------------
QUERY BLOCK SIGNATURE
---------------------
  signature(): NULL
Registered qb: SEL$ACBFB8CC 0x72274680 (COPY SEL$ACBFB8CC)
---------------------
QUERY BLOCK SIGNATURE
---------------------
  signature(): NULL
***********************************
Cost-Based Join Predicate Push-down
***********************************
JPPD: Checking validity of push-down in query block SEL$DAF89EE2 (#1)
JPPD:   Checking validity of push-down from query block SEL$DAF89EE2 (#1) to query block SEL$ACBFB8CC (#2)
Check Basic Validity for Non-Union View for query block SEL$ACBFB8CC (#2)
JPPD:     JPPD bypassed: No valid join condition found.
JPPD:   No valid views found to push predicate into.
kkqctdrvTD-cleanup: transform(in-use=34032, alloc=37848) :
    call(in-use=1965088, alloc=2091088), compile(in-use=4119952, alloc=4404936), execution(in-use=65680, alloc=68928)

kkqctdrvTD-end:
    call(in-use=1965088, alloc=2091088), compile(in-use=4085472, alloc=4404936), execution(in-use=65680, alloc=68928)

JPPD: Applying transformation directives
JPPD: Checking validity of push-down in query block SEL$DAF89EE2 (#1)
JPPD:   No valid views found to push predicate into.
SQT:   Considering Statistic-based Query Transformation from query block SEL$3 (#5)
***************************
Statistic-based Query Transformation (SQT)
***************************
SQT:     SQT bypassed: Disabled by parameter.
SQT:   Considering Statistic-based Query Transformation from query block SEL$4 (#4)
***************************
Statistic-based Query Transformation (SQT)
***************************
SQT:     SQT bypassed: Disabled by parameter.
SQT:   Considering Statistic-based Query Transformation from query block SEL$2 (#3)
***************************
Statistic-based Query Transformation (SQT)
***************************
SQT:     SQT bypassed: Disabled by parameter.
SQT:   Considering Statistic-based Query Transformation from query block SEL$ACBFB8CC (#2)
***************************
Statistic-based Query Transformation (SQT)
***************************
SQT:     SQT bypassed: Disabled by parameter.
SQT:   Considering Statistic-based Query Transformation from query block SEL$DAF89EE2 (#1)
***************************
Statistic-based Query Transformation (SQT)
***************************
SQT:     SQT bypassed: Disabled by parameter.
query block SEL$1 transformed to SEL$DAF89EE2 (#1)
FPD: Considering simple filter push in query block SEL$DAF89EE2 (#1)
"CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK"="VW_GBF_17"."ITEM_1"
try to generate transitive predicate from check constraints for query block SEL$DAF89EE2 (#1)
finally: "CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK"="VW_GBF_17"."ITEM_1"

FPD: Considering simple filter push in query block SEL$ACBFB8CC (#2)
("CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County') AND "C"."C_CURRENT_ADDR_SK"="CA"."CA_ADDRESS_SK" AND  EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM")
FPD: Considering simple filter push in query block SEL$2 (#3)
"SS"."SS_CUSTOMER_SK"=:B1 AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND ( EXISTS (SELECT 0 FROM "WEB_SALES" "WEB_SALES","DATE_DIM" "DATE_DIM") OR  EXISTS (SELECT 0 FROM "CATALOG_SALES" "CATALOG_SALES","DATE_DIM" "DATE_DIM"))
FPD: Considering simple filter push in query block SEL$3 (#5)
"WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B1 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4
try to generate transitive predicate from check constraints for query block SEL$3 (#5)
finally: "WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B1 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1

FPD:   transitive predicates are generated in query block SEL$3 (#5)
"WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B1 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1
FPD: Considering simple filter push in query block SEL$4 (#4)
"CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B1 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4
try to generate transitive predicate from check constraints for query block SEL$4 (#4)
finally: "CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B1 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1

FPD:   transitive predicates are generated in query block SEL$4 (#4)
"CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B1 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1
try to generate transitive predicate from check constraints for query block SEL$2 (#3)
finally: "SS"."SS_CUSTOMER_SK"=:B1 AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND ( EXISTS (SELECT 0 FROM "WEB_SALES" "WEB_SALES","DATE_DIM" "DATE_DIM") OR  EXISTS (SELECT 0 FROM "CATALOG_SALES" "CATALOG_SALES","DATE_DIM" "DATE_DIM"))

try to generate transitive predicate from check constraints for query block SEL$ACBFB8CC (#2)
finally: ("CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County') AND "C"."C_CURRENT_ADDR_SK"="CA"."CA_ADDRESS_SK" AND  EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM")

OJE: Begin: find best directive for query block SEL$ACBFB8CC (#2)
OJE: End: finding best directive for query block SEL$ACBFB8CC (#2)
CSE: Considering common sub-expression elimination in query block SEL$DAF89EE2 (#1)
*************************
Common Subexpression elimination (CSE)
*************************
CSE: Considering common sub-expression elimination in query block SEL$ACBFB8CC (#2)
*************************
Common Subexpression elimination (CSE)
*************************
CSE: Considering common sub-expression elimination in query block SEL$2 (#3)
*************************
Common Subexpression elimination (CSE)
*************************
CSE: Considering common sub-expression elimination in query block SEL$4 (#4)
*************************
Common Subexpression elimination (CSE)
*************************
CSE:     CSE not performed on query block SEL$4 (#4).
CSE: Considering common sub-expression elimination in query block SEL$3 (#5)
*************************
Common Subexpression elimination (CSE)
*************************
CSE:     CSE not performed on query block SEL$3 (#5).
CSE:     CSE not performed on query block SEL$2 (#3).
CSE:     CSE not performed on query block SEL$ACBFB8CC (#2).
CSE:     CSE not performed on query block SEL$DAF89EE2 (#1).
Final query after transformations:******* UNPARSED QUERY IS *******
SELECT "CUSTOMER_DEMOGRAPHICS"."CD_GENDER" "CD_GENDER","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS" "CD_MARITAL_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS" "CD_EDUCATION_STATUS",SUM("VW_GBF_17"."ITEM_7") "CNT1","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE" "CD_PURCHASE_ESTIMATE",SUM("VW_GBF_17"."ITEM_6") "CNT2","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING" "CD_CREDIT_RATING",SUM("VW_GBF_17"."ITEM_5") "CNT3","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT" "CD_DEP_COUNT",SUM("VW_GBF_17"."ITEM_4") "CNT4","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT" "CD_DEP_EMPLOYED_COUNT",SUM("VW_GBF_17"."ITEM_3") "CNT5","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT" "CD_DEP_COLLEGE_COUNT",SUM("VW_GBF_17"."ITEM_2") "CNT6" FROM  (SELECT "C"."C_CURRENT_CDEMO_SK" "ITEM_1",COUNT(*) "ITEM_2",COUNT(*) "ITEM_3",COUNT(*) "ITEM_4",COUNT(*) "ITEM_5",COUNT(*) "ITEM_6",COUNT(*) "ITEM_7" FROM "TPCDS"."CUSTOMER_ADDRESS" "CA","TPCDS"."CUSTOMER" "C" WHERE ("CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County') AND "C"."C_CURRENT_ADDR_SK"="CA"."CA_ADDRESS_SK" AND  EXISTS (SELECT 0 FROM "TPCDS"."STORE_SALES" "SS","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "SS"."SS_CUSTOMER_SK"="C"."C_CUSTOMER_SK" AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND ( EXISTS (SELECT 0 FROM "TPCDS"."WEB_SALES" "WEB_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "WEB_SALES"."WS_BILL_CUSTOMER_SK"="C"."C_CUSTOMER_SK" AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1) OR  EXISTS (SELECT 0 FROM "TPCDS"."CATALOG_SALES" "CATALOG_SALES","TPCDS"."DATE_DIM" "DATE_DIM" WHERE "CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"="C"."C_CUSTOMER_SK" AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1))) GROUP BY "C"."C_CURRENT_CDEMO_SK") "VW_GBF_17","TPCDS"."CUSTOMER_DEMOGRAPHICS" "CUSTOMER_DEMOGRAPHICS" WHERE "CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK"="VW_GBF_17"."ITEM_1" GROUP BY "CUSTOMER_DEMOGRAPHICS"."CD_GENDER","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT" ORDER BY "CUSTOMER_DEMOGRAPHICS"."CD_GENDER","CUSTOMER_DEMOGRAPHICS"."CD_MARITAL_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_EDUCATION_STATUS","CUSTOMER_DEMOGRAPHICS"."CD_PURCHASE_ESTIMATE","CUSTOMER_DEMOGRAPHICS"."CD_CREDIT_RATING","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_EMPLOYED_COUNT","CUSTOMER_DEMOGRAPHICS"."CD_DEP_COLLEGE_COUNT"
*************************
First K Rows: Setup begin
kkoqbc: optimizing query block SEL$3 (#5)
        
        :
    call(in-use=1970768, alloc=1998432), compile(in-use=4104632, alloc=4404936), execution(in-use=66944, alloc=68928)

kkoqbc-subheap (create addr=0x7f04720f3ac8)
****************
QUERY BLOCK TEXT
****************
SELECT
                    *
                FROM
                    web_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = ws_bill_customer_sk
                    AND ws_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$3 nbfros=2 flg=0
  fro(0): flg=0 objn=74171 hint_alias="DATE_DIM"@"SEL$3"
  fro(1): flg=0 objn=74195 hint_alias="WEB_SALES"@"SEL$3"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3255 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: DATE_DIM  Alias: DATE_DIM
  #Rows: 73049  SSZ: 0  LGR: 0  #Blks:  1510  AvgRowLen:  128.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): D_DATE_SK(NUMBER)
    AvgLen: 6 NDV: 73049 Nulls: 0 Density: 0.000014 Min: 2415022.000000 Max: 2488070.000000
Index Stats::
  Index: D_DATE_PK_IDX  Col#: 1
  LVLS: 1  #LB: 163  #DK: 73049  LB/K: 1.00  DB/K: 1.00  CLUF: 1402.00  NRW: 73049.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table: WEB_SALES  Alias: WEB_SALES  (Using composite stats)
  #Rows: 35969200  SSZ: 0  LGR: 0  #Blks:  829566  AvgRowLen:  167.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
Index Stats::
  Index: WEB_SALES_IDX2  Col#: 5 1
  LVLS: 3  #LB: 130617  #DK: 2992994  LB/K: 1.00  DB/K: 12.00  CLUF: 35969159.00  NRW: 35969200.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
  Index: WEB_SALES_PK_IDX  Col#: 4 18
  LVLS: 2  #LB: 122502  #DK: 35304428  LB/K: 1.00  DB/K: 1.00  CLUF: 35300490.00  NRW: 35304428.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
try to generate single-table filter predicates from ORs for query block SEL$3 (#5)
finally: "WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B1 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4

=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$3 (#5)
Applicable DS directives:
   dirid = 4510913066701158191, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {(74195)[]; (74171)[]}
   dirid = 14910903719618111890, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74195)[5]}
   dirid = 13969931850241126217, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {C(74171)[7, 9]}
   dirid = 13683461771316641482, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74195)[5]; (74171)[7]}
Checking valid directives for the query block
  SPD: Return code in qosdDSDirSetup: NODIR, estType = QUERY_BLOCK
Return code in qosdSetupDirCtx4QB: EXISTS
=====================================
SPD: END context at query block level
=====================================
Access path analysis for WEB_SALES
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for WEB_SALES[WEB_SALES] 
  SPD: Return code in qosdDSDirSetup: NODIR, estType = TABLE

 kkecdn: Single Table Predicate:"WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B1
NOTE: ignoring histogram of column (WEB_SALES.WS_BILL_CUSTOMER_SK)
      used only for incremental stats maintenance
  Column (#5): WS_BILL_CUSTOMER_SK(NUMBER)
    AvgLen: 6 NDV: 973580 Nulls: 0 Density: 0.000001 Min: 2.000000 Max: 1079999.000000
  Estimated selectivity: 1.0271e-06 , col: #5 
  Table: WEB_SALES  Alias: WEB_SALES
    Card: Original: 35969200.000000  Rounded: 37  Computed: 36.945295  Non Adjusted: 36.945295
  Scan IO  Cost (Disk) =   224676.000000
  Scan CPU Cost (Disk) =   14180620495.040001
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000001 flag = 2048  ("WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B1)
  Total Scan IO  Cost  =   224676.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 35969200.000000 (#rows))
                       =   224676.000000
  Total Scan CPU  Cost =   14180620495.040001 (scan (Disk))
                         + 1798460000.000000 (cpu filter eval) (= 50.000000 (per row) * 35969200.000000 (#rows))
                       =   15979080495.040001
  Access Path: TableScan
    Cost:  225085.102964  Resp: 225085.102964  Degree: 0
      Cost_io: 224676.000000  Cost_cpu: 15979080495
      Resp_io: 224676.000000  Resp_cpu: 15979080495
  Access Path: index (index (FFS))
    Index: WEB_SALES_IDX2
    resc_io: 35377.000000  resc_cpu: 7044945128
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  35557.367571  Resp: 35557.367571  Degree: 1
      Cost_io: 35377.000000  Cost_cpu: 7044945128
      Resp_io: 35377.000000  Resp_cpu: 7044945128
 ****** Costing Index WEB_SALES_IDX2
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER

  Estimated selectivity: 1.0271e-06 , col: #5 
  Access Path: index (IndexOnly)
    Index: WEB_SALES_IDX2
    resc_io: 4.000000  resc_cpu: 35886
    ix_sel: 1.0271e-06  ix_sel_with_filters: 1.0271e-06 
    Cost: 4.000919  Resp: 4.000919  Degree: 1
  Best:: AccessPath: IndexRange
  Index: WEB_SALES_IDX2
         Cost: 4.000919  Degree: 1  Resp: 4.000919  Card: 36.945295  Bytes: 0.000000

Access path analysis for DATE_DIM
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for DATE_DIM[DATE_DIM] 
  SPD: Directive valid: dirid = 13969931850241126217, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {C(74171)[7, 9]}
  SPD: Return code in qosdDSDirSetup: EXISTS, estType = TABLE
  Column (#7): 
    NewDensity:0.000007, OldDensity:0.000007 BktCnt:73049.000000, PopBktCnt:73048.000000, PopValCnt:200, NDV:201
  Column (#7): D_YEAR(NUMBER)
    AvgLen: 4 NDV: 201 Nulls: 0 Density: 0.000007 Min: 1900.000000 Max: 2100.000000
    Histogram: Freq  #Bkts: 201  UncompBkts: 73049  EndPtVals: 201  ActualVal: yes
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 


 kkecdn: Single Table Predicate:"DATE_DIM"."D_YEAR"=2001
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY">=1
  Column (#9): 
    NewDensity:0.038666, OldDensity:0.000007 BktCnt:73049.000000, PopBktCnt:73049.000000, PopValCnt:12, NDV:12
  Column (#9): D_MOY(NUMBER)
    AvgLen: 3 NDV: 12 Nulls: 0 Density: 0.038666 Min: 1.000000 Max: 12.000000
    Histogram: Freq  #Bkts: 12  UncompBkts: 73049  EndPtVals: 12  ActualVal: yes
  Estimated selectivity: 1.000000 , endpoint value predicate, col: #9 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY"<=4
  Estimated selectivity: 0.329224 , endpoint value predicate, col: #9 
  Table: DATE_DIM  Alias: DATE_DIM
    Card: Original: 73049.000000  Rounded: 120  Computed: 120.166840  Non Adjusted: 120.166840
  Scan IO  Cost (Disk) =   411.000000
  Scan CPU Cost (Disk) =   33398564.400000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.004997 flag = 2048  ("DATE_DIM"."D_YEAR"=2001)
    io = NOCOST, cpu = 50.000000, sel = 0.329224 flag = 2048  ("DATE_DIM"."D_MOY"<=4)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("DATE_DIM"."D_MOY">=1)
  Total Scan IO  Cost  =   411.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 73049.000000 (#rows))
                       =   411.000000
  Total Scan CPU  Cost =   33398564.400000 (scan (Disk))
                         + 3676708.342003 (cpu filter eval) (= 50.332083 (per row) * 73049.000000 (#rows))
                       =   37075272.742003
  Access Path: TableScan
    Cost:  411.949216  Resp: 411.949216  Degree: 0
      Cost_io: 411.000000  Cost_cpu: 37075273
      Resp_io: 411.000000  Resp_cpu: 37075273
  Best:: AccessPath: TableScan
         Cost: 411.949216  Degree: 1  Resp: 411.949216  Card: 120.166840  Bytes: 0.000000

***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE: Checking validity of partial join eval on query block SEL$3 (#5)
PJE: Passed validity of partial join eval by query block SEL$3 (#5)
number: [0]
PJE: Partial join eval conversion for query block SEL$3 (#5).
PJE: Table marked for partial join eval: DATE_DIM[DATE_DIM]#1
***********************
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  WEB_SALES[WEB_SALES]#0  DATE_DIM[DATE_DIM]#1

***************
Now joining: DATE_DIM[DATE_DIM]#1
***************
NL Join
  Outer table: Card: 36.945295  Cost: 4.000919  Resp: 4.000919  Degree: 1  Bytes: 
Access path analysis for DATE_DIM
  Scan IO  Cost (Disk) =   409.000000
  Scan CPU Cost (Disk) =   33398564.400000
NOTE: ignoring histogram of column (WEB_SALES.WS_SOLD_DATE_SK)
      used only for incremental stats maintenance
  Column (#1): WS_SOLD_DATE_SK(NUMBER)
    AvgLen: 6 NDV: 1839 Nulls: 0 Density: 0.000544 Min: 2450816.000000 Max: 2452641.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.008264 flag = 2048  ("WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK")
    io = NOCOST, cpu = 50.000000, sel = 0.004997 flag = 2048  ("DATE_DIM"."D_YEAR"=2001)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("DATE_DIM"."D_MOY">=1)
    io = NOCOST, cpu = 50.000000, sel = 0.329224 flag = 2048  ("DATE_DIM"."D_MOY"<=4)
  Total Scan IO  Cost  =   409.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 73049.000000 (#rows))
                       =   409.000000
  Total Scan CPU  Cost =   33398564.400000 (scan (Disk))
                         + 3670900.482165 (cpu filter eval) (= 50.252577 (per row) * 73049.000000 (#rows))
                       =   37069464.882165
  Inner table: DATE_DIM  Alias: DATE_DIM
  Access Path: TableScan
    NL Join:  Cost: 15172.116421  Resp: 15172.116421  Degree: 1
      Cost_io: 15137.000000  Cost_cpu: 1371606086
      Resp_io: 15137.000000  Resp_cpu: 1371606086
 ****** Costing Index D_DATE_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: D_DATE_PK_IDX
    resc_io: 1.000000  resc_cpu: 9382
    ix_sel: 1.3689e-05  ix_sel_with_filters: 1.3689e-05 
    NL Join (ordered): Cost: 41.009806  Resp: 41.009806  Degree: 1
      Cost_io: 41.000000  Cost_cpu: 383011
      Resp_io: 41.000000  Resp_cpu: 383011
 ****** Costing Index D_DATE_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 
  Estimated selectivity: 1.000000 , endpoint value predicate, col: #9 
  Estimated selectivity: 0.329224 , endpoint value predicate, col: #9 
  Access Path: index (AllEqUnique)
    Index: D_DATE_PK_IDX
    resc_io: 1.000000  resc_cpu: 9382
    ix_sel: 1.3689e-05  ix_sel_with_filters: 1.3689e-05 
    NL Join (ordered): Cost: 41.009806  Resp: 41.009806  Degree: 1
      Cost_io: 41.000000  Cost_cpu: 383011
      Resp_io: 41.000000  Resp_cpu: 383011

  Best NL cost: 41.009806
          resc: 41.009806  resc_io: 41.000000  resc_cpu: 383011
          resp: 41.009806  resp_io: 41.000000  resc_cpu: 383011
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Capping Semi Join Card of HJ/SMJ by inner = 36.690903
Capping Semi Join Card of HJ/SMJ (no post filters) by inner = 36.690903
Capping Semi Join Card of NL by inner = 36.690903
Capping Semi Join Card of without POSQ by inner = 36.690903
Capping Semi Join Card of non adjusted NSQ by inner = 36.690903
Semi Join Card (capped by inner join):  36.690903 = outer (36.945295) * inner (120.166840) * sel (0.008264)
Join Card - Rounded: 37 Computed: 36.690903
  Outer table:  WEB_SALES  Alias: WEB_SALES
    resc: 4.000919  card 36.945295  bytes:   deg: 1  resp: 4.000919
  Inner table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card: 120.166840  bytes:   deg: 1  resp: 411.949216
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     25 Total Rows:            120
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39096166
      Total Temp space used: 0
  SM join: Resc: 416.951091  Resp: 416.951091  [multiMatchCost=0.000000]
SM Join
  SM cost: 416.951091 
     resc: 416.951091 resc_io: 415.000000 resc_cpu: 76207324
     resp: 416.951091 resp_io: 415.000000 resp_cpu: 76207324
  Outer table:  WEB_SALES  Alias: WEB_SALES
    resc: 4.000919  card 36.945295  bytes:   deg: 1  resp: 4.000919
  Inner table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card: 120.166840  bytes:   deg: 1  resp: 411.949216
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.015811  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 415.965946  Resp: 415.965946  [multiMatchCost=0.000000]
HA Join
  HA cost: 415.965946  
     resc: 415.965946 resc_io: 415.000000 resc_cpu: 37728709
     resp: 415.965946 resp_io: 415.000000 resp_cpu: 37728709
Best:: JoinMethod: NestedLoopSemi
       Cost: 41.009806  Degree: 1  Resp: 41.009806  Card: 36.690903 Bytes: 
***********************
Best so far:  Table#: 0  cost: 4.000919  card: 36.945295  bytes: 444.000000
              Table#: 1  cost: 41.009806  card: 36.690903  bytes: 925.000000
***********************

*********************************
Number of join permutations tried: 1
*********************************
*********************
PJE: Partial join eval conversion for query block SEL$3 (#5).
PJE: Table marked for partial join eval: DATE_DIM[DATE_DIM]#1
***********************
Enumerating distribution method (advanced)
--- Distribution method for 
join between WEB_SALES[WEB_SALES](serial) and DATE_DIM[DATE_DIM](serial); jm = 15; right side access path = IndexUnique
kkopqIsSerialJoin: serial NLJ: both inputs serial
---- serial NL-Join -> SERIAL

(newjo-save)    [1 0 ]
LORE: Or-Expansion validity checks failed on query block SEL$3 (#5) because Cost based OR expansion enabled
Transfer Optimizer annotations for query block SEL$3 (#5)
Final cost for query block SEL$3 (#5) - All Rows Plan:
  Best join order: 1
  Cost: 41.009806  Degree: 1  Card: 37.000000  Bytes: 925.000000
  Resc: 41.009806  Resc_io: 41.000000  Resc_cpu: 383011
  Resp: 41.009806  Resp_io: 41.000000  Resc_cpu: 383011
kkoqbc-subheap (delete addr=0x7f04720f3ac8, in-use=44952, alloc=49272)
kkoqbc-end:
        :
    call(in-use=2014864, alloc=2080584), compile(in-use=4136976, alloc=4413000), execution(in-use=67352, alloc=68928)

kkoqbc: finish optimizing query block SEL$3 (#5)
kkoqbc: optimizing query block SEL$4 (#4)
        
        :
    call(in-use=2012656, alloc=2080584), compile(in-use=4143432, alloc=4413000), execution(in-use=67528, alloc=68928)

kkoqbc-subheap (create addr=0x7f04720f3ac8)
****************
QUERY BLOCK TEXT
****************
SELECT
                    *
                FROM
                    catalog_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = cs_ship_customer_sk
                    AND cs_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$4 nbfros=2 flg=0
  fro(0): flg=0 objn=74185 hint_alias="CATALOG_SALES"@"SEL$4"
  fro(1): flg=0 objn=74171 hint_alias="DATE_DIM"@"SEL$4"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3255 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: DATE_DIM  Alias: DATE_DIM
  #Rows: 73049  SSZ: 0  LGR: 0  #Blks:  1510  AvgRowLen:  128.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): D_DATE_SK(NUMBER)
    AvgLen: 6 NDV: 73049 Nulls: 0 Density: 0.000014 Min: 2415022.000000 Max: 2488070.000000
Index Stats::
  Index: D_DATE_PK_IDX  Col#: 1
  LVLS: 1  #LB: 163  #DK: 73049  LB/K: 1.00  DB/K: 1.00  CLUF: 1402.00  NRW: 73049.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table: CATALOG_SALES  Alias: CATALOG_SALES  (Using composite stats)
  #Rows: 72077400  SSZ: 0  LGR: 0  #Blks:  1645494  AvgRowLen:  168.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
Index Stats::
  Index: CATALOG_SALES_IDX2  Col#: 8 1
  LVLS: 3  #LB: 261734  #DK: 5997411  LB/K: 1.00  DB/K: 12.00  CLUF: 72077362.00  NRW: 72077400.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
  Index: CATALOG_SALES_PK_IDX  Col#: 16 18
  LVLS: 2  #LB: 249644  #DK: 71913105  LB/K: 1.00  DB/K: 1.00  CLUF: 71898009.00  NRW: 71913105.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
try to generate single-table filter predicates from ORs for query block SEL$4 (#4)
finally: "CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B1 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4

=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$4 (#4)
Applicable DS directives:
   dirid = 11267665714990475542, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74185)[8]}
   dirid = 13969931850241126217, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {C(74171)[7, 9]}
   dirid = 2090373381697137251, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {(74185)[]; F(74171)[]}
   dirid = 14483145493039253896, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {(74185)[]; (74171)[]}
Checking valid directives for the query block
  SPD: Return code in qosdDSDirSetup: NODIR, estType = QUERY_BLOCK
Return code in qosdSetupDirCtx4QB: EXISTS
=====================================
SPD: END context at query block level
=====================================
Access path analysis for CATALOG_SALES
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for CATALOG_SALES[CATALOG_SALES] 
  SPD: Return code in qosdDSDirSetup: NODIR, estType = TABLE

 kkecdn: Single Table Predicate:"CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B1
NOTE: ignoring histogram of column (CATALOG_SALES.CS_SHIP_CUSTOMER_SK)
      used only for incremental stats maintenance
  Column (#8): CS_SHIP_CUSTOMER_SK(NUMBER)
    AvgLen: 6 NDV: 1037120 Nulls: 0 Density: 0.000001 Min: 1.000000 Max: 1079999.000000
  Estimated selectivity: 9.6421e-07 , col: #8 
  Table: CATALOG_SALES  Alias: CATALOG_SALES
    Card: Original: 72077400.000000  Rounded: 69  Computed: 69.497647  Non Adjusted: 69.497647
  Scan IO  Cost (Disk) =   445656.000000
  Scan CPU Cost (Disk) =   32620732791.360001
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000001 flag = 2048  ("CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B1)
  Total Scan IO  Cost  =   445656.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 72077400.000000 (#rows))
                       =   445656.000000
  Total Scan CPU  Cost =   32620732791.360001 (scan (Disk))
                         + 3603870000.000000 (cpu filter eval) (= 50.000000 (per row) * 72077400.000000 (#rows))
                       =   36224602791.360001
  Access Path: TableScan
    Cost:  446583.437120  Resp: 446583.437120  Degree: 0
      Cost_io: 445656.000000  Cost_cpu: 36224602791
      Resp_io: 445656.000000  Resp_cpu: 36224602791
  Access Path: index (index (FFS))
    Index: CATALOG_SALES_IDX2
    resc_io: 70888.000000  resc_cpu: 14117080977
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  71249.431290  Resp: 71249.431290  Degree: 1
      Cost_io: 70888.000000  Cost_cpu: 14117080977
      Resp_io: 70888.000000  Resp_cpu: 14117080977
 ****** Costing Index CATALOG_SALES_IDX2
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER

  Estimated selectivity: 9.6421e-07 , col: #8 
  Access Path: index (IndexOnly)
    Index: CATALOG_SALES_IDX2
    resc_io: 4.000000  resc_cpu: 42486
    ix_sel: 9.6421e-07  ix_sel_with_filters: 9.6421e-07 
    Cost: 4.001088  Resp: 4.001088  Degree: 1
  Best:: AccessPath: IndexRange
  Index: CATALOG_SALES_IDX2
         Cost: 4.001088  Degree: 1  Resp: 4.001088  Card: 69.497647  Bytes: 0.000000

Access path analysis for DATE_DIM
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for DATE_DIM[DATE_DIM] 
  SPD: Directive valid: dirid = 13969931850241126217, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {C(74171)[7, 9]}
  SPD: Return code in qosdDSDirSetup: EXISTS, estType = TABLE
  Column (#7): 
    NewDensity:0.000007, OldDensity:0.000007 BktCnt:73049.000000, PopBktCnt:73048.000000, PopValCnt:200, NDV:201
  Column (#7): D_YEAR(NUMBER)
    AvgLen: 4 NDV: 201 Nulls: 0 Density: 0.000007 Min: 1900.000000 Max: 2100.000000
    Histogram: Freq  #Bkts: 201  UncompBkts: 73049  EndPtVals: 201  ActualVal: yes
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 


 kkecdn: Single Table Predicate:"DATE_DIM"."D_YEAR"=2001
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY">=1
  Column (#9): 
    NewDensity:0.038666, OldDensity:0.000007 BktCnt:73049.000000, PopBktCnt:73049.000000, PopValCnt:12, NDV:12
  Column (#9): D_MOY(NUMBER)
    AvgLen: 3 NDV: 12 Nulls: 0 Density: 0.038666 Min: 1.000000 Max: 12.000000
    Histogram: Freq  #Bkts: 12  UncompBkts: 73049  EndPtVals: 12  ActualVal: yes
  Estimated selectivity: 1.000000 , endpoint value predicate, col: #9 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY"<=4
  Estimated selectivity: 0.329224 , endpoint value predicate, col: #9 
  Table: DATE_DIM  Alias: DATE_DIM
    Card: Original: 73049.000000  Rounded: 120  Computed: 120.166840  Non Adjusted: 120.166840
  Scan IO  Cost (Disk) =   411.000000
  Scan CPU Cost (Disk) =   33398564.400000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.004997 flag = 2048  ("DATE_DIM"."D_YEAR"=2001)
    io = NOCOST, cpu = 50.000000, sel = 0.329224 flag = 2048  ("DATE_DIM"."D_MOY"<=4)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("DATE_DIM"."D_MOY">=1)
  Total Scan IO  Cost  =   411.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 73049.000000 (#rows))
                       =   411.000000
  Total Scan CPU  Cost =   33398564.400000 (scan (Disk))
                         + 3676708.342003 (cpu filter eval) (= 50.332083 (per row) * 73049.000000 (#rows))
                       =   37075272.742003
  Access Path: TableScan
    Cost:  411.949216  Resp: 411.949216  Degree: 0
      Cost_io: 411.000000  Cost_cpu: 37075273
      Resp_io: 411.000000  Resp_cpu: 37075273
  Best:: AccessPath: TableScan
         Cost: 411.949216  Degree: 1  Resp: 411.949216  Card: 120.166840  Bytes: 0.000000

***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE: Checking validity of partial join eval on query block SEL$4 (#4)
PJE: Passed validity of partial join eval by query block SEL$4 (#4)
number: [0]
PJE: Partial join eval conversion for query block SEL$4 (#4).
PJE: Table marked for partial join eval: DATE_DIM[DATE_DIM]#1
***********************
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  CATALOG_SALES[CATALOG_SALES]#0  DATE_DIM[DATE_DIM]#1

***************
Now joining: DATE_DIM[DATE_DIM]#1
***************
NL Join
  Outer table: Card: 69.497647  Cost: 4.001088  Resp: 4.001088  Degree: 1  Bytes: 
Access path analysis for DATE_DIM
  Scan IO  Cost (Disk) =   408.985507
  Scan CPU Cost (Disk) =   33398564.400000
NOTE: ignoring histogram of column (CATALOG_SALES.CS_SOLD_DATE_SK)
      used only for incremental stats maintenance
  Column (#1): CS_SOLD_DATE_SK(NUMBER)
    AvgLen: 6 NDV: 1849 Nulls: 0 Density: 0.000541 Min: 2450815.000000 Max: 2452647.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.008264 flag = 2048  ("CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK")
    io = NOCOST, cpu = 50.000000, sel = 0.004997 flag = 2048  ("DATE_DIM"."D_YEAR"=2001)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("DATE_DIM"."D_MOY">=1)
    io = NOCOST, cpu = 50.000000, sel = 0.329224 flag = 2048  ("DATE_DIM"."D_MOY"<=4)
  Total Scan IO  Cost  =   408.985507 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 73049.000000 (#rows))
                       =   408.985507
  Total Scan CPU  Cost =   33398564.400000 (scan (Disk))
                         + 3670900.482165 (cpu filter eval) (= 50.252577 (per row) * 73049.000000 (#rows))
                       =   37069464.882165
  Inner table: DATE_DIM  Alias: DATE_DIM
  Access Path: TableScan
    NL Join:  Cost: 28289.486754  Resp: 28289.486754  Degree: 1
      Cost_io: 28224.000000  Cost_cpu: 2557835563
      Resp_io: 28224.000000  Resp_cpu: 2557835563
 ****** Costing Index D_DATE_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: D_DATE_PK_IDX
    resc_io: 1.000000  resc_cpu: 9382
    ix_sel: 1.3689e-05  ix_sel_with_filters: 1.3689e-05 
    NL Join (ordered): Cost: 73.017661  Resp: 73.017661  Degree: 1
      Cost_io: 73.000000  Cost_cpu: 689828
      Resp_io: 73.000000  Resp_cpu: 689828
 ****** Costing Index D_DATE_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 
  Estimated selectivity: 1.000000 , endpoint value predicate, col: #9 
  Estimated selectivity: 0.329224 , endpoint value predicate, col: #9 
  Access Path: index (AllEqUnique)
    Index: D_DATE_PK_IDX
    resc_io: 1.000000  resc_cpu: 9382
    ix_sel: 1.3689e-05  ix_sel_with_filters: 1.3689e-05 
    NL Join (ordered): Cost: 73.017661  Resp: 73.017661  Degree: 1
      Cost_io: 73.000000  Cost_cpu: 689828
      Resp_io: 73.000000  Resp_cpu: 689828

  Best NL cost: 73.017661
          resc: 73.017661  resc_io: 73.000000  resc_cpu: 689828
          resp: 73.017661  resp_io: 73.000000  resc_cpu: 689828
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Capping Semi Join Card of HJ/SMJ by inner = 69.019113
Capping Semi Join Card of HJ/SMJ (no post filters) by inner = 69.019113
Capping Semi Join Card of NL by inner = 69.019113
Capping Semi Join Card of without POSQ by inner = 69.019113
Capping Semi Join Card of non adjusted NSQ by inner = 69.019113
Semi Join Card (capped by inner join):  69.019113 = outer (69.497647) * inner (120.166840) * sel (0.008264)
Join Card - Rounded: 69 Computed: 69.019113
  Outer table:  CATALOG_SALES  Alias: CATALOG_SALES
    resc: 4.001088  card 69.497647  bytes:   deg: 1  resp: 4.001088
  Inner table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card: 120.166840  bytes:   deg: 1  resp: 411.949216
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     25 Total Rows:            120
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39096166
      Total Temp space used: 0
  SM join: Resc: 416.951260  Resp: 416.951260  [multiMatchCost=0.000000]
SM Join
  SM cost: 416.951260 
     resc: 416.951260 resc_io: 415.000000 resc_cpu: 76213924
     resp: 416.951260 resp_io: 415.000000 resp_cpu: 76213924
  Outer table:  CATALOG_SALES  Alias: CATALOG_SALES
    resc: 4.001088  card 69.497647  bytes:   deg: 1  resp: 4.001088
  Inner table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card: 120.166840  bytes:   deg: 1  resp: 411.949216
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.015934  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 415.966238  Resp: 415.966238  [multiMatchCost=0.000000]
HA Join
  HA cost: 415.966238  
     resc: 415.966238 resc_io: 415.000000 resc_cpu: 37740109
     resp: 415.966238 resp_io: 415.000000 resp_cpu: 37740109
Best:: JoinMethod: NestedLoopSemi
       Cost: 73.017661  Degree: 1  Resp: 73.017661  Card: 69.019113 Bytes: 
***********************
Best so far:  Table#: 0  cost: 4.001088  card: 69.497647  bytes: 828.000000
              Table#: 1  cost: 73.017661  card: 69.019113  bytes: 1725.000000
***********************

*********************************
Number of join permutations tried: 1
*********************************
*********************
PJE: Partial join eval conversion for query block SEL$4 (#4).
PJE: Table marked for partial join eval: DATE_DIM[DATE_DIM]#1
***********************
Enumerating distribution method (advanced)
--- Distribution method for 
join between CATALOG_SALES[CATALOG_SALES](serial) and DATE_DIM[DATE_DIM](serial); jm = 15; right side access path = IndexUnique
kkopqIsSerialJoin: serial NLJ: both inputs serial
---- serial NL-Join -> SERIAL

(newjo-save)    [1 0 ]
LORE: Or-Expansion validity checks failed on query block SEL$4 (#4) because Cost based OR expansion enabled
Transfer Optimizer annotations for query block SEL$4 (#4)
Final cost for query block SEL$4 (#4) - All Rows Plan:
  Best join order: 1
  Cost: 73.017661  Degree: 1  Card: 69.000000  Bytes: 1725.000000
  Resc: 73.017661  Resc_io: 73.000000  Resc_cpu: 689828
  Resp: 73.017661  Resp_io: 73.000000  Resc_cpu: 689828
kkoqbc-subheap (delete addr=0x7f04720f3ac8, in-use=52808, alloc=65704)
kkoqbc-end:
        :
    call(in-use=2048296, alloc=2129792), compile(in-use=4175888, alloc=4421064), execution(in-use=67936, alloc=68928)

kkoqbc: finish optimizing query block SEL$4 (#4)
kkoqbc: optimizing query block SEL$2 (#3)
        
        :
    call(in-use=2046088, alloc=2129792), compile(in-use=4182464, alloc=4421064), execution(in-use=68096, alloc=68928)

kkoqbc-subheap (create addr=0x7f04720f3ac8)
****************
QUERY BLOCK TEXT
****************
SELECT
            *
        FROM
            store_sales ss,
            date_dim
        WHERE
            c.c_customer_sk = ss.ss_customer_sk
            AND ss_sold_date_sk = d_date_sk
            AND d_year = 2001
            AND d_moy BETWEEN 1 AND 1 + 3
            AND ( EXISTS (
                SELECT
                    *
                FROM
                    web_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = ws_bill_customer_sk
                    AND ws_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            )
                  OR EXISTS (
                SELECT
                    *
                FROM
                    catalog_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = cs_ship_customer_sk
                    AND cs_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            ) )
    
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$2 nbfros=2 flg=0
  fro(0): flg=0 objn=74171 hint_alias="DATE_DIM"@"SEL$2"
  fro(1): flg=0 objn=74191 hint_alias="SS"@"SEL$2"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3255 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: DATE_DIM  Alias: DATE_DIM
  #Rows: 73049  SSZ: 0  LGR: 0  #Blks:  1510  AvgRowLen:  128.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): D_DATE_SK(NUMBER)
    AvgLen: 6 NDV: 73049 Nulls: 0 Density: 0.000014 Min: 2415022.000000 Max: 2488070.000000
Index Stats::
  Index: D_DATE_PK_IDX  Col#: 1
  LVLS: 1  #LB: 163  #DK: 73049  LB/K: 1.00  DB/K: 1.00  CLUF: 1402.00  NRW: 73049.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table: STORE_SALES  Alias: SS  (Using composite stats)
  #Rows: 144020200  SSZ: 0  LGR: 0  #Blks:  2304802  AvgRowLen:  117.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
Index Stats::
  Index: STORE_SALES_IDX2  Col#: 4 1
  LVLS: 3  #LB: 522970  #DK: 11965122  LB/K: 1.00  DB/K: 12.00  CLUF: 143898920.00  NRW: 144020200.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
  Index: STORE_SALES_PK_IDX  Col#: 3 10
  LVLS: 3  #LB: 497464  #DK: 141527398  LB/K: 1.00  DB/K: 1.00  CLUF: 141365556.00  NRW: 141527398.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
try to generate single-table filter predicates from ORs for query block SEL$2 (#3)
finally: "SS"."SS_CUSTOMER_SK"=:B1 AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND ( EXISTS (SELECT 0 FROM "WEB_SALES" "WEB_SALES","DATE_DIM" "DATE_DIM" WHERE "WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B2 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1) OR  EXISTS (SELECT 0 FROM "CATALOG_SALES" "CATALOG_SALES","DATE_DIM" "DATE_DIM" WHERE "CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B3 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1))

=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$2 (#3)
Applicable DS directives:
   dirid = 10827845680942532126, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {F(74191)[]; F(74171)[]}
   dirid = 7660518587836633700, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74191)[4]}
   dirid = 13969931850241126217, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {C(74171)[7, 9]}
   dirid = 2361553282592865451, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {(74191)[]; F(74171)[]}
   dirid = 12943986683386070018, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {(74191)[]; (74171)[]}
Checking valid directives for the query block
  SPD: Return code in qosdDSDirSetup: NODIR, estType = QUERY_BLOCK
Return code in qosdSetupDirCtx4QB: EXISTS
=====================================
SPD: END context at query block level
=====================================
Access path analysis for STORE_SALES
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for STORE_SALES[SS] 
  SPD: Return code in qosdDSDirSetup: NODIR, estType = TABLE

 kkecdn: Single Table Predicate:"SS"."SS_CUSTOMER_SK"=:B1
NOTE: ignoring histogram of column (STORE_SALES.SS_CUSTOMER_SK)
      used only for incremental stats maintenance
  Column (#4): SS_CUSTOMER_SK(NUMBER)
    AvgLen: 6 NDV: 1039371 Nulls: 0 Density: 0.000001 Min: 1.000000 Max: 1079999.000000
  Estimated selectivity: 9.6212e-07 , col: #4 
  Table: STORE_SALES  Alias: SS
    Card: Original: 144020200.000000  Rounded: 139  Computed: 138.564767  Non Adjusted: 138.564767
  Scan IO  Cost (Disk) =   624219.000000
  Scan CPU Cost (Disk) =   46657751154.880005
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000001 flag = 2048  ("SS"."SS_CUSTOMER_SK"=:B1)
  Total Scan IO  Cost  =   624219.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 144020200.000000 (#rows))
                       =   624219.000000
  Total Scan CPU  Cost =   46657751154.880005 (scan (Disk))
                         + 7201010000.000000 (cpu filter eval) (= 50.000000 (per row) * 144020200.000000 (#rows))
                       =   53858761154.880005
  Access Path: TableScan
    Cost:  625597.914066  Resp: 625597.914066  Degree: 0
      Cost_io: 624219.000000  Cost_cpu: 53858761155
      Resp_io: 624219.000000  Resp_cpu: 53858761155
  Access Path: index (index (FFS))
    Index: STORE_SALES_IDX2
    resc_io: 141639.000000  resc_cpu: 28207733477
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  142361.185947  Resp: 142361.185947  Degree: 1
      Cost_io: 141639.000000  Cost_cpu: 28207733477
      Resp_io: 141639.000000  Resp_cpu: 28207733477
 ****** Costing Index STORE_SALES_IDX2
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER

  Estimated selectivity: 9.6212e-07 , col: #4 
  Access Path: index (IndexOnly)
    Index: STORE_SALES_IDX2
    resc_io: 4.000000  resc_cpu: 56286
    ix_sel: 9.6212e-07  ix_sel_with_filters: 9.6212e-07 
    Cost: 4.001441  Resp: 4.001441  Degree: 1
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: IndexRange
  Index: STORE_SALES_IDX2
         Cost: 4.001441  Degree: 1  Resp: 4.001441  Card: 138.564767  Bytes: 0.000000

Access path analysis for DATE_DIM
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for DATE_DIM[DATE_DIM] 
  SPD: Directive valid: dirid = 13969931850241126217, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {C(74171)[7, 9]}
  SPD: Return code in qosdDSDirSetup: EXISTS, estType = TABLE
  Column (#7): 
    NewDensity:0.000007, OldDensity:0.000007 BktCnt:73049.000000, PopBktCnt:73048.000000, PopValCnt:200, NDV:201
  Column (#7): D_YEAR(NUMBER)
    AvgLen: 4 NDV: 201 Nulls: 0 Density: 0.000007 Min: 1900.000000 Max: 2100.000000
    Histogram: Freq  #Bkts: 201  UncompBkts: 73049  EndPtVals: 201  ActualVal: yes
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 


 kkecdn: Single Table Predicate:"DATE_DIM"."D_YEAR"=2001
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY">=1
  Column (#9): 
    NewDensity:0.038666, OldDensity:0.000007 BktCnt:73049.000000, PopBktCnt:73049.000000, PopValCnt:12, NDV:12
  Column (#9): D_MOY(NUMBER)
    AvgLen: 3 NDV: 12 Nulls: 0 Density: 0.038666 Min: 1.000000 Max: 12.000000
    Histogram: Freq  #Bkts: 12  UncompBkts: 73049  EndPtVals: 12  ActualVal: yes
  Estimated selectivity: 1.000000 , endpoint value predicate, col: #9 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY"<=4
  Estimated selectivity: 0.329224 , endpoint value predicate, col: #9 
  Table: DATE_DIM  Alias: DATE_DIM
    Card: Original: 73049.000000  Rounded: 120  Computed: 120.166840  Non Adjusted: 120.166840
  Scan IO  Cost (Disk) =   411.000000
  Scan CPU Cost (Disk) =   33398564.400000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.004997 flag = 2048  ("DATE_DIM"."D_YEAR"=2001)
    io = NOCOST, cpu = 50.000000, sel = 0.329224 flag = 2048  ("DATE_DIM"."D_MOY"<=4)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("DATE_DIM"."D_MOY">=1)
  Total Scan IO  Cost  =   411.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 73049.000000 (#rows))
                       =   411.000000
  Total Scan CPU  Cost =   33398564.400000 (scan (Disk))
                         + 3676708.342003 (cpu filter eval) (= 50.332083 (per row) * 73049.000000 (#rows))
                       =   37075272.742003
  Access Path: TableScan
    Cost:  411.949216  Resp: 411.949216  Degree: 0
      Cost_io: 411.000000  Cost_cpu: 37075273
      Resp_io: 411.000000  Resp_cpu: 37075273
  ****** trying bitmap/domain indexes ******
 ****** Costing Index D_DATE_PK_IDX
  Access Path: index (FullScan)
    Index: D_DATE_PK_IDX
    resc_io: 164.000000  resc_cpu: 15777716
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 164.403948  Resp: 164.403948  Degree: 0
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: TableScan
         Cost: 411.949216  Degree: 1  Resp: 411.949216  Card: 120.166840  Bytes: 0.000000

***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE: Checking validity of partial join eval on query block SEL$2 (#3)
PJE: Passed validity of partial join eval by query block SEL$2 (#3)
number: [0]
PJE: Partial join eval conversion for query block SEL$2 (#3).
PJE: Table marked for partial join eval: STORE_SALES[SS]#1
***********************
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  DATE_DIM[DATE_DIM]#0  STORE_SALES[SS]#1

***************
Now joining: STORE_SALES[SS]#1
***************
NL Join
  Outer table: Card: 120.166840  Cost: 411.949216  Resp: 411.949216  Degree: 1  Bytes: 
Access path analysis for STORE_SALES
  Scan IO  Cost (Disk) =   624217.216667
  Scan CPU Cost (Disk) =   46657751154.880005
NOTE: ignoring histogram of column (STORE_SALES.SS_SOLD_DATE_SK)
      used only for incremental stats maintenance
  Column (#1): SS_SOLD_DATE_SK(NUMBER)
    AvgLen: 6 NDV: 1849 Nulls: 0 Density: 0.000541 Min: 2450816.000000 Max: 2452651.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000001 flag = 2064  ("SS"."SS_CUSTOMER_SK"=:B1)
    io = NOCOST, cpu = 50.000000, sel = 0.007463 flag = 2048  ("SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK")
  Total Scan IO  Cost  =   624217.216667 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 144020200.000000 (#rows))
                       =   624217.216667
  Total Scan CPU  Cost =   46657751154.880005 (scan (Disk))
                         + 7201016928.238328 (cpu filter eval) (= 50.000048 (per row) * 144020200.000000 (#rows))
                       =   53858768083.118332
  Inner table: STORE_SALES  Alias: SS
  Access Path: TableScan
    NL Join:  Cost: 75071947.658387  Resp: 75071947.658387  Degree: 1
      Cost_io: 74906477.000000  Cost_cpu: 6463089245247
      Resp_io: 74906477.000000  Resp_cpu: 6463089245247
  Access Path: index (index (FFS))
    Index: STORE_SALES_IDX2
    resc_io: 141637.716667  resc_cpu: 28207740405
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: STORE_SALES  Alias: SS
  Access Path: index (FFS)
    NL Join:  Cost: 17083600.284196  Resp: 17083600.284196  Degree: 1
      Cost_io: 16996937.000000  Cost_cpu: 3384965923877
      Resp_io: 16996937.000000  Resp_cpu: 3384965923877
 ****** Costing Index STORE_SALES_IDX2
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 8.3576e-08
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 8.3576e-08
  Estimated selectivity: 9.6212e-07 , col: #4 
  Access Path: index (AllEqJoinGuess)
    Index: STORE_SALES_IDX2
    resc_io: 3.000000  resc_cpu: 22414
    ix_sel: 6.9435e-09  ix_sel_with_filters: 6.9435e-09 
    NL Join : Cost: 772.018080  Resp: 772.018080  Degree: 1
      Cost_io: 771.000000  Cost_cpu: 39764991
      Resp_io: 771.000000  Resp_cpu: 39764991
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 772.018080
          resc: 772.018080  resc_io: 771.000000  resc_cpu: 39764991
          resp: 772.018080  resp_io: 771.000000  resc_cpu: 39764991
  SPD: Directive valid: dirid = 10827845680942532126, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {F(74191)[]; F(74171)[]}
  SPD: Return code in qosdDSDirSetup: EXISTS, estType = JOIN
Semi Join Card:  120.166840 = outer (120.166840) * sel (1.000000)
Join Card - Rounded: 120 Computed: 120.166840
  Outer table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card 120.166840  bytes:   deg: 1  resp: 411.949216
  Inner table:  STORE_SALES  Alias: SS
    resc: 4.001441  card: 138.564767  bytes:   deg: 1  resp: 4.001441
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     25 Total Rows:            120
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39096166
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     24 Total Rows:            139
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39103407
      Total Temp space used: 0
  SM join: Resc: 417.952755  Resp: 417.952755  [multiMatchCost=0.000000]
SM Join
  SM cost: 417.952755 
     resc: 417.952755 resc_io: 415.000000 resc_cpu: 115331131
     resp: 417.952755 resp_io: 415.000000 resp_cpu: 115331131
SM Join (with index on outer)
 ****** Costing Index D_DATE_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (FullScan)
    Index: D_DATE_PK_IDX
    resc_io: 1566.000000  resc_cpu: 52083873
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1567.333473  Resp: 1567.333473  Degree: 1
  Outer table:  DATE_DIM  Alias: DATE_DIM
    resc: 1567.333473  card 120.166840  bytes:   deg: 1  resp: 1567.333473
  Inner table:  STORE_SALES  Alias: SS
    resc: 4.001441  card: 138.564767  bytes:   deg: 1  resp: 4.001441
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     24 Total Rows:            139
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39103407
      Total Temp space used: 0
  SM join: Resc: 1572.336055  Resp: 1572.336055  [multiMatchCost=0.000000]
  Outer table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card 120.166840  bytes:   deg: 1  resp: 411.949216
  Inner table:  STORE_SALES  Alias: SS
    resc: 4.001441  card: 138.564767  bytes:   deg: 1  resp: 4.001441
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016178  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 415.966836  Resp: 415.966836  [multiMatchCost=0.000000]
HA Join
  HA cost: 415.966836  
     resc: 415.966836 resc_io: 415.000000 resc_cpu: 37763459
     resp: 415.966836 resp_io: 415.000000 resp_cpu: 37763459
Best:: JoinMethod: HashSemi
       Cost: 415.966836  Degree: 1  Resp: 415.966836  Card: 120.166840 Bytes: 
***********************
Best so far:  Table#: 0  cost: 411.949216  card: 120.166840  bytes: 1560.000000
              Table#: 1  cost: 415.966836  card: 120.166840  bytes: 3000.000000
***********************

*********************************
Number of join permutations tried: 1
*********************************
*********************
PJE: Partial join eval conversion for query block SEL$2 (#3).
PJE: Table marked for partial join eval: STORE_SALES[SS]#1
***********************
Enumerating distribution method (advanced)
--- Distribution method for 
join between DATE_DIM[DATE_DIM](serial) and SS[STORE_SALES](serial); jm = 2; right side access path = IndexRange
---- serial Hash-Join -> NONE

kkoaccsqf: Current query block SEL$2 (#3) is serial
kkoaccsqf: correlated subquery query block SEL$3 (#5) in filter               : serial
(newjo-save)    [0 1 ]
LORE: Or-Expansion validity checks failed on query block SEL$2 (#3) because Cost based OR expansion enabled
Transfer Optimizer annotations for query block SEL$2 (#3)
Final cost for query block SEL$2 (#3) - All Rows Plan:
  Best join order: 1
  Cost: 415.966836  Degree: 1  Card: 120.000000  Bytes: 3000.000000
  Resc: 415.966836  Resc_io: 415.000000  Resc_cpu: 37763459
  Resp: 415.966836  Resp_io: 415.000000  Resc_cpu: 37763459
kkoqbc-subheap (delete addr=0x7f04720f3ac8, in-use=63832, alloc=65704)
kkoqbc-end:
        :
    call(in-use=2085472, alloc=2162528), compile(in-use=4217976, alloc=4429128), execution(in-use=68952, alloc=72984)

kkoqbc: finish optimizing query block SEL$2 (#3)
kkoqbc: optimizing query block SEL$ACBFB8CC (#2)
        
        :
    call(in-use=2083264, alloc=2162528), compile(in-use=4224560, alloc=4429128), execution(in-use=69112, alloc=72984)

kkoqbc-subheap (create addr=0x7f04720f3ac8)
****************
QUERY BLOCK TEXT
****************
Not available.
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$ACBFB8CC nbfros=2 flg=0
  fro(0): flg=0 objn=74168 hint_alias="C"@"SEL$1"
  fro(1): flg=0 objn=74169 hint_alias="CA"@"SEL$1"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3255 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: CUSTOMER  Alias:  C
  #Rows: 1080000  SSZ: 0  LGR: 0  #Blks:  23374  AvgRowLen:  138.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): C_CUSTOMER_SK(NUMBER)
    AvgLen: 6 NDV: 1080000 Nulls: 0 Density: 0.000001 Min: 1.000000 Max: 1080000.000000
  Column (#5): C_CURRENT_ADDR_SK(NUMBER)
    AvgLen: 5 NDV: 457472 Nulls: 0 Density: 0.000002 Min: 1.000000 Max: 539997.000000
Index Stats::
  Index: CUSTOMER_PK_IDX  Col#: 1
  LVLS: 2  #LB: 2266  #DK: 1080000  LB/K: 1.00  DB/K: 1.00  CLUF: 75684.00  NRW: 1080000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table: CUSTOMER_ADDRESS  Alias: CA
  #Rows: 540000  SSZ: 0  LGR: 0  #Blks:  13174  AvgRowLen:  152.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): CA_ADDRESS_SK(NUMBER)
    AvgLen: 5 NDV: 540000 Nulls: 0 Density: 0.000002 Min: 1.000000 Max: 540000.000000
  Column (#8): CA_COUNTY(VARCHAR2)
    AvgLen: 16 NDV: 1877 Nulls: 0 Density: 0.000471
    Histogram: Hybrid  #Bkts: 254  UncompBkts: 5580  EndPtVals: 254  ActualVal: yes
Index Stats::
  Index: CA_ADDRESS_PK_IDX  Col#: 1
  LVLS: 2  #LB: 1127  #DK: 540000  LB/K: 1.00  DB/K: 1.00  CLUF: 12283.00  NRW: 540000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
  Column (#3): C_CURRENT_CDEMO_SK(NUMBER)
    AvgLen: 6 NDV: 772544 Nulls: 0 Density: 0.000001 Min: 18.000000 Max: 1920799.000000
try to generate single-table filter predicates from ORs for query block SEL$ACBFB8CC (#2)
finally: ("CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County') AND "C"."C_CURRENT_ADDR_SK"="CA"."CA_ADDRESS_SK" AND  EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM" WHERE "SS"."SS_CUSTOMER_SK"=:B1 AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND ( EXISTS (SELECT 0 FROM "WEB_SALES" "WEB_SALES","DATE_DIM" "DATE_DIM" WHERE "WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B2 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1) OR  EXISTS (SELECT 0 FROM "CATALOG_SALES" "CATALOG_SALES","DATE_DIM" "DATE_DIM" WHERE "CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B3 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1)))

=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$ACBFB8CC (#2)
Applicable DS directives:
   dirid = 18439699102505563871, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {EC(74169)[8]}
   dirid = 5181560337004891843, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74169)[]; (74168)[3]}
   dirid = 9316027922818115912, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74168)[3, 5]}
Checking valid directives for the query block
  SPD: Directive valid: dirid = 5181560337004891843, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74169)[]; (74168)[3]}
  SPD: Return code in qosdDSDirSetup: EXISTS, estType = GROUP_BY
  SPD: Return code in qosdDSDirSetup: NODIR, estType = QUERY_BLOCK
Return code in qosdSetupDirCtx4QB: EXISTS
=====================================
SPD: END context at query block level
=====================================
Access path analysis for CUSTOMER_ADDRESS
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for CUSTOMER_ADDRESS[CA] 
  SPD: Directive valid: dirid = 18439699102505563871, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {EC(74169)[8]}
  SPD: Return code in qosdDSDirSetup: EXISTS, estType = TABLE

 kkecdn: Single Table Predicate:"CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County'
  Using density: 4.7103e-04 of col #8 as selectivity of pred having unreasonably low value
  Using density: 4.7103e-04 of col #8 as selectivity of pred having unreasonably low value
  Using density: 4.7103e-04 of col #8 as selectivity of pred having unreasonably low value
  Using density: 4.7103e-04 of col #8 as selectivity of pred having unreasonably low value
  Estimated selectivity: 5.3763e-04 , endpoint value predicate, col: #8 
  Table: CUSTOMER_ADDRESS  Alias: CA
    Card: Original: 540000.000000  Rounded: 1308  Computed: 1307.756551  Non Adjusted: 1307.756551
  Scan IO  Cost (Disk) =   3570.000000
  Scan CPU Cost (Disk) =   250417850.560000
  Cost of predicates:
    io = 0.000000, cpu = 249.764594, sel = 0.002422 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Chouteau County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Dinwiddie County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Dixie County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Harrisonburg city')
      io = NOCOST, cpu = 50.000000, sel = 0.000538 flag = 2048  ("CA"."CA_COUNTY"='Lowndes County')
  Total Scan IO  Cost  =   3570.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 540000.000000 (#rows))
                       =   3570.000000
  Total Scan CPU  Cost =   250417850.560000 (scan (Disk))
                         + 134872880.645405 (cpu filter eval) (= 249.764594 (per row) * 540000.000000 (#rows))
                       =   385290731.205405
  Access Path: TableScan
    Cost:  3579.864371  Resp: 3579.864371  Degree: 0
      Cost_io: 3570.000000  Cost_cpu: 385290731
      Resp_io: 3570.000000  Resp_cpu: 385290731
  ****** trying bitmap/domain indexes ******
 ****** Costing Index CA_ADDRESS_PK_IDX
  Access Path: index (FullScan)
    Index: CA_ADDRESS_PK_IDX
    resc_io: 1129.000000  resc_cpu: 116040106
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1131.970906  Resp: 1131.970906  Degree: 0
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: TableScan
         Cost: 3579.864371  Degree: 1  Resp: 3579.864371  Card: 1307.756551  Bytes: 0.000000

Access path analysis for CUSTOMER
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for CUSTOMER[C] 
  SPD: Return code in qosdDSDirSetup: NODIR, estType = TABLE

 kkecdn: Single Table Predicate: EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM" WHERE "SS"."SS_CUSTOMER_SK"=:B1 AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND ( EXISTS (SELECT 0 FROM "WEB_SALES" "WEB_SALES","DATE_DIM" "DATE_DIM" WHERE "WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B2 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1) OR  EXISTS (SELECT 0 FROM "CATALOG_SALES" "CATALOG_SALES","DATE_DIM" "DATE_DIM" WHERE "CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B3 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1)))
  Table: CUSTOMER  Alias: C
    Card: Original: 1080000.000000  Rounded: 1080000  Computed: 1080000.000000  Non Adjusted: 1080000.000000
  Scan IO  Cost (Disk) =   6332.000000
  Scan CPU Cost (Disk) =   414856538.560000
  Cost of predicates:
    io = NOCOST, cpu = 20.000000, sel = 0.050000 flag = 2562  ( EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM" WHERE "SS"."SS_CUSTOMER_SK"=:B1 AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND ( EXISTS (SELECT 0 FROM "WEB_SALES" "WEB_SALES","DATE_DIM" "DATE_DIM" WHERE "WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B2 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1) OR  EXISTS (SELECT 0 FROM "CATALOG_SALES" "CATALOG_SALES","DATE_DIM" "DATE_DIM" WHERE "CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B3 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1))))
  Total Scan IO  Cost  =   6332.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 1080000.000000 (#rows))
                       =   6332.000000
  Total Scan CPU  Cost =   414856538.560000 (scan (Disk))
                         + 21600000.000000 (cpu filter eval) (= 20.000000 (per row) * 1080000.000000 (#rows))
                       =   436456538.560000
  Access Path: TableScan
    Cost:  6343.174339  Resp: 6343.174339  Degree: 0
      Cost_io: 6332.000000  Cost_cpu: 436456539
      Resp_io: 6332.000000  Resp_cpu: 436456539
  ****** trying bitmap/domain indexes ******
 ****** Costing Index CUSTOMER_PK_IDX
  Access Path: index (FullScan)
    Index: CUSTOMER_PK_IDX
    resc_io: 2268.000000  resc_cpu: 232151426
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 2273.943636  Resp: 2273.943636  Degree: 0
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: TableScan
         Cost: 6343.174339  Degree: 1  Resp: 6343.174339  Card: 1080000.000000  Bytes: 0.000000

Grouping column cardinality [C_CURRENT_]    772544
***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE:  Bypassed; QB is not duplicate insignificant SEL$ACBFB8CC (#2)
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  CUSTOMER_ADDRESS[CA]#0  CUSTOMER[C]#1

***************
Now joining: CUSTOMER[C]#1
***************
NL Join
  Outer table: Card: 1307.756551  Cost: 3579.864371  Resp: 3579.864371  Degree: 1  Bytes: 
Access path analysis for CUSTOMER
  Scan IO  Cost (Disk) =   6330.459480
  Scan CPU Cost (Disk) =   414856538.560000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000002 flag = 2048  ("C"."C_CURRENT_ADDR_SK"="CA"."CA_ADDRESS_SK")
    io = NOCOST, cpu = 20.000000, sel = 0.050000 flag = 2562  ( EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM" WHERE "SS"."SS_CUSTOMER_SK"=:B1 AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND ( EXISTS (SELECT 0 FROM "WEB_SALES" "WEB_SALES","DATE_DIM" "DATE_DIM" WHERE "WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B2 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1) OR  EXISTS (SELECT 0 FROM "CATALOG_SALES" "CATALOG_SALES","DATE_DIM" "DATE_DIM" WHERE "CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B3 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND 4>=1))))
  Total Scan IO  Cost  =   6330.459480 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 1080000.000000 (#rows))
                       =   6330.459480
  Total Scan CPU  Cost =   414856538.560000 (scan (Disk))
                         + 24300000.000000 (cpu filter eval) (= 22.500000 (per row) * 1080000.000000 (#rows))
                       =   439156538.560000
  Inner table: CUSTOMER  Alias: C
  Access Path: TableScan
    NL Join:  Cost: 8298527.317370  Resp: 8298527.317370  Degree: 1
      Cost_io: 8283811.000000  Cost_cpu: 574802043168
      Resp_io: 8283811.000000  Resp_cpu: 574802043168
  ****** trying bitmap/domain indexes ******
 ****** Costing Index CUSTOMER_PK_IDX
  Access Path: index (FullScan)
    Index: CUSTOMER_PK_IDX
    resc_io: 2268.000000  resc_cpu: 232151426
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 2273.943636  Resp: 2273.943636  Degree: 0
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 8298527.317370
          resc: 8298527.317370  resc_io: 8283811.000000  resc_cpu: 574802043168
          resp: 8298527.317370  resp_io: 8283811.000000  resc_cpu: 574802043168
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Join Card:  3087.351958 = outer (1307.756551) * inner (1080000.000000) * sel (2.1859e-06)
Join Card - Rounded: 3087 Computed: 3087.351958
Grouping column cardinality [C_CURRENT_]    772544
  Outer table:  CUSTOMER_ADDRESS  Alias: CA
    resc: 3579.864371  card 1307.756551  bytes:   deg: 1  resp: 3579.864371
  Inner table:  CUSTOMER  Alias: C
    resc: 6343.174339  card: 1080000.000000  bytes:   deg: 1  resp: 6343.174339
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 6 Row size:     34 Total Rows:           1308
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39668949
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 3835 Row size:     29 Total Rows:        1080000
      Initial runs:   2 Merge passes:  1 IO Cost / pass:       2078
      Total IO sort cost: 5913.000000      Total CPU sort cost: 1108751040
      Total Temp space used: 60826000
  SM join: Resc: 15865.441029  Resp: 15865.441029  [multiMatchCost=0.000000]
SM Join
  SM cost: 15865.441029 
     resc: 15865.441029 resc_io: 15815.000000 resc_cpu: 1970167258
     resp: 15865.441029 resp_io: 15815.000000 resp_cpu: 1970167258
SM Join (with index on outer)
 ****** Costing Index CA_ADDRESS_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (FullScan)
    Index: CA_ADDRESS_PK_IDX
    resc_io: 13412.000000  resc_cpu: 494985634
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 13424.672825  Resp: 13424.672825  Degree: 1
  Outer table:  CUSTOMER_ADDRESS  Alias: CA
    resc: 13424.672825  card 1307.756551  bytes:   deg: 1  resp: 13424.672825
  Inner table:  CUSTOMER  Alias: C
    resc: 6343.174339  card: 1080000.000000  bytes:   deg: 1  resp: 6343.174339
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 3835 Row size:     29 Total Rows:        1080000
      Initial runs:   2 Merge passes:  1 IO Cost / pass:       2078
      Total IO sort cost: 5913.000000      Total CPU sort cost: 1108751040
      Total Temp space used: 60826000
  SM join: Resc: 25709.233862  Resp: 25709.233862  [multiMatchCost=0.000000]
  Outer table:  CUSTOMER_ADDRESS  Alias: CA
    resc: 3579.864371  card 1307.756551  bytes:   deg: 1  resp: 3579.864371
  Inner table:  CUSTOMER  Alias: C
    resc: 6343.174339  card: 1080000.000000  bytes:   deg: 1  resp: 6343.174339
    using dmeth: 2  #groups: 1
    Cost per ptn: 2.785445  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 6  probefrag: 3824  ppasses: 1
  Hash join: Resc: 9925.824155  Resp: 9925.824155  [multiMatchCost=0.000000]
HA Join
  HA cost: 9925.824155  
     resc: 9925.824155 resc_io: 9902.000000 resc_cpu: 930543470
     resp: 9925.824155 resp_io: 9902.000000 resp_cpu: 930543470
GROUP BY sort
GROUP BY/Correlated Subquery Filter adjustment factor: 1.000000
GROUP BY cardinality:  3087.000000, TABLE cardinality:  3087.000000
Vector group by not costed because no SYS_OP_XLATE_USE in group by.
kdmoGByPushdownValid: more than one table in group by    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 20 Row size:     52 Total Rows:           3087
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 40671077
      Total Temp space used: 0
Best:: JoinMethod: Hash
       Cost: 9926.865433  Degree: 1  Resp: 9926.865433  Card: 3087.351958 Bytes: 
***********************
Best so far:  Table#: 0  cost: 3579.864371  card: 1307.756551  bytes: 27468.000000
              Table#: 1  cost: 9926.865433  card: 3087.351958  bytes: 117306.000000
***********************

*********************************
Number of join permutations tried: 1
*********************************
Enumerating distribution method (advanced)
--- Distribution method for 
join between CA[CUSTOMER_ADDRESS](serial) and C[CUSTOMER](serial); jm = 1; right side access path = TableScan
---- serial Hash-Join -> NONE

kkoaccsqf: Current query block SEL$ACBFB8CC (#2) is serial
kkoaccsqf: correlated subquery query block SEL$2 (#3) in filter               : serial
Final adjusted join cardinality: 1.000000, sq. fil. factor: 1080000.000000
(newjo-save)    [1 0 ]
GROUP BY/Correlated Subquery Filter adjustment factor: 1.000000
GROUP BY cardinality:  1.000000, TABLE cardinality:  1.000000
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     52 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39058824
      Total Temp space used: 0
LORE: Or-Expansion validity checks failed on query block SEL$ACBFB8CC (#2) because Cost based OR expansion enabled
Transfer Optimizer annotations for query block SEL$ACBFB8CC (#2)
Final cost for query block SEL$ACBFB8CC (#2) - All Rows Plan:
  Best join order: 1
  Cost: 9926.865433  Degree: 1  Card: 1.000000  Bytes: 117306.000000
  Resc: 9926.865433  Resc_io: 9902.000000  Resc_cpu: 971214547
  Resp: 9926.865433  Resp_io: 9902.000000  Resc_cpu: 971214547
kkoqbc-subheap (delete addr=0x7f04720f3ac8, in-use=53736, alloc=65704)
kkoqbc-end:
        :
    call(in-use=2127784, alloc=2211632), compile(in-use=4248216, alloc=4439312), execution(in-use=70744, alloc=72984)

kkoqbc: finish optimizing query block SEL$ACBFB8CC (#2)
kkoqbc: optimizing query block SEL$DAF89EE2 (#1)
        
        :
    call(in-use=2125576, alloc=2211632), compile(in-use=4254376, alloc=4439312), execution(in-use=70952, alloc=72984)

kkoqbc-subheap (create addr=0x7f04720f3ac8)
****************
QUERY BLOCK TEXT
****************
SELECT /*query10*/
    cd_gender,
    cd_marital_status,
    cd_education_status,
    COUNT(*) cnt1,
    cd_purchase_estimate,
    COUNT(*) cnt2,
    cd_credit_rating,
    COUNT(*) cnt3,
    cd_dep_count,
    COUNT(*) cnt4,
    cd_dep_employed_count,
    COUNT(*) cnt5,
    cd_dep_college_count,
    COUNT(*) cnt6
FROM
    customer c,
    customer_address ca,
    customer_demographics
WHERE
    -- join predicates
        c.c_current_addr_sk = ca.ca_address_sk
    AND cd_demo_sk = c.c_current_cdemo_sk
    -- filter predicates
    AND ca.ca_county IN (
        'Chouteau County',
        'Dixie County',
        'Harrisonburg city',
        'Lowndes County',
        'Dinwiddie County'
    )
    -- filter predicate (subquery)
    AND EXISTS (
        SELECT
            *
        FROM
            store_sales ss,
            date_dim
        WHERE
            c.c_customer_sk = ss.ss_customer_sk
            AND ss_sold_date_sk = d_date_sk
            AND d_year = 2001
            AND d_moy BETWEEN 1 AND 1 + 3
            AND ( EXISTS (
                SELECT
                    *
                FROM
                    web_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = ws_bill_customer_sk
                    AND ws_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            )
                  OR EXISTS (
                SELECT
                    *
                FROM
                    catalog_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = cs_ship_customer_sk
                    AND cs_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            ) )
    )
GROUP BY
    cd_gender,
    cd_marital_status,
    cd_education_status,
    cd_purchase_estimate,
    cd_credit_rating,
    cd_dep_count,
    cd_dep_employed_count,
    cd_dep_college_count

---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$DAF89EE2 nbfros=2 flg=0
  fro(0): flg=0 objn=74170 hint_alias="CUSTOMER_DEMOGRAPHICS"@"SEL$1"
  fro(1): flg=1 objn=0 hint_alias="VW_GBF_17"@"SEL$8E90090D"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3255 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
  #Rows: 1920800  SSZ: 0  LGR: 0  #Blks:  17254  AvgRowLen:  54.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): CD_DEMO_SK(NUMBER)
    AvgLen: 6 NDV: 1920800 Nulls: 0 Density: 0.000001 Min: 1.000000 Max: 1920800.000000
Index Stats::
  Index: CD_DEMO_PK_IDX  Col#: 1
  LVLS: 2  #LB: 4138  #DK: 1920800  LB/K: 1.00  DB/K: 1.00  CLUF: 795806.00  NRW: 1920800.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table: VW_GBF_17  Alias: VW_GBF_17  (NOT ANALYZED)
  #Rows: 0  SSZ: 0  LGR: 0  #Blks:  0  AvgRowLen:  0.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 0
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#2): 
    NewDensity:0.249925, OldDensity:0.000000 BktCnt:1920800.000000, PopBktCnt:1920800.000000, PopValCnt:2, NDV:2
  Column (#2): CD_GENDER(CHARACTER)
    AvgLen: 2 NDV: 2 Nulls: 0 Density: 0.249925
    Histogram: Freq  #Bkts: 2  UncompBkts: 1920800  EndPtVals: 2  ActualVal: no 
  Column (#3): 
    NewDensity:0.098953, OldDensity:0.000000 BktCnt:1920800.000000, PopBktCnt:1920800.000000, PopValCnt:5, NDV:5
  Column (#3): CD_MARITAL_STATUS(CHARACTER)
    AvgLen: 2 NDV: 5 Nulls: 0 Density: 0.098953
    Histogram: Freq  #Bkts: 5  UncompBkts: 1920800  EndPtVals: 5  ActualVal: yes
  Column (#4): 
    NewDensity:0.070771, OldDensity:0.000000 BktCnt:1920800.000000, PopBktCnt:1920800.000000, PopValCnt:7, NDV:7
  Column (#4): CD_EDUCATION_STATUS(CHARACTER)
    AvgLen: 21 NDV: 7 Nulls: 0 Density: 0.070771
    Histogram: Freq  #Bkts: 7  UncompBkts: 1920800  EndPtVals: 7  ActualVal: yes
  Column (#5): CD_PURCHASE_ESTIMATE(NUMBER)
    AvgLen: 4 NDV: 9500 Nulls: 0 Density: 0.000105 Min: 500.000000 Max: 9999.000000
  Column (#6): CD_CREDIT_RATING(CHARACTER)
    AvgLen: 11 NDV: 4 Nulls: 0 Density: 0.250000
  Column (#7): CD_DEP_COUNT(NUMBER)
    AvgLen: 3 NDV: 6 Nulls: 0 Density: 0.166667 Min: 0.000000 Max: 5.000000
  Column (#8): CD_DEP_EMPLOYED_COUNT(NUMBER)
    AvgLen: 3 NDV: 6 Nulls: 0 Density: 0.166667 Min: 0.000000 Max: 5.000000
  Column (#9): CD_DEP_COLLEGE_COUNT(NUMBER)
    AvgLen: 3 NDV: 6 Nulls: 0 Density: 0.166667 Min: 0.000000 Max: 5.000000
  Column (#1): ITEM_1(NUMBER)
    AvgLen: 6 NDV: 772544 Nulls: 0 Density: 0.000001 Min: 18.000000 Max: 1920799.000000
try to generate single-table filter predicates from ORs for query block SEL$DAF89EE2 (#1)
finally: "CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK"="VW_GBF_17"."ITEM_1"

=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$DAF89EE2 (#1)
Applicable DS directives:
   dirid = 7754152966831092939, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {EC(74170)[3, 4]}
Checking valid directives for the query block
  SPD: Return code in qosdDSDirSetup: NODIR, estType = GROUP_BY
  SPD: Return code in qosdDSDirSetup: NODIR, estType = QUERY_BLOCK
Return code in qosdSetupDirCtx4QB: EXISTS
=====================================
SPD: END context at query block level
=====================================
Access path analysis for VW_GBF_17

Access path analysis for CUSTOMER_DEMOGRAPHICS
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS] 
  SPD: Return code in qosdDSDirSetup: NODIR, estType = TABLE
  Table: CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
    Card: Original: 1920800.000000  Rounded: 1920800  Computed: 1920800.000000  Non Adjusted: 1920800.000000
  Scan IO  Cost (Disk) =   4675.000000
  Scan CPU Cost (Disk) =   718321325.760000
  Total Scan IO  Cost  =   4675.000000 (scan (Disk))
                       =   4675.000000
  Total Scan CPU  Cost =   718321325.760000 (scan (Disk))
                       =   718321325.760000
  Access Path: TableScan
    Cost:  4693.390757  Resp: 4693.390757  Degree: 0
      Cost_io: 4675.000000  Cost_cpu: 718321326
      Resp_io: 4675.000000  Resp_cpu: 718321326
  Best:: AccessPath: TableScan
         Cost: 4693.390757  Degree: 1  Resp: 4693.390757  Card: 1920800.000000  Bytes: 0.000000

Grouping column cardinality [ CD_GENDER]    2
Grouping column cardinality [CD_MARITAL]    5
Grouping column cardinality [CD_EDUCATI]    7
Grouping column cardinality [CD_PURCHAS]    9500
Grouping column cardinality [CD_CREDIT_]    4
Grouping column cardinality [CD_DEP_COU]    6
Grouping column cardinality [CD_DEP_EMP]    6
Grouping column cardinality [CD_DEP_COL]    6
***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE:  Bypassed; QB is not duplicate insignificant SEL$DAF89EE2 (#1)
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  VW_GBF_17[VW_GBF_17]#0  CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS]#1

***************
Now joining: CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS]#1
***************
NL Join
  Outer table: Card: 1.000000  Cost: 5.000000  Resp: 0.000000  Degree: 0  Bytes: 
Access path analysis for CUSTOMER_DEMOGRAPHICS
  Scan IO  Cost (Disk) =   4675.000000
  Scan CPU Cost (Disk) =   718321325.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000001 flag = 2048  ("CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK"="VW_GBF_17"."ITEM_1")
  Total Scan IO  Cost  =   4675.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 1920800.000000 (#rows))
                       =   4675.000000
  Total Scan CPU  Cost =   718321325.760000 (scan (Disk))
                         + 96040000.000000 (cpu filter eval) (= 50.000000 (per row) * 1920800.000000 (#rows))
                       =   814361325.760000
  Inner table: CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
  Access Path: TableScan
    NL Join:  Cost: 4695.849612  Resp: 4695.849612  Degree: 1
      Cost_io: 4675.000000  Cost_cpu: 814361326
      Resp_io: 4675.000000  Resp_cpu: 814361326
 ****** Costing Index CD_DEMO_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: CD_DEMO_PK_IDX
    resc_io: 2.000000  resc_cpu: 16453
    ix_sel: 5.2062e-07  ix_sel_with_filters: 5.2062e-07 
    NL Join : Cost: 2.000421  Resp: 2.000421  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 16453
      Resp_io: 2.000000  Resp_cpu: 16453
 ****** Costing Index CD_DEMO_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: CD_DEMO_PK_IDX
    resc_io: 2.000000  resc_cpu: 16453
    ix_sel: 5.2062e-07  ix_sel_with_filters: 5.2062e-07 
    NL Join : Cost: 2.000421  Resp: 2.000421  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 16453
      Resp_io: 2.000000  Resp_cpu: 16453

  Best NL cost: 2.000421
          resc: 2.000421  resc_io: 2.000000  resc_cpu: 16453
          resp: 2.000421  resp_io: 2.000000  resc_cpu: 16453
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Join Card:  1.000000 = outer (1.000000) * inner (1920800.000000) * sel (5.2062e-07)
Join Card - Rounded: 1 Computed: 1.000000
Grouping column cardinality [ CD_GENDER]    2
Grouping column cardinality [CD_MARITAL]    5
Grouping column cardinality [CD_EDUCATI]    7
Grouping column cardinality [CD_PURCHAS]    9500
Grouping column cardinality [CD_CREDIT_]    4
Grouping column cardinality [CD_DEP_COU]    6
Grouping column cardinality [CD_DEP_EMP]    6
Grouping column cardinality [CD_DEP_COL]    6
  Outer table:  VW_GBF_17  Alias: VW_GBF_17
    resc: 0.000000  card 1.000000  bytes:   deg: 0  resp: 0.000000
  Inner table:  CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
    resc: 4693.390757  card: 1920800.000000  bytes:   deg: 1  resp: 4693.390757
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     103 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39058824
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 16462 Row size:     70 Total Rows:        1920800
      Initial runs:   2 Merge passes:  1 IO Cost / pass:       8918
      Total IO sort cost: 25380.000000      Total CPU sort cost: 2250842275
      Total Temp space used: 294134000
  SM join: Resc: 30132.017743  Resp: 30132.017743  [multiMatchCost=0.000000]
SM Join
  SM cost: 30132.017743 
     resc: 30132.017743 resc_io: 30055.000000 resc_cpu: 3008222424
     resp: 30132.017743 resp_io: 30055.000000 resp_cpu: 3008222424
  Outer table:  VW_GBF_17  Alias: VW_GBF_17
    resc: 0.000000  card 1.000000  bytes:   deg: 0  resp: 0.000000
  Inner table:  CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
    resc: 4693.390757  card: 1920800.000000  bytes:   deg: 1  resp: 4693.390757
    using dmeth: 2  #groups: 1
    Cost per ptn: 4.933076  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 1  probefrag: 15476  ppasses: 1
  Hash join: Resc: 4698.323833  Resp: 4698.323833  [multiMatchCost=0.000000]
HA Join
  HA cost: 4698.323833  
     resc: 4698.323833 resc_io: 4675.000000 resc_cpu: 911001476
     resp: 4698.323833 resp_io: 4675.000000 resp_cpu: 911001476
GROUP BY sort

GROUP BY/Correlated Subquery Filter adjustment factor: 0.088388
GROUP BY cardinality:  1.000000, TABLE cardinality:  1.000000
Vector group by not costed because no SYS_OP_XLATE_USE in group by.
kdmoGByPushdownValid: more than one table in group by    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     162 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39058824
      Total Temp space used: 0
Best:: JoinMethod: NestedLoop
       Cost: 3.000421  Degree: 1  Resp: 3.000421  Card: 1.000000 Bytes: 
***********************
Best so far:  Table#: 0  cost: 5.000000  card: 1.000000  bytes: 84.000000
              Table#: 1  cost: 3.000421  card: 1.000000  bytes: 138.000000
***********************

*********************************
Number of join permutations tried: 1
*********************************
Enumerating distribution method (advanced)
--- Distribution method for 
join between VW_GBF_17[VW_GBF_17](serial) and CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS](serial); jm = 14; right side access path = IndexUnique
kkopqIsSerialJoin: serial NLJ: both inputs serial
---- serial NL-Join -> SERIAL

(newjo-save)    [1 0 ]

GROUP BY/Correlated Subquery Filter adjustment factor: 0.088388
GROUP BY cardinality:  1.000000, TABLE cardinality:  1.000000
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     162 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39058824
      Total Temp space used: 0
LORE: Or-Expansion validity checks failed on query block SEL$DAF89EE2 (#1) because Cost based OR expansion enabled
Transfer Optimizer annotations for query block SEL$DAF89EE2 (#1)
Final cost for query block SEL$DAF89EE2 (#1) - All Rows Plan:
  Best join order: 1
  Cost: 3.000421  Degree: 1  Card: 1.000000  Bytes: 138.000000
  Resc: 3.000421  Resc_io: 2.000000  Resc_cpu: 39075276
  Resp: 3.000421  Resp_io: 2.000000  Resc_cpu: 39075276
kkoqbc-subheap (delete addr=0x7f04720f3ac8, in-use=37888, alloc=49272)
kkoqbc-end:
        :
    call(in-use=2137232, alloc=2211528), compile(in-use=4271800, alloc=4439312), execution(in-use=71152, alloc=72984)

kkoqbc: finish optimizing query block SEL$DAF89EE2 (#1)
First K Rows: K = 1.00, N = 120.00
First K Rows: K = 1.00, N = 69.00
First K Rows: K = 1.00, N = 37.00
First K Rows: Setup end
***********************
kkoqbc: optimizing query block SEL$3 (#5)
        
        :
    call(in-use=2135024, alloc=2211528), compile(in-use=4272048, alloc=4439312), execution(in-use=71152, alloc=72984)

kkoqbc-subheap (create addr=0x7f04720f3ac8)
****************
QUERY BLOCK TEXT
****************
SELECT
                    *
                FROM
                    web_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = ws_bill_customer_sk
                    AND ws_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$3 nbfros=2 flg=0
  fro(0): flg=0 objn=74171 hint_alias="DATE_DIM"@"SEL$3"
  fro(1): flg=0 objn=74195 hint_alias="WEB_SALES"@"SEL$3"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3255 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: DATE_DIM  Alias: DATE_DIM
  #Rows: 73049  SSZ: 0  LGR: 0  #Blks:  1510  AvgRowLen:  128.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): D_DATE_SK(NUMBER)
    AvgLen: 6 NDV: 73049 Nulls: 0 Density: 0.000014 Min: 2415022.000000 Max: 2488070.000000
  Column (#7): D_YEAR(NUMBER)
    AvgLen: 4 NDV: 201 Nulls: 0 Density: 0.000007 Min: 1900.000000 Max: 2100.000000
    Histogram: Freq  #Bkts: 201  UncompBkts: 73049  EndPtVals: 201  ActualVal: yes
  Column (#9): D_MOY(NUMBER)
    AvgLen: 3 NDV: 12 Nulls: 0 Density: 0.038666 Min: 1.000000 Max: 12.000000
    Histogram: Freq  #Bkts: 12  UncompBkts: 73049  EndPtVals: 12  ActualVal: yes
Index Stats::
  Index: D_DATE_PK_IDX  Col#: 1
  LVLS: 1  #LB: 163  #DK: 73049  LB/K: 1.00  DB/K: 1.00  CLUF: 1402.00  NRW: 73049.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table: WEB_SALES  Alias: WEB_SALES  (Using composite stats)
  #Rows: 35969200  SSZ: 0  LGR: 0  #Blks:  829566  AvgRowLen:  167.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
Index Stats::
  Index: WEB_SALES_IDX2  Col#: 5 1
  LVLS: 3  #LB: 130617  #DK: 2992994  LB/K: 1.00  DB/K: 12.00  CLUF: 35969159.00  NRW: 35969200.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
  Index: WEB_SALES_PK_IDX  Col#: 4 18
  LVLS: 2  #LB: 122502  #DK: 35304428  LB/K: 1.00  DB/K: 1.00  CLUF: 35300490.00  NRW: 35304428.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
try to generate single-table filter predicates from ORs for query block SEL$3 (#5)
finally: "WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B1 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4

=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$3 (#5)
Applicable DS directives:
   dirid = 4510913066701158191, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {(74195)[]; (74171)[]}
   dirid = 14910903719618111890, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74195)[5]}
   dirid = 13969931850241126217, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {C(74171)[7, 9]}
   dirid = 13683461771316641482, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74195)[5]; (74171)[7]}
Checking valid directives for the query block
  SPD: Return code in qosdDSDirSetup: NODIR, estType = QUERY_BLOCK
Return code in qosdSetupDirCtx4QB: EXISTS
=====================================
SPD: END context at query block level
=====================================
Access path analysis for WEB_SALES
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for WEB_SALES[WEB_SALES] 
  SPD: Return code in qosdDSDirSetup: NODIR, estType = TABLE

 kkecdn: Single Table Predicate:"WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B1
NOTE: ignoring histogram of column (WEB_SALES.WS_BILL_CUSTOMER_SK)
      used only for incremental stats maintenance
  Column (#5): WS_BILL_CUSTOMER_SK(NUMBER)
    AvgLen: 6 NDV: 973580 Nulls: 0 Density: 0.000001 Min: 2.000000 Max: 1079999.000000
  Estimated selectivity: 1.0271e-06 , col: #5 
  Table: WEB_SALES  Alias: WEB_SALES
    Card: Original: 35969200.000000  Rounded: 37  Computed: 36.945295  Non Adjusted: 36.945295
  Scan IO  Cost (Disk) =   224676.000000
  Scan CPU Cost (Disk) =   14180620495.040001
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000001 flag = 2048  ("WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B1)
  Total Scan IO  Cost  =   224676.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 35969200.000000 (#rows))
                       =   224676.000000
  Total Scan CPU  Cost =   14180620495.040001 (scan (Disk))
                         + 1798460000.000000 (cpu filter eval) (= 50.000000 (per row) * 35969200.000000 (#rows))
                       =   15979080495.040001
  Access Path: TableScan
    Cost:  225085.102964  Resp: 225085.102964  Degree: 0
      Cost_io: 224676.000000  Cost_cpu: 15979080495
      Resp_io: 224676.000000  Resp_cpu: 15979080495
  Access Path: index (index (FFS))
    Index: WEB_SALES_IDX2
    resc_io: 35377.000000  resc_cpu: 7044945128
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  35557.367571  Resp: 35557.367571  Degree: 1
      Cost_io: 35377.000000  Cost_cpu: 7044945128
      Resp_io: 35377.000000  Resp_cpu: 7044945128
 ****** Costing Index WEB_SALES_IDX2
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER

  Estimated selectivity: 1.0271e-06 , col: #5 
  Access Path: index (IndexOnly)
    Index: WEB_SALES_IDX2
    resc_io: 4.000000  resc_cpu: 35886
    ix_sel: 1.0271e-06  ix_sel_with_filters: 1.0271e-06 
    Cost: 4.000919  Resp: 4.000919  Degree: 1
  Best:: AccessPath: IndexRange
  Index: WEB_SALES_IDX2
         Cost: 4.000919  Degree: 1  Resp: 4.000919  Card: 36.945295  Bytes: 0.000000

Access path analysis for DATE_DIM
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for DATE_DIM[DATE_DIM] 
  SPD: Directive valid: dirid = 13969931850241126217, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {C(74171)[7, 9]}
  SPD: Return code in qosdDSDirSetup: EXISTS, estType = TABLE
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 


 kkecdn: Single Table Predicate:"DATE_DIM"."D_YEAR"=2001
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY">=1
  Estimated selectivity: 1.000000 , endpoint value predicate, col: #9 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY"<=4
  Estimated selectivity: 0.329224 , endpoint value predicate, col: #9 
  Table: DATE_DIM  Alias: DATE_DIM
    Card: Original: 73049.000000  Rounded: 120  Computed: 120.166840  Non Adjusted: 120.166840
  Scan IO  Cost (Disk) =   411.000000
  Scan CPU Cost (Disk) =   33398564.400000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.004997 flag = 2048  ("DATE_DIM"."D_YEAR"=2001)
    io = NOCOST, cpu = 50.000000, sel = 0.329224 flag = 2048  ("DATE_DIM"."D_MOY"<=4)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("DATE_DIM"."D_MOY">=1)
  Total Scan IO  Cost  =   411.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 73049.000000 (#rows))
                       =   411.000000
  Total Scan CPU  Cost =   33398564.400000 (scan (Disk))
                         + 3676708.342003 (cpu filter eval) (= 50.332083 (per row) * 73049.000000 (#rows))
                       =   37075272.742003
  Access Path: TableScan
    Cost:  411.949216  Resp: 411.949216  Degree: 0
      Cost_io: 411.000000  Cost_cpu: 37075273
      Resp_io: 411.000000  Resp_cpu: 37075273
  Best:: AccessPath: TableScan
         Cost: 411.949216  Degree: 1  Resp: 411.949216  Card: 120.166840  Bytes: 0.000000

***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE: Checking validity of partial join eval on query block SEL$3 (#5)
PJE: Passed validity of partial join eval by query block SEL$3 (#5)
number: [0]
PJE: Partial join eval conversion for query block SEL$3 (#5).
PJE: Table marked for partial join eval: DATE_DIM[DATE_DIM]#1
***********************
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  WEB_SALES[WEB_SALES]#0  DATE_DIM[DATE_DIM]#1

***************
Now joining: DATE_DIM[DATE_DIM]#1
***************
NL Join
  Outer table: Card: 36.945295  Cost: 4.000919  Resp: 4.000919  Degree: 1  Bytes: 
Access path analysis for DATE_DIM
  Scan IO  Cost (Disk) =   409.000000
  Scan CPU Cost (Disk) =   33398564.400000
NOTE: ignoring histogram of column (WEB_SALES.WS_SOLD_DATE_SK)
      used only for incremental stats maintenance
  Column (#1): WS_SOLD_DATE_SK(NUMBER)
    AvgLen: 6 NDV: 1839 Nulls: 0 Density: 0.000544 Min: 2450816.000000 Max: 2452641.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.008264 flag = 2048  ("WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK")
    io = NOCOST, cpu = 50.000000, sel = 0.004997 flag = 2048  ("DATE_DIM"."D_YEAR"=2001)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("DATE_DIM"."D_MOY">=1)
    io = NOCOST, cpu = 50.000000, sel = 0.329224 flag = 2048  ("DATE_DIM"."D_MOY"<=4)
  Total Scan IO  Cost  =   409.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 73049.000000 (#rows))
                       =   409.000000
  Total Scan CPU  Cost =   33398564.400000 (scan (Disk))
                         + 3670900.482165 (cpu filter eval) (= 50.252577 (per row) * 73049.000000 (#rows))
                       =   37069464.882165
  Inner table: DATE_DIM  Alias: DATE_DIM
  Access Path: TableScan
    NL Join:  Cost: 15172.116421  Resp: 15172.116421  Degree: 1
      Cost_io: 15137.000000  Cost_cpu: 1371606086
      Resp_io: 15137.000000  Resp_cpu: 1371606086
 ****** Costing Index D_DATE_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: D_DATE_PK_IDX
    resc_io: 1.000000  resc_cpu: 9382
    ix_sel: 1.3689e-05  ix_sel_with_filters: 1.3689e-05 
    NL Join (ordered): Cost: 41.009806  Resp: 41.009806  Degree: 1
      Cost_io: 41.000000  Cost_cpu: 383011
      Resp_io: 41.000000  Resp_cpu: 383011
 ****** Costing Index D_DATE_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 
  Estimated selectivity: 1.000000 , endpoint value predicate, col: #9 
  Estimated selectivity: 0.329224 , endpoint value predicate, col: #9 
  Access Path: index (AllEqUnique)
    Index: D_DATE_PK_IDX
    resc_io: 1.000000  resc_cpu: 9382
    ix_sel: 1.3689e-05  ix_sel_with_filters: 1.3689e-05 
    NL Join (ordered): Cost: 41.009806  Resp: 41.009806  Degree: 1
      Cost_io: 41.000000  Cost_cpu: 383011
      Resp_io: 41.000000  Resp_cpu: 383011

  Best NL cost: 41.009806
          resc: 41.009806  resc_io: 41.000000  resc_cpu: 383011
          resp: 41.009806  resp_io: 41.000000  resc_cpu: 383011
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Capping Semi Join Card of HJ/SMJ by inner = 36.690903
Capping Semi Join Card of HJ/SMJ (no post filters) by inner = 36.690903
Capping Semi Join Card of NL by inner = 36.690903
Capping Semi Join Card of without POSQ by inner = 36.690903
Capping Semi Join Card of non adjusted NSQ by inner = 36.690903
Semi Join Card (capped by inner join):  36.690903 = outer (36.945295) * inner (120.166840) * sel (0.008264)
Join Card - Rounded: 37 Computed: 36.690903
  Outer table:  WEB_SALES  Alias: WEB_SALES
    resc: 4.000919  card 36.945295  bytes:   deg: 1  resp: 4.000919
  Inner table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card: 120.166840  bytes:   deg: 1  resp: 411.949216
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     25 Total Rows:            120
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39096166
      Total Temp space used: 0
  SM join: Resc: 416.951091  Resp: 416.951091  [multiMatchCost=0.000000]
SM Join
  SM cost: 416.951091 
     resc: 416.951091 resc_io: 415.000000 resc_cpu: 76207324
     resp: 416.951091 resp_io: 415.000000 resp_cpu: 76207324
  Outer table:  WEB_SALES  Alias: WEB_SALES
    resc: 4.000919  card 36.945295  bytes:   deg: 1  resp: 4.000919
  Inner table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card: 120.166840  bytes:   deg: 1  resp: 411.949216
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.015811  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 415.965946  Resp: 415.965946  [multiMatchCost=0.000000]
HA Join
  HA cost: 415.965946  
     resc: 415.965946 resc_io: 415.000000 resc_cpu: 37728709
     resp: 415.965946 resp_io: 415.000000 resp_cpu: 37728709
Best:: JoinMethod: NestedLoopSemi
       Cost: 41.009806  Degree: 1  Resp: 41.009806  Card: 36.690903 Bytes: 
***********************
Best so far:  Table#: 0  cost: 4.000919  card: 36.945295  bytes: 444.000000
              Table#: 1  cost: 41.009806  card: 36.690903  bytes: 925.000000
***********************
First K Rows: K = 1.00, N = 37.00
First K Rows: old pf = -1.0000000, new pf = 0.0541341
Access path analysis for WEB_SALES
***************************************
SINGLE TABLE ACCESS PATH (First K Rows)
  Single Table Cardinality Estimation for WEB_SALES[WEB_SALES] 
  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = TABLE

 kkecdn: Single Table Predicate:"WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B1
  Estimated selectivity: 1.1778e-06 , col: #5 
  Table: WEB_SALES  Alias: WEB_SALES
    Card: Original: 1947160.000000  Rounded: 2  Computed: 2.293429  Non Adjusted: 2.293429
  Scan IO  Cost (Disk) =   12164.000000
  Scan CPU Cost (Disk) =   767656427.520000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000001 flag = 2064  ("WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B1)
  Total Scan IO  Cost  =   12164.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 1947160.000000 (#rows))
                       =   12164.000000
  Total Scan CPU  Cost =   767656427.520000 (scan (Disk))
                         + 97358000.000000 (cpu filter eval) (= 50.000000 (per row) * 1947160.000000 (#rows))
                       =   865014427.520000
  Access Path: TableScan
    Cost:  12186.146454  Resp: 12186.146454  Degree: 0
      Cost_io: 12164.000000  Cost_cpu: 865014428
      Resp_io: 12164.000000  Resp_cpu: 865014428
  Access Path: index (index (FFS))
    Index: WEB_SALES_IDX2
    resc_io: 1917.000000  resc_cpu: 381372902
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  1926.764065  Resp: 1926.764065  Degree: 1
      Cost_io: 1917.000000  Cost_cpu: 381372902
      Resp_io: 1917.000000  Resp_cpu: 381372902
 ****** Costing Index WEB_SALES_IDX2
  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = INDEX_FILTER

  Estimated selectivity: 1.1778e-06 , col: #5 
  Access Path: index (IndexOnly)
    Index: WEB_SALES_IDX2
    resc_io: 4.000000  resc_cpu: 29086
    ix_sel: 1.1778e-06  ix_sel_with_filters: 1.1778e-06 
    Cost: 4.000745  Resp: 4.000745  Degree: 1
  Best:: AccessPath: IndexRange
  Index: WEB_SALES_IDX2
         Cost: 4.000745  Degree: 1  Resp: 4.000745  Card: 2.293429  Bytes: 0.000000

First K Rows: old pf = -1.0000000, new pf = 0.5034667
Access path analysis for DATE_DIM
***************************************
SINGLE TABLE ACCESS PATH (First K Rows)
  Single Table Cardinality Estimation for DATE_DIM[DATE_DIM] 
  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = TABLE
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 


 kkecdn: Single Table Predicate:"DATE_DIM"."D_YEAR"=2001
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY">=1
  Estimated selectivity: 1.000000 , endpoint value predicate, col: #9 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY"<=4
  Estimated selectivity: 0.329224 , endpoint value predicate, col: #9 
  Table: DATE_DIM  Alias: DATE_DIM
    Card: Original: 36778.000000  Rounded: 61  Computed: 60.500432  Non Adjusted: 60.500432
  Scan IO  Cost (Disk) =   208.000000
  Scan CPU Cost (Disk) =   16820595.840000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.004997 flag = 2048  ("DATE_DIM"."D_YEAR"=2001)
    io = NOCOST, cpu = 50.000000, sel = 0.329224 flag = 2048  ("DATE_DIM"."D_MOY"<=4)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("DATE_DIM"."D_MOY">=1)
  Total Scan IO  Cost  =   208.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 36778.000000 (#rows))
                       =   208.000000
  Total Scan CPU  Cost =   16820595.840000 (scan (Disk))
                         + 1851113.354080 (cpu filter eval) (= 50.332083 (per row) * 36778.000000 (#rows))
                       =   18671709.194080
  Access Path: TableScan
    Cost:  208.478041  Resp: 208.478041  Degree: 0
      Cost_io: 208.000000  Cost_cpu: 18671709
      Resp_io: 208.000000  Resp_cpu: 18671709
  Best:: AccessPath: TableScan
         Cost: 208.478041  Degree: 1  Resp: 208.478041  Card: 60.500432  Bytes: 0.000000

First K Rows: unchanged join prefix len = 1
Join order[1]:  WEB_SALES[WEB_SALES]#0  DATE_DIM[DATE_DIM]#1

***************
Now joining: DATE_DIM[DATE_DIM]#1
***************
NL Join
  Outer table: Card: 2.293429  Cost: 4.000745  Resp: 4.000745  Degree: 1  Bytes: 
Access path analysis for DATE_DIM
  Scan IO  Cost (Disk) =   207.000000
  Scan CPU Cost (Disk) =   16820595.840000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.008264 flag = 2064  ("WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK")
    io = NOCOST, cpu = 50.000000, sel = 0.004997 flag = 2048  ("DATE_DIM"."D_YEAR"=2001)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("DATE_DIM"."D_MOY">=1)
    io = NOCOST, cpu = 50.000000, sel = 0.329224 flag = 2048  ("DATE_DIM"."D_MOY"<=4)
  Total Scan IO  Cost  =   207.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 36778.000000 (#rows))
                       =   207.000000
  Total Scan CPU  Cost =   16820595.840000 (scan (Disk))
                         + 1848189.269300 (cpu filter eval) (= 50.252577 (per row) * 36778.000000 (#rows))
                       =   18668785.109300
  Inner table: DATE_DIM  Alias: DATE_DIM
  Access Path: TableScan
    NL Join:  Cost: 418.956676  Resp: 418.956676  Degree: 1
      Cost_io: 418.000000  Cost_cpu: 37366656
      Resp_io: 418.000000  Resp_cpu: 37366656
 ****** Costing Index D_DATE_PK_IDX
NOTE: ignoring histogram of column (WEB_SALES.WS_SOLD_DATE_SK)
      used only for incremental stats maintenance
  Column (#1): WS_SOLD_DATE_SK(NUMBER)
    AvgLen: 6 NDV: 1839 Nulls: 0 Density: 0.000544 Min: 2450816.000000 Max: 2452641.000000
  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: D_DATE_PK_IDX
    resc_io: 1.000000  resc_cpu: 9382
    ix_sel: 2.7190e-05  ix_sel_with_filters: 2.7190e-05 
    NL Join (ordered): Cost: 6.001225  Resp: 6.001225  Degree: 1
      Cost_io: 6.000000  Cost_cpu: 47849
      Resp_io: 6.000000  Resp_cpu: 47849
 ****** Costing Index D_DATE_PK_IDX
  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = INDEX_FILTER
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 
  Estimated selectivity: 1.000000 , endpoint value predicate, col: #9 
  Estimated selectivity: 0.329224 , endpoint value predicate, col: #9 
  Access Path: index (AllEqUnique)
    Index: D_DATE_PK_IDX
    resc_io: 1.000000  resc_cpu: 9382
    ix_sel: 2.7190e-05  ix_sel_with_filters: 2.7190e-05 
    NL Join (ordered): Cost: 6.001225  Resp: 6.001225  Degree: 1
      Cost_io: 6.000000  Cost_cpu: 47849
      Resp_io: 6.000000  Resp_cpu: 47849

  Best NL cost: 6.001225
          resc: 6.001225  resc_io: 6.000000  resc_cpu: 47849
          resp: 6.001225  resp_io: 6.000000  resc_cpu: 47849
  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = JOIN
Capping Semi Join Card of HJ/SMJ by inner = 2.274646
Capping Semi Join Card of HJ/SMJ (no post filters) by inner = 2.274646
Capping Semi Join Card of NL by inner = 2.274646
Capping Semi Join Card of without POSQ by inner = 2.274646
Capping Semi Join Card of non adjusted NSQ by inner = 2.274646
Semi Join Card (capped by inner join):  2.274646 = outer (2.293429) * inner (60.500432) * sel (0.016393)
Join Card - Rounded: 2 Computed: 2.274646
  Outer table:  WEB_SALES  Alias: WEB_SALES
    resc: 4.000745  card 2.293429  bytes:   deg: 1  resp: 4.000745
  Inner table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card: 120.166840  bytes:   deg: 1  resp: 411.949216
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     25 Total Rows:            120
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39096166
      Total Temp space used: 0
  SM join: Resc: 416.950917  Resp: 416.950917  [multiMatchCost=0.000000]
SM Join
  SM cost: 416.950917 
     resc: 416.950917 resc_io: 415.000000 resc_cpu: 76200524
     resp: 416.950917 resp_io: 415.000000 resp_cpu: 76200524
  Outer table:  WEB_SALES  Alias: WEB_SALES
    resc: 4.000919  card 36.945295  bytes:   deg: 1  resp: 4.000919
  Inner table:  DATE_DIM  Alias: DATE_DIM
    resc: 208.478041  card: 60.500432  bytes:   deg: 1  resp: 208.478041
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.015660  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 212.494619  Resp: 212.494619  [multiMatchCost=0.000000]
HA Join
  HA cost: 212.494619  
     resc: 212.494619 resc_io: 212.000000 resc_cpu: 19319245
     resp: 212.494619 resp_io: 212.000000 resp_cpu: 19319245
Best:: JoinMethod: NestedLoopSemi
       Cost: 6.001225  Degree: 1  Resp: 6.001225  Card: 2.274646 Bytes: 
***********************
Best so far:  Table#: 0  cost: 4.000745  card: 2.293429  bytes: 24.000000
              Table#: 1  cost: 6.001225  card: 2.274646  bytes: 50.000000
***********************
number: [1]
PJE: Partial join eval conversion for query block SEL$3 (#5).
PJE: Table marked for partial join eval: WEB_SALES[WEB_SALES]#0
***********************
number: [1]
PJE: Partial join eval conversion for query block SEL$3 (#5).
PJE: Table marked for partial join eval: WEB_SALES[WEB_SALES]#0
***********************
Join order[2]:  DATE_DIM[DATE_DIM]#1  WEB_SALES[WEB_SALES]#0

***************
Now joining: WEB_SALES[WEB_SALES]#0
***************
NL Join
  Outer table: Card: 120.166840  Cost: 411.949216  Resp: 411.949216  Degree: 1  Bytes: 
Access path analysis for WEB_SALES
  Scan IO  Cost (Disk) =   224674.133333
  Scan CPU Cost (Disk) =   14180620495.040001
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000001 flag = 2064  ("WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B1)
    io = NOCOST, cpu = 50.000000, sel = 0.008264 flag = 2064  ("WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK")
  Total Scan IO  Cost  =   224674.133333 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 35969200.000000 (#rows))
                       =   224674.133333
  Total Scan CPU  Cost =   14180620495.040001 (scan (Disk))
                         + 1798462118.285028 (cpu filter eval) (= 50.000059 (per row) * 35969200.000000 (#rows))
                       =   15979082613.325029
  Inner table: WEB_SALES  Alias: WEB_SALES
  Access Path: TableScan
    NL Join:  Cost: 27010400.311462  Resp: 27010400.311462  Degree: 1
      Cost_io: 26961307.000000  Cost_cpu: 1917526988872
      Resp_io: 26961307.000000  Resp_cpu: 1917526988872
  Access Path: index (index (FFS))
    Index: WEB_SALES_IDX2
    resc_io: 35375.450000  resc_cpu: 7044947247
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: WEB_SALES  Alias: WEB_SALES
  Access Path: index (FFS)
    NL Join:  Cost: 4267110.064252  Resp: 4267110.064252  Degree: 1
      Cost_io: 4245465.000000  Cost_cpu: 845430744885
      Resp_io: 4245465.000000  Resp_cpu: 845430744885
 ****** Costing Index WEB_SALES_IDX2
NOTE: ignoring histogram of column (WEB_SALES.WS_SOLD_DATE_SK)
      used only for incremental stats maintenance
  Column (#1): WS_SOLD_DATE_SK(NUMBER)
    AvgLen: 6 NDV: 1839 Nulls: 0 Density: 0.000544 Min: 2450816.000000 Max: 2452641.000000
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 3.3411e-07
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 3.3411e-07
  Estimated selectivity: 1.0271e-06 , col: #5 
  Access Path: index (AllEqJoinGuess)
    Index: WEB_SALES_IDX2
    resc_io: 3.000000  resc_cpu: 22414
    ix_sel: 2.7802e-08  ix_sel_with_filters: 2.7802e-08 
    NL Join : Cost: 772.018080  Resp: 772.018080  Degree: 1
      Cost_io: 771.000000  Cost_cpu: 39764991
      Resp_io: 771.000000  Resp_cpu: 39764991

  Best NL cost: 772.018080
          resc: 772.018080  resc_io: 771.000000  resc_cpu: 39764991
          resp: 772.018080  resp_io: 771.000000  resc_cpu: 39764991
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Capping Semi Join Card of HJ/SMJ by inner = 36.690903
Capping Semi Join Card of HJ/SMJ (no post filters) by inner = 36.690903
Capping Semi Join Card of NL by inner = 36.690903
Capping Semi Join Card of without POSQ by inner = 36.690903
Capping Semi Join Card of non adjusted NSQ by inner = 36.690903
Semi Join Card (capped by inner join):  36.690903 = outer (120.166840) * inner (36.945295) * sel (0.008264)
Join Card - Rounded: 37 Computed: 36.690903
  Outer table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card 120.166840  bytes:   deg: 1  resp: 411.949216
  Inner table:  WEB_SALES  Alias: WEB_SALES
    resc: 4.000919  card: 36.945295  bytes:   deg: 1  resp: 4.000919
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     25 Total Rows:            120
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39096166
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     24 Total Rows:             37
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39067508
      Total Temp space used: 0
  SM join: Resc: 417.951313  Resp: 417.951313  [multiMatchCost=0.000000]
SM Join
  SM cost: 417.951313 
     resc: 417.951313 resc_io: 415.000000 resc_cpu: 115274832
     resp: 417.951313 resp_io: 415.000000 resp_cpu: 115274832
SM Join (with index on outer)
 ****** Costing Index D_DATE_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (FullScan)
    Index: D_DATE_PK_IDX
    resc_io: 1566.000000  resc_cpu: 52078066
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1567.333324  Resp: 1567.333324  Degree: 1
  Outer table:  DATE_DIM  Alias: DATE_DIM
    resc: 1567.333324  card 120.166840  bytes:   deg: 1  resp: 1567.333324
  Inner table:  WEB_SALES  Alias: WEB_SALES
    resc: 4.000919  card: 36.945295  bytes:   deg: 1  resp: 4.000919
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     24 Total Rows:             37
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39067508
      Total Temp space used: 0
  SM join: Resc: 1572.334465  Resp: 1572.334465  [multiMatchCost=0.000000]
  Outer table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card 120.166840  bytes:   deg: 1  resp: 411.949216
  Inner table:  WEB_SALES  Alias: WEB_SALES
    resc: 4.000919  card: 36.945295  bytes:   deg: 1  resp: 4.000919
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.015917  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 415.966052  Resp: 415.966052  [multiMatchCost=0.000000]
HA Join
  HA cost: 415.966052  
     resc: 415.966052 resc_io: 415.000000 resc_cpu: 37732859
     resp: 415.966052 resp_io: 415.000000 resp_cpu: 37732859
Best:: JoinMethod: HashSemi
       Cost: 415.966052  Degree: 1  Resp: 415.966052  Card: 36.690903 Bytes: 
***********************
Best so far:  Table#: 1  cost: 411.949216  card: 120.166840  bytes: 1560.000000
              Table#: 0  cost: 415.966052  card: 36.690903  bytes: 925.000000
***********************
First K Rows: K = 1.00, N = 37.00
First K Rows: old pf = 0.5034667, new pf = 0.0332871
Access path analysis for DATE_DIM
***************************************
SINGLE TABLE ACCESS PATH (First K Rows)
  Single Table Cardinality Estimation for DATE_DIM[DATE_DIM] 
  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = TABLE
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 


 kkecdn: Single Table Predicate:"DATE_DIM"."D_YEAR"=2001
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY">=1
  Estimated selectivity: 1.000000 , endpoint value predicate, col: #9 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY"<=4
  Estimated selectivity: 0.329224 , endpoint value predicate, col: #9 
  Table: DATE_DIM  Alias: DATE_DIM
    Card: Original: 2432.000000  Rounded: 4  Computed: 4.000681  Non Adjusted: 4.000681
  Scan IO  Cost (Disk) =   16.000000
  Scan CPU Cost (Disk) =   1117113.440000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.004997 flag = 2048  ("DATE_DIM"."D_YEAR"=2001)
    io = NOCOST, cpu = 50.000000, sel = 0.329224 flag = 2048  ("DATE_DIM"."D_MOY"<=4)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("DATE_DIM"."D_MOY">=1)
  Total Scan IO  Cost  =   16.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 2432.000000 (#rows))
                       =   16.000000
  Total Scan CPU  Cost =   1117113.440000 (scan (Disk))
                         + 122407.626220 (cpu filter eval) (= 50.332083 (per row) * 2432.000000 (#rows))
                       =   1239521.066220
  Access Path: TableScan
    Cost:  16.031735  Resp: 16.031735  Degree: 0
      Cost_io: 16.000000  Cost_cpu: 1239521
      Resp_io: 16.000000  Resp_cpu: 1239521
  Best:: AccessPath: TableScan
         Cost: 16.031735  Degree: 1  Resp: 16.031735  Card: 4.000681  Bytes: 0.000000

First K Rows: old pf = 0.0541341, new pf = 0.8187781
Access path analysis for WEB_SALES
***************************************
SINGLE TABLE ACCESS PATH (First K Rows)
  Single Table Cardinality Estimation for WEB_SALES[WEB_SALES] 
  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = TABLE

 kkecdn: Single Table Predicate:"WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B1
  Estimated selectivity: 1.0271e-06 , col: #5 
  Table: WEB_SALES  Alias: WEB_SALES
    Card: Original: 29450795.000000  Rounded: 30  Computed: 30.250000  Non Adjusted: 30.250000
  Scan IO  Cost (Disk) =   183960.000000
  Scan CPU Cost (Disk) =   11610785662.639999
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000001 flag = 2064  ("WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B1)
  Total Scan IO  Cost  =   183960.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 29450795.000000 (#rows))
                       =   183960.000000
  Total Scan CPU  Cost =   11610785662.639999 (scan (Disk))
                         + 1472539750.000000 (cpu filter eval) (= 50.000000 (per row) * 29450795.000000 (#rows))
                       =   13083325412.639999
  Access Path: TableScan
    Cost:  184294.964657  Resp: 184294.964657  Degree: 0
      Cost_io: 183960.000000  Cost_cpu: 13083325413
      Resp_io: 183960.000000  Resp_cpu: 13083325413
  Access Path: index (index (FFS))
    Index: WEB_SALES_IDX2
    resc_io: 28967.000000  resc_cpu: 5768251794
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  29114.681145  Resp: 29114.681145  Degree: 1
      Cost_io: 28967.000000  Cost_cpu: 5768251794
      Resp_io: 28967.000000  Resp_cpu: 5768251794
 ****** Costing Index WEB_SALES_IDX2
  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = INDEX_FILTER

  Estimated selectivity: 1.0271e-06 , col: #5 
  Access Path: index (IndexOnly)
    Index: WEB_SALES_IDX2
    resc_io: 4.000000  resc_cpu: 34686
    ix_sel: 1.0271e-06  ix_sel_with_filters: 1.0271e-06 
    Cost: 4.000888  Resp: 4.000888  Degree: 1
  Best:: AccessPath: IndexRange
  Index: WEB_SALES_IDX2
         Cost: 4.000888  Degree: 1  Resp: 4.000888  Card: 30.250000  Bytes: 0.000000

First K Rows: unchanged join prefix len = 1
Join order[2]:  DATE_DIM[DATE_DIM]#1  WEB_SALES[WEB_SALES]#0
Join order aborted: cost > best first K rows plan
***********************
(newjo-stop-1) k:0, spcnt:0, perm:2, maxperm:1000

*********************************
Number of join permutations tried: 2
*********************************
*********************
PJE: Partial join eval conversion for query block SEL$3 (#5).
PJE: Table marked for partial join eval: DATE_DIM[DATE_DIM]#1
***********************
Enumerating distribution method (advanced)
--- Distribution method for 
join between WEB_SALES[WEB_SALES](serial) and DATE_DIM[DATE_DIM](serial); jm = 15; right side access path = IndexUnique
kkopqIsSerialJoin: serial NLJ: both inputs serial
---- serial NL-Join -> SERIAL

(newjo-save)    [1 0 ]
LORE: Or-Expansion validity checks failed on query block SEL$3 (#5) because Cost based OR expansion enabled
Transfer Optimizer annotations for query block SEL$3 (#5)
AP: Adaptive joins bypassed for query block SEL$3 due to disabled by adaptive join parameter
AutoDOP: Consider caching for WEB_SALES[WEB_SALES](obj#-1) 
cost:4.000745 blkSize:8192 objSize:829566.00 marObjSize:788087.70 bufSize:92026.00 affPercent:80 smallTab:NO affinitized:NO
kkecComputeAPDop: IO Dop: 0.000000 - CPU Dop: 0.000000
Replication not feasible for first input in join order
id=0 frofkks[i] (index start key) predicate="WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B1
id=0 frofkke[i] (index stop key) predicate="WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B1
Transfer optimizer annotations for WEB_SALES[WEB_SALES]
AutoDOP: Consider caching for DATE_DIM[DATE_DIM](obj#74171) 
cost:6.001225 blkSize:8192 objSize:1510.00 marObjSize:1434.50 bufSize:92026.00 affPercent:80 smallTab:YES affinitized:NO
kkecComputeAPDop: IO Dop: 0.000000 - CPU Dop: 0.000000
Replication not feasible based on distribution
id=0 frofkks[i] (index start key) predicate="WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK"
id=0 frofkke[i] (index stop key) predicate="WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK"
id=0 frofand predicate="DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY"<=4 AND "DATE_DIM"."D_MOY">=1
Transfer optimizer annotations for DATE_DIM[DATE_DIM]
Final cost for query block SEL$3 (#5) - First K Rows Plan:
  Best join order: 1
  Cost: 6.001225  Degree: 1  Card: 2.000000  Bytes: 975.000000
  Resc: 6.001225  Resc_io: 6.000000  Resc_cpu: 47849
  Resp: 6.001225  Resp_io: 6.000000  Resc_cpu: 47849
kkoqbc-subheap (delete addr=0x7f04720f3ac8, in-use=84136, alloc=98568)
kkoqbc-end:
        :
    call(in-use=2162976, alloc=2277312), compile(in-use=4301424, alloc=4439312), execution(in-use=72512, alloc=72984)

kkoqbc: finish optimizing query block SEL$3 (#5)
kkoqbc: optimizing query block SEL$4 (#4)
        
        :
    call(in-use=2162976, alloc=2277312), compile(in-use=4301424, alloc=4439312), execution(in-use=72512, alloc=72984)

kkoqbc-subheap (create addr=0x7f04720f3ac8)
****************
QUERY BLOCK TEXT
****************
SELECT
                    *
                FROM
                    catalog_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = cs_ship_customer_sk
                    AND cs_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$4 nbfros=2 flg=0
  fro(0): flg=0 objn=74185 hint_alias="CATALOG_SALES"@"SEL$4"
  fro(1): flg=0 objn=74171 hint_alias="DATE_DIM"@"SEL$4"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3255 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: DATE_DIM  Alias: DATE_DIM
  #Rows: 73049  SSZ: 0  LGR: 0  #Blks:  1510  AvgRowLen:  128.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): D_DATE_SK(NUMBER)
    AvgLen: 6 NDV: 73049 Nulls: 0 Density: 0.000014 Min: 2415022.000000 Max: 2488070.000000
  Column (#7): D_YEAR(NUMBER)
    AvgLen: 4 NDV: 201 Nulls: 0 Density: 0.000007 Min: 1900.000000 Max: 2100.000000
    Histogram: Freq  #Bkts: 201  UncompBkts: 73049  EndPtVals: 201  ActualVal: yes
  Column (#9): D_MOY(NUMBER)
    AvgLen: 3 NDV: 12 Nulls: 0 Density: 0.038666 Min: 1.000000 Max: 12.000000
    Histogram: Freq  #Bkts: 12  UncompBkts: 73049  EndPtVals: 12  ActualVal: yes
Index Stats::
  Index: D_DATE_PK_IDX  Col#: 1
  LVLS: 1  #LB: 163  #DK: 73049  LB/K: 1.00  DB/K: 1.00  CLUF: 1402.00  NRW: 73049.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table: CATALOG_SALES  Alias: CATALOG_SALES  (Using composite stats)
  #Rows: 72077400  SSZ: 0  LGR: 0  #Blks:  1645494  AvgRowLen:  168.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
Index Stats::
  Index: CATALOG_SALES_IDX2  Col#: 8 1
  LVLS: 3  #LB: 261734  #DK: 5997411  LB/K: 1.00  DB/K: 12.00  CLUF: 72077362.00  NRW: 72077400.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
  Index: CATALOG_SALES_PK_IDX  Col#: 16 18
  LVLS: 2  #LB: 249644  #DK: 71913105  LB/K: 1.00  DB/K: 1.00  CLUF: 71898009.00  NRW: 71913105.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
try to generate single-table filter predicates from ORs for query block SEL$4 (#4)
finally: "CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B1 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4

=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$4 (#4)
Applicable DS directives:
   dirid = 11267665714990475542, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74185)[8]}
   dirid = 13969931850241126217, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {C(74171)[7, 9]}
   dirid = 2090373381697137251, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {(74185)[]; F(74171)[]}
   dirid = 14483145493039253896, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {(74185)[]; (74171)[]}
Checking valid directives for the query block
  SPD: Return code in qosdDSDirSetup: NODIR, estType = QUERY_BLOCK
Return code in qosdSetupDirCtx4QB: EXISTS
=====================================
SPD: END context at query block level
=====================================
Access path analysis for CATALOG_SALES
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for CATALOG_SALES[CATALOG_SALES] 
  SPD: Return code in qosdDSDirSetup: NODIR, estType = TABLE

 kkecdn: Single Table Predicate:"CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B1
NOTE: ignoring histogram of column (CATALOG_SALES.CS_SHIP_CUSTOMER_SK)
      used only for incremental stats maintenance
  Column (#8): CS_SHIP_CUSTOMER_SK(NUMBER)
    AvgLen: 6 NDV: 1037120 Nulls: 0 Density: 0.000001 Min: 1.000000 Max: 1079999.000000
  Estimated selectivity: 9.6421e-07 , col: #8 
  Table: CATALOG_SALES  Alias: CATALOG_SALES
    Card: Original: 72077400.000000  Rounded: 69  Computed: 69.497647  Non Adjusted: 69.497647
  Scan IO  Cost (Disk) =   445656.000000
  Scan CPU Cost (Disk) =   32620732791.360001
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000001 flag = 2048  ("CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B1)
  Total Scan IO  Cost  =   445656.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 72077400.000000 (#rows))
                       =   445656.000000
  Total Scan CPU  Cost =   32620732791.360001 (scan (Disk))
                         + 3603870000.000000 (cpu filter eval) (= 50.000000 (per row) * 72077400.000000 (#rows))
                       =   36224602791.360001
  Access Path: TableScan
    Cost:  446583.437120  Resp: 446583.437120  Degree: 0
      Cost_io: 445656.000000  Cost_cpu: 36224602791
      Resp_io: 445656.000000  Resp_cpu: 36224602791
  Access Path: index (index (FFS))
    Index: CATALOG_SALES_IDX2
    resc_io: 70888.000000  resc_cpu: 14117080977
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  71249.431290  Resp: 71249.431290  Degree: 1
      Cost_io: 70888.000000  Cost_cpu: 14117080977
      Resp_io: 70888.000000  Resp_cpu: 14117080977
 ****** Costing Index CATALOG_SALES_IDX2
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER

  Estimated selectivity: 9.6421e-07 , col: #8 
  Access Path: index (IndexOnly)
    Index: CATALOG_SALES_IDX2
    resc_io: 4.000000  resc_cpu: 42486
    ix_sel: 9.6421e-07  ix_sel_with_filters: 9.6421e-07 
    Cost: 4.001088  Resp: 4.001088  Degree: 1
  Best:: AccessPath: IndexRange
  Index: CATALOG_SALES_IDX2
         Cost: 4.001088  Degree: 1  Resp: 4.001088  Card: 69.497647  Bytes: 0.000000

Access path analysis for DATE_DIM
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for DATE_DIM[DATE_DIM] 
  SPD: Directive valid: dirid = 13969931850241126217, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {C(74171)[7, 9]}
  SPD: Return code in qosdDSDirSetup: EXISTS, estType = TABLE
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 


 kkecdn: Single Table Predicate:"DATE_DIM"."D_YEAR"=2001
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY">=1
  Estimated selectivity: 1.000000 , endpoint value predicate, col: #9 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY"<=4
  Estimated selectivity: 0.329224 , endpoint value predicate, col: #9 
  Table: DATE_DIM  Alias: DATE_DIM
    Card: Original: 73049.000000  Rounded: 120  Computed: 120.166840  Non Adjusted: 120.166840
  Scan IO  Cost (Disk) =   411.000000
  Scan CPU Cost (Disk) =   33398564.400000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.004997 flag = 2048  ("DATE_DIM"."D_YEAR"=2001)
    io = NOCOST, cpu = 50.000000, sel = 0.329224 flag = 2048  ("DATE_DIM"."D_MOY"<=4)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("DATE_DIM"."D_MOY">=1)
  Total Scan IO  Cost  =   411.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 73049.000000 (#rows))
                       =   411.000000
  Total Scan CPU  Cost =   33398564.400000 (scan (Disk))
                         + 3676708.342003 (cpu filter eval) (= 50.332083 (per row) * 73049.000000 (#rows))
                       =   37075272.742003
  Access Path: TableScan
    Cost:  411.949216  Resp: 411.949216  Degree: 0
      Cost_io: 411.000000  Cost_cpu: 37075273
      Resp_io: 411.000000  Resp_cpu: 37075273
  Best:: AccessPath: TableScan
         Cost: 411.949216  Degree: 1  Resp: 411.949216  Card: 120.166840  Bytes: 0.000000

***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE: Checking validity of partial join eval on query block SEL$4 (#4)
PJE: Passed validity of partial join eval by query block SEL$4 (#4)
number: [0]
PJE: Partial join eval conversion for query block SEL$4 (#4).
PJE: Table marked for partial join eval: DATE_DIM[DATE_DIM]#1
***********************
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  CATALOG_SALES[CATALOG_SALES]#0  DATE_DIM[DATE_DIM]#1

***************
Now joining: DATE_DIM[DATE_DIM]#1
***************
NL Join
  Outer table: Card: 69.497647  Cost: 4.001088  Resp: 4.001088  Degree: 1  Bytes: 
Access path analysis for DATE_DIM
  Scan IO  Cost (Disk) =   408.985507
  Scan CPU Cost (Disk) =   33398564.400000
NOTE: ignoring histogram of column (CATALOG_SALES.CS_SOLD_DATE_SK)
      used only for incremental stats maintenance
  Column (#1): CS_SOLD_DATE_SK(NUMBER)
    AvgLen: 6 NDV: 1849 Nulls: 0 Density: 0.000541 Min: 2450815.000000 Max: 2452647.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.008264 flag = 2048  ("CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK")
    io = NOCOST, cpu = 50.000000, sel = 0.004997 flag = 2048  ("DATE_DIM"."D_YEAR"=2001)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("DATE_DIM"."D_MOY">=1)
    io = NOCOST, cpu = 50.000000, sel = 0.329224 flag = 2048  ("DATE_DIM"."D_MOY"<=4)
  Total Scan IO  Cost  =   408.985507 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 73049.000000 (#rows))
                       =   408.985507
  Total Scan CPU  Cost =   33398564.400000 (scan (Disk))
                         + 3670900.482165 (cpu filter eval) (= 50.252577 (per row) * 73049.000000 (#rows))
                       =   37069464.882165
  Inner table: DATE_DIM  Alias: DATE_DIM
  Access Path: TableScan
    NL Join:  Cost: 28289.486754  Resp: 28289.486754  Degree: 1
      Cost_io: 28224.000000  Cost_cpu: 2557835563
      Resp_io: 28224.000000  Resp_cpu: 2557835563
 ****** Costing Index D_DATE_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: D_DATE_PK_IDX
    resc_io: 1.000000  resc_cpu: 9382
    ix_sel: 1.3689e-05  ix_sel_with_filters: 1.3689e-05 
    NL Join (ordered): Cost: 73.017661  Resp: 73.017661  Degree: 1
      Cost_io: 73.000000  Cost_cpu: 689828
      Resp_io: 73.000000  Resp_cpu: 689828
 ****** Costing Index D_DATE_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 
  Estimated selectivity: 1.000000 , endpoint value predicate, col: #9 
  Estimated selectivity: 0.329224 , endpoint value predicate, col: #9 
  Access Path: index (AllEqUnique)
    Index: D_DATE_PK_IDX
    resc_io: 1.000000  resc_cpu: 9382
    ix_sel: 1.3689e-05  ix_sel_with_filters: 1.3689e-05 
    NL Join (ordered): Cost: 73.017661  Resp: 73.017661  Degree: 1
      Cost_io: 73.000000  Cost_cpu: 689828
      Resp_io: 73.000000  Resp_cpu: 689828

  Best NL cost: 73.017661
          resc: 73.017661  resc_io: 73.000000  resc_cpu: 689828
          resp: 73.017661  resp_io: 73.000000  resc_cpu: 689828
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Capping Semi Join Card of HJ/SMJ by inner = 69.019113
Capping Semi Join Card of HJ/SMJ (no post filters) by inner = 69.019113
Capping Semi Join Card of NL by inner = 69.019113
Capping Semi Join Card of without POSQ by inner = 69.019113
Capping Semi Join Card of non adjusted NSQ by inner = 69.019113
Semi Join Card (capped by inner join):  69.019113 = outer (69.497647) * inner (120.166840) * sel (0.008264)
Join Card - Rounded: 69 Computed: 69.019113
  Outer table:  CATALOG_SALES  Alias: CATALOG_SALES
    resc: 4.001088  card 69.497647  bytes:   deg: 1  resp: 4.001088
  Inner table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card: 120.166840  bytes:   deg: 1  resp: 411.949216
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     25 Total Rows:            120
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39096166
      Total Temp space used: 0
  SM join: Resc: 416.951260  Resp: 416.951260  [multiMatchCost=0.000000]
SM Join
  SM cost: 416.951260 
     resc: 416.951260 resc_io: 415.000000 resc_cpu: 76213924
     resp: 416.951260 resp_io: 415.000000 resp_cpu: 76213924
  Outer table:  CATALOG_SALES  Alias: CATALOG_SALES
    resc: 4.001088  card 69.497647  bytes:   deg: 1  resp: 4.001088
  Inner table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card: 120.166840  bytes:   deg: 1  resp: 411.949216
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.015934  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 415.966238  Resp: 415.966238  [multiMatchCost=0.000000]
HA Join
  HA cost: 415.966238  
     resc: 415.966238 resc_io: 415.000000 resc_cpu: 37740109
     resp: 415.966238 resp_io: 415.000000 resp_cpu: 37740109
Best:: JoinMethod: NestedLoopSemi
       Cost: 73.017661  Degree: 1  Resp: 73.017661  Card: 69.019113 Bytes: 
***********************
Best so far:  Table#: 0  cost: 4.001088  card: 69.497647  bytes: 828.000000
              Table#: 1  cost: 73.017661  card: 69.019113  bytes: 1725.000000
***********************
First K Rows: K = 1.00, N = 69.00
First K Rows: old pf = -1.0000000, new pf = 0.0431669
Access path analysis for CATALOG_SALES
***************************************
SINGLE TABLE ACCESS PATH (First K Rows)
  Single Table Cardinality Estimation for CATALOG_SALES[CATALOG_SALES] 
  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = TABLE

 kkecdn: Single Table Predicate:"CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B1
  Estimated selectivity: 1.0113e-06 , col: #8 
  Table: CATALOG_SALES  Alias: CATALOG_SALES
    Card: Original: 3111360.000000  Rounded: 3  Computed: 3.146554  Non Adjusted: 3.146554
  Scan IO  Cost (Disk) =   19239.000000
  Scan CPU Cost (Disk) =   1408137404.640000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000001 flag = 2064  ("CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B1)
  Total Scan IO  Cost  =   19239.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 3111360.000000 (#rows))
                       =   19239.000000
  Total Scan CPU  Cost =   1408137404.640000 (scan (Disk))
                         + 155568000.000000 (cpu filter eval) (= 50.000000 (per row) * 3111360.000000 (#rows))
                       =   1563705404.640000
  Access Path: TableScan
    Cost:  19279.034626  Resp: 19279.034626  Degree: 0
      Cost_io: 19239.000000  Cost_cpu: 1563705405
      Resp_io: 19239.000000  Resp_cpu: 1563705405
  Access Path: index (index (FFS))
    Index: CATALOG_SALES_IDX2
    resc_io: 3062.000000  resc_cpu: 609396351
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  3077.602015  Resp: 3077.602015  Degree: 1
      Cost_io: 3062.000000  Cost_cpu: 609396351
      Resp_io: 3062.000000  Resp_cpu: 609396351
 ****** Costing Index CATALOG_SALES_IDX2
  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = INDEX_FILTER

  Estimated selectivity: 1.0113e-06 , col: #8 
  Access Path: index (IndexOnly)
    Index: CATALOG_SALES_IDX2
    resc_io: 4.000000  resc_cpu: 29286
    ix_sel: 1.0113e-06  ix_sel_with_filters: 1.0113e-06 
    Cost: 4.000750  Resp: 4.000750  Degree: 1
  Best:: AccessPath: IndexRange
  Index: CATALOG_SALES_IDX2
         Cost: 4.000750  Degree: 1  Resp: 4.000750  Card: 3.146554  Bytes: 0.000000

First K Rows: old pf = -1.0000000, new pf = 0.6712889
Access path analysis for DATE_DIM
***************************************
SINGLE TABLE ACCESS PATH (First K Rows)
  Single Table Cardinality Estimation for DATE_DIM[DATE_DIM] 
  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = TABLE
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 


 kkecdn: Single Table Predicate:"DATE_DIM"."D_YEAR"=2001
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY">=1
  Estimated selectivity: 1.000000 , endpoint value predicate, col: #9 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY"<=4
  Estimated selectivity: 0.329224 , endpoint value predicate, col: #9 
  Table: DATE_DIM  Alias: DATE_DIM
    Card: Original: 49037.000000  Rounded: 81  Computed: 80.666694  Non Adjusted: 80.666694
  Scan IO  Cost (Disk) =   276.000000
  Scan CPU Cost (Disk) =   22422610.160000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.004997 flag = 2048  ("DATE_DIM"."D_YEAR"=2001)
    io = NOCOST, cpu = 50.000000, sel = 0.329224 flag = 2048  ("DATE_DIM"."D_MOY"<=4)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("DATE_DIM"."D_MOY">=1)
  Total Scan IO  Cost  =   276.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 49037.000000 (#rows))
                       =   276.000000
  Total Scan CPU  Cost =   22422610.160000 (scan (Disk))
                         + 2468134.361412 (cpu filter eval) (= 50.332083 (per row) * 49037.000000 (#rows))
                       =   24890744.521412
  Access Path: TableScan
    Cost:  276.637263  Resp: 276.637263  Degree: 0
      Cost_io: 276.000000  Cost_cpu: 24890745
      Resp_io: 276.000000  Resp_cpu: 24890745
  Best:: AccessPath: TableScan
         Cost: 276.637263  Degree: 1  Resp: 276.637263  Card: 80.666694  Bytes: 0.000000

First K Rows: unchanged join prefix len = 1
Join order[1]:  CATALOG_SALES[CATALOG_SALES]#0  DATE_DIM[DATE_DIM]#1

***************
Now joining: DATE_DIM[DATE_DIM]#1
***************
NL Join
  Outer table: Card: 3.146554  Cost: 4.000750  Resp: 4.000750  Degree: 1  Bytes: 
Access path analysis for DATE_DIM
  Scan IO  Cost (Disk) =   275.333333
  Scan CPU Cost (Disk) =   22422610.160000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.008264 flag = 2064  ("CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK")
    io = NOCOST, cpu = 50.000000, sel = 0.004997 flag = 2048  ("DATE_DIM"."D_YEAR"=2001)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("DATE_DIM"."D_MOY">=1)
    io = NOCOST, cpu = 50.000000, sel = 0.329224 flag = 2048  ("DATE_DIM"."D_MOY"<=4)
  Total Scan IO  Cost  =   275.333333 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 49037.000000 (#rows))
                       =   275.333333
  Total Scan CPU  Cost =   22422610.160000 (scan (Disk))
                         + 2464235.608207 (cpu filter eval) (= 50.252577 (per row) * 49037.000000 (#rows))
                       =   24886845.768207
  Inner table: DATE_DIM  Alias: DATE_DIM
  Access Path: TableScan
    NL Join:  Cost: 831.912239  Resp: 831.912239  Degree: 1
      Cost_io: 830.000000  Cost_cpu: 74689823
      Resp_io: 830.000000  Resp_cpu: 74689823
 ****** Costing Index D_DATE_PK_IDX
NOTE: ignoring histogram of column (CATALOG_SALES.CS_SOLD_DATE_SK)
      used only for incremental stats maintenance
  Column (#1): CS_SOLD_DATE_SK(NUMBER)
    AvgLen: 6 NDV: 1849 Nulls: 0 Density: 0.000541 Min: 2450815.000000 Max: 2452647.000000
  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: D_DATE_PK_IDX
    resc_io: 1.000000  resc_cpu: 9382
    ix_sel: 2.0393e-05  ix_sel_with_filters: 2.0393e-05 
    NL Join (ordered): Cost: 7.001470  Resp: 7.001470  Degree: 1
      Cost_io: 7.000000  Cost_cpu: 57431
      Resp_io: 7.000000  Resp_cpu: 57431
 ****** Costing Index D_DATE_PK_IDX
  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = INDEX_FILTER
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 
  Estimated selectivity: 1.000000 , endpoint value predicate, col: #9 
  Estimated selectivity: 0.329224 , endpoint value predicate, col: #9 
  Access Path: index (AllEqUnique)
    Index: D_DATE_PK_IDX
    resc_io: 1.000000  resc_cpu: 9382
    ix_sel: 2.0393e-05  ix_sel_with_filters: 2.0393e-05 
    NL Join (ordered): Cost: 7.001470  Resp: 7.001470  Degree: 1
      Cost_io: 7.000000  Cost_cpu: 57431
      Resp_io: 7.000000  Resp_cpu: 57431

  Best NL cost: 7.001470
          resc: 7.001470  resc_io: 7.000000  resc_cpu: 57431
          resp: 7.001470  resp_io: 7.000000  resc_cpu: 57431
  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = JOIN
Capping Semi Join Card of HJ/SMJ by inner = 3.133606
Capping Semi Join Card of HJ/SMJ (no post filters) by inner = 3.133606
Capping Semi Join Card of NL by inner = 3.133606
Capping Semi Join Card of without POSQ by inner = 3.133606
Capping Semi Join Card of non adjusted NSQ by inner = 3.133606
Semi Join Card (capped by inner join):  3.133606 = outer (3.146554) * inner (80.666694) * sel (0.012346)
Join Card - Rounded: 3 Computed: 3.133606
  Outer table:  CATALOG_SALES  Alias: CATALOG_SALES
    resc: 4.000750  card 3.146554  bytes:   deg: 1  resp: 4.000750
  Inner table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card: 120.166840  bytes:   deg: 1  resp: 411.949216
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     25 Total Rows:            120
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39096166
      Total Temp space used: 0
  SM join: Resc: 416.950922  Resp: 416.950922  [multiMatchCost=0.000000]
SM Join
  SM cost: 416.950922 
     resc: 416.950922 resc_io: 415.000000 resc_cpu: 76200724
     resp: 416.950922 resp_io: 415.000000 resp_cpu: 76200724
  Outer table:  CATALOG_SALES  Alias: CATALOG_SALES
    resc: 4.001088  card 69.497647  bytes:   deg: 1  resp: 4.001088
  Inner table:  DATE_DIM  Alias: DATE_DIM
    resc: 276.637263  card: 80.666694  bytes:   deg: 1  resp: 276.637263
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.015834  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 280.654185  Resp: 280.654185  [multiMatchCost=0.000000]
HA Join
  HA cost: 280.654185  
     resc: 280.654185 resc_io: 280.000000 resc_cpu: 25551680
     resp: 280.654185 resp_io: 280.000000 resp_cpu: 25551680
Best:: JoinMethod: NestedLoopSemi
       Cost: 7.001470  Degree: 1  Resp: 7.001470  Card: 3.133606 Bytes: 
***********************
Best so far:  Table#: 0  cost: 4.000750  card: 3.146554  bytes: 36.000000
              Table#: 1  cost: 7.001470  card: 3.133606  bytes: 75.000000
***********************
number: [1]
PJE: Partial join eval conversion for query block SEL$4 (#4).
PJE: Table marked for partial join eval: CATALOG_SALES[CATALOG_SALES]#0
***********************
number: [1]
PJE: Partial join eval conversion for query block SEL$4 (#4).
PJE: Table marked for partial join eval: CATALOG_SALES[CATALOG_SALES]#0
***********************
Join order[2]:  DATE_DIM[DATE_DIM]#1  CATALOG_SALES[CATALOG_SALES]#0

***************
Now joining: CATALOG_SALES[CATALOG_SALES]#0
***************
NL Join
  Outer table: Card: 120.166840  Cost: 411.949216  Resp: 411.949216  Degree: 1  Bytes: 
Access path analysis for CATALOG_SALES
  Scan IO  Cost (Disk) =   445654.633333
  Scan CPU Cost (Disk) =   32620732791.360001
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000001 flag = 2064  ("CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B1)
    io = NOCOST, cpu = 50.000000, sel = 0.008264 flag = 2064  ("CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK")
  Total Scan IO  Cost  =   445654.633333 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 72077400.000000 (#rows))
                       =   445654.633333
  Total Scan CPU  Cost =   32620732791.360001 (scan (Disk))
                         + 3603873644.635245 (cpu filter eval) (= 50.000051 (per row) * 72077400.000000 (#rows))
                       =   36224606435.995247
  Inner table: CATALOG_SALES  Alias: CATALOG_SALES
  Access Path: TableScan
    NL Join:  Cost: 53590260.414773  Resp: 53590260.414773  Degree: 1
      Cost_io: 53478967.000000  Cost_cpu: 4346989847592
      Resp_io: 53478967.000000  Resp_cpu: 4346989847592
  Access Path: index (index (FFS))
    Index: CATALOG_SALES_IDX2
    resc_io: 70886.300000  resc_cpu: 14117084622
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: CATALOG_SALES  Alias: CATALOG_SALES
  Access Path: index (FFS)
    NL Join:  Cost: 8550139.715222  Resp: 8550139.715222  Degree: 1
      Cost_io: 8506767.000000  Cost_cpu: 1694087229864
      Resp_io: 8506767.000000  Resp_cpu: 1694087229864
 ****** Costing Index CATALOG_SALES_IDX2
NOTE: ignoring histogram of column (CATALOG_SALES.CS_SOLD_DATE_SK)
      used only for incremental stats maintenance
  Column (#1): CS_SOLD_DATE_SK(NUMBER)
    AvgLen: 6 NDV: 1849 Nulls: 0 Density: 0.000541 Min: 2450815.000000 Max: 2452647.000000
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 1.6674e-07
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 1.6674e-07
  Estimated selectivity: 9.6421e-07 , col: #8 
  Access Path: index (AllEqJoinGuess)
    Index: CATALOG_SALES_IDX2
    resc_io: 3.000000  resc_cpu: 22414
    ix_sel: 1.3874e-08  ix_sel_with_filters: 1.3874e-08 
    NL Join : Cost: 772.018080  Resp: 772.018080  Degree: 1
      Cost_io: 771.000000  Cost_cpu: 39764991
      Resp_io: 771.000000  Resp_cpu: 39764991

  Best NL cost: 772.018080
          resc: 772.018080  resc_io: 771.000000  resc_cpu: 39764991
          resp: 772.018080  resp_io: 771.000000  resc_cpu: 39764991
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Capping Semi Join Card of HJ/SMJ by inner = 69.019113
Capping Semi Join Card of HJ/SMJ (no post filters) by inner = 69.019113
Capping Semi Join Card of NL by inner = 69.019113
Capping Semi Join Card of without POSQ by inner = 69.019113
Capping Semi Join Card of non adjusted NSQ by inner = 69.019113
Semi Join Card (capped by inner join):  69.019113 = outer (120.166840) * inner (69.497647) * sel (0.008264)
Join Card - Rounded: 69 Computed: 69.019113
  Outer table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card 120.166840  bytes:   deg: 1  resp: 411.949216
  Inner table:  CATALOG_SALES  Alias: CATALOG_SALES
    resc: 4.001088  card: 69.497647  bytes:   deg: 1  resp: 4.001088
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     25 Total Rows:            120
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39096166
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     24 Total Rows:             69
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39077813
      Total Temp space used: 0
  SM join: Resc: 417.951746  Resp: 417.951746  [multiMatchCost=0.000000]
SM Join
  SM cost: 417.951746 
     resc: 417.951746 resc_io: 415.000000 resc_cpu: 115291738
     resp: 417.951746 resp_io: 415.000000 resp_cpu: 115291738
SM Join (with index on outer)
 ****** Costing Index D_DATE_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (FullScan)
    Index: D_DATE_PK_IDX
    resc_io: 1566.000000  resc_cpu: 52078066
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1567.333324  Resp: 1567.333324  Degree: 1
  Outer table:  DATE_DIM  Alias: DATE_DIM
    resc: 1567.333324  card 120.166840  bytes:   deg: 1  resp: 1567.333324
  Inner table:  CATALOG_SALES  Alias: CATALOG_SALES
    resc: 4.001088  card: 69.497647  bytes:   deg: 1  resp: 4.001088
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     24 Total Rows:             69
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39077813
      Total Temp space used: 0
  SM join: Resc: 1572.334898  Resp: 1572.334898  [multiMatchCost=0.000000]
  Outer table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card 120.166840  bytes:   deg: 1  resp: 411.949216
  Inner table:  CATALOG_SALES  Alias: CATALOG_SALES
    resc: 4.001088  card: 69.497647  bytes:   deg: 1  resp: 4.001088
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.015999  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 415.966303  Resp: 415.966303  [multiMatchCost=0.000000]
HA Join
  HA cost: 415.966303  
     resc: 415.966303 resc_io: 415.000000 resc_cpu: 37742659
     resp: 415.966303 resp_io: 415.000000 resp_cpu: 37742659
Best:: JoinMethod: HashSemi
       Cost: 415.966303  Degree: 1  Resp: 415.966303  Card: 69.019113 Bytes: 
***********************
Best so far:  Table#: 1  cost: 411.949216  card: 120.166840  bytes: 1560.000000
              Table#: 0  cost: 415.966303  card: 69.019113  bytes: 1725.000000
***********************
First K Rows: K = 1.00, N = 69.00
First K Rows: old pf = 0.6712889, new pf = 0.0332871
Access path analysis for DATE_DIM
***************************************
SINGLE TABLE ACCESS PATH (First K Rows)
  Single Table Cardinality Estimation for DATE_DIM[DATE_DIM] 
  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = TABLE
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 


 kkecdn: Single Table Predicate:"DATE_DIM"."D_YEAR"=2001
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY">=1
  Estimated selectivity: 1.000000 , endpoint value predicate, col: #9 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY"<=4
  Estimated selectivity: 0.329224 , endpoint value predicate, col: #9 
  Table: DATE_DIM  Alias: DATE_DIM
    Card: Original: 2432.000000  Rounded: 4  Computed: 4.000681  Non Adjusted: 4.000681
  Scan IO  Cost (Disk) =   16.000000
  Scan CPU Cost (Disk) =   1117113.440000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.004997 flag = 2048  ("DATE_DIM"."D_YEAR"=2001)
    io = NOCOST, cpu = 50.000000, sel = 0.329224 flag = 2048  ("DATE_DIM"."D_MOY"<=4)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("DATE_DIM"."D_MOY">=1)
  Total Scan IO  Cost  =   16.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 2432.000000 (#rows))
                       =   16.000000
  Total Scan CPU  Cost =   1117113.440000 (scan (Disk))
                         + 122407.626220 (cpu filter eval) (= 50.332083 (per row) * 2432.000000 (#rows))
                       =   1239521.066220
  Access Path: TableScan
    Cost:  16.031735  Resp: 16.031735  Degree: 0
      Cost_io: 16.000000  Cost_cpu: 1239521
      Resp_io: 16.000000  Resp_cpu: 1239521
  Best:: AccessPath: TableScan
         Cost: 16.031735  Degree: 1  Resp: 16.031735  Card: 4.000681  Bytes: 0.000000

First K Rows: old pf = 0.0431669, new pf = 0.8705331
Access path analysis for CATALOG_SALES
***************************************
SINGLE TABLE ACCESS PATH (First K Rows)
  Single Table Cardinality Estimation for CATALOG_SALES[CATALOG_SALES] 
  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = TABLE

 kkecdn: Single Table Predicate:"CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B1
  Estimated selectivity: 9.6421e-07 , col: #8 
  Table: CATALOG_SALES  Alias: CATALOG_SALES
    Card: Original: 62745761.000000  Rounded: 61  Computed: 60.500001  Non Adjusted: 60.500001
  Scan IO  Cost (Disk) =   387959.000000
  Scan CPU Cost (Disk) =   28397427268.080002
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000001 flag = 2064  ("CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B1)
  Total Scan IO  Cost  =   387959.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 62745761.000000 (#rows))
                       =   387959.000000
  Total Scan CPU  Cost =   28397427268.080002 (scan (Disk))
                         + 3137288050.000000 (cpu filter eval) (= 50.000000 (per row) * 62745761.000000 (#rows))
                       =   31534715318.080002
  Access Path: TableScan
    Cost:  388766.364699  Resp: 388766.364699  Degree: 0
      Cost_io: 387959.000000  Cost_cpu: 31534715318
      Resp_io: 387959.000000  Resp_cpu: 31534715318
  Access Path: index (index (FFS))
    Index: CATALOG_SALES_IDX2
    resc_io: 61711.000000  resc_cpu: 12289392353
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  62025.638057  Resp: 62025.638057  Degree: 1
      Cost_io: 61711.000000  Cost_cpu: 12289392353
      Resp_io: 61711.000000  Resp_cpu: 12289392353
 ****** Costing Index CATALOG_SALES_IDX2
  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = INDEX_FILTER

  Estimated selectivity: 9.6421e-07 , col: #8 
  Access Path: index (IndexOnly)
    Index: CATALOG_SALES_IDX2
    resc_io: 4.000000  resc_cpu: 40686
    ix_sel: 9.6421e-07  ix_sel_with_filters: 9.6421e-07 
    Cost: 4.001042  Resp: 4.001042  Degree: 1
  Best:: AccessPath: IndexRange
  Index: CATALOG_SALES_IDX2
         Cost: 4.001042  Degree: 1  Resp: 4.001042  Card: 60.500001  Bytes: 0.000000

First K Rows: unchanged join prefix len = 1
Join order[2]:  DATE_DIM[DATE_DIM]#1  CATALOG_SALES[CATALOG_SALES]#0
Join order aborted: cost > best first K rows plan
***********************
(newjo-stop-1) k:0, spcnt:0, perm:2, maxperm:1000

*********************************
Number of join permutations tried: 2
*********************************
*********************
PJE: Partial join eval conversion for query block SEL$4 (#4).
PJE: Table marked for partial join eval: DATE_DIM[DATE_DIM]#1
***********************
Enumerating distribution method (advanced)
--- Distribution method for 
join between CATALOG_SALES[CATALOG_SALES](serial) and DATE_DIM[DATE_DIM](serial); jm = 15; right side access path = IndexUnique
kkopqIsSerialJoin: serial NLJ: both inputs serial
---- serial NL-Join -> SERIAL

(newjo-save)    [1 0 ]
LORE: Or-Expansion validity checks failed on query block SEL$4 (#4) because Cost based OR expansion enabled
Transfer Optimizer annotations for query block SEL$4 (#4)
AP: Adaptive joins bypassed for query block SEL$4 due to disabled by adaptive join parameter
AutoDOP: Consider caching for CATALOG_SALES[CATALOG_SALES](obj#-1) 
cost:4.000750 blkSize:8192 objSize:1645494.00 marObjSize:1563219.30 bufSize:92026.00 affPercent:80 smallTab:NO affinitized:NO
kkecComputeAPDop: IO Dop: 0.000000 - CPU Dop: 0.000000
Replication not feasible for first input in join order
id=0 frofkks[i] (index start key) predicate="CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B1
id=0 frofkke[i] (index stop key) predicate="CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B1
Transfer optimizer annotations for CATALOG_SALES[CATALOG_SALES]
AutoDOP: Consider caching for DATE_DIM[DATE_DIM](obj#74171) 
cost:7.001470 blkSize:8192 objSize:1510.00 marObjSize:1434.50 bufSize:92026.00 affPercent:80 smallTab:YES affinitized:NO
kkecComputeAPDop: IO Dop: 0.000000 - CPU Dop: 0.000000
Replication not feasible based on distribution
id=0 frofkks[i] (index start key) predicate="CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK"
id=0 frofkke[i] (index stop key) predicate="CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK"
id=0 frofand predicate="DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY"<=4 AND "DATE_DIM"."D_MOY">=1
Transfer optimizer annotations for DATE_DIM[DATE_DIM]
Final cost for query block SEL$4 (#4) - First K Rows Plan:
  Best join order: 1
  Cost: 7.001470  Degree: 1  Card: 3.000000  Bytes: 1800.000000
  Resc: 7.001470  Resc_io: 7.000000  Resc_cpu: 57431
  Resp: 7.001470  Resp_io: 7.000000  Resc_cpu: 57431
kkoqbc-subheap (delete addr=0x7f04720f3ac8, in-use=84136, alloc=98568)
kkoqbc-end:
        :
    call(in-use=2190888, alloc=2310048), compile(in-use=4330712, alloc=4439312), execution(in-use=73912, alloc=77040)

kkoqbc: finish optimizing query block SEL$4 (#4)
kkoqbc: optimizing query block SEL$2 (#3)
        
        :
    call(in-use=2190888, alloc=2310048), compile(in-use=4330712, alloc=4439312), execution(in-use=73912, alloc=77040)

kkoqbc-subheap (create addr=0x7f04720f3ac8)
****************
QUERY BLOCK TEXT
****************
SELECT
            *
        FROM
            store_sales ss,
            date_dim
        WHERE
            c.c_customer_sk = ss.ss_customer_sk
            AND ss_sold_date_sk = d_date_sk
            AND d_year = 2001
            AND d_moy BETWEEN 1 AND 1 + 3
            AND ( EXISTS (
                SELECT
                    *
                FROM
                    web_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = ws_bill_customer_sk
                    AND ws_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            )
                  OR EXISTS (
                SELECT
                    *
                FROM
                    catalog_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = cs_ship_customer_sk
                    AND cs_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            ) )
    
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$2 nbfros=2 flg=0
  fro(0): flg=0 objn=74171 hint_alias="DATE_DIM"@"SEL$2"
  fro(1): flg=0 objn=74191 hint_alias="SS"@"SEL$2"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3255 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: DATE_DIM  Alias: DATE_DIM
  #Rows: 73049  SSZ: 0  LGR: 0  #Blks:  1510  AvgRowLen:  128.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): D_DATE_SK(NUMBER)
    AvgLen: 6 NDV: 73049 Nulls: 0 Density: 0.000014 Min: 2415022.000000 Max: 2488070.000000
  Column (#7): D_YEAR(NUMBER)
    AvgLen: 4 NDV: 201 Nulls: 0 Density: 0.000007 Min: 1900.000000 Max: 2100.000000
    Histogram: Freq  #Bkts: 201  UncompBkts: 73049  EndPtVals: 201  ActualVal: yes
  Column (#9): D_MOY(NUMBER)
    AvgLen: 3 NDV: 12 Nulls: 0 Density: 0.038666 Min: 1.000000 Max: 12.000000
    Histogram: Freq  #Bkts: 12  UncompBkts: 73049  EndPtVals: 12  ActualVal: yes
Index Stats::
  Index: D_DATE_PK_IDX  Col#: 1
  LVLS: 1  #LB: 163  #DK: 73049  LB/K: 1.00  DB/K: 1.00  CLUF: 1402.00  NRW: 73049.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table: STORE_SALES  Alias: SS  (Using composite stats)
  #Rows: 144020200  SSZ: 0  LGR: 0  #Blks:  2304802  AvgRowLen:  117.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
Index Stats::
  Index: STORE_SALES_IDX2  Col#: 4 1
  LVLS: 3  #LB: 522970  #DK: 11965122  LB/K: 1.00  DB/K: 12.00  CLUF: 143898920.00  NRW: 144020200.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
  Index: STORE_SALES_PK_IDX  Col#: 3 10
  LVLS: 3  #LB: 497464  #DK: 141527398  LB/K: 1.00  DB/K: 1.00  CLUF: 141365556.00  NRW: 141527398.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
try to generate single-table filter predicates from ORs for query block SEL$2 (#3)
finally: "SS"."SS_CUSTOMER_SK"=:B1 AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY">=1 AND "DATE_DIM"."D_MOY"<=4 AND ( EXISTS (SELECT 0 FROM "WEB_SALES" "WEB_SALES","DATE_DIM" "DATE_DIM" WHERE "WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B2 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY"<=4 AND "DATE_DIM"."D_MOY">=1) OR  EXISTS (SELECT 0 FROM "CATALOG_SALES" "CATALOG_SALES","DATE_DIM" "DATE_DIM" WHERE "CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B3 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY"<=4 AND "DATE_DIM"."D_MOY">=1))

=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$2 (#3)
Applicable DS directives:
   dirid = 10827845680942532126, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {F(74191)[]; F(74171)[]}
   dirid = 7660518587836633700, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74191)[4]}
   dirid = 13969931850241126217, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {C(74171)[7, 9]}
   dirid = 2361553282592865451, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {(74191)[]; F(74171)[]}
   dirid = 12943986683386070018, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {(74191)[]; (74171)[]}
Checking valid directives for the query block
  SPD: Return code in qosdDSDirSetup: NODIR, estType = QUERY_BLOCK
Return code in qosdSetupDirCtx4QB: EXISTS
=====================================
SPD: END context at query block level
=====================================
Access path analysis for STORE_SALES
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for STORE_SALES[SS] 
  SPD: Return code in qosdDSDirSetup: NODIR, estType = TABLE

 kkecdn: Single Table Predicate:"SS"."SS_CUSTOMER_SK"=:B1
NOTE: ignoring histogram of column (STORE_SALES.SS_CUSTOMER_SK)
      used only for incremental stats maintenance
  Column (#4): SS_CUSTOMER_SK(NUMBER)
    AvgLen: 6 NDV: 1039371 Nulls: 0 Density: 0.000001 Min: 1.000000 Max: 1079999.000000
  Estimated selectivity: 9.6212e-07 , col: #4 
  Table: STORE_SALES  Alias: SS
    Card: Original: 144020200.000000  Rounded: 139  Computed: 138.564767  Non Adjusted: 138.564767
  Scan IO  Cost (Disk) =   624219.000000
  Scan CPU Cost (Disk) =   46657751154.880005
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000001 flag = 2048  ("SS"."SS_CUSTOMER_SK"=:B1)
  Total Scan IO  Cost  =   624219.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 144020200.000000 (#rows))
                       =   624219.000000
  Total Scan CPU  Cost =   46657751154.880005 (scan (Disk))
                         + 7201010000.000000 (cpu filter eval) (= 50.000000 (per row) * 144020200.000000 (#rows))
                       =   53858761154.880005
  Access Path: TableScan
    Cost:  625597.914066  Resp: 625597.914066  Degree: 0
      Cost_io: 624219.000000  Cost_cpu: 53858761155
      Resp_io: 624219.000000  Resp_cpu: 53858761155
  Access Path: index (index (FFS))
    Index: STORE_SALES_IDX2
    resc_io: 141639.000000  resc_cpu: 28207733477
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  142361.185947  Resp: 142361.185947  Degree: 1
      Cost_io: 141639.000000  Cost_cpu: 28207733477
      Resp_io: 141639.000000  Resp_cpu: 28207733477
 ****** Costing Index STORE_SALES_IDX2
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER

  Estimated selectivity: 9.6212e-07 , col: #4 
  Access Path: index (IndexOnly)
    Index: STORE_SALES_IDX2
    resc_io: 4.000000  resc_cpu: 56286
    ix_sel: 9.6212e-07  ix_sel_with_filters: 9.6212e-07 
    Cost: 4.001441  Resp: 4.001441  Degree: 1
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: IndexRange
  Index: STORE_SALES_IDX2
         Cost: 4.001441  Degree: 1  Resp: 4.001441  Card: 138.564767  Bytes: 0.000000

Access path analysis for DATE_DIM
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for DATE_DIM[DATE_DIM] 
  SPD: Directive valid: dirid = 13969931850241126217, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {C(74171)[7, 9]}
  SPD: Return code in qosdDSDirSetup: EXISTS, estType = TABLE
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 


 kkecdn: Single Table Predicate:"DATE_DIM"."D_YEAR"=2001
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY">=1
  Estimated selectivity: 1.000000 , endpoint value predicate, col: #9 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY"<=4
  Estimated selectivity: 0.329224 , endpoint value predicate, col: #9 
  Table: DATE_DIM  Alias: DATE_DIM
    Card: Original: 73049.000000  Rounded: 120  Computed: 120.166840  Non Adjusted: 120.166840
  Scan IO  Cost (Disk) =   411.000000
  Scan CPU Cost (Disk) =   33398564.400000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.004997 flag = 2048  ("DATE_DIM"."D_YEAR"=2001)
    io = NOCOST, cpu = 50.000000, sel = 0.329224 flag = 2048  ("DATE_DIM"."D_MOY"<=4)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("DATE_DIM"."D_MOY">=1)
  Total Scan IO  Cost  =   411.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 73049.000000 (#rows))
                       =   411.000000
  Total Scan CPU  Cost =   33398564.400000 (scan (Disk))
                         + 3676708.342003 (cpu filter eval) (= 50.332083 (per row) * 73049.000000 (#rows))
                       =   37075272.742003
  Access Path: TableScan
    Cost:  411.949216  Resp: 411.949216  Degree: 0
      Cost_io: 411.000000  Cost_cpu: 37075273
      Resp_io: 411.000000  Resp_cpu: 37075273
  ****** trying bitmap/domain indexes ******
 ****** Costing Index D_DATE_PK_IDX
  Access Path: index (FullScan)
    Index: D_DATE_PK_IDX
    resc_io: 164.000000  resc_cpu: 15777716
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 164.403948  Resp: 164.403948  Degree: 0
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: TableScan
         Cost: 411.949216  Degree: 1  Resp: 411.949216  Card: 120.166840  Bytes: 0.000000

***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE: Checking validity of partial join eval on query block SEL$2 (#3)
PJE: Passed validity of partial join eval by query block SEL$2 (#3)
number: [0]
PJE: Partial join eval conversion for query block SEL$2 (#3).
PJE: Table marked for partial join eval: STORE_SALES[SS]#1
***********************
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  DATE_DIM[DATE_DIM]#0  STORE_SALES[SS]#1

***************
Now joining: STORE_SALES[SS]#1
***************
NL Join
  Outer table: Card: 120.166840  Cost: 411.949216  Resp: 411.949216  Degree: 1  Bytes: 
Access path analysis for STORE_SALES
  Scan IO  Cost (Disk) =   624217.216667
  Scan CPU Cost (Disk) =   46657751154.880005
NOTE: ignoring histogram of column (STORE_SALES.SS_SOLD_DATE_SK)
      used only for incremental stats maintenance
  Column (#1): SS_SOLD_DATE_SK(NUMBER)
    AvgLen: 6 NDV: 1849 Nulls: 0 Density: 0.000541 Min: 2450816.000000 Max: 2452651.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000001 flag = 2064  ("SS"."SS_CUSTOMER_SK"=:B1)
    io = NOCOST, cpu = 50.000000, sel = 0.007463 flag = 2048  ("SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK")
  Total Scan IO  Cost  =   624217.216667 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 144020200.000000 (#rows))
                       =   624217.216667
  Total Scan CPU  Cost =   46657751154.880005 (scan (Disk))
                         + 7201016928.238328 (cpu filter eval) (= 50.000048 (per row) * 144020200.000000 (#rows))
                       =   53858768083.118332
  Inner table: STORE_SALES  Alias: SS
  Access Path: TableScan
    NL Join:  Cost: 75071947.658387  Resp: 75071947.658387  Degree: 1
      Cost_io: 74906477.000000  Cost_cpu: 6463089245247
      Resp_io: 74906477.000000  Resp_cpu: 6463089245247
  Access Path: index (index (FFS))
    Index: STORE_SALES_IDX2
    resc_io: 141637.716667  resc_cpu: 28207740405
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: STORE_SALES  Alias: SS
  Access Path: index (FFS)
    NL Join:  Cost: 17083600.284196  Resp: 17083600.284196  Degree: 1
      Cost_io: 16996937.000000  Cost_cpu: 3384965923877
      Resp_io: 16996937.000000  Resp_cpu: 3384965923877
 ****** Costing Index STORE_SALES_IDX2
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 8.3576e-08
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 8.3576e-08
  Estimated selectivity: 9.6212e-07 , col: #4 
  Access Path: index (AllEqJoinGuess)
    Index: STORE_SALES_IDX2
    resc_io: 3.000000  resc_cpu: 22414
    ix_sel: 6.9435e-09  ix_sel_with_filters: 6.9435e-09 
    NL Join : Cost: 772.018080  Resp: 772.018080  Degree: 1
      Cost_io: 771.000000  Cost_cpu: 39764991
      Resp_io: 771.000000  Resp_cpu: 39764991
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 772.018080
          resc: 772.018080  resc_io: 771.000000  resc_cpu: 39764991
          resp: 772.018080  resp_io: 771.000000  resc_cpu: 39764991
  SPD: Directive valid: dirid = 10827845680942532126, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {F(74191)[]; F(74171)[]}
  SPD: Return code in qosdDSDirSetup: EXISTS, estType = JOIN
Semi Join Card:  120.166840 = outer (120.166840) * sel (1.000000)
Join Card - Rounded: 120 Computed: 120.166840
  Outer table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card 120.166840  bytes:   deg: 1  resp: 411.949216
  Inner table:  STORE_SALES  Alias: SS
    resc: 4.001441  card: 138.564767  bytes:   deg: 1  resp: 4.001441
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     25 Total Rows:            120
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39096166
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     24 Total Rows:            139
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39103407
      Total Temp space used: 0
  SM join: Resc: 417.952755  Resp: 417.952755  [multiMatchCost=0.000000]
SM Join
  SM cost: 417.952755 
     resc: 417.952755 resc_io: 415.000000 resc_cpu: 115331131
     resp: 417.952755 resp_io: 415.000000 resp_cpu: 115331131
SM Join (with index on outer)
 ****** Costing Index D_DATE_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (FullScan)
    Index: D_DATE_PK_IDX
    resc_io: 1566.000000  resc_cpu: 52083873
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1567.333473  Resp: 1567.333473  Degree: 1
  Outer table:  DATE_DIM  Alias: DATE_DIM
    resc: 1567.333473  card 120.166840  bytes:   deg: 1  resp: 1567.333473
  Inner table:  STORE_SALES  Alias: SS
    resc: 4.001441  card: 138.564767  bytes:   deg: 1  resp: 4.001441
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     24 Total Rows:            139
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39103407
      Total Temp space used: 0
  SM join: Resc: 1572.336055  Resp: 1572.336055  [multiMatchCost=0.000000]
  Outer table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card 120.166840  bytes:   deg: 1  resp: 411.949216
  Inner table:  STORE_SALES  Alias: SS
    resc: 4.001441  card: 138.564767  bytes:   deg: 1  resp: 4.001441
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016178  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 415.966836  Resp: 415.966836  [multiMatchCost=0.000000]
HA Join
  HA cost: 415.966836  
     resc: 415.966836 resc_io: 415.000000 resc_cpu: 37763459
     resp: 415.966836 resp_io: 415.000000 resp_cpu: 37763459
Best:: JoinMethod: HashSemi
       Cost: 415.966836  Degree: 1  Resp: 415.966836  Card: 120.166840 Bytes: 
***********************
Best so far:  Table#: 0  cost: 411.949216  card: 120.166840  bytes: 1560.000000
              Table#: 1  cost: 415.966836  card: 120.166840  bytes: 3000.000000
***********************
kkoaccsqf: Current query block SEL$2 (#3) is serial
kkoaccsqf: correlated subquery query block SEL$3 (#5) in filter               : serial
First K Rows: K = 1.00, N = 120.00
First K Rows: old pf = -1.0000000, new pf = 0.0166435
Access path analysis for DATE_DIM
***************************************
SINGLE TABLE ACCESS PATH (First K Rows)
  Single Table Cardinality Estimation for DATE_DIM[DATE_DIM] 
  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = TABLE
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 


 kkecdn: Single Table Predicate:"DATE_DIM"."D_YEAR"=2001
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY">=1
  Estimated selectivity: 1.000000 , endpoint value predicate, col: #9 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY"<=4
  Estimated selectivity: 0.329224 , endpoint value predicate, col: #9 
  Table: DATE_DIM  Alias: DATE_DIM
    Card: Original: 1216.000000  Rounded: 2  Computed: 2.000341  Non Adjusted: 2.000341
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   562117.440000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.004997 flag = 2048  ("DATE_DIM"."D_YEAR"=2001)
    io = NOCOST, cpu = 50.000000, sel = 0.329224 flag = 2048  ("DATE_DIM"."D_MOY"<=4)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("DATE_DIM"."D_MOY">=1)
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 1216.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   562117.440000 (scan (Disk))
                         + 61203.813110 (cpu filter eval) (= 50.332083 (per row) * 1216.000000 (#rows))
                       =   623321.253110
  Access Path: TableScan
    Cost:  9.015959  Resp: 9.015959  Degree: 0
      Cost_io: 9.000000  Cost_cpu: 623321
      Resp_io: 9.000000  Resp_cpu: 623321
  ****** trying bitmap/domain indexes ******
 ****** Costing Index D_DATE_PK_IDX
  Access Path: index (FullScan)
    Index: D_DATE_PK_IDX
    resc_io: 4.000000  resc_cpu: 271686
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 4.006956  Resp: 4.006956  Degree: 0
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: TableScan
         Cost: 9.015959  Degree: 1  Resp: 9.015959  Card: 2.000341  Bytes: 0.000000

First K Rows: old pf = -1.0000000, new pf = 1.0000000
Access path analysis for STORE_SALES
***************************************
SINGLE TABLE ACCESS PATH (First K Rows)
  Single Table Cardinality Estimation for STORE_SALES[SS] 
  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = TABLE

 kkecdn: Single Table Predicate:"SS"."SS_CUSTOMER_SK"=:B1
  Estimated selectivity: 9.6212e-07 , col: #4 
  Table: STORE_SALES  Alias: SS
    Card: Original: 144020200.000000  Rounded: 139  Computed: 138.564767  Non Adjusted: 138.564767
  Scan IO  Cost (Disk) =   624219.000000
  Scan CPU Cost (Disk) =   46657751154.880005
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000001 flag = 2064  ("SS"."SS_CUSTOMER_SK"=:B1)
  Total Scan IO  Cost  =   624219.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 144020200.000000 (#rows))
                       =   624219.000000
  Total Scan CPU  Cost =   46657751154.880005 (scan (Disk))
                         + 7201010000.000000 (cpu filter eval) (= 50.000000 (per row) * 144020200.000000 (#rows))
                       =   53858761154.880005
  Access Path: TableScan
    Cost:  625597.914066  Resp: 625597.914066  Degree: 0
      Cost_io: 624219.000000  Cost_cpu: 53858761155
      Resp_io: 624219.000000  Resp_cpu: 53858761155
  Access Path: index (index (FFS))
    Index: STORE_SALES_IDX2
    resc_io: 141639.000000  resc_cpu: 28207733477
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  142361.185947  Resp: 142361.185947  Degree: 1
      Cost_io: 141639.000000  Cost_cpu: 28207733477
      Resp_io: 141639.000000  Resp_cpu: 28207733477
 ****** Costing Index STORE_SALES_IDX2
  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = INDEX_FILTER

  Estimated selectivity: 9.6212e-07 , col: #4 
  Access Path: index (IndexOnly)
    Index: STORE_SALES_IDX2
    resc_io: 4.000000  resc_cpu: 56286
    ix_sel: 9.6212e-07  ix_sel_with_filters: 9.6212e-07 
    Cost: 4.001441  Resp: 4.001441  Degree: 1
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: IndexRange
  Index: STORE_SALES_IDX2
         Cost: 4.001441  Degree: 1  Resp: 4.001441  Card: 138.564767  Bytes: 0.000000

First K Rows: unchanged join prefix len = 1
Join order[1]:  DATE_DIM[DATE_DIM]#0  STORE_SALES[SS]#1

***************
Now joining: STORE_SALES[SS]#1
***************
NL Join
  Outer table: Card: 2.000341  Cost: 9.015959  Resp: 9.015959  Degree: 1  Bytes: 
Access path analysis for STORE_SALES
  Scan IO  Cost (Disk) =   624218.000000
  Scan CPU Cost (Disk) =   46657751154.880005
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000001 flag = 2064  ("SS"."SS_CUSTOMER_SK"=:B1)
    io = NOCOST, cpu = 50.000000, sel = 0.007463 flag = 2064  ("SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK")
  Total Scan IO  Cost  =   624218.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 144020200.000000 (#rows))
                       =   624218.000000
  Total Scan CPU  Cost =   46657751154.880005 (scan (Disk))
                         + 7201016928.238328 (cpu filter eval) (= 50.000048 (per row) * 144020200.000000 (#rows))
                       =   53858768083.118332
  Inner table: STORE_SALES  Alias: SS
  Access Path: TableScan
    NL Join:  Cost: 1251202.844445  Resp: 1251202.844445  Degree: 1
      Cost_io: 1248445.000000  Cost_cpu: 107718159487
      Resp_io: 1248445.000000  Resp_cpu: 107718159487
  Access Path: index (index (FFS))
    Index: STORE_SALES_IDX2
    resc_io: 141638.500000  resc_cpu: 28207740405
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: STORE_SALES  Alias: SS
  Access Path: index (FFS)
    NL Join:  Cost: 284730.388208  Resp: 284730.388208  Degree: 1
      Cost_io: 283286.000000  Cost_cpu: 56416104131
      Resp_io: 283286.000000  Resp_cpu: 56416104131
 ****** Costing Index STORE_SALES_IDX2
NOTE: ignoring histogram of column (STORE_SALES.SS_SOLD_DATE_SK)
      used only for incremental stats maintenance
  Column (#1): SS_SOLD_DATE_SK(NUMBER)
    AvgLen: 6 NDV: 1849 Nulls: 0 Density: 0.000541 Min: 2450816.000000 Max: 2452651.000000
  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 8.3576e-08
  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 8.3576e-08
  Estimated selectivity: 9.6212e-07 , col: #4 
  Access Path: index (AllEqJoinGuess)
    Index: STORE_SALES_IDX2
    resc_io: 3.000000  resc_cpu: 22414
    ix_sel: 6.9435e-09  ix_sel_with_filters: 6.9435e-09 
    NL Join : Cost: 15.017106  Resp: 15.017106  Degree: 1
      Cost_io: 15.000000  Cost_cpu: 668150
      Resp_io: 15.000000  Resp_cpu: 668150
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 15.017106
          resc: 15.017106  resc_io: 15.000000  resc_cpu: 668150
          resp: 15.017106  resp_io: 15.000000  resc_cpu: 668150
  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = JOIN
Semi Join Card:  2.000341 = outer (2.000341) * sel (1.000000)
Join Card - Rounded: 2 Computed: 2.000341
  Outer table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card 120.166840  bytes:   deg: 1  resp: 411.949216
  Inner table:  STORE_SALES  Alias: SS
    resc: 4.001441  card: 138.564767  bytes:   deg: 1  resp: 4.001441
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     25 Total Rows:            120
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39096166
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     24 Total Rows:            139
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39103407
      Total Temp space used: 0
  SM join: Resc: 417.952755  Resp: 417.952755  [multiMatchCost=0.000000]
SM Join
  SM cost: 417.952755 
     resc: 417.952755 resc_io: 415.000000 resc_cpu: 115331131
     resp: 417.952755 resp_io: 415.000000 resp_cpu: 115331131
SM Join (with index on outer)
 ****** Costing Index D_DATE_PK_IDX
  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = INDEX_FILTER
  Access Path: index (FullScan)
    Index: D_DATE_PK_IDX
    resc_io: 28.000000  resc_cpu: 880764
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 28.022550  Resp: 28.022550  Degree: 1
  Outer table:  DATE_DIM  Alias: DATE_DIM
    resc: 28.022550  card 2.000341  bytes:   deg: 1  resp: 28.022550
  Inner table:  STORE_SALES  Alias: SS
    resc: 4.001441  card: 138.564767  bytes:   deg: 1  resp: 4.001441
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     24 Total Rows:            139
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39103407
      Total Temp space used: 0
  SM join: Resc: 33.025132  Resp: 33.025132  [multiMatchCost=0.000000]
  Outer table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card 120.166840  bytes:   deg: 1  resp: 411.949216
  Inner table:  STORE_SALES  Alias: SS
    resc: 4.001441  card: 138.564767  bytes:   deg: 1  resp: 4.001441
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016178  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 415.966836  Resp: 415.966836  [multiMatchCost=0.000000]
HA Join
  HA cost: 415.966836  
     resc: 415.966836 resc_io: 415.000000 resc_cpu: 37763459
     resp: 415.966836 resp_io: 415.000000 resp_cpu: 37763459
Best:: JoinMethod: NestedLoopSemi
       Cost: 15.017106  Degree: 1  Resp: 15.017106  Card: 2.000341 Bytes: 
***********************
Best so far:  Table#: 0  cost: 9.015959  card: 2.000341  bytes: 26.000000
              Table#: 1  cost: 15.017106  card: 2.000341  bytes: 50.000000
***********************
number: [1]
PJE: Partial join eval conversion for query block SEL$2 (#3).
PJE: Table marked for partial join eval: DATE_DIM[DATE_DIM]#0
***********************
number: [1]
PJE: Partial join eval conversion for query block SEL$2 (#3).
PJE: Table marked for partial join eval: DATE_DIM[DATE_DIM]#0
***********************
Join order[2]:  STORE_SALES[SS]#1  DATE_DIM[DATE_DIM]#0

***************
Now joining: DATE_DIM[DATE_DIM]#0
***************
NL Join
  Outer table: Card: 138.564767  Cost: 4.001441  Resp: 4.001441  Degree: 1  Bytes: 
Access path analysis for DATE_DIM
  Scan IO  Cost (Disk) =   408.971223
  Scan CPU Cost (Disk) =   33398564.400000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.007463 flag = 2064  ("SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK")
    io = NOCOST, cpu = 50.000000, sel = 0.004997 flag = 2048  ("DATE_DIM"."D_YEAR"=2001)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("DATE_DIM"."D_MOY">=1)
    io = NOCOST, cpu = 50.000000, sel = 0.329224 flag = 2048  ("DATE_DIM"."D_MOY"<=4)
  Total Scan IO  Cost  =   408.971223 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 73049.000000 (#rows))
                       =   408.971223
  Total Scan CPU  Cost =   33398564.400000 (scan (Disk))
                         + 3670881.032403 (cpu filter eval) (= 50.252311 (per row) * 73049.000000 (#rows))
                       =   37069445.432403
  Inner table: DATE_DIM  Alias: DATE_DIM
  Access Path: TableScan
    NL Join:  Cost: 56982.921772  Resp: 56982.921772  Degree: 1
      Cost_io: 56851.000000  Cost_cpu: 5152709201
      Resp_io: 56851.000000  Resp_cpu: 5152709201
 ****** Costing Index D_DATE_PK_IDX
NOTE: ignoring histogram of column (STORE_SALES.SS_SOLD_DATE_SK)
      used only for incremental stats maintenance
  Column (#1): SS_SOLD_DATE_SK(NUMBER)
    AvgLen: 6 NDV: 1849 Nulls: 0 Density: 0.000541 Min: 2450816.000000 Max: 2452651.000000
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: D_DATE_PK_IDX
    resc_io: 1.000000  resc_cpu: 9382
    ix_sel: 1.3689e-05  ix_sel_with_filters: 1.3689e-05 
    NL Join (ordered): Cost: 143.034828  Resp: 143.034828  Degree: 1
      Cost_io: 143.000000  Cost_cpu: 1360352
      Resp_io: 143.000000  Resp_cpu: 1360352
 ****** Costing Index D_DATE_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 
  Estimated selectivity: 1.000000 , endpoint value predicate, col: #9 
  Estimated selectivity: 0.329224 , endpoint value predicate, col: #9 
  Access Path: index (AllEqUnique)
    Index: D_DATE_PK_IDX
    resc_io: 1.000000  resc_cpu: 9382
    ix_sel: 1.3689e-05  ix_sel_with_filters: 1.3689e-05 
    NL Join (ordered): Cost: 143.034828  Resp: 143.034828  Degree: 1
      Cost_io: 143.000000  Cost_cpu: 1360352
      Resp_io: 143.000000  Resp_cpu: 1360352
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 143.034828
          resc: 143.034828  resc_io: 143.000000  resc_cpu: 1360352
          resp: 143.034828  resp_io: 143.000000  resc_cpu: 1360352
  SPD: Directive valid: dirid = 10827845680942532126, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {F(74191)[]; F(74171)[]}
  SPD: Return code in qosdDSDirSetup: EXISTS, estType = JOIN
Capping Semi Join Card of HJ/SMJ by inner = 124.260374
Capping Semi Join Card of HJ/SMJ (no post filters) by inner = 124.260374
Capping Semi Join Card of NL by inner = 124.260374
Capping Semi Join Card of without POSQ by inner = 124.260374
Capping Semi Join Card of non adjusted NSQ by inner = 124.260374
Semi Join Card (capped by inner join):  124.260374 = outer (138.564767) * inner (120.166840) * sel (0.007463)
Join Card - Rounded: 124 Computed: 124.260374
  Outer table:  STORE_SALES  Alias: SS
    resc: 4.001441  card 138.564767  bytes:   deg: 1  resp: 4.001441
  Inner table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card: 120.166840  bytes:   deg: 1  resp: 411.949216
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     25 Total Rows:            120
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39096166
      Total Temp space used: 0
  SM join: Resc: 416.951613  Resp: 416.951613  [multiMatchCost=0.000000]
SM Join
  SM cost: 416.951613 
     resc: 416.951613 resc_io: 415.000000 resc_cpu: 76227724
     resp: 416.951613 resp_io: 415.000000 resp_cpu: 76227724
  Outer table:  STORE_SALES  Alias: SS
    resc: 4.001441  card 138.564767  bytes:   deg: 1  resp: 4.001441
  Inner table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card: 120.166840  bytes:   deg: 1  resp: 411.949216
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016202  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 415.966860  Resp: 415.966860  [multiMatchCost=0.000000]
HA Join
  HA cost: 415.966860  
     resc: 415.966860 resc_io: 415.000000 resc_cpu: 37764409
     resp: 415.966860 resp_io: 415.000000 resp_cpu: 37764409
Best:: JoinMethod: NestedLoopSemi
       Cost: 143.034828  Degree: 1  Resp: 143.034828  Card: 124.260374 Bytes: 
***********************
Best so far:  Table#: 1  cost: 4.001441  card: 138.564767  bytes: 1668.000000
              Table#: 0  cost: 143.034828  card: 124.260374  bytes: 3100.000000
***********************
kkoaccsqf: Current query block SEL$2 (#3) is serial
kkoaccsqf: correlated subquery query block SEL$3 (#5) in filter               : serial
First K Rows: K = 1.00, N = 124.00
First K Rows: old pf = 1.0000000, new pf = 0.0216505
Access path analysis for STORE_SALES
***************************************
SINGLE TABLE ACCESS PATH (First K Rows)
  Single Table Cardinality Estimation for STORE_SALES[SS] 
  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = TABLE

 kkecdn: Single Table Predicate:"SS"."SS_CUSTOMER_SK"=:B1
  Estimated selectivity: 1.0108e-06 , col: #4 
  Table: STORE_SALES  Alias: SS
    Card: Original: 3118114.000000  Rounded: 3  Computed: 3.151835  Non Adjusted: 3.151835
  Scan IO  Cost (Disk) =   13517.000000
  Scan CPU Cost (Disk) =   1010170917.440000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000001 flag = 2064  ("SS"."SS_CUSTOMER_SK"=:B1)
  Total Scan IO  Cost  =   13517.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 3118114.000000 (#rows))
                       =   13517.000000
  Total Scan CPU  Cost =   1010170917.440000 (scan (Disk))
                         + 155905700.000000 (cpu filter eval) (= 50.000000 (per row) * 3118114.000000 (#rows))
                       =   1166076617.440000
  Access Path: TableScan
    Cost:  13546.854371  Resp: 13546.854371  Degree: 0
      Cost_io: 13517.000000  Cost_cpu: 1166076617
      Resp_io: 13517.000000  Resp_cpu: 1166076617
  Access Path: index (index (FFS))
    Index: STORE_SALES_IDX2
    resc_io: 3068.000000  resc_cpu: 610715445
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  3083.635787  Resp: 3083.635787  Degree: 1
      Cost_io: 3068.000000  Cost_cpu: 610715445
      Resp_io: 3068.000000  Resp_cpu: 610715445
 ****** Costing Index STORE_SALES_IDX2
  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = INDEX_FILTER

  Estimated selectivity: 1.0108e-06 , col: #4 
  Access Path: index (IndexOnly)
    Index: STORE_SALES_IDX2
    resc_io: 4.000000  resc_cpu: 29286
    ix_sel: 1.0108e-06  ix_sel_with_filters: 1.0108e-06 
    Cost: 4.000750  Resp: 4.000750  Degree: 1
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: IndexRange
  Index: STORE_SALES_IDX2
         Cost: 4.000750  Degree: 1  Resp: 4.000750  Card: 3.151835  Bytes: 0.000000

First K Rows: old pf = 0.0166435, new pf = 0.7434109
Access path analysis for DATE_DIM
***************************************
SINGLE TABLE ACCESS PATH (First K Rows)
  Single Table Cardinality Estimation for DATE_DIM[DATE_DIM] 
  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = TABLE
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 


 kkecdn: Single Table Predicate:"DATE_DIM"."D_YEAR"=2001
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY">=1
  Estimated selectivity: 1.000000 , endpoint value predicate, col: #9 

 kkecdn: Single Table Predicate:"DATE_DIM"."D_MOY"<=4
  Estimated selectivity: 0.329224 , endpoint value predicate, col: #9 
  Table: DATE_DIM  Alias: DATE_DIM
    Card: Original: 54306.000000  Rounded: 89  Computed: 89.334288  Non Adjusted: 89.334288
  Scan IO  Cost (Disk) =   306.000000
  Scan CPU Cost (Disk) =   24832237.120000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.004997 flag = 2048  ("DATE_DIM"."D_YEAR"=2001)
    io = NOCOST, cpu = 50.000000, sel = 0.329224 flag = 2048  ("DATE_DIM"."D_MOY"<=4)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("DATE_DIM"."D_MOY">=1)
  Total Scan IO  Cost  =   306.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 54306.000000 (#rows))
                       =   306.000000
  Total Scan CPU  Cost =   24832237.120000 (scan (Disk))
                         + 2733334.107528 (cpu filter eval) (= 50.332083 (per row) * 54306.000000 (#rows))
                       =   27565571.227528
  Access Path: TableScan
    Cost:  306.705745  Resp: 306.705745  Degree: 0
      Cost_io: 306.000000  Cost_cpu: 27565571
      Resp_io: 306.000000  Resp_cpu: 27565571
  ****** trying bitmap/domain indexes ******
 ****** Costing Index D_DATE_PK_IDX
  Access Path: index (FullScan)
    Index: D_DATE_PK_IDX
    resc_io: 123.000000  resc_cpu: 11737137
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 123.300499  Resp: 123.300499  Degree: 0
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: TableScan
         Cost: 306.705745  Degree: 1  Resp: 306.705745  Card: 89.334288  Bytes: 0.000000

First K Rows: unchanged join prefix len = 1
Join order[2]:  STORE_SALES[SS]#1  DATE_DIM[DATE_DIM]#0

***************
Now joining: DATE_DIM[DATE_DIM]#0
***************
NL Join
  Outer table: Card: 3.151835  Cost: 4.000750  Resp: 4.000750  Degree: 1  Bytes: 
Access path analysis for DATE_DIM
  Scan IO  Cost (Disk) =   304.666667
  Scan CPU Cost (Disk) =   24832237.120000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.007463 flag = 2064  ("SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK")
    io = NOCOST, cpu = 50.000000, sel = 0.004997 flag = 2048  ("DATE_DIM"."D_YEAR"=2001)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("DATE_DIM"."D_MOY">=1)
    io = NOCOST, cpu = 50.000000, sel = 0.329224 flag = 2048  ("DATE_DIM"."D_MOY"<=4)
  Total Scan IO  Cost  =   304.666667 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 54306.000000 (#rows))
                       =   304.666667
  Total Scan CPU  Cost =   24832237.120000 (scan (Disk))
                         + 2729001.976012 (cpu filter eval) (= 50.252311 (per row) * 54306.000000 (#rows))
                       =   27561239.096012
  Inner table: DATE_DIM  Alias: DATE_DIM
  Access Path: TableScan
    NL Join:  Cost: 920.117652  Resp: 920.117652  Degree: 1
      Cost_io: 918.000000  Cost_cpu: 82713003
      Resp_io: 918.000000  Resp_cpu: 82713003
 ****** Costing Index D_DATE_PK_IDX
NOTE: ignoring histogram of column (STORE_SALES.SS_SOLD_DATE_SK)
      used only for incremental stats maintenance
  Column (#1): SS_SOLD_DATE_SK(NUMBER)
    AvgLen: 6 NDV: 1849 Nulls: 0 Density: 0.000541 Min: 2450816.000000 Max: 2452651.000000
  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: D_DATE_PK_IDX
    resc_io: 1.000000  resc_cpu: 9382
    ix_sel: 1.8414e-05  ix_sel_with_filters: 1.8414e-05 
    NL Join (ordered): Cost: 7.001470  Resp: 7.001470  Degree: 1
      Cost_io: 7.000000  Cost_cpu: 57431
      Resp_io: 7.000000  Resp_cpu: 57431
 ****** Costing Index D_DATE_PK_IDX
  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = INDEX_FILTER
  Estimated selectivity: 0.004997 , endpoint value predicate, col: #7 
  Estimated selectivity: 1.000000 , endpoint value predicate, col: #9 
  Estimated selectivity: 0.329224 , endpoint value predicate, col: #9 
  Access Path: index (AllEqUnique)
    Index: D_DATE_PK_IDX
    resc_io: 1.000000  resc_cpu: 9382
    ix_sel: 1.8415e-05  ix_sel_with_filters: 1.8415e-05 
    NL Join (ordered): Cost: 7.001470  Resp: 7.001470  Degree: 1
      Cost_io: 7.000000  Cost_cpu: 57431
      Resp_io: 7.000000  Resp_cpu: 57431
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 7.001470
          resc: 7.001470  resc_io: 7.000000  resc_cpu: 57431
          resp: 7.001470  resp_io: 7.000000  resc_cpu: 57431
  SPD: Return code in qosdDSDirSetup: NOQBCTX, estType = JOIN
Capping Semi Join Card of HJ/SMJ by inner = 3.128522
Capping Semi Join Card of HJ/SMJ (no post filters) by inner = 3.128522
Capping Semi Join Card of NL by inner = 3.128522
Capping Semi Join Card of without POSQ by inner = 3.128522
Capping Semi Join Card of non adjusted NSQ by inner = 3.128522
Semi Join Card (capped by inner join):  3.128522 = outer (3.151835) * inner (89.334288) * sel (0.011111)
Join Card - Rounded: 3 Computed: 3.128522
  Outer table:  STORE_SALES  Alias: SS
    resc: 4.000750  card 3.151835  bytes:   deg: 1  resp: 4.000750
  Inner table:  DATE_DIM  Alias: DATE_DIM
    resc: 411.949216  card: 120.166840  bytes:   deg: 1  resp: 411.949216
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     25 Total Rows:            120
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39096166
      Total Temp space used: 0
  SM join: Resc: 416.950922  Resp: 416.950922  [multiMatchCost=0.000000]
SM Join
  SM cost: 416.950922 
     resc: 416.950922 resc_io: 415.000000 resc_cpu: 76200724
     resp: 416.950922 resp_io: 415.000000 resp_cpu: 76200724
  Outer table:  STORE_SALES  Alias: SS
    resc: 4.001441  card 138.564767  bytes:   deg: 1  resp: 4.001441
  Inner table:  DATE_DIM  Alias: DATE_DIM
    resc: 306.705745  card: 89.334288  bytes:   deg: 1  resp: 306.705745
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016123  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 310.723309  Resp: 310.723309  [multiMatchCost=0.000000]
HA Join
  HA cost: 310.723309  
     resc: 310.723309 resc_io: 310.000000 resc_cpu: 28251607
     resp: 310.723309 resp_io: 310.000000 resp_cpu: 28251607
Best:: JoinMethod: NestedLoopSemi
       Cost: 7.001470  Degree: 1  Resp: 7.001470  Card: 3.128522 Bytes: 
***********************
Best so far:  Table#: 1  cost: 4.000750  card: 3.151835  bytes: 36.000000
              Table#: 0  cost: 7.001470  card: 3.128522  bytes: 75.000000
***********************
(newjo-stop-1) k:0, spcnt:0, perm:2, maxperm:1000

*********************************
Number of join permutations tried: 2
*********************************
*********************
PJE: Partial join eval conversion for query block SEL$2 (#3).
PJE: Table marked for partial join eval: DATE_DIM[DATE_DIM]#0
***********************
Enumerating distribution method (advanced)
--- Distribution method for 
join between SS[STORE_SALES](serial) and DATE_DIM[DATE_DIM](serial); jm = 15; right side access path = IndexUnique
kkopqIsSerialJoin: serial NLJ: both inputs serial
---- serial NL-Join -> SERIAL

kkoaccsqf: Current query block SEL$2 (#3) is serial
kkoaccsqf: correlated subquery query block SEL$3 (#5) in filter               : serial
(newjo-save)    [1 0 ]
LORE: Or-Expansion validity checks failed on query block SEL$2 (#3) because Cost based OR expansion enabled
Transfer Optimizer annotations for query block SEL$2 (#3)
AP: Adaptive joins bypassed for query block SEL$2 due to disabled by adaptive join parameter
id=0 fptconst predicate= EXISTS (SELECT 0 FROM "WEB_SALES" "WEB_SALES","DATE_DIM" "DATE_DIM" WHERE "WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B1 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY"<=4 AND "DATE_DIM"."D_MOY">=1) OR  EXISTS (SELECT 0 FROM "CATALOG_SALES" "CATALOG_SALES","DATE_DIM" "DATE_DIM" WHERE "CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B2 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY"<=4 AND "DATE_DIM"."D_MOY">=1)
AutoDOP: Consider caching for SS[STORE_SALES](obj#-1) 
cost:4.000750 blkSize:8192 objSize:2304802.00 marObjSize:2189561.90 bufSize:92026.00 affPercent:80 smallTab:NO affinitized:NO
kkecComputeAPDop: IO Dop: 0.000000 - CPU Dop: 0.000000
Replication not feasible for first input in join order
id=0 frofkks[i] (index start key) predicate="SS"."SS_CUSTOMER_SK"=:B1
id=0 frofkke[i] (index stop key) predicate="SS"."SS_CUSTOMER_SK"=:B1
Transfer optimizer annotations for STORE_SALES[SS]
AutoDOP: Consider caching for DATE_DIM[DATE_DIM](obj#74171) 
cost:7.001470 blkSize:8192 objSize:1510.00 marObjSize:1434.50 bufSize:92026.00 affPercent:80 smallTab:YES affinitized:NO
kkecComputeAPDop: IO Dop: 0.000000 - CPU Dop: 0.000000
Replication not feasible based on distribution
id=0 frofkks[i] (index start key) predicate="SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK"
id=0 frofkke[i] (index stop key) predicate="SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK"
id=0 frofand predicate="DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY"<=4 AND "DATE_DIM"."D_MOY">=1
Transfer optimizer annotations for DATE_DIM[DATE_DIM]
Final cost for query block SEL$2 (#3) - First K Rows Plan:
  Best join order: 2
  Cost: 13.002695  Degree: 1  Card: 3.000000  Bytes: 3075.000000
  Resc: 13.002695  Resc_io: 13.000000  Resc_cpu: 105280
  Resp: 13.002695  Resp_io: 13.000000  Resc_cpu: 105280
kkoqbc-subheap (delete addr=0x7f04720f3ac8, in-use=134272, alloc=144728)
kkoqbc-end:
        :
    call(in-use=2221368, alloc=2389024), compile(in-use=4367792, alloc=4439312), execution(in-use=75952, alloc=77040)

kkoqbc: finish optimizing query block SEL$2 (#3)
kkoqbc: optimizing query block SEL$ACBFB8CC (#2)
        
        :
    call(in-use=2221368, alloc=2389024), compile(in-use=4367792, alloc=4439312), execution(in-use=75952, alloc=77040)

kkoqbc-subheap (create addr=0x7f04720f3ac8)
****************
QUERY BLOCK TEXT
****************
Not available.
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$ACBFB8CC nbfros=2 flg=0
  fro(0): flg=0 objn=74168 hint_alias="C"@"SEL$1"
  fro(1): flg=0 objn=74169 hint_alias="CA"@"SEL$1"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3255 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: CUSTOMER  Alias:  C
  #Rows: 1080000  SSZ: 0  LGR: 0  #Blks:  23374  AvgRowLen:  138.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#3): C_CURRENT_CDEMO_SK(NUMBER)
    AvgLen: 6 NDV: 772544 Nulls: 0 Density: 0.000001 Min: 18.000000 Max: 1920799.000000
  Column (#1): C_CUSTOMER_SK(NUMBER)
    AvgLen: 6 NDV: 1080000 Nulls: 0 Density: 0.000001 Min: 1.000000 Max: 1080000.000000
  Column (#5): C_CURRENT_ADDR_SK(NUMBER)
    AvgLen: 5 NDV: 457472 Nulls: 0 Density: 0.000002 Min: 1.000000 Max: 539997.000000
Index Stats::
  Index: CUSTOMER_PK_IDX  Col#: 1
  LVLS: 2  #LB: 2266  #DK: 1080000  LB/K: 1.00  DB/K: 1.00  CLUF: 75684.00  NRW: 1080000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table: CUSTOMER_ADDRESS  Alias: CA
  #Rows: 540000  SSZ: 0  LGR: 0  #Blks:  13174  AvgRowLen:  152.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): CA_ADDRESS_SK(NUMBER)
    AvgLen: 5 NDV: 540000 Nulls: 0 Density: 0.000002 Min: 1.000000 Max: 540000.000000
  Column (#8): CA_COUNTY(VARCHAR2)
    AvgLen: 16 NDV: 1877 Nulls: 0 Density: 0.000471
    Histogram: Hybrid  #Bkts: 254  UncompBkts: 5580  EndPtVals: 254  ActualVal: yes
Index Stats::
  Index: CA_ADDRESS_PK_IDX  Col#: 1
  LVLS: 2  #LB: 1127  #DK: 540000  LB/K: 1.00  DB/K: 1.00  CLUF: 12283.00  NRW: 540000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
try to generate single-table filter predicates from ORs for query block SEL$ACBFB8CC (#2)
finally: ("CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County') AND "C"."C_CURRENT_ADDR_SK"="CA"."CA_ADDRESS_SK" AND  EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM" WHERE ( EXISTS (SELECT 0 FROM "WEB_SALES" "WEB_SALES","DATE_DIM" "DATE_DIM" WHERE "WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B1 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY"<=4 AND "DATE_DIM"."D_MOY">=1) OR  EXISTS (SELECT 0 FROM "CATALOG_SALES" "CATALOG_SALES","DATE_DIM" "DATE_DIM" WHERE "CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B2 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY"<=4 AND "DATE_DIM"."D_MOY">=1)) AND "SS"."SS_CUSTOMER_SK"=:B3 AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY"<=4 AND "DATE_DIM"."D_MOY">=1)

=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$ACBFB8CC (#2)
Applicable DS directives:
   dirid = 18439699102505563871, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {EC(74169)[8]}
   dirid = 5181560337004891843, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74169)[]; (74168)[3]}
   dirid = 9316027922818115912, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74168)[3, 5]}
Checking valid directives for the query block
  SPD: Directive valid: dirid = 5181560337004891843, state = 1, flags = 1, loc = 4, forDS = NO, forCG = YES {(74169)[]; (74168)[3]}
  SPD: Return code in qosdDSDirSetup: EXISTS, estType = GROUP_BY
  SPD: Return code in qosdDSDirSetup: NODIR, estType = QUERY_BLOCK
Return code in qosdSetupDirCtx4QB: EXISTS
=====================================
SPD: END context at query block level
=====================================
Access path analysis for CUSTOMER_ADDRESS
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for CUSTOMER_ADDRESS[CA] 
  SPD: Directive valid: dirid = 18439699102505563871, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {EC(74169)[8]}
  SPD: Return code in qosdDSDirSetup: EXISTS, estType = TABLE

 kkecdn: Single Table Predicate:"CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County'
  Using density: 4.7103e-04 of col #8 as selectivity of pred having unreasonably low value
  Using density: 4.7103e-04 of col #8 as selectivity of pred having unreasonably low value
  Using density: 4.7103e-04 of col #8 as selectivity of pred having unreasonably low value
  Using density: 4.7103e-04 of col #8 as selectivity of pred having unreasonably low value
  Estimated selectivity: 5.3763e-04 , endpoint value predicate, col: #8 
  Table: CUSTOMER_ADDRESS  Alias: CA
    Card: Original: 540000.000000  Rounded: 1308  Computed: 1307.756551  Non Adjusted: 1307.756551
  Scan IO  Cost (Disk) =   3570.000000
  Scan CPU Cost (Disk) =   250417850.560000
  Cost of predicates:
    io = 0.000000, cpu = 249.764594, sel = 0.002422 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Chouteau County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Dinwiddie County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Dixie County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Harrisonburg city')
      io = NOCOST, cpu = 50.000000, sel = 0.000538 flag = 2048  ("CA"."CA_COUNTY"='Lowndes County')
  Total Scan IO  Cost  =   3570.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 540000.000000 (#rows))
                       =   3570.000000
  Total Scan CPU  Cost =   250417850.560000 (scan (Disk))
                         + 134872880.645405 (cpu filter eval) (= 249.764594 (per row) * 540000.000000 (#rows))
                       =   385290731.205405
  Access Path: TableScan
    Cost:  3579.864371  Resp: 3579.864371  Degree: 0
      Cost_io: 3570.000000  Cost_cpu: 385290731
      Resp_io: 3570.000000  Resp_cpu: 385290731
  ****** trying bitmap/domain indexes ******
 ****** Costing Index CA_ADDRESS_PK_IDX
  Access Path: index (FullScan)
    Index: CA_ADDRESS_PK_IDX
    resc_io: 1129.000000  resc_cpu: 116040106
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1131.970906  Resp: 1131.970906  Degree: 0
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: TableScan
         Cost: 3579.864371  Degree: 1  Resp: 3579.864371  Card: 1307.756551  Bytes: 0.000000

Access path analysis for CUSTOMER
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for CUSTOMER[C] 
  SPD: Return code in qosdDSDirSetup: NODIR, estType = TABLE

 kkecdn: Single Table Predicate: EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM" WHERE ( EXISTS (SELECT 0 FROM "WEB_SALES" "WEB_SALES","DATE_DIM" "DATE_DIM" WHERE "WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B1 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY"<=4 AND "DATE_DIM"."D_MOY">=1) OR  EXISTS (SELECT 0 FROM "CATALOG_SALES" "CATALOG_SALES","DATE_DIM" "DATE_DIM" WHERE "CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B2 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY"<=4 AND "DATE_DIM"."D_MOY">=1)) AND "SS"."SS_CUSTOMER_SK"=:B3 AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY"<=4 AND "DATE_DIM"."D_MOY">=1)
  Table: CUSTOMER  Alias: C
    Card: Original: 1080000.000000  Rounded: 1080000  Computed: 1080000.000000  Non Adjusted: 1080000.000000
  Scan IO  Cost (Disk) =   6332.000000
  Scan CPU Cost (Disk) =   414856538.560000
  Cost of predicates:
    io = NOCOST, cpu = 20.000000, sel = 0.050000 flag = 2562  ( EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM" WHERE ( EXISTS (SELECT 0 FROM "WEB_SALES" "WEB_SALES","DATE_DIM" "DATE_DIM" WHERE "WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B1 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY"<=4 AND "DATE_DIM"."D_MOY">=1) OR  EXISTS (SELECT 0 FROM "CATALOG_SALES" "CATALOG_SALES","DATE_DIM" "DATE_DIM" WHERE "CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B2 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY"<=4 AND "DATE_DIM"."D_MOY">=1)) AND "SS"."SS_CUSTOMER_SK"=:B3 AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY"<=4 AND "DATE_DIM"."D_MOY">=1))
  Total Scan IO  Cost  =   6332.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 1080000.000000 (#rows))
                       =   6332.000000
  Total Scan CPU  Cost =   414856538.560000 (scan (Disk))
                         + 21600000.000000 (cpu filter eval) (= 20.000000 (per row) * 1080000.000000 (#rows))
                       =   436456538.560000
  Access Path: TableScan
    Cost:  6343.174339  Resp: 6343.174339  Degree: 0
      Cost_io: 6332.000000  Cost_cpu: 436456539
      Resp_io: 6332.000000  Resp_cpu: 436456539
  ****** trying bitmap/domain indexes ******
 ****** Costing Index CUSTOMER_PK_IDX
  Access Path: index (FullScan)
    Index: CUSTOMER_PK_IDX
    resc_io: 2268.000000  resc_cpu: 232151426
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 2273.943636  Resp: 2273.943636  Degree: 0
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: TableScan
         Cost: 6343.174339  Degree: 1  Resp: 6343.174339  Card: 1080000.000000  Bytes: 0.000000

Grouping column cardinality [C_CURRENT_]    772544
***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE:  Bypassed; QB is not duplicate insignificant SEL$ACBFB8CC (#2)
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  CUSTOMER_ADDRESS[CA]#0  CUSTOMER[C]#1

***************
Now joining: CUSTOMER[C]#1
***************
NL Join
  Outer table: Card: 1307.756551  Cost: 3579.864371  Resp: 3579.864371  Degree: 1  Bytes: 
Access path analysis for CUSTOMER
  Scan IO  Cost (Disk) =   6330.459480
  Scan CPU Cost (Disk) =   414856538.560000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000002 flag = 2048  ("C"."C_CURRENT_ADDR_SK"="CA"."CA_ADDRESS_SK")
    io = NOCOST, cpu = 20.000000, sel = 0.050000 flag = 2562  ( EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM" WHERE ( EXISTS (SELECT 0 FROM "WEB_SALES" "WEB_SALES","DATE_DIM" "DATE_DIM" WHERE "WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B1 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY"<=4 AND "DATE_DIM"."D_MOY">=1) OR  EXISTS (SELECT 0 FROM "CATALOG_SALES" "CATALOG_SALES","DATE_DIM" "DATE_DIM" WHERE "CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B2 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY"<=4 AND "DATE_DIM"."D_MOY">=1)) AND "SS"."SS_CUSTOMER_SK"=:B3 AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY"<=4 AND "DATE_DIM"."D_MOY">=1))
  Total Scan IO  Cost  =   6330.459480 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 1080000.000000 (#rows))
                       =   6330.459480
  Total Scan CPU  Cost =   414856538.560000 (scan (Disk))
                         + 24300000.000000 (cpu filter eval) (= 22.500000 (per row) * 1080000.000000 (#rows))
                       =   439156538.560000
  Inner table: CUSTOMER  Alias: C
  Access Path: TableScan
    NL Join:  Cost: 8298527.317370  Resp: 8298527.317370  Degree: 1
      Cost_io: 8283811.000000  Cost_cpu: 574802043168
      Resp_io: 8283811.000000  Resp_cpu: 574802043168
  ****** trying bitmap/domain indexes ******
 ****** Costing Index CUSTOMER_PK_IDX
  Access Path: index (FullScan)
    Index: CUSTOMER_PK_IDX
    resc_io: 2268.000000  resc_cpu: 232151426
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 2273.943636  Resp: 2273.943636  Degree: 0
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 8298527.317370
          resc: 8298527.317370  resc_io: 8283811.000000  resc_cpu: 574802043168
          resp: 8298527.317370  resp_io: 8283811.000000  resc_cpu: 574802043168
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Join Card:  3087.351958 = outer (1307.756551) * inner (1080000.000000) * sel (2.1859e-06)
Join Card - Rounded: 3087 Computed: 3087.351958
Grouping column cardinality [C_CURRENT_]    772544
  Outer table:  CUSTOMER_ADDRESS  Alias: CA
    resc: 3579.864371  card 1307.756551  bytes:   deg: 1  resp: 3579.864371
  Inner table:  CUSTOMER  Alias: C
    resc: 6343.174339  card: 1080000.000000  bytes:   deg: 1  resp: 6343.174339
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 6 Row size:     34 Total Rows:           1308
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39668949
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 3835 Row size:     29 Total Rows:        1080000
      Initial runs:   2 Merge passes:  1 IO Cost / pass:       2078
      Total IO sort cost: 5913.000000      Total CPU sort cost: 1108751040
      Total Temp space used: 60826000
  SM join: Resc: 15865.441029  Resp: 15865.441029  [multiMatchCost=0.000000]
SM Join
  SM cost: 15865.441029 
     resc: 15865.441029 resc_io: 15815.000000 resc_cpu: 1970167258
     resp: 15865.441029 resp_io: 15815.000000 resp_cpu: 1970167258
SM Join (with index on outer)
 ****** Costing Index CA_ADDRESS_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (FullScan)
    Index: CA_ADDRESS_PK_IDX
    resc_io: 13412.000000  resc_cpu: 494985634
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 13424.672825  Resp: 13424.672825  Degree: 1
  Outer table:  CUSTOMER_ADDRESS  Alias: CA
    resc: 13424.672825  card 1307.756551  bytes:   deg: 1  resp: 13424.672825
  Inner table:  CUSTOMER  Alias: C
    resc: 6343.174339  card: 1080000.000000  bytes:   deg: 1  resp: 6343.174339
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 3835 Row size:     29 Total Rows:        1080000
      Initial runs:   2 Merge passes:  1 IO Cost / pass:       2078
      Total IO sort cost: 5913.000000      Total CPU sort cost: 1108751040
      Total Temp space used: 60826000
  SM join: Resc: 25709.233862  Resp: 25709.233862  [multiMatchCost=0.000000]
  Outer table:  CUSTOMER_ADDRESS  Alias: CA
    resc: 3579.864371  card 1307.756551  bytes:   deg: 1  resp: 3579.864371
  Inner table:  CUSTOMER  Alias: C
    resc: 6343.174339  card: 1080000.000000  bytes:   deg: 1  resp: 6343.174339
    using dmeth: 2  #groups: 1
    Cost per ptn: 2.785445  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 6  probefrag: 3824  ppasses: 1
  Hash join: Resc: 9925.824155  Resp: 9925.824155  [multiMatchCost=0.000000]
HA Join
  HA cost: 9925.824155  
     resc: 9925.824155 resc_io: 9902.000000 resc_cpu: 930543470
     resp: 9925.824155 resp_io: 9902.000000 resp_cpu: 930543470
GROUP BY sort
GROUP BY/Correlated Subquery Filter adjustment factor: 1.000000
GROUP BY cardinality:  3087.000000, TABLE cardinality:  3087.000000
Vector group by not costed because no SYS_OP_XLATE_USE in group by.
kdmoGByPushdownValid: more than one table in group by    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 20 Row size:     52 Total Rows:           3087
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 40671077
      Total Temp space used: 0
Best:: JoinMethod: Hash
       Cost: 9926.865433  Degree: 1  Resp: 9926.865433  Card: 3087.351958 Bytes: 
***********************
Best so far:  Table#: 0  cost: 3579.864371  card: 1307.756551  bytes: 27468.000000
              Table#: 1  cost: 9926.865433  card: 3087.351958  bytes: 117306.000000
***********************
Join order[2]:  CUSTOMER[C]#1  CUSTOMER_ADDRESS[CA]#0

***************
Now joining: CUSTOMER_ADDRESS[CA]#0
***************
NL Join
  Outer table: Card: 1080000.000000  Cost: 6343.174339  Resp: 6343.174339  Degree: 1  Bytes: 
Access path analysis for CUSTOMER_ADDRESS
  Scan IO  Cost (Disk) =   3567.958334
  Scan CPU Cost (Disk) =   250417850.560000
  Cost of predicates:
    io = 0.000000, cpu = 249.764594, sel = 0.002422 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Chouteau County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Dinwiddie County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Dixie County')
      io = NOCOST, cpu = 50.000000, sel = 0.000471 flag = 2048  ("CA"."CA_COUNTY"='Harrisonburg city')
      io = NOCOST, cpu = 50.000000, sel = 0.000538 flag = 2048  ("CA"."CA_COUNTY"='Lowndes County')
    io = NOCOST, cpu = 50.000000, sel = 0.000002 flag = 2048  ("C"."C_CURRENT_ADDR_SK"="CA"."CA_ADDRESS_SK")
  Total Scan IO  Cost  =   3567.958334 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 540000.000000 (#rows))
                       =   3567.958334
  Total Scan CPU  Cost =   250417850.560000 (scan (Disk))
                         + 27000294.822154 (cpu filter eval) (= 50.000546 (per row) * 540000.000000 (#rows))
                       =   277418145.382154
  Inner table: CUSTOMER_ADDRESS  Alias: CA
  Access Path: TableScan
    NL Join:  Cost: 3861072123.013520  Resp: 3861072123.013520  Degree: 1
      Cost_io: 3853401333.000000  Cost_cpu: 299612033469265
      Resp_io: 3853401333.000000  Resp_cpu: 299612033469265
 ****** Costing Index CA_ADDRESS_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: CA_ADDRESS_PK_IDX
    resc_io: 2.000000  resc_cpu: 16683
    ix_sel: 1.8519e-06  ix_sel_with_filters: 1.8519e-06 
    NL Join : Cost: 2166804.459512  Resp: 2166804.459512  Degree: 1
      Cost_io: 2166332.000000  Cost_cpu: 18453712700
      Resp_io: 2166332.000000  Resp_cpu: 18453712700
 ****** Costing Index CA_ADDRESS_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: CA_ADDRESS_PK_IDX
    resc_io: 2.000000  resc_cpu: 16683
    ix_sel: 1.8519e-06  ix_sel_with_filters: 1.8519e-06 
    NL Join : Cost: 2166804.459512  Resp: 2166804.459512  Degree: 1
      Cost_io: 2166332.000000  Cost_cpu: 18453712700
      Resp_io: 2166332.000000  Resp_cpu: 18453712700
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 2166804.459512
          resc: 2166804.459512  resc_io: 2166332.000000  resc_cpu: 18453712700
          resp: 2166804.459512  resp_io: 2166332.000000  resc_cpu: 18453712700
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Join Card:  3087.351958 = outer (1080000.000000) * inner (1307.756551) * sel (2.1859e-06)
Join Card - Rounded: 3087 Computed: 3087.351958
Grouping column cardinality [C_CURRENT_]    772544
  Outer table:  CUSTOMER  Alias: C
    resc: 6343.174339  card 1080000.000000  bytes:   deg: 1  resp: 6343.174339
  Inner table:  CUSTOMER_ADDRESS  Alias: CA
    resc: 3579.864371  card: 1307.756551  bytes:   deg: 1  resp: 3579.864371
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 3835 Row size:     29 Total Rows:        1080000
      Initial runs:   2 Merge passes:  1 IO Cost / pass:       2078
      Total IO sort cost: 5913.000000      Total CPU sort cost: 1108751040
      Total Temp space used: 60826000
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 6 Row size:     34 Total Rows:           1308
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39668949
      Total Temp space used: 0
  SM join: Resc: 15865.441029  Resp: 15865.441029  [multiMatchCost=0.000000]
SM Join
  SM cost: 15865.441029 
     resc: 15865.441029 resc_io: 15815.000000 resc_cpu: 1970167258
     resp: 15865.441029 resp_io: 15815.000000 resp_cpu: 1970167258
  Outer table:  CUSTOMER  Alias: C
    resc: 6343.174339  card 1080000.000000  bytes:   deg: 1  resp: 6343.174339
  Inner table:  CUSTOMER_ADDRESS  Alias: CA
    resc: 3579.864371  card: 1307.756551  bytes:   deg: 1  resp: 3579.864371
    using dmeth: 2  #groups: 1
    Cost per ptn: 1487.571924  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 3824  probefrag: 6  ppasses: 1
  Hash join: Resc: 11410.615189  Resp: 11410.615189  [multiMatchCost=0.004555]
  Outer table:  CUSTOMER_ADDRESS  Alias: CA
    resc: 3579.864371  card 1307.756551  bytes:   deg: 1  resp: 3579.864371
  Inner table:  CUSTOMER  Alias: C
    resc: 6343.174339  card: 1080000.000000  bytes:   deg: 1  resp: 6343.174339
    using dmeth: 2  #groups: 1
    Cost per ptn: 2.785445  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 6  probefrag: 3824  ppasses: 1
  Hash join: Resc: 9925.824155  Resp: 9925.824155  [multiMatchCost=0.000000]
HA Join
  HA cost: 9925.824155 swapped 
     resc: 9925.824155 resc_io: 9902.000000 resc_cpu: 930543470
     resp: 9925.824155 resp_io: 9902.000000 resp_cpu: 930543470
GROUP BY sort
GROUP BY/Correlated Subquery Filter adjustment factor: 1.000000
GROUP BY cardinality:  3087.000000, TABLE cardinality:  3087.000000
Vector group by not costed because no SYS_OP_XLATE_USE in group by.
kdmoGByPushdownValid: more than one table in group by    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 20 Row size:     52 Total Rows:           3087
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 40671077
      Total Temp space used: 0
Join order aborted: cost > best plan cost
***********************
(newjo-stop-1) k:0, spcnt:0, perm:2, maxperm:2000

*********************************
Number of join permutations tried: 2
*********************************
Consider using bloom filter between CA[CUSTOMER_ADDRESS] and C[CUSTOMER] with ??
kkoBloomFilter: join (lcdn:1308 rcdn:1080000 jcdn:3087 limit:706188537)
kkopqSingleJoinBloomNdv:Compute bloom ndv for lfro:CA[CUSTOMER_ADDRESS] and rfro:C[CUSTOMER] swap:no
kkopqSingleJoinBloomNdv: predCnt:#1 col1:(bndv:457472 ndv:457472) and col2:(bndv:540000 ndv:1308) creatorNDV:540000.0 userNDV:457472.0
kkopqComputeBloomNdv: predCnt:1 creatorNdv:540000.0 userNdv:457472.0 singleTblPred:yes
kkoBloomFilter: join ndv:1308 reduction:0.001211 (limit:0.500000)  accepted, but final decision will be made in code generation
Enumerating distribution method (advanced)
--- Distribution method for 
join between CA[CUSTOMER_ADDRESS](serial) and C[CUSTOMER](serial); jm = 1; right side access path = TableScan
---- serial Hash-Join -> NONE

kkoaccsqf: Current query block SEL$ACBFB8CC (#2) is serial
kkoaccsqf: correlated subquery query block SEL$2 (#3) in filter               : serial
Final adjusted join cardinality: 1.000000, sq. fil. factor: 1080000.000000
(newjo-save)    [1 0 ]
GROUP BY/Correlated Subquery Filter adjustment factor: 1.000000
GROUP BY cardinality:  1.000000, TABLE cardinality:  1.000000
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     52 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39058824
      Total Temp space used: 0
LORE: Or-Expansion validity checks failed on query block SEL$ACBFB8CC (#2) because Cost based OR expansion enabled
Transfer Optimizer annotations for query block SEL$ACBFB8CC (#2)
AP: Adaptive joins bypassed for query block SEL$ACBFB8CC due to disabled by adaptive join parameter
AutoDOP: Consider caching for CA[CUSTOMER_ADDRESS](obj#74169) 
cost:3579.864371 blkSize:8192 objSize:13174.00 marObjSize:12515.30 bufSize:92026.00 affPercent:80 smallTab:NO affinitized:NO
kkecComputeAPDop: IO Dop: 0.000000 - CPU Dop: 0.000000
Replication not feasible for first input in join order
id=0 frofand predicate="CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County'
Transfer optimizer annotations for CUSTOMER_ADDRESS[CA]
AutoDOP: Consider caching for C[CUSTOMER](obj#74168) 
cost:9926.865433 blkSize:8192 objSize:23374.00 marObjSize:22205.30 bufSize:92026.00 affPercent:80 smallTab:NO affinitized:NO
kkecComputeAPDop: IO Dop: 0.000000 - CPU Dop: 0.000000
Replication not feasible based on distribution
id=0 frofkksm[i] (sort-merge/hash) predicate="C"."C_CURRENT_ADDR_SK"="CA"."CA_ADDRESS_SK"
id=0 frosand (sort-merge/hash) predicate="C"."C_CURRENT_ADDR_SK"="CA"."CA_ADDRESS_SK"
id=0 fptwhr predicate= EXISTS (SELECT 0 FROM "STORE_SALES" "SS","DATE_DIM" "DATE_DIM" WHERE ( EXISTS (SELECT 0 FROM "WEB_SALES" "WEB_SALES","DATE_DIM" "DATE_DIM" WHERE "WEB_SALES"."WS_BILL_CUSTOMER_SK"=:B1 AND "WEB_SALES"."WS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY"<=4 AND "DATE_DIM"."D_MOY">=1) OR  EXISTS (SELECT 0 FROM "CATALOG_SALES" "CATALOG_SALES","DATE_DIM" "DATE_DIM" WHERE "CATALOG_SALES"."CS_SHIP_CUSTOMER_SK"=:B2 AND "CATALOG_SALES"."CS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY"<=4 AND "DATE_DIM"."D_MOY">=1)) AND "SS"."SS_CUSTOMER_SK"=:B3 AND "SS"."SS_SOLD_DATE_SK"="DATE_DIM"."D_DATE_SK" AND "DATE_DIM"."D_YEAR"=2001 AND "DATE_DIM"."D_MOY"<=4 AND "DATE_DIM"."D_MOY">=1)
Transfer optimizer annotations for CUSTOMER[C]
GROUP BY/Correlated Subquery Filter adjustment factor: 1.000000
Final cost for query block SEL$ACBFB8CC (#2) - All Rows Plan:
  Best join order: 1
  Cost: 29998.814031  Degree: 1  Card: 1.000000  Bytes: 117344.000000
  Resc: 29998.814031  Resc_io: 29969.787726  Resc_cpu: 1133733341
  Resp: 29998.814031  Resp_io: 29969.787726  Resc_cpu: 1133733341
kkoqbc-subheap (delete addr=0x7f04720f3ac8, in-use=86512, alloc=92432)
kkoqbc-end:
        :
    call(in-use=2235464, alloc=2352976), compile(in-use=4381216, alloc=4439312), execution(in-use=78016, alloc=81096)

kkoqbc: finish optimizing query block SEL$ACBFB8CC (#2)
kkoqbc: optimizing query block SEL$DAF89EE2 (#1)
        
        :
    call(in-use=2235464, alloc=2352976), compile(in-use=4381216, alloc=4439312), execution(in-use=78016, alloc=81096)

kkoqbc-subheap (create addr=0x7f04720f3ac8)
****************
QUERY BLOCK TEXT
****************
SELECT /*query10*/
    cd_gender,
    cd_marital_status,
    cd_education_status,
    COUNT(*) cnt1,
    cd_purchase_estimate,
    COUNT(*) cnt2,
    cd_credit_rating,
    COUNT(*) cnt3,
    cd_dep_count,
    COUNT(*) cnt4,
    cd_dep_employed_count,
    COUNT(*) cnt5,
    cd_dep_college_count,
    COUNT(*) cnt6
FROM
    customer c,
    customer_address ca,
    customer_demographics
WHERE
    -- join predicates
        c.c_current_addr_sk = ca.ca_address_sk
    AND cd_demo_sk = c.c_current_cdemo_sk
    -- filter predicates
    AND ca.ca_county IN (
        'Chouteau County',
        'Dixie County',
        'Harrisonburg city',
        'Lowndes County',
        'Dinwiddie County'
    )
    -- filter predicate (subquery)
    AND EXISTS (
        SELECT
            *
        FROM
            store_sales ss,
            date_dim
        WHERE
            c.c_customer_sk = ss.ss_customer_sk
            AND ss_sold_date_sk = d_date_sk
            AND d_year = 2001
            AND d_moy BETWEEN 1 AND 1 + 3
            AND ( EXISTS (
                SELECT
                    *
                FROM
                    web_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = ws_bill_customer_sk
                    AND ws_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            )
                  OR EXISTS (
                SELECT
                    *
                FROM
                    catalog_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = cs_ship_customer_sk
                    AND cs_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            ) )
    )
GROUP BY
    cd_gender,
    cd_marital_status,
    cd_education_status,
    cd_purchase_estimate,
    cd_credit_rating,
    cd_dep_count,
    cd_dep_employed_count,
    cd_dep_college_count

---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$DAF89EE2 nbfros=2 flg=0
  fro(0): flg=0 objn=74170 hint_alias="CUSTOMER_DEMOGRAPHICS"@"SEL$1"
  fro(1): flg=1 objn=0 hint_alias="VW_GBF_17"@"SEL$8E90090D"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3255 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
  #Rows: 1920800  SSZ: 0  LGR: 0  #Blks:  17254  AvgRowLen:  54.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#2): CD_GENDER(CHARACTER)
    AvgLen: 2 NDV: 2 Nulls: 0 Density: 0.249925
    Histogram: Freq  #Bkts: 2  UncompBkts: 1920800  EndPtVals: 2  ActualVal: no 
  Column (#3): CD_MARITAL_STATUS(CHARACTER)
    AvgLen: 2 NDV: 5 Nulls: 0 Density: 0.098953
    Histogram: Freq  #Bkts: 5  UncompBkts: 1920800  EndPtVals: 5  ActualVal: yes
  Column (#4): CD_EDUCATION_STATUS(CHARACTER)
    AvgLen: 21 NDV: 7 Nulls: 0 Density: 0.070771
    Histogram: Freq  #Bkts: 7  UncompBkts: 1920800  EndPtVals: 7  ActualVal: yes
  Column (#5): CD_PURCHASE_ESTIMATE(NUMBER)
    AvgLen: 4 NDV: 9500 Nulls: 0 Density: 0.000105 Min: 500.000000 Max: 9999.000000
  Column (#6): CD_CREDIT_RATING(CHARACTER)
    AvgLen: 11 NDV: 4 Nulls: 0 Density: 0.250000
  Column (#7): CD_DEP_COUNT(NUMBER)
    AvgLen: 3 NDV: 6 Nulls: 0 Density: 0.166667 Min: 0.000000 Max: 5.000000
  Column (#8): CD_DEP_EMPLOYED_COUNT(NUMBER)
    AvgLen: 3 NDV: 6 Nulls: 0 Density: 0.166667 Min: 0.000000 Max: 5.000000
  Column (#9): CD_DEP_COLLEGE_COUNT(NUMBER)
    AvgLen: 3 NDV: 6 Nulls: 0 Density: 0.166667 Min: 0.000000 Max: 5.000000
  Column (#1): CD_DEMO_SK(NUMBER)
    AvgLen: 6 NDV: 1920800 Nulls: 0 Density: 0.000001 Min: 1.000000 Max: 1920800.000000
Index Stats::
  Index: CD_DEMO_PK_IDX  Col#: 1
  LVLS: 2  #LB: 4138  #DK: 1920800  LB/K: 1.00  DB/K: 1.00  CLUF: 795806.00  NRW: 1920800.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table: VW_GBF_17  Alias: VW_GBF_17  (NOT ANALYZED)
  #Rows: 0  SSZ: 0  LGR: 0  #Blks:  0  AvgRowLen:  0.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 0
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): ITEM_1(NUMBER)
    AvgLen: 6 NDV: 772544 Nulls: 0 Density: 0.000001 Min: 18.000000 Max: 1920799.000000
try to generate single-table filter predicates from ORs for query block SEL$DAF89EE2 (#1)
finally: "CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK"="VW_GBF_17"."ITEM_1"

=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$DAF89EE2 (#1)
Applicable DS directives:
   dirid = 7754152966831092939, state = 1, flags = 1, loc = 1, forDS = NO, forCG = YES {EC(74170)[3, 4]}
Checking valid directives for the query block
  SPD: Return code in qosdDSDirSetup: NODIR, estType = GROUP_BY
  SPD: Return code in qosdDSDirSetup: NODIR, estType = QUERY_BLOCK
Return code in qosdSetupDirCtx4QB: EXISTS
=====================================
SPD: END context at query block level
=====================================
Access path analysis for VW_GBF_17

Access path analysis for CUSTOMER_DEMOGRAPHICS
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS] 
  SPD: Return code in qosdDSDirSetup: NODIR, estType = TABLE
  Table: CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
    Card: Original: 1920800.000000  Rounded: 1920800  Computed: 1920800.000000  Non Adjusted: 1920800.000000
  Scan IO  Cost (Disk) =   4675.000000
  Scan CPU Cost (Disk) =   718321325.760000
  Total Scan IO  Cost  =   4675.000000 (scan (Disk))
                       =   4675.000000
  Total Scan CPU  Cost =   718321325.760000 (scan (Disk))
                       =   718321325.760000
  Access Path: TableScan
    Cost:  4693.390757  Resp: 4693.390757  Degree: 0
      Cost_io: 4675.000000  Cost_cpu: 718321326
      Resp_io: 4675.000000  Resp_cpu: 718321326
  Best:: AccessPath: TableScan
         Cost: 4693.390757  Degree: 1  Resp: 4693.390757  Card: 1920800.000000  Bytes: 0.000000

Grouping column cardinality [ CD_GENDER]    2
Grouping column cardinality [CD_MARITAL]    5
Grouping column cardinality [CD_EDUCATI]    7
Grouping column cardinality [CD_PURCHAS]    9500
Grouping column cardinality [CD_CREDIT_]    4
Grouping column cardinality [CD_DEP_COU]    6
Grouping column cardinality [CD_DEP_EMP]    6
Grouping column cardinality [CD_DEP_COL]    6
***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE:  Bypassed; QB is not duplicate insignificant SEL$DAF89EE2 (#1)
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  VW_GBF_17[VW_GBF_17]#0  CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS]#1

***************
Now joining: CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS]#1
***************
NL Join
  Outer table: Card: 1.000000  Cost: 29998.814031  Resp: 29998.814031  Degree: 1  Bytes: 
Access path analysis for CUSTOMER_DEMOGRAPHICS
  Scan IO  Cost (Disk) =   4675.000000
  Scan CPU Cost (Disk) =   718321325.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000001 flag = 2048  ("CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK"="VW_GBF_17"."ITEM_1")
  Total Scan IO  Cost  =   4675.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 1920800.000000 (#rows))
                       =   4675.000000
  Total Scan CPU  Cost =   718321325.760000 (scan (Disk))
                         + 96040000.000000 (cpu filter eval) (= 50.000000 (per row) * 1920800.000000 (#rows))
                       =   814361325.760000
  Inner table: CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
  Access Path: TableScan
    NL Join:  Cost: 34694.663644  Resp: 34694.663644  Degree: 1
      Cost_io: 34644.787726  Cost_cpu: 1948094667
      Resp_io: 34644.787726  Resp_cpu: 1948094667
 ****** Costing Index CD_DEMO_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: CD_DEMO_PK_IDX
    resc_io: 2.000000  resc_cpu: 16453
    ix_sel: 5.2062e-07  ix_sel_with_filters: 5.2062e-07 
    NL Join (ordered): Cost: 30000.814453  Resp: 30000.814453  Degree: 1
      Cost_io: 29971.787726  Cost_cpu: 1133749794
      Resp_io: 29971.787726  Resp_cpu: 1133749794
 ****** Costing Index CD_DEMO_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: CD_DEMO_PK_IDX
    resc_io: 2.000000  resc_cpu: 16453
    ix_sel: 5.2062e-07  ix_sel_with_filters: 5.2062e-07 
    NL Join (ordered): Cost: 30000.814453  Resp: 30000.814453  Degree: 1
      Cost_io: 29971.787726  Cost_cpu: 1133749794
      Resp_io: 29971.787726  Resp_cpu: 1133749794

  Best NL cost: 30000.814453
          resc: 30000.814453  resc_io: 29971.787726  resc_cpu: 1133749794
          resp: 30000.814453  resp_io: 29971.787726  resc_cpu: 1133749794
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Join Card:  1.000000 = outer (1.000000) * inner (1920800.000000) * sel (5.2062e-07)
Join Card - Rounded: 1 Computed: 1.000000
Grouping column cardinality [ CD_GENDER]    2
Grouping column cardinality [CD_MARITAL]    5
Grouping column cardinality [CD_EDUCATI]    7
Grouping column cardinality [CD_PURCHAS]    9500
Grouping column cardinality [CD_CREDIT_]    4
Grouping column cardinality [CD_DEP_COU]    6
Grouping column cardinality [CD_DEP_EMP]    6
Grouping column cardinality [CD_DEP_COL]    6
  Outer table:  VW_GBF_17  Alias: VW_GBF_17
    resc: 29998.814031  card 1.000000  bytes:   deg: 1  resp: 29998.814031
  Inner table:  CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
    resc: 4693.390757  card: 1920800.000000  bytes:   deg: 1  resp: 4693.390757
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 16462 Row size:     70 Total Rows:        1920800
      Initial runs:   2 Merge passes:  1 IO Cost / pass:       8918
      Total IO sort cost: 25380.000000      Total CPU sort cost: 2250842275
      Total Temp space used: 294134000
  SM join: Resc: 60129.831774  Resp: 60129.831774  [multiMatchCost=0.000000]
SM Join
  SM cost: 60129.831774 
     resc: 60129.831774 resc_io: 60024.787726 resc_cpu: 4102896942
     resp: 60129.831774 resp_io: 60024.787726 resp_cpu: 4102896942
  Outer table:  VW_GBF_17  Alias: VW_GBF_17
    resc: 29998.814031  card 1.000000  bytes:   deg: 1  resp: 29998.814031
  Inner table:  CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
    resc: 4693.390757  card: 1920800.000000  bytes:   deg: 1  resp: 4693.390757
    using dmeth: 2  #groups: 1
    Cost per ptn: 4.933076  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 1  probefrag: 15476  ppasses: 1
  Hash join: Resc: 34697.137864  Resp: 34697.137864  [multiMatchCost=0.000000]
HA Join
  HA cost: 34697.137864  
     resc: 34697.137864 resc_io: 34644.787726 resc_cpu: 2044734817
     resp: 34697.137864 resp_io: 34644.787726 resp_cpu: 2044734817
GROUP BY sort

GROUP BY/Correlated Subquery Filter adjustment factor: 0.088388
GROUP BY cardinality:  1.000000, TABLE cardinality:  1.000000
Vector group by not costed because no SYS_OP_XLATE_USE in group by.
kdmoGByPushdownValid: more than one table in group by    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     162 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39058824
      Total Temp space used: 0
Best:: JoinMethod: NestedLoop
       Cost: 30001.814453  Degree: 1  Resp: 30001.814453  Card: 1.000000 Bytes: 
***********************
Best so far:  Table#: 0  cost: 29998.814031  card: 1.000000  bytes: 84.000000
              Table#: 1  cost: 30001.814453  card: 1.000000  bytes: 138.000000
***********************
Join order[2]:  CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS]#1  VW_GBF_17[VW_GBF_17]#0

***************
Now joining: VW_GBF_17[VW_GBF_17]#0
***************
NL Join
  Outer table: Card: 1920800.000000  Cost: 4693.390757  Resp: 4693.390757  Degree: 1  Bytes: 
Access path analysis for VW_GBF_17
  Inner table: VW_GBF_17  Alias: VW_GBF_17
  Access Path: TableScan
    NL Join:  Cost: 57621726684.727562  Resp: 57621726684.727562  Degree: 1
      Cost_io: 57565972938.867218  Cost_cpu: 2177675720662901
      Resp_io: 57565972938.867218  Resp_cpu: 2177675720662901

  Best NL cost: 57621726684.727562
          resc: 57621726684.727562  resc_io: 57565972938.867218  resc_cpu: 2177675720662901
          resp: 57621726684.727562  resp_io: 57565972938.867218  resc_cpu: 2177675720662901
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Join Card:  1.000000 = outer (1920800.000000) * inner (1.000000) * sel (5.2062e-07)
Join Card - Rounded: 1 Computed: 1.000000
Grouping column cardinality [ CD_GENDER]    2
Grouping column cardinality [CD_MARITAL]    5
Grouping column cardinality [CD_EDUCATI]    7
Grouping column cardinality [CD_PURCHAS]    9500
Grouping column cardinality [CD_CREDIT_]    4
Grouping column cardinality [CD_DEP_COU]    6
Grouping column cardinality [CD_DEP_EMP]    6
Grouping column cardinality [CD_DEP_COL]    6
  Outer table:  CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
    resc: 4693.390757  card 1920800.000000  bytes:   deg: 1  resp: 4693.390757
  Inner table:  VW_GBF_17  Alias: VW_GBF_17
    resc: 29998.814031  card: 1.000000  bytes:   deg: 1  resp: 29998.814031
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 16462 Row size:     70 Total Rows:        1920800
      Initial runs:   2 Merge passes:  1 IO Cost / pass:       8918
      Total IO sort cost: 25380.000000      Total CPU sort cost: 2250842275
      Total Temp space used: 294134000
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     103 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39058824
      Total Temp space used: 0
  SM join: Resc: 60130.831774  Resp: 60130.831774  [multiMatchCost=0.000000]
SM Join
  SM cost: 60130.831774 
     resc: 60130.831774 resc_io: 60024.787726 resc_cpu: 4141955765
     resp: 60130.831774 resp_io: 60024.787726 resp_cpu: 4141955765
SM Join (with index on outer)
 ****** Costing Index CD_DEMO_PK_IDX
  SPD: Return code in qosdDSDirSetup: NODIR, estType = INDEX_FILTER
  Access Path: index (FullScan)
    Index: CD_DEMO_PK_IDX
    resc_io: 799946.000000  resc_cpu: 6772415442
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 800119.390154  Resp: 800119.390154  Degree: 1
  Outer table:  CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
    resc: 800119.390154  card 1920800.000000  bytes:   deg: 1  resp: 800119.390154
  Inner table:  VW_GBF_17  Alias: VW_GBF_17
    resc: 29998.814031  card: 1.000000  bytes:   deg: 1  resp: 29998.814031
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     103 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39058824
      Total Temp space used: 0
  SM join: Resc: 830119.204186  Resp: 830119.204186  [multiMatchCost=0.000000]
  Outer table:  CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
    resc: 4693.390757  card 1920800.000000  bytes:   deg: 1  resp: 4693.390757
  Inner table:  VW_GBF_17  Alias: VW_GBF_17
    resc: 29998.814031  card: 1.000000  bytes:   deg: 1  resp: 29998.814031
    using dmeth: 2  #groups: 1
    Cost per ptn: 6001.017523  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 15476  probefrag: 1  ppasses: 1
  Hash join: Resc: 40693.222311  Resp: 40693.222311  [multiMatchCost=0.000000]
  Outer table:  VW_GBF_17  Alias: VW_GBF_17
    resc: 29998.814031  card 1.000000  bytes:   deg: 1  resp: 29998.814031
  Inner table:  CUSTOMER_DEMOGRAPHICS  Alias: CUSTOMER_DEMOGRAPHICS
    resc: 4693.390757  card: 1920800.000000  bytes:   deg: 1  resp: 4693.390757
    using dmeth: 2  #groups: 1
    Cost per ptn: 4.933076  #ptns: 1
    hash_area: 231 (max=25600) buildfrag: 1  probefrag: 15476  ppasses: 1
  Hash join: Resc: 34697.137864  Resp: 34697.137864  [multiMatchCost=0.000000]
HA Join
  HA cost: 34697.137864 swapped 
     resc: 34697.137864 resc_io: 34644.787726 resc_cpu: 2044734817
     resp: 34697.137864 resp_io: 34644.787726 resp_cpu: 2044734817
GROUP BY sort

GROUP BY/Correlated Subquery Filter adjustment factor: 0.088388
GROUP BY cardinality:  1.000000, TABLE cardinality:  1.000000
Vector group by not costed because no SYS_OP_XLATE_USE in group by.
kdmoGByPushdownValid: more than one table in group by    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     162 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39058824
      Total Temp space used: 0
Join order aborted: cost > best plan cost
***********************
(newjo-stop-1) k:0, spcnt:0, perm:2, maxperm:2000

*********************************
Number of join permutations tried: 2
*********************************
Enumerating distribution method (advanced)
--- Distribution method for 
join between VW_GBF_17[VW_GBF_17](serial) and CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS](serial); jm = 14; right side access path = IndexUnique
kkopqIsSerialJoin: serial NLJ: both inputs serial
---- serial NL-Join -> SERIAL

(newjo-save)    [1 0 ]

GROUP BY/Correlated Subquery Filter adjustment factor: 0.088388
GROUP BY cardinality:  1.000000, TABLE cardinality:  1.000000
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      943104 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     162 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39058824
      Total Temp space used: 0
LORE: Or-Expansion validity checks failed on query block SEL$DAF89EE2 (#1) because Cost based OR expansion enabled
Transfer Optimizer annotations for query block SEL$DAF89EE2 (#1)
AP: Adaptive joins bypassed for query block SEL$DAF89EE2 due to disabled by adaptive join parameter
AutoDOP: Consider caching for VW_GBF_17[VW_GBF_17](obj#0) 
cost:29998.814031 blkSize:8192 objSize:0.00 marObjSize:0.00 bufSize:92026.00 affPercent:80 smallTab:YES affinitized:NO
kkecComputeAPDop: IO Dop: 0.000000 - CPU Dop: 0.000000
Replication not feasible for first input in join order
Transfer optimizer annotations for VW_GBF_17[VW_GBF_17]
AutoDOP: Consider caching for CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS](obj#74170) 
cost:30001.814453 blkSize:8192 objSize:17254.00 marObjSize:16391.30 bufSize:92026.00 affPercent:80 smallTab:NO affinitized:NO
kkecComputeAPDop: IO Dop: 0.000000 - CPU Dop: 0.000000
Replication not feasible based on distribution
id=0 frofkks[i] (index start key) predicate="CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK"="VW_GBF_17"."ITEM_1"
id=0 frofkke[i] (index stop key) predicate="CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK"="VW_GBF_17"."ITEM_1"
Transfer optimizer annotations for CUSTOMER_DEMOGRAPHICS[CUSTOMER_DEMOGRAPHICS]

GROUP BY/Correlated Subquery Filter adjustment factor: 1.000000
Final cost for query block SEL$DAF89EE2 (#1) - All Rows Plan:
  Best join order: 1
  Cost: 30001.814453  Degree: 1  Card: 1.000000  Bytes: 276.000000
  Resc: 30001.814453  Resc_io: 29971.787726  Resc_cpu: 1172808618
  Resp: 30001.814453  Resp_io: 29971.787726  Resc_cpu: 1172808618
kkoqbc-subheap (delete addr=0x7f04720f3ac8, in-use=43888, alloc=49272)
kkoqbc-end:
        :
    call(in-use=2243168, alloc=2309736), compile(in-use=4386520, alloc=4439312), execution(in-use=78016, alloc=81096)

kkoqbc: finish optimizing query block SEL$DAF89EE2 (#1)
CBRID: VW_GBF_17 @ SEL$DAF89EE2 - blocking operation in qb SEL$DAF89EE2
CBRID: CUSTOMER_DEMOGRAPHICS @ SEL$DAF89EE2 - blocking operation in qb SEL$DAF89EE2
CBRID: CA @ SEL$ACBFB8CC - blocking operation in qb SEL$ACBFB8CC
CBRID: C @ SEL$ACBFB8CC - blocking operation in qb SEL$ACBFB8CC
CBRID: SS @ SEL$2 - blocking operation in qb SEL$ACBFB8CC
CBRID: DATE_DIM @ SEL$2 - blocking operation in qb SEL$ACBFB8CC
CBRID: CATALOG_SALES @ SEL$4 - blocking operation in qb SEL$ACBFB8CC
CBRID: DATE_DIM @ SEL$4 - blocking operation in qb SEL$ACBFB8CC
CBRID: WEB_SALES @ SEL$3 - blocking operation in qb SEL$ACBFB8CC
CBRID: DATE_DIM @ SEL$3 - blocking operation in qb SEL$ACBFB8CC
apadrv-end
          :
    call(in-use=2243168, alloc=2309736), compile(in-use=4389304, alloc=4439312), execution(in-use=78016, alloc=81096)


CBRID: DATE_DIM @ SEL$4 TableLookup allocation - Failure - bug-fix control
CBRID: DATE_DIM @ SEL$3 TableLookup allocation - Failure - bug-fix control
CBRID: DATE_DIM @ SEL$2 TableLookup allocation - Failure - bug-fix control

    SPD: Generating finding id: type = 1, reason = 1, objcnt = 1, obItr = 0, objid = 74169, objtyp = 1, vecsize = 9, colvec = [8, ], fid = 5573443069106914360

    SPD: Generating finding id: type = 1, reason = 2, objcnt = 2, obItr = 0, objid = 74168, objtyp = 1, vecsize = 0, obItr = 1, objid = 74169, objtyp = 1, vecsize = 0, fid = 18106530909516642943
    SPD: Inserted felem, fid=18106530909516642943, ftype = 1, freason = 2, dtype = 0, dstate = 0, dflag = 0, ver = NO, keep = NO

    SPD: Generating finding id: type = 1, reason = 4, objcnt = 2, obItr = 0, objid = 74168, objtyp = 1, vecsize = 4, colvec = [3, ], obItr = 1, objid = 74169, objtyp = 1, vecsize = 0, fid = 15056151426044098864

    SPD: Generating finding id: type = 1, reason = 1, objcnt = 1, obItr = 0, objid = 74170, objtyp = 1, vecsize = 2, colvec = [1, ], fid = 12291697360424400607
    SPD: Inserted felem, fid=12291697360424400607, ftype = 1, freason = 1, dtype = 0, dstate = 0, dflag = 0, ver = NO, keep = NO
CBRID: CUSTOMER_DEMOGRAPHICS @ SEL$DAF89EE2 NLJBatching allocation - Failure - not a columnar organized table
CBRID: CUSTOMER_DEMOGRAPHICS @ SEL$DAF89EE2 TableLookup allocation - Failure - bug-fix control

    SPD: Generating finding id: type = 1, reason = 1, objcnt = 1, obItr = 0, objid = 74170, objtyp = 1, vecsize = 2, colvec = [1, ], fid = 15981802485539560959
    SPD: Inserted felem, fid=15981802485539560959, ftype = 1, freason = 1, dtype = 0, dstate = 0, dflag = 0, ver = NO, keep = NO

    SPD: Generating finding id: type = 1, reason = 4, objcnt = 1, obItr = 0, objid = 74170, objtyp = 1, vecsize = 10, colvec = [2, 3, 4, 5, 6, 7, 8, 9, ], fid = 6151734854452898224
    SPD: Inserted felem, fid=6151734854452898224, ftype = 1, freason = 4, dtype = 0, dstate = 0, dflag = 0, ver = NO, keep = NO
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=234(MB) time=1172(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=234(MB) time=1172(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=234(MB) time=1172(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=234(MB) time=1172(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=234(MB) time=1172(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=234(MB) time=1172(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=234(MB) time=1172(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=234(MB) time=1172(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=234(MB) time=1172(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=234(MB) time=1172(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=78(MB) time=388(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=78(MB) time=388(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=28(MB) time=140(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=28(MB) time=140(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=50(MB) time=248(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=50(MB) time=248(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
Starting SQL statement dump

user_id=103 user_name=TPCDS module=sqlplus@mac18 (TNS V1-V3) action=
sql_id=9n131sd5sqw58 plan_hash_value=-290096650 problem_type=3
----- Current SQL Statement for this session (sql_id=9n131sd5sqw58) -----
SELECT /*query10*/
    cd_gender,
    cd_marital_status,
    cd_education_status,
    COUNT(*) cnt1,
    cd_purchase_estimate,
    COUNT(*) cnt2,
    cd_credit_rating,
    COUNT(*) cnt3,
    cd_dep_count,
    COUNT(*) cnt4,
    cd_dep_employed_count,
    COUNT(*) cnt5,
    cd_dep_college_count,
    COUNT(*) cnt6
FROM
    customer c,
    customer_address ca,
    customer_demographics
WHERE
    -- join predicates
        c.c_current_addr_sk = ca.ca_address_sk
    AND cd_demo_sk = c.c_current_cdemo_sk
    -- filter predicates
    AND ca.ca_county IN (
        'Chouteau County',
        'Dixie County',
        'Harrisonburg city',
        'Lowndes County',
        'Dinwiddie County'
    )
    -- filter predicate (subquery)
    AND EXISTS (
        SELECT
            *
        FROM
            store_sales ss,
            date_dim
        WHERE
            c.c_customer_sk = ss.ss_customer_sk
            AND ss_sold_date_sk = d_date_sk
            AND d_year = 2001
            AND d_moy BETWEEN 1 AND 1 + 3
            AND ( EXISTS (
                SELECT
                    *
                FROM
                    web_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = ws_bill_customer_sk
                    AND ws_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            )
                  OR EXISTS (
                SELECT
                    *
                FROM
                    catalog_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = cs_ship_customer_sk
                    AND cs_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            ) )
    )
GROUP BY
    cd_gender,
    cd_marital_status,
    cd_education_status,
    cd_purchase_estimate,
    cd_credit_rating,
    cd_dep_count,
    cd_dep_employed_count,
    cd_dep_college_count
ORDER BY
    cd_gender,
    cd_marital_status,
    cd_education_status,
    cd_purchase_estimate,
    cd_credit_rating,
    cd_dep_count,
    cd_dep_employed_count,
    cd_dep_college_count
sql_text_length=2184
sql=SELECT /*query10*/
    cd_gender,
    cd_marital_status,
    cd_education_status,
    COUNT(*) cnt1,
    cd_purchase_estimate,
    COUNT(*) cnt2,
    cd_credit_rating,
    COUNT(*) cnt3,
    cd_dep_count,
    COUNT(*) cnt4,
    cd_dep_employed_count,
    COUNT(*) cnt5,
    cd_dep_college_count,
    COUNT(*) cnt6
FROM
    customer c,
    customer_address ca,
    customer_demographics
WHERE
    -- join predicates
        c.c_current_addr_sk = ca.ca_address_sk
    AND cd_demo_sk = c.c_current_cdemo_sk
    -- filter predicates
    AND ca.ca_county IN (
        'Chouteau County',
        'Dixie County',
        'Harrisonburg city',
        'Lowndes County',
        'Dinwiddie County'
    )
    -- filter predicate (subquery)
    AND EXISTS (
        SELECT
            *
        FROM
            store_sales ss,
            date_dim
        WHERE
            c.c_customer_sk = ss.ss_customer_sk
            AND ss_sold_date_sk = d_date_sk
            AND d_year = 2001
            AND d_moy BETWEEN 1 AND 1 + 3
            AND ( EXISTS (
                SELECT
                    *
                FROM
                    web_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = ws_bill_customer_sk
                    AND ws_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            )
                  OR EXISTS (
                SELECT
                    *
                FROM
                    catalog_sales,
                    date_dim
                WHERE
                    c.c_customer_sk = cs_ship_customer_sk
                    AND cs_sold_date_sk = d_date_sk
                    AND d_year = 2001
                    AND d_moy BETWEEN 1 AND 1 + 3
            ) )
    )
GROUP BY
    cd_gender,
    cd_marital_status,
    cd_education_status,
    cd_purchase_estimate,
    cd_credit_rating,
    cd_dep_count,
    cd_dep_employed_count,
    cd_dep_college_count
ORDER BY
    cd_gender,
    cd_marital_status,
    cd_education_status,
    cd_purchase_estimate,
    cd_credit_rating,
    cd_dep_count,
    cd_dep_employed_count,
    cd_dep_college_count
----- Explain Plan Dump -----
----- Plan Table -----
 
============
Plan Table
============
--------------------------------------------------------------------+-----------------------------------+
| Id  | Operation                            | Name                 | Rows  | Bytes | Cost  | Time      |
--------------------------------------------------------------------+-----------------------------------+
| 0   | SELECT STATEMENT                     |                      |       |       |   29K |           |
| 1   |  SORT GROUP BY                       |                      |     1 |   138 |   29K |  00:06:01 |
| 2   |   NESTED LOOPS                       |                      |     1 |   138 |   29K |  00:06:01 |
| 3   |    NESTED LOOPS                      |                      |     1 |   138 |   29K |  00:06:01 |
| 4   |     VIEW                             | VW_GBF_17            |     1 |    84 |   29K |  00:06:00 |
| 5   |      HASH GROUP BY                   |                      |     1 |    38 |   29K |  00:06:00 |
| 6   |       FILTER                         |                      |       |       |       |           |
| 7   |        HASH JOIN                     |                      |  3087 |  115K |  9926 |  00:02:00 |
| 8   |         TABLE ACCESS FULL            | CUSTOMER_ADDRESS     |  1308 |   27K |  3580 |  00:00:43 |
| 9   |         TABLE ACCESS FULL            | CUSTOMER             | 1055K |   18M |  6343 |  00:01:17 |
| 10  |        FILTER                        |                      |       |       |       |           |
| 11  |         NESTED LOOPS SEMI            |                      |     3 |    75 |     7 |  00:00:01 |
| 12  |          INDEX RANGE SCAN            | STORE_SALES_IDX2     |     3 |    36 |     4 |  00:00:01 |
| 13  |          TABLE ACCESS BY INDEX ROWID | DATE_DIM             |    89 |  1157 |     1 |  00:00:01 |
| 14  |           INDEX UNIQUE SCAN          | D_DATE_PK_IDX        |     1 |       |     0 |           |
| 15  |         NESTED LOOPS SEMI            |                      |     2 |    50 |     6 |  00:00:01 |
| 16  |          INDEX RANGE SCAN            | WEB_SALES_IDX2       |    30 |   360 |     4 |  00:00:01 |
| 17  |          TABLE ACCESS BY INDEX ROWID | DATE_DIM             |    61 |   793 |     1 |  00:00:01 |
| 18  |           INDEX UNIQUE SCAN          | D_DATE_PK_IDX        |     1 |       |     0 |           |
| 19  |         NESTED LOOPS SEMI            |                      |     3 |    75 |     7 |  00:00:01 |
| 20  |          INDEX RANGE SCAN            | CATALOG_SALES_IDX2   |    61 |   732 |     4 |  00:00:01 |
| 21  |          TABLE ACCESS BY INDEX ROWID | DATE_DIM             |    81 |  1053 |     1 |  00:00:01 |
| 22  |           INDEX UNIQUE SCAN          | D_DATE_PK_IDX        |     1 |       |     0 |           |
| 23  |     INDEX UNIQUE SCAN                | CD_DEMO_PK_IDX       |     1 |       |     1 |  00:00:01 |
| 24  |    TABLE ACCESS BY INDEX ROWID       | CUSTOMER_DEMOGRAPHICS|     1 |    54 |     2 |  00:00:01 |
--------------------------------------------------------------------+-----------------------------------+
Query Block Name / Object Alias(identified by operation id):
------------------------------------------------------------
 1 - SEL$DAF89EE2         
 4 - SEL$ACBFB8CC         / VW_GBF_17@SEL$8E90090D
 5 - SEL$ACBFB8CC         
 8 - SEL$ACBFB8CC         / CA@SEL$1
 9 - SEL$ACBFB8CC         / C@SEL$1
10 - SEL$2                
12 - SEL$2                / SS@SEL$2
13 - SEL$2                / DATE_DIM@SEL$2
14 - SEL$2                / DATE_DIM@SEL$2
15 - SEL$3                
16 - SEL$3                / WEB_SALES@SEL$3
17 - SEL$3                / DATE_DIM@SEL$3
18 - SEL$3                / DATE_DIM@SEL$3
19 - SEL$4                
20 - SEL$4                / CATALOG_SALES@SEL$4
21 - SEL$4                / DATE_DIM@SEL$4
22 - SEL$4                / DATE_DIM@SEL$4
23 - SEL$DAF89EE2         / CUSTOMER_DEMOGRAPHICS@SEL$1
24 - SEL$DAF89EE2         / CUSTOMER_DEMOGRAPHICS@SEL$1
------------------------------------------------------------
Predicate Information:
----------------------
6 - filter( IS NOT NULL)
7 - access("C"."C_CURRENT_ADDR_SK"="CA"."CA_ADDRESS_SK")
8 - filter(("CA"."CA_COUNTY"='Chouteau County' OR "CA"."CA_COUNTY"='Dinwiddie County' OR "CA"."CA_COUNTY"='Dixie County' OR "CA"."CA_COUNTY"='Harrisonburg city' OR "CA"."CA_COUNTY"='Lowndes County'))
10 - filter(( IS NOT NULL OR  IS NOT NULL))
12 - access("SS"."SS_CUSTOMER_SK"=:B1)
13 - filter(("D_YEAR"=2001 AND "D_MOY"<=4 AND "D_MOY">=1))
14 - access("SS_SOLD_DATE_SK"="D_DATE_SK")
16 - access("WS_BILL_CUSTOMER_SK"=:B1)
17 - filter(("D_YEAR"=2001 AND "D_MOY"<=4 AND "D_MOY">=1))
18 - access("WS_SOLD_DATE_SK"="D_DATE_SK")
20 - access("CS_SHIP_CUSTOMER_SK"=:B1)
21 - filter(("D_YEAR"=2001 AND "D_MOY"<=4 AND "D_MOY">=1))
22 - access("CS_SOLD_DATE_SK"="D_DATE_SK")
23 - access("CD_DEMO_SK"="ITEM_1")
 
Content of other_xml column
===========================
  db_version     : 18.0.0.0
  parse_schema   : TPCDS
  plan_hash_full : 4256268300
  plan_hash      : 4004870646
  plan_hash_2    : 1486735242
  Outline Data:
  /*+
    BEGIN_OUTLINE_DATA
      IGNORE_OPTIM_EMBEDDED_HINTS
      OPTIMIZER_FEATURES_ENABLE('18.1.0')
      DB_VERSION('18.1.0')
      OPT_PARAM('_optimizer_adaptive_cursor_sharing' 'false')
      OPT_PARAM('_optimizer_use_feedback' 'false')
      OPT_PARAM('_px_adaptive_dist_method' 'off')
      OPT_PARAM('_optimizer_strans_adaptive_pruning' 'false')
      OPT_PARAM('_optimizer_nlj_hj_adaptive_join' 'false')
      ALL_ROWS
      OUTLINE_LEAF(@"SEL$3")
      OUTLINE_LEAF(@"SEL$4")
      OUTLINE_LEAF(@"SEL$2")
      OUTLINE_LEAF(@"SEL$ACBFB8CC")
      OUTLINE_LEAF(@"SEL$DAF89EE2")
      PLACE_GROUP_BY(@"SEL$1" ( "C"@"SEL$1"   "CA"@"SEL$1" ) 17)
      OUTLINE(@"SEL$8E90090D")
      OUTLINE(@"SEL$1")
      NO_ACCESS(@"SEL$DAF89EE2" "VW_GBF_17"@"SEL$8E90090D")
      INDEX(@"SEL$DAF89EE2" "CUSTOMER_DEMOGRAPHICS"@"SEL$1" ("CUSTOMER_DEMOGRAPHICS"."CD_DEMO_SK"))
      LEADING(@"SEL$DAF89EE2" "VW_GBF_17"@"SEL$8E90090D" "CUSTOMER_DEMOGRAPHICS"@"SEL$1")
      USE_NL(@"SEL$DAF89EE2" "CUSTOMER_DEMOGRAPHICS"@"SEL$1")
      NLJ_BATCHING(@"SEL$DAF89EE2" "CUSTOMER_DEMOGRAPHICS"@"SEL$1")
      FULL(@"SEL$ACBFB8CC" "CA"@"SEL$1")
      FULL(@"SEL$ACBFB8CC" "C"@"SEL$1")
      LEADING(@"SEL$ACBFB8CC" "CA"@"SEL$1" "C"@"SEL$1")
      USE_HASH(@"SEL$ACBFB8CC" "C"@"SEL$1")
      USE_HASH_AGGREGATION(@"SEL$ACBFB8CC")
      PQ_FILTER(@"SEL$ACBFB8CC" SERIAL)
      INDEX(@"SEL$2" "SS"@"SEL$2" ("STORE_SALES"."SS_CUSTOMER_SK" "STORE_SALES"."SS_SOLD_DATE_SK"))
      INDEX_RS_ASC(@"SEL$2" "DATE_DIM"@"SEL$2" ("DATE_DIM"."D_DATE_SK"))
      LEADING(@"SEL$2" "SS"@"SEL$2" "DATE_DIM"@"SEL$2")
      USE_NL(@"SEL$2" "DATE_DIM"@"SEL$2")
      PARTIAL_JOIN(@"SEL$2" "DATE_DIM"@"SEL$2")
      INDEX(@"SEL$4" "CATALOG_SALES"@"SEL$4" ("CATALOG_SALES"."CS_SHIP_CUSTOMER_SK" "CATALOG_SALES"."CS_SOLD_DATE_SK"))
      INDEX_RS_ASC(@"SEL$4" "DATE_DIM"@"SEL$4" ("DATE_DIM"."D_DATE_SK"))
      LEADING(@"SEL$4" "CATALOG_SALES"@"SEL$4" "DATE_DIM"@"SEL$4")
      USE_NL(@"SEL$4" "DATE_DIM"@"SEL$4")
      PARTIAL_JOIN(@"SEL$4" "DATE_DIM"@"SEL$4")
      INDEX(@"SEL$3" "WEB_SALES"@"SEL$3" ("WEB_SALES"."WS_BILL_CUSTOMER_SK" "WEB_SALES"."WS_SOLD_DATE_SK"))
      INDEX_RS_ASC(@"SEL$3" "DATE_DIM"@"SEL$3" ("DATE_DIM"."D_DATE_SK"))
      LEADING(@"SEL$3" "WEB_SALES"@"SEL$3" "DATE_DIM"@"SEL$3")
      USE_NL(@"SEL$3" "DATE_DIM"@"SEL$3")
      PARTIAL_JOIN(@"SEL$3" "DATE_DIM"@"SEL$3")
    END_OUTLINE_DATA
  */
 
Optimizer state dump:
Compilation Environment Dump
optimizer_mode_hinted               = false
optimizer_features_hinted           = 0.0.0
parallel_execution_enabled          = true
parallel_query_forced_dop           = 0
parallel_dml_forced_dop             = 0
parallel_ddl_forced_degree          = 0
parallel_ddl_forced_instances       = 0
_query_rewrite_fudge                = 90
optimizer_features_enable           = 18.1.0
_optimizer_search_limit             = 5
cpu_count                           = 6
active_instance_count               = 1
parallel_threads_per_cpu            = 1
hash_area_size                      = 131072
bitmap_merge_area_size              = 1048576
sort_area_size                      = 65536
sort_area_retained_size             = 0
_sort_elimination_cost_ratio        = 0
_optimizer_block_size               = 8192
_sort_multiblock_read_count         = 2
_hash_multiblock_io_count           = 0
_db_file_optimizer_read_count       = 8
_optimizer_max_permutations         = 2000
pga_aggregate_target                = 921600 KB
_pga_max_size                       = 204800 KB
_query_rewrite_maxdisjunct          = 257
_smm_auto_min_io_size               = 56 KB
_smm_auto_max_io_size               = 248 KB
_smm_min_size                       = 921 KB
_smm_max_size_static                = 102400 KB
_smm_px_max_size_static             = 460800 KB
_cpu_to_io                          = 0
_optimizer_undo_cost_change         = 18.1.0
parallel_query_mode                 = enabled
_enable_parallel_dml                = disabled
parallel_ddl_mode                   = enabled
optimizer_mode                      = all_rows
sqlstat_enabled                     = true
_optimizer_percent_parallel         = 101
_always_anti_join                   = choose
_always_semi_join                   = choose
_optimizer_mode_force               = true
_partition_view_enabled             = true
_always_star_transformation         = false
_query_rewrite_or_error             = false
_hash_join_enabled                  = true
cursor_sharing                      = exact
_b_tree_bitmap_plans                = true
star_transformation_enabled         = false
_optimizer_cost_model               = choose
_new_sort_cost_estimate             = true
_complex_view_merging               = true
_unnest_subquery                    = true
_eliminate_common_subexpr           = true
_pred_move_around                   = true
_convert_set_to_join                = false
_push_join_predicate                = true
_push_join_union_view               = true
_fast_full_scan_enabled             = true
_optim_enhance_nnull_detection      = true
_parallel_broadcast_enabled         = true
_px_broadcast_fudge_factor          = 100
_ordered_nested_loop                = true
_no_or_expansion                    = false
optimizer_index_cost_adj            = 100
optimizer_index_caching             = 0
_system_index_caching               = 0
_disable_datalayer_sampling         = false
query_rewrite_enabled               = true
query_rewrite_integrity             = enforced
_query_cost_rewrite                 = true
_query_rewrite_2                    = true
_query_rewrite_1                    = true
_query_rewrite_expression           = true
_query_rewrite_jgmigrate            = true
_query_rewrite_fpc                  = true
_query_rewrite_drj                  = false
_full_pwise_join_enabled            = true
_partial_pwise_join_enabled         = true
_left_nested_loops_random           = true
_improved_row_length_enabled        = true
_index_join_enabled                 = true
_enable_type_dep_selectivity        = true
_improved_outerjoin_card            = true
_optimizer_adjust_for_nulls         = true
_optimizer_degree                   = 0
_use_column_stats_for_function      = true
_subquery_pruning_enabled           = true
_subquery_pruning_mv_enabled        = false
_or_expand_nvl_predicate            = true
_like_with_bind_as_equality         = false
_table_scan_cost_plus_one           = true
_cost_equality_semi_join            = true
_default_non_equality_sel_check     = true
_new_initial_join_orders            = true
_oneside_colstat_for_equijoins      = true
_optim_peek_user_binds              = true
_minimal_stats_aggregation          = true
_force_temptables_for_gsets         = false
workarea_size_policy                = auto
_smm_auto_cost_enabled              = true
_gs_anti_semi_join_allowed          = true
_optim_new_default_join_sel         = true
optimizer_dynamic_sampling          = 2
_pre_rewrite_push_pred              = true
_optimizer_new_join_card_computation = true
_union_rewrite_for_gs               = yes_gset_mvs
_generalized_pruning_enabled        = true
_optim_adjust_for_part_skews        = true
_force_datefold_trunc               = false
statistics_level                    = all
_optimizer_system_stats_usage       = true
skip_unusable_indexes               = true
_remove_aggr_subquery               = true
_optimizer_push_down_distinct       = 0
_dml_monitoring_enabled             = true
_optimizer_undo_changes             = false
_predicate_elimination_enabled      = true
_nested_loop_fudge                  = 100
_project_view_columns               = true
_local_communication_costing_enabled = true
_local_communication_ratio          = 50
_query_rewrite_vop_cleanup          = true
_slave_mapping_enabled              = true
_optimizer_cost_based_transformation = linear
_optimizer_mjc_enabled              = true
_right_outer_hash_enable            = true
_spr_push_pred_refspr               = true
_optimizer_cache_stats              = false
_optimizer_cbqt_factor              = 50
_optimizer_squ_bottomup             = true
_fic_area_size                      = 131072
_optimizer_skip_scan_enabled        = true
_optimizer_cost_filter_pred         = false
_optimizer_sortmerge_join_enabled   = true
_optimizer_join_sel_sanity_check    = true
_mmv_query_rewrite_enabled          = true
_bt_mmv_query_rewrite_enabled       = true
_add_stale_mv_to_dependency_list    = true
_distinct_view_unnesting            = false
_optimizer_dim_subq_join_sel        = true
_optimizer_disable_strans_sanity_checks = 0
_optimizer_compute_index_stats      = true
_push_join_union_view2              = true
optimizer_ignore_hints              = false
_optimizer_random_plan              = 0
_query_rewrite_setopgrw_enable      = true
_optimizer_correct_sq_selectivity   = true
_disable_function_based_index       = false
_optimizer_join_order_control       = 3
_optimizer_cartesian_enabled        = true
_optimizer_starplan_enabled         = true
_extended_pruning_enabled           = true
_optimizer_push_pred_cost_based     = true
_optimizer_null_aware_antijoin      = true
_optimizer_extend_jppd_view_types   = true
_sql_model_unfold_forloops          = run_time
_enable_dml_lock_escalation         = false
_bloom_filter_enabled               = true
_update_bji_ipdml_enabled           = 0
_optimizer_extended_cursor_sharing  = udo
_dm_max_shared_pool_pct             = 1
_optimizer_cost_hjsmj_multimatch    = true
_optimizer_transitivity_retain      = true
_px_pwg_enabled                     = true
optimizer_secure_view_merging       = true
_optimizer_join_elimination_enabled = true
flashback_table_rpi                 = non_fbt
_optimizer_cbqt_no_size_restriction = true
_optimizer_enhanced_filter_push     = true
_optimizer_filter_pred_pullup       = true
_rowsrc_trace_level                 = 0
_simple_view_merging                = true
_optimizer_rownum_pred_based_fkr    = true
_optimizer_better_inlist_costing    = all
_optimizer_self_induced_cache_cost  = false
_optimizer_min_cache_blocks         = 10
_optimizer_or_expansion             = depth
_optimizer_order_by_elimination_enabled = true
_optimizer_outer_to_anti_enabled    = true
_selfjoin_mv_duplicates             = true
_dimension_skip_null                = true
_force_rewrite_enable               = false
_optimizer_star_tran_in_with_clause = true
_optimizer_complex_pred_selectivity = true
_optimizer_connect_by_cost_based    = true
_gby_hash_aggregation_enabled       = true
_globalindex_pnum_filter_enabled    = true
_px_minus_intersect                 = true
_fix_control_key                    = 0
_force_slave_mapping_intra_part_loads = false
_force_tmp_segment_loads            = false
_query_mmvrewrite_maxpreds          = 10
_query_mmvrewrite_maxintervals      = 5
_query_mmvrewrite_maxinlists        = 5
_query_mmvrewrite_maxdmaps          = 10
_query_mmvrewrite_maxcmaps          = 20
_query_mmvrewrite_maxregperm        = 512
_query_mmvrewrite_maxqryinlistvals  = 500
_disable_parallel_conventional_load = false
_trace_virtual_columns              = false
_replace_virtual_columns            = true
_virtual_column_overload_allowed    = true
_kdt_buffering                      = true
_first_k_rows_dynamic_proration     = true
_optimizer_sortmerge_join_inequality = true
_optimizer_aw_stats_enabled         = true
_bloom_pruning_enabled              = true
result_cache_mode                   = MANUAL
_px_ual_serial_input                = true
_optimizer_skip_scan_guess          = false
_enable_row_shipping                = true
_row_shipping_threshold             = 100
_row_shipping_explain               = false
transaction_isolation_level         = read_commited
_optimizer_distinct_elimination     = true
_optimizer_multi_level_push_pred    = true
_optimizer_group_by_placement       = true
_optimizer_rownum_bind_default      = 10
_enable_query_rewrite_on_remote_objs = true
_optimizer_extended_cursor_sharing_rel = simple
_optimizer_adaptive_cursor_sharing  = false
_direct_path_insert_features        = 0
_optimizer_improve_selectivity      = true
optimizer_use_pending_statistics    = false
_optimizer_enable_density_improvements = true
_optimizer_aw_join_push_enabled     = true
_optimizer_connect_by_combine_sw    = true
_enable_pmo_ctas                    = 0
_optimizer_native_full_outer_join   = force
_bloom_predicate_enabled            = true
_optimizer_enable_extended_stats    = true
_is_lock_table_for_ddl_wait_lock    = 0
_pivot_implementation_method        = choose
optimizer_capture_sql_plan_baselines = false
optimizer_use_sql_plan_baselines    = false
_optimizer_star_trans_min_cost      = 0
_optimizer_star_trans_min_ratio     = 0
_with_subquery                      = OPTIMIZER
_optimizer_fkr_index_cost_bias      = 10
_optimizer_use_subheap              = true
parallel_degree_policy              = manual
parallel_degree                     = 0
parallel_min_time_threshold         = 10
_parallel_time_unit                 = 10
_optimizer_or_expansion_subheap     = true
_optimizer_free_transformation_heap = true
_optimizer_reuse_cost_annotations   = true
_result_cache_auto_size_threshold   = 100
_result_cache_auto_time_threshold   = 1000
_optimizer_nested_rollup_for_gset   = 100
_nlj_batching_enabled               = 1
parallel_query_default_dop          = 0
is_recur_flags                      = 0
optimizer_use_invisible_indexes     = false
flashback_data_archive_internal_cursor = 0
_optimizer_extended_stats_usage_control = 192
_parallel_syspls_obey_force         = true
cell_offload_processing             = true
_rdbms_internal_fplib_enabled       = false
db_file_multiblock_read_count       = 123
_bloom_folding_enabled              = true
_mv_generalized_oj_refresh_opt      = true
cell_offload_compaction             = ADAPTIVE
cell_offload_plan_display           = AUTO
_bloom_predicate_offload            = true
_bloom_filter_size                  = 0
_bloom_pushing_max                  = 512
parallel_degree_limit               = 65535
parallel_force_local                = false
parallel_max_degree                 = 6
total_cpu_count                     = 6
_optimizer_coalesce_subqueries      = true
_optimizer_fast_pred_transitivity   = true
_optimizer_fast_access_pred_analysis = true
_optimizer_unnest_disjunctive_subq  = true
_optimizer_unnest_corr_set_subq     = true
_optimizer_distinct_agg_transform   = true
_aggregation_optimization_settings  = 0
_optimizer_connect_by_elim_dups     = true
_optimizer_eliminate_filtering_join = true
_connect_by_use_union_all           = true
dst_upgrade_insert_conv             = true
advanced_queuing_internal_cursor    = 0
_optimizer_unnest_all_subqueries    = true
parallel_autodop                    = 0
parallel_ddldml                     = 0
_parallel_cluster_cache_policy      = adaptive
_parallel_scalability               = 50
iot_internal_cursor                 = 0
_optimizer_instance_count           = 0
_optimizer_connect_by_cb_whr_only   = false
_suppress_scn_chk_for_cqn           = nosuppress_1466
_optimizer_join_factorization       = true
_optimizer_use_cbqt_star_transformation = true
_optimizer_table_expansion          = true
_and_pruning_enabled                = true
_deferred_constant_folding_mode     = DEFAULT
_optimizer_distinct_placement       = true
partition_pruning_internal_cursor   = 0
parallel_hinted                     = none
_sql_compatibility                  = 0
_optimizer_use_feedback             = false
_optimizer_try_st_before_jppd       = true
_dml_frequency_tracking             = false
_optimizer_interleave_jppd          = true
kkb_drop_empty_segments             = 0
_px_partition_scan_enabled          = true
_px_partition_scan_threshold        = 64
_optimizer_false_filter_pred_pullup = true
_bloom_minmax_enabled               = true
only_move_row                       = 0
_optimizer_enable_table_lookup_by_nl = true
parallel_execution_message_size     = 16384
_px_loc_msg_cost                    = 1000
_px_net_msg_cost                    = 10000
_optimizer_generate_transitive_pred = true
_optimizer_cube_join_enabled        = true
_optimizer_filter_pushdown          = true
deferred_segment_creation           = true
_optimizer_outer_join_to_inner      = true
_allow_level_without_connect_by     = false
_max_rwgs_groupings                 = 8192
_optimizer_hybrid_fpwj_enabled      = true
_px_replication_enabled             = true
ilm_filter                          = 0
_optimizer_partial_join_eval        = true
_px_concurrent                      = true
_px_object_sampling_enabled         = true
_px_back_to_parallel                = OFF
_optimizer_unnest_scalar_sq         = true
_optimizer_full_outer_join_to_outer = true
_px_filter_parallelized             = true
_px_filter_skew_handling            = true
_zonemap_use_enabled                = true
_zonemap_control                    = 0
_optimizer_multi_table_outerjoin    = true
_px_groupby_pushdown                = force
_partition_advisor_srs_active       = true
_optimizer_ansi_join_lateral_enhance = true
_px_parallelize_expression          = true
_fast_index_maintenance             = true
_optimizer_ansi_rearchitecture      = true
_optimizer_gather_stats_on_load     = true
ilm_access_tracking                 = 0
ilm_dml_timestamp                   = 0
_px_adaptive_dist_method            = off
_px_adaptive_dist_method_threshold  = 0
_optimizer_batch_table_access_by_rowid = true
optimizer_adaptive_reporting_only   = false
_optimizer_ads_max_table_count      = 0
_optimizer_ads_time_limit           = 0
_optimizer_ads_use_result_cache     = true
_px_wif_dfo_declumping              = choose
_px_wif_extend_distribution_keys    = true
_px_join_skew_handling              = true
_px_join_skew_ratio                 = 10
_px_join_skew_minfreq               = 30
CLI_internal_cursor                 = 0
_parallel_fault_tolerance_enabled   = false
_parallel_fault_tolerance_threshold = 3
_px_partial_rollup_pushdown         = adaptive
_px_single_server_enabled           = true
_optimizer_dsdir_usage_control      = 0
_px_cpu_autodop_enabled             = true
_px_cpu_process_bandwidth           = 200
_sql_hvshare_threshold              = 0
_px_tq_rowhvs                       = true
_optimizer_use_gtt_session_stats    = true
_optimizer_proc_rate_level          = basic
_px_hybrid_TSM_HWMB_load            = true
_optimizer_use_histograms           = true
PMO_altidx_rebuild                  = 0
_cell_offload_expressions           = true
_cell_materialize_virtual_columns   = true
_cell_materialize_all_expressions   = false
_rowsets_enabled                    = true
_rowsets_target_maxsize             = 524288
_rowsets_max_rows                   = 256
_use_hidden_partitions              = 0
_px_monitor_load                    = false
_px_load_monitor_threshold          = 10000
_px_numa_support_enabled            = false
total_processor_group_count         = 1
_adaptive_window_consolidator_enabled = true
_optimizer_strans_adaptive_pruning  = false
_bloom_rm_filter                    = false
_optimizer_null_accepting_semijoin  = true
_long_varchar_allow_IOT             = 0
_parallel_ctas_enabled              = true
_cell_offload_complex_processing    = true
_optimizer_performance_feedback     = off
_optimizer_proc_rate_source         = DEFAULT
_hashops_prefetch_size              = 4
_cell_offload_sys_context           = true
_multi_commit_global_index_maint    = 0
_stat_aggs_one_pass_algorithm       = false
_dbg_scan                           = 0
_oltp_comp_dbg_scan                 = 0
_arch_comp_dbg_scan                 = 0
_optimizer_gather_feedback          = true
_upddel_dba_hash_mask_bits          = 0
_px_pwmr_enabled                    = true
_px_cdb_view_enabled                = true
_bloom_sm_enabled                   = true
_optimizer_cluster_by_rowid         = true
_optimizer_cluster_by_rowid_control = 129
_partition_cdb_view_enabled         = true
_common_data_view_enabled           = true
_pred_push_cdb_view_enabled         = true
_rowsets_cdb_view_enabled           = true
_distinct_agg_optimization_gsets    = choose
_array_cdb_view_enabled             = true
_optimizer_adaptive_plan_control    = 0
_optimizer_adaptive_random_seed     = 0
_optimizer_cbqt_or_expansion        = on
_inmemory_dbg_scan                  = 0
_gby_vector_aggregation_enabled     = true
_optimizer_vector_transformation    = true
_optimizer_vector_fact_dim_ratio    = 10
_key_vector_max_size                = 0
_key_vector_predicate_enabled       = true
_key_vector_predicate_threshold     = 0
_vector_operations_control          = 0
_optimizer_vector_min_fact_rows     = 10000000
parallel_dblink                     = 0
_px_scalable_invdist                = true
_key_vector_offload                 = predicate
_optimizer_aggr_groupby_elim        = true
_optimizer_reduce_groupby_key       = true
_vector_serialize_temp_threshold    = 1000
_always_vector_transformation       = false
_optimizer_cluster_by_rowid_batched = true
_object_link_fixed_enabled          = true
optimizer_inmemory_aware            = true
_optimizer_inmemory_table_expansion = true
_optimizer_inmemory_gen_pushable_preds = true
_optimizer_inmemory_autodop         = true
_optimizer_inmemory_access_path     = true
_optimizer_inmemory_bloom_filter    = true
_parallel_inmemory_min_time_threshold = 1
_parallel_inmemory_time_unit        = 1
_rc_sys_obj_enabled                 = true
_optimizer_nlj_hj_adaptive_join     = false
_indexable_con_id                   = true
_bloom_serial_filter                = on
inmemory_force                      = default
inmemory_query                      = enable
_inmemory_query_scan                = true
_inmemory_query_fetch_by_rowid      = false
_inmemory_pruning                   = on
_px_autodop_pq_overhead             = true
_px_external_table_default_stats    = true
_optimizer_key_vector_aggr_factor   = 75
_optimizer_vector_cost_adj          = 100
_cdb_cross_container                = 65535
_cdb_view_parallel_degree           = 65535
_optimizer_hll_entry                = 4096
_px_cdb_view_join_enabled           = true
inmemory_size                       = 0
_external_table_smart_scan          = hadoop_only
_optimizer_inmemory_minmax_pruning  = true
_approx_cnt_distinct_gby_pushdown   = choose
_approx_cnt_distinct_optimization   = 0
_optimizer_ads_use_partial_results  = true
_query_execution_time_limit         = 0
_optimizer_inmemory_cluster_aware_dop = true
_optimizer_db_blocks_buffers        = 0 KB
_query_rewrite_use_on_query_computation = true
_px_scalable_invdist_mcol           = true
_optimizer_bushy_join               = off
_optimizer_bushy_fact_dim_ratio     = 20
_optimizer_bushy_fact_min_size      = 100000
_optimizer_bushy_cost_factor        = 100
_rmt_for_table_redef_enabled        = true
_optimizer_eliminate_subquery       = true
_sqlexec_cache_aware_hash_join_enabled = true
_zonemap_usage_tracking             = true
_sqlexec_hash_based_distagg_enabled = false
_sqlexec_disable_hash_based_distagg_tiv = false
_sqlexec_hash_based_distagg_ssf_enabled = true
_sqlexec_distagg_optimization_settings = 0
approx_for_aggregation              = false
approx_for_count_distinct           = false
_optimizer_union_all_gsets          = true
_rowsets_use_encoding               = true
_rowsets_max_enc_rows               = 64
_optimizer_enhanced_join_elimination = true
_optimizer_multicol_join_elimination = true
_key_vector_create_pushdown_threshold = 20000
_optimizer_enable_plsql_stats       = true
_recursive_with_parallel            = true
_recursive_with_branch_iterations   = 7
_px_dist_agg_partial_rollup_pushdown = adaptive
_px_adaptive_dist_bypass_enabled    = true
_enable_view_pdb                    = true
_optimizer_key_vector_pruning_enabled = true
_pwise_distinct_enabled             = true
_recursive_with_using_temp_table    = false
_partition_read_only                = true
_sql_alias_scope                    = true
_cdb_view_no_skip_migrate           = false
_approx_perc_sampling_err_rate      = 2
_sqlexec_encoding_aware_hj_enabled  = true
rim_node_exist                      = 0
_enable_containers_subquery         = true
_force_containers_subquery          = false
_cell_offload_vector_groupby        = true
_vector_encoding_mode               = manual
_ds_xt_split_count                  = 1
_ds_sampling_method                 = PROGRESSIVE
_optimizer_ads_use_spd_cache        = true
_optimizer_use_table_scanrate       = HADOOP_ONLY
_optimizer_use_xt_rowid             = true
_xt_sampling_scan_granules          = on
_recursive_with_control             = 0
_sqlexec_use_rwo_aware_expr_analysis = true
_optimizer_band_join_aware          = true
_optimizer_vector_base_dim_fact_factor = 200
approx_for_percentile               = none
_approx_percentile_optimization     = 0
_projection_pushdown                = true
_px_object_sampling                 = 200
_optimizer_adaptive_plans_continuous = false
_optimizer_adaptive_plans_iterative = false
_ds_enable_view_sampling            = true
_optimizer_generate_ptf_implied_preds = true
_optimizer_inmemory_use_stored_stats = AUTO
_cdb_special_old_xplan              = true
uniaud_internal_cursor              = 0
_kd_dbg_control                     = 0
_mv_access_compute_fresh_data       = on
_bloom_filter_ratio                 = 35
_optimizer_control_shard_qry_processing = 65528
containers_parallel_degree          = 65535
sql_from_coordinator                = 0
_xt_sampling_scan_granules_min_granules = 1
_in_memory_cdt                      = LIMITED
_in_memory_cdt_maxpx                = 4
_px_partition_load_dist_threshold   = 64
_px_adaptive_dist_bypass_optimization = 1
_optimizer_interleave_or_expansion  = true
optimizer_adaptive_plans            = false
optimizer_adaptive_statistics       = false
_optimizer_use_feedback_for_join    = false
_optimizer_ads_for_pq               = false
_px_join_skewed_values_count        = 0
optimizer_ignore_parallel_hints     = false
parallel_min_degree                 = 1
_px_nlj_bcast_rr_threshold          = 10
_optimizer_gather_stats_on_load_all = false
_optimizer_gather_stats_on_load_hist = false
_optimizer_allow_all_access_paths   = true
_key_vector_double_enabled          = true
_key_vector_timestamp_enabled       = true
_optimizer_answering_query_using_stats = false
_disable_dblink_optim               = true
_cell_offload_hybrid_processing     = true
_read_optimized_table_lookup        = true
_optimizer_key_vector_payload       = true
_optimizer_vector_fact_payload_ratio = 20
_bloom_pruning_setops_enabled       = true
_bloom_filter_setops_enabled        = true
_key_vector_shared_dgk_ht           = true
_px_pwise_wif_enabled               = true
_sqlexec_reorder_wif_enabled        = true
_px_partition_skew_threshold        = 80
_sqlexec_pwiseops_with_sqlfuncs_enabled = true
_sqlexec_pwiseops_with_binds_enabled = true
_px_shared_hash_join                = false
_px_reuse_server_groups             = multi
_px_join_skew_null_handling         = true
_px_join_skew_use_histogram         = true
_px_join_skew_sampling_time_limit   = 50
_px_join_skew_sampling_percent      = 0
_cdb_view_no_skip_restricted        = false
_inmemory_external_table            = true
_sqlexec_use_kgghash3               = true
_cell_offload_vector_groupby_force  = false
_hcs_opt_av_pred_push               = true
parallel_dop_doubled                = 0
Bug Fix Control Environment
    fix  3834770 = 1       
    fix  3746511 = enabled
    fix  4519016 = enabled
    fix  3118776 = enabled
    fix  4488689 = enabled
    fix  2194204 = disabled
    fix  2660592 = enabled
    fix  2320291 = enabled
    fix  2324795 = enabled
    fix  4308414 = enabled
    fix  3499674 = disabled
    fix  4569940 = enabled
    fix  4631959 = enabled
    fix  4519340 = enabled
    fix  4550003 = enabled
    fix  1403283 = enabled
    fix  4554846 = enabled
    fix  4602374 = enabled
    fix  4584065 = enabled
    fix  4545833 = enabled
    fix  4611850 = enabled
    fix  4663698 = enabled
    fix  4663804 = enabled
    fix  4666174 = enabled
    fix  4567767 = enabled
    fix  4556762 = 15      
    fix  4728348 = enabled
    fix  4708389 = enabled
    fix  4175830 = enabled
    fix  4752814 = enabled
    fix  4583239 = enabled
    fix  4386734 = enabled
    fix  4887636 = enabled
    fix  4483240 = enabled
    fix  4872602 = disabled
    fix  4711525 = enabled
    fix  4545802 = enabled
    fix  4605810 = enabled
    fix  4704779 = enabled
    fix  4900129 = enabled
    fix  4924149 = enabled
    fix  4663702 = enabled
    fix  4878299 = enabled
    fix  4658342 = enabled
    fix  4881533 = enabled
    fix  4676955 = enabled
    fix  4273361 = enabled
    fix  4967068 = enabled
    fix  4969880 = disabled
    fix  5005866 = enabled
    fix  5015557 = enabled
    fix  4705343 = enabled
    fix  4904838 = enabled
    fix  4716096 = enabled
    fix  4483286 = disabled
    fix  4722900 = enabled
    fix  4615392 = enabled
    fix  5096560 = enabled
    fix  5029464 = enabled
    fix  4134994 = enabled
    fix  4904890 = enabled
    fix  5104624 = enabled
    fix  5014836 = enabled
    fix  4768040 = enabled
    fix  4600710 = enabled
    fix  5129233 = enabled
    fix  4595987 = enabled
    fix  4908162 = enabled
    fix  5139520 = enabled
    fix  5084239 = enabled
    fix  5143477 = disabled
    fix  2663857 = enabled
    fix  4717546 = enabled
    fix  5240264 = disabled
    fix  5099909 = enabled
    fix  5240607 = enabled
    fix  5195882 = enabled
    fix  5220356 = enabled
    fix  5263572 = enabled
    fix  5385629 = enabled
    fix  5302124 = enabled
    fix  5391942 = enabled
    fix  5384335 = enabled
    fix  5482831 = enabled
    fix  4158812 = enabled
    fix  5387148 = enabled
    fix  5383891 = enabled
    fix  5466973 = enabled
    fix  5396162 = enabled
    fix  5394888 = enabled
    fix  5395291 = enabled
    fix  5236908 = enabled
    fix  5509293 = enabled
    fix  5449488 = enabled
    fix  5567933 = enabled
    fix  5570494 = enabled
    fix  5288623 = enabled
    fix  5505995 = enabled
    fix  5505157 = enabled
    fix  5112460 = enabled
    fix  5554865 = enabled
    fix  5112260 = enabled
    fix  5112352 = enabled
    fix  5547058 = enabled
    fix  5618040 = enabled
    fix  5585313 = enabled
    fix  5547895 = enabled
    fix  5634346 = enabled
    fix  5620485 = enabled
    fix  5483301 = enabled
    fix  5657044 = enabled
    fix  5694984 = enabled
    fix  5868490 = enabled
    fix  5650477 = enabled
    fix  5611962 = enabled
    fix  4279274 = enabled
    fix  5741121 = enabled
    fix  5714944 = enabled
    fix  5391505 = enabled
    fix  5762598 = enabled
    fix  5578791 = enabled
    fix  5259048 = enabled
    fix  5882954 = enabled
    fix  2492766 = enabled
    fix  5707608 = enabled
    fix  5891471 = enabled
    fix  5884780 = enabled
    fix  5680702 = enabled
    fix  5371452 = enabled
    fix  5838613 = enabled
    fix  5949981 = enabled
    fix  5624216 = enabled
    fix  5741044 = enabled
    fix  5976822 = enabled
    fix  6006457 = enabled
    fix  5872956 = enabled
    fix  5923644 = enabled
    fix  5943234 = enabled
    fix  5844495 = enabled
    fix  4168080 = enabled
    fix  6020579 = enabled
    fix  5842686 = disabled
    fix  5996801 = enabled
    fix  5593639 = enabled
    fix  6133948 = enabled
    fix  3151991 = enabled
    fix  6146906 = enabled
    fix  6239909 = enabled
    fix  6267621 = enabled
    fix  5909305 = enabled
    fix  6279918 = enabled
    fix  6141818 = enabled
    fix  6151963 = enabled
    fix  6251917 = enabled
    fix  6282093 = enabled
    fix  6119510 = enabled
    fix  6119382 = enabled
    fix  3801750 = enabled
    fix  5705630 = disabled
    fix  5944076 = enabled
    fix  5406763 = enabled
    fix  6070954 = enabled
    fix  6282944 = enabled
    fix  6138746 = enabled
    fix  6082745 = enabled
    fix  3426050 = enabled
    fix   599680 = enabled
    fix  6062266 = enabled
    fix  6087237 = enabled
    fix  6122894 = enabled
    fix  6377505 = enabled
    fix  5893768 = enabled
    fix  6163564 = enabled
    fix  6073325 = enabled
    fix  6188881 = enabled
    fix  6007259 = enabled
    fix  6239971 = enabled
    fix  5284200 = disabled
    fix  6042205 = enabled
    fix  6051211 = enabled
    fix  6434668 = enabled
    fix  6438752 = enabled
    fix  5936366 = enabled
    fix  6439032 = enabled
    fix  6438892 = enabled
    fix  6006300 = enabled
    fix  5947231 = enabled
    fix  5416118 = 1       
    fix  6365442 = 1       
    fix  6239039 = enabled
    fix  6502845 = enabled
    fix  6913094 = enabled
    fix  6029469 = enabled
    fix  5919513 = enabled
    fix  6057611 = enabled
    fix  6469667 = enabled
    fix  6608941 = disabled
    fix  6368066 = enabled
    fix  6329318 = enabled
    fix  6656356 = enabled
    fix  4507997 = enabled
    fix  6671155 = enabled
    fix  6694548 = enabled
    fix  6688200 = enabled
    fix  6612471 = enabled
    fix  6708183 = disabled
    fix  6326934 = enabled
    fix  6520717 = disabled
    fix  6714199 = enabled
    fix  6681545 = enabled
    fix  6748058 = enabled
    fix  6167716 = enabled
    fix  6674254 = enabled
    fix  6468287 = enabled
    fix  6503543 = enabled
    fix  6808773 = disabled
    fix  6766962 = enabled
    fix  6120483 = enabled
    fix  6670551 = enabled
    fix  6771838 = enabled
    fix  6626018 = disabled
    fix  6530596 = enabled
    fix  6778642 = enabled
    fix  6699059 = enabled
    fix  6376551 = enabled
    fix  6429113 = enabled
    fix  6782437 = enabled
    fix  6776808 = enabled
    fix  6765823 = enabled
    fix  6768660 = enabled
    fix  6782665 = enabled
    fix  6610822 = enabled
    fix  6514189 = enabled
    fix  6818410 = enabled
    fix  6827696 = enabled
    fix  6773613 = enabled
    fix  5902962 = enabled
    fix  6956212 = enabled
    fix  3056297 = enabled
    fix  6440977 = disabled
    fix  6972291 = disabled
    fix  6904146 = enabled
    fix  6221403 = enabled
    fix  5475051 = enabled
    fix  6845871 = enabled
    fix  5468809 = enabled
    fix  6917633 = enabled
    fix  4444536 = disabled
    fix  6955210 = enabled
    fix  6994194 = enabled
    fix  6399597 = disabled
    fix  6951776 = enabled
    fix  5648287 = 3       
    fix  6987082 = disabled
    fix  7132036 = enabled
    fix  6980350 = enabled
    fix  5199213 = enabled
    fix  7138405 = enabled
    fix  7148689 = enabled
    fix  6820988 = enabled
    fix  7032684 = enabled
    fix  6617866 = enabled
    fix  7155968 = enabled
    fix  7127980 = enabled
    fix  6982954 = enabled
    fix  7241819 = enabled
    fix  6897034 = enabled
    fix  7236148 = enabled
    fix  7298570 = enabled
    fix  7249095 = enabled
    fix  7314499 = enabled
    fix  7324224 = enabled
    fix  7289023 = enabled
    fix  7237571 = enabled
    fix  7116357 = enabled
    fix  7345484 = enabled
    fix  7375179 = enabled
    fix  6430500 = disabled
    fix  5897486 = enabled
    fix  6774209 = enabled
    fix  7306637 = enabled
    fix  6451322 = enabled
    fix  7208131 = enabled
    fix  7388652 = enabled
    fix  7127530 = enabled
    fix  6751206 = enabled
    fix  6669103 = enabled
    fix  7430474 = enabled
    fix  6990305 = enabled
    fix  7043307 = enabled
    fix  3120429 = enabled
    fix  7452823 = disabled
    fix  6838105 = enabled
    fix  6769711 = enabled
    fix  7170213 = enabled
    fix  6528872 = enabled
    fix  7295298 = enabled
    fix  5922070 = enabled
    fix  7259468 = enabled
    fix  6418552 = enabled
    fix  4619997 = enabled
    fix  7524366 = enabled
    fix  6942476 = enabled
    fix  6418771 = enabled
    fix  7375077 = enabled
    fix  5400639 = enabled
    fix  4570921 = enabled
    fix  7426911 = enabled
    fix  5099019 = disabled
    fix  7528216 = enabled
    fix  7521266 = enabled
    fix  7385140 = enabled
    fix  7576516 = enabled
    fix  7573526 = enabled
    fix  7576476 = enabled
    fix  7165898 = enabled
    fix  7263214 = enabled
    fix  3320140 = enabled
    fix  7555510 = enabled
    fix  7613118 = enabled
    fix  7597059 = enabled
    fix  7558911 = enabled
    fix  5520732 = enabled
    fix  7679490 = disabled
    fix  7449971 = enabled
    fix  3628118 = enabled
    fix  4370840 = enabled
    fix  7281191 = enabled
    fix  7519687 = enabled
    fix  5029592 = 3       
    fix  6012093 = 1       
    fix  6053861 = disabled
    fix  6941515 = disabled
    fix  7696414 = enabled
    fix  7272039 = enabled
    fix  7834811 = enabled
    fix  7640597 = enabled
    fix  7341616 = enabled
    fix  7168184 = enabled
    fix   399198 = enabled
    fix  7831070 = enabled
    fix  7676897 = disabled
    fix  7414637 = enabled
    fix  7585456 = enabled
    fix  8202421 = enabled
    fix  7658097 = disabled
    fix  8251486 = enabled
    fix  7132684 = enabled
    fix  7512227 = enabled
    fix  6972987 = enabled
    fix  7199035 = enabled
    fix  8243446 = enabled
    fix  7650462 = enabled
    fix  6720701 = enabled
    fix  7592673 = enabled
    fix  7718694 = enabled
    fix  7534027 = enabled
    fix  7708267 = enabled
    fix  5716785 = enabled
    fix  7356191 = enabled
    fix  7679161 = enabled
    fix  7597159 = enabled
    fix  7499258 = enabled
    fix  8328363 = enabled
    fix  7452863 = enabled
    fix  8284930 = enabled
    fix  7298626 = enabled
    fix  7657126 = enabled
    fix  8371884 = enabled
    fix  8318020 = enabled
    fix  8255423 = enabled
    fix  7135745 = enabled
    fix  8356253 = enabled
    fix  7534257 = enabled
    fix  8323407 = enabled
    fix  7539815 = enabled
    fix  8289316 = enabled
    fix  8447850 = enabled
    fix  7675944 = enabled
    fix  8355120 = enabled
    fix  7176746 = enabled
    fix  8442891 = enabled
    fix  8373261 = enabled
    fix  7679164 = enabled
    fix  7670533 = enabled
    fix  8408665 = enabled
    fix  8491399 = enabled
    fix  8348392 = enabled
    fix  8348585 = enabled
    fix  8335178 = enabled
    fix  8247017 = enabled
    fix  7325597 = enabled
    fix  8531490 = enabled
    fix  6163600 = enabled
    fix  8589278 = disabled
    fix  8557992 = enabled
    fix  7556098 = enabled
    fix  8580883 = enabled
    fix  5892599 = disabled
    fix  8609714 = enabled
    fix  8619631 = disabled
    fix  8672915 = enabled
    fix  8514561 = enabled
    fix  8213977 = enabled
    fix  8560951 = disabled
    fix  8578587 = enabled
    fix  8287870 = enabled
    fix  8467123 = enabled
    fix  8602185 = enabled
    fix  8519457 = enabled
    fix  3335182 = enabled
    fix  8602840 = enabled
    fix  8725296 = enabled
    fix  8628970 = enabled
    fix  6754080 = enabled
    fix  8767442 = enabled
    fix  8760135 = enabled
    fix  8644935 = enabled
    fix  8352378 = enabled
    fix  8685327 = enabled
    fix  8763472 = enabled
    fix  8773324 = enabled
    fix  8813674 = enabled
    fix  8532236 = enabled
    fix  8629716 = enabled
    fix  7277732 = enabled
    fix  8692170 = enabled
    fix  8900973 = enabled
    fix  8919133 = enabled
    fix  8927050 = enabled
    fix  8551880 = enabled
    fix  8901237 = enabled
    fix  8812372 = enabled
    fix  6236862 = enabled
    fix  8528517 = enabled
    fix  7215982 = enabled
    fix  8214022 = enabled
    fix  8595392 = enabled
    fix  8890233 = enabled
    fix  8999317 = enabled
    fix  9004800 = enabled
    fix  8986163 = enabled
    fix  8855396 = enabled
    fix  8800514 = 20      
    fix  9007859 = enabled
    fix  8198783 = disabled
    fix  9053879 = enabled
    fix  6086930 = enabled
    fix  7641601 = enabled
    fix  9052506 = enabled
    fix  9103775 = enabled
    fix  9047975 = enabled
    fix  8893626 = enabled
    fix  9111170 = enabled
    fix  8971829 = enabled
    fix  7628358 = enabled
    fix  9125151 = enabled
    fix  9039715 = enabled
    fix  9106224 = enabled
    fix  9185228 = enabled
    fix  9206747 = enabled
    fix  9088510 = enabled
    fix  9143856 = enabled
    fix  8833381 = enabled
    fix  8949971 = enabled
    fix  8951812 = enabled
    fix  9148171 = enabled
    fix  8706652 = enabled
    fix  9245114 = enabled
    fix  8802198 = enabled
    fix  9011016 = enabled
    fix  9265681 = enabled
    fix  7284269 = enabled
    fix  9272549 = enabled
    fix  8917507 = 7       
    fix  8531463 = enabled
    fix  9263333 = enabled
    fix  8675087 = enabled
    fix  8896955 = enabled
    fix  9041934 = enabled
    fix  9344709 = enabled
    fix  9024933 = enabled
    fix  9033718 = enabled
    fix  9240455 = enabled
    fix  9081848 = enabled
    fix  5982893 = enabled
    fix  9287401 = enabled
    fix  8590021 = enabled
    fix  9340120 = enabled
    fix  9355794 = enabled
    fix  9356656 = enabled
    fix  9385634 = enabled
    fix  9069046 = enabled
    fix  9239337 = enabled
    fix  9300228 = enabled
    fix  9298010 = enabled
    fix  9384170 = enabled
    fix  9407929 = enabled
    fix  8836806 = enabled
    fix  9344055 = enabled
    fix  9274675 = enabled
    fix  9203723 = enabled
    fix  9443476 = enabled
    fix  9195582 = enabled
    fix  8226666 = enabled
    fix  9433490 = enabled
    fix  9065494 = enabled
    fix  9303766 = enabled
    fix  9437283 = enabled
    fix  9116214 = enabled
    fix  9456688 = enabled
    fix  9456746 = disabled
    fix  9342979 = enabled
    fix  9465425 = enabled
    fix  9092442 = enabled
    fix  4926618 = enabled
    fix  8792846 = enabled
    fix  9474259 = enabled
    fix  9495669 = disabled
    fix  6472966 = enabled
    fix  6408301 = enabled
    fix  9380298 = disabled
    fix  8500130 = enabled
    fix  9584723 = enabled
    fix  9270951 = enabled
    fix  9508254 = enabled
    fix  9593680 = enabled
    fix  9196440 = disabled
    fix  9309281 = enabled
    fix  8693158 = enabled
    fix  9381638 = enabled
    fix  9383967 = enabled
    fix  7711900 = enabled
    fix  9218587 = enabled
    fix  9728438 = enabled
    fix  9038395 = enabled
    fix  9577300 = enabled
    fix  9171113 = enabled
    fix  8973745 = enabled
    fix  9732434 = enabled
    fix  8937971 = disabled
    fix  9102474 = enabled
    fix  9243499 = enabled
    fix  9791810 = enabled
    fix  9785632 = enabled
    fix  9898249 = enabled
    fix  9153459 = enabled
    fix  9680430 = enabled
    fix  9841679 = enabled
    fix  9912503 = enabled
    fix  9850461 = enabled
    fix  9762592 = 3       
    fix  9716877 = enabled
    fix  9814067 = enabled
    fix  9776736 = enabled
    fix  8349119 = enabled
    fix  9958518 = enabled
    fix 10041074 = enabled
    fix 10004943 = enabled
    fix  9980661 = enabled
    fix  9554026 = enabled
    fix  9593547 = enabled
    fix  9833381 = enabled
    fix 10043801 = enabled
    fix  9940732 = enabled
    fix  9702850 = enabled
    fix  9659125 = 0       
    fix  9668086 = enabled
    fix  9476520 = enabled
    fix 10158107 = enabled
    fix 10148457 = enabled
    fix 10106423 = enabled
    fix  9721439 = disabled
    fix 10162430 = enabled
    fix 10134677 = enabled
    fix 10182051 = 3       
    fix 10175079 = enabled
    fix 10026972 = enabled
    fix 10192889 = enabled
    fix  3566843 = enabled
    fix  9550277 = disabled
    fix 10236566 = enabled
    fix 10227392 = enabled
    fix  8961143 = enabled
    fix  9721228 = enabled
    fix 10080014 = enabled
    fix 10101489 = enabled
    fix  9929609 = enabled
    fix 10015652 = enabled
    fix  9918661 = enabled
    fix 10333395 = enabled
    fix 10336499 = disabled
    fix 10182672 = enabled
    fix  9578670 = enabled
    fix 10232225 = enabled
    fix 10330090 = enabled
    fix 10232623 = enabled
    fix  9630092 = disabled
    fix 10271790 = enabled
    fix  9227576 = enabled
    fix 10197666 = enabled
    fix 10376744 = enabled
    fix  8274946 = enabled
    fix 10046368 = enabled
    fix  9569678 = enabled
    fix  9002661 = enabled
    fix 10038373 = enabled
    fix  9477688 = enabled
    fix 10013899 = enabled
    fix  9832338 = enabled
    fix 10623119 = enabled
    fix  9898066 = enabled
    fix 11699884 = enabled
    fix 10640430 = enabled
    fix 10428450 = enabled
    fix 10117760 = enabled
    fix 11720178 = enabled
    fix  9881812 = enabled
    fix 10428278 = enabled
    fix 11741436 = enabled
    fix 11668189 = enabled
    fix 10359631 = enabled
    fix  9829887 = enabled
    fix  8275054 = enabled
    fix 11814428 = enabled
    fix 11676888 = disabled
    fix 10348427 = enabled
    fix 11843512 = enabled
    fix 11657468 = enabled
    fix 11877160 = enabled
    fix 11738631 = enabled
    fix 11744086 = enabled
    fix 11830663 = enabled
    fix 11853331 = enabled
    fix  9748015 = enabled
    fix 11834739 = enabled
    fix  6055658 = enabled
    fix 11740670 = enabled
    fix 11940126 = enabled
    fix 12315002 = enabled
    fix  8275023 = enabled
    fix 12352373 = enabled
    fix 12390139 = enabled
    fix 11935589 = enabled
    fix 10226906 = enabled
    fix 12327548 = enabled
    fix 12388221 = enabled
    fix 11892888 = enabled
    fix 11814265 = enabled
    fix 10230017 = enabled
    fix 12341619 = enabled
    fix 11744016 = enabled
    fix 10216738 = enabled
    fix 10298302 = enabled
    fix 12563419 = enabled
    fix 12399886 = enabled
    fix 12584007 = enabled
    fix 11881047 = enabled
    fix 12534597 = enabled
    fix  8683604 = enabled
    fix 12410972 = enabled
    fix  7147087 = enabled
    fix 11846314 = enabled
    fix 12535474 = enabled
    fix 12561635 = enabled
    fix 12432426 = enabled
    fix  9913117 = enabled
    fix 12432089 = enabled
    fix 12587690 = enabled
    fix 11858963 = enabled
    fix 12569245 = enabled
    fix 12569300 = enabled
    fix  7308975 = disabled
    fix 12569316 = enabled
    fix 12569321 = enabled
    fix 12335617 = enabled
    fix  9002958 = enabled
    fix 12591120 = enabled
    fix 11876260 = enabled
    fix 12313574 = enabled
    fix 12569713 = enabled
    fix 12348584 = enabled
    fix 10420220 = enabled
    fix 12559453 = enabled
    fix 12727549 = enabled
    fix 12728203 = enabled
    fix 12828479 = enabled
    fix 10181153 = enabled
    fix  9971371 = disabled
    fix 12864791 = enabled
    fix 12810427 = enabled
    fix 12605402 = enabled
    fix 12861609 = enabled
    fix 12915337 = enabled
    fix 12942119 = enabled
    fix 12622441 = enabled
    fix 11072246 = enabled
    fix 12739252 = enabled
    fix 12953765 = enabled
    fix 12905116 = enabled
    fix 12978495 = enabled
    fix  9633142 = disabled
    fix  3639130 = enabled
    fix 12827166 = enabled
    fix 12944193 = enabled
    fix 13020272 = enabled
    fix 12673320 = enabled
    fix 12975771 = enabled
    fix 12882092 = enabled
    fix 12379334 = enabled
    fix 12723414 = enabled
    fix  9488694 = disabled
    fix 13255388 = 10      
    fix 11727871 = enabled
    fix 13110511 = enabled
    fix 13075297 = enabled
    fix 13345888 = enabled
    fix 11657903 = disabled
    fix 13396096 = enabled
    fix 12591379 = enabled
    fix 13398214 = enabled
    fix 13382280 = enabled
    fix 12869367 = enabled
    fix 12999577 = enabled
    fix 12433153 = enabled
    fix  9094254 = enabled
    fix 13104618 = enabled
    fix 13524237 = enabled
    fix 11813257 = enabled
    fix 13489017 = enabled
    fix 12954320 = enabled
    fix 13555551 = enabled
    fix 13499154 = enabled
    fix 13036910 = enabled
    fix 13545925 = enabled
    fix 13545956 = enabled
    fix 13545989 = enabled
    fix 12839247 = enabled
    fix  9858777 = enabled
    fix 13568366 = enabled
    fix 13393357 = enabled
    fix 13040171 = enabled
    fix 13406619 = enabled
    fix 13594757 = enabled
    fix 13543207 = enabled
    fix 13594712 = enabled
    fix 12648629 = enabled
    fix 13549808 = enabled
    fix 13634700 = enabled
    fix  8792821 = enabled
    fix 13454409 = enabled
    fix 13146487 = enabled
    fix 13592248 = enabled
    fix 11689541 = enabled
    fix 13527374 = enabled
    fix 13430622 = enabled
    fix 13704562 = enabled
    fix  9547706 = enabled
    fix 13497184 = enabled
    fix 13704977 = enabled
    fix 13734456 = enabled
    fix 13070532 = enabled
    fix  6520878 = enabled
    fix  2273284 = enabled
    fix 13786127 = enabled
    fix 13065064 = enabled
    fix 13972896 = enabled
    fix 11843466 = enabled
    fix 13777823 = enabled
    fix 13616573 = enabled
    fix 13831671 = enabled
    fix 13652216 = enabled
    fix 13912192 = enabled
    fix 13909909 = enabled
    fix 13849486 = enabled
    fix 13321547 = enabled
    fix 13886606 = disabled
    fix 14013502 = enabled
    fix 13850256 = enabled
    fix 13929275 = enabled
    fix 11732303 = enabled
    fix 13906168 = enabled
    fix 14055128 = enabled
    fix 12856200 = enabled
    fix 14008590 = enabled
    fix 13627489 = disabled
    fix 13961105 = enabled
    fix 13583722 = enabled
    fix 13076238 = enabled
    fix 13936229 = enabled
    fix  9852856 = enabled
    fix  3904125 = enabled
    fix  5910187 = enabled
    fix 10068316 = enabled
    fix 14029891 = enabled
    fix  4215125 = enabled
    fix 13711083 = enabled
    fix 13973691 = enabled
    fix 13486825 = enabled
    fix 13682550 = enabled
    fix 13826669 = enabled
    fix 14033181 = enabled
    fix 13836796 = enabled
    fix 12555499 = enabled
    fix 13568506 = enabled
    fix  9891396 = enabled
    fix 13699643 = enabled
    fix 13835788 = enabled
    fix  7271518 = enabled
    fix 14127824 = enabled
    fix 12557401 = enabled
    fix 13350470 = enabled
    fix 14095362 = enabled
    fix 13000118 = enabled
    fix 14254795 = enabled
    fix 14012261 = enabled
    fix 14241953 = enabled
    fix 14221012 = enabled
    fix 13329748 = enabled
    fix 13843964 = enabled
    fix 14254052 = enabled
    fix 13814866 = enabled
    fix 14255600 = disabled
    fix 13735304 = enabled
    fix 14142884 = disabled
    fix 12909121 = enabled
    fix 14464068 = enabled
    fix 14295250 = 45000   
    fix  6873091 = enabled
    fix 13448445 = enabled
    fix 14155722 = enabled
    fix 14098180 = enabled
    fix 11905801 = enabled
    fix 14467202 = enabled
    fix 14541122 = enabled
    fix 13905599 = disabled
    fix 14320077 = enabled
    fix 14243782 = enabled
    fix  9114915 = enabled
    fix 14516175 = enabled
    fix 12812697 = enabled
    fix 13109345 = enabled
    fix 14456124 = enabled
    fix 14605040 = enabled
    fix 14595273 = disabled
    fix 14176247 = enabled
    fix 11894476 = enabled
    fix 14256885 = enabled
    fix 14545269 = disabled
    fix 14668404 = disabled
    fix 14144611 = enabled
    fix 14346182 = enabled
    fix 13083139 = enabled
    fix 14726188 = enabled
    fix 14707009 = enabled
    fix 14703133 = enabled
    fix 14618560 = enabled
    fix 14170552 = enabled
    fix 13263174 = enabled
    fix 14669785 = enabled
    fix 14633570 = enabled
    fix 14755138 = enabled
    fix 14682092 = enabled
    fix 14712222 = enabled
    fix 14570575 = enabled
    fix 14707748 = disabled
    fix 14684079 = enabled
    fix 13245379 = enabled
    fix 13853916 = enabled
    fix 13699007 = enabled
    fix 14843189 = enabled
    fix 14147762 = enabled
    fix 14795969 = enabled
    fix 14746036 = 1       
    fix 14750501 = enabled
    fix 13891981 = enabled
    fix 15996520 = enabled
    fix 16026776 = enabled
    fix 13573073 = enabled
    fix 13263455 = enabled
    fix 16053273 = enabled
    fix 16029607 = enabled
    fix 14242833 = enabled
    fix 13362020 = enabled
    fix 13799389 = enabled
    fix 12693573 = enabled
    fix 15998585 = enabled
    fix 16166364 = enabled
    fix 14723910 = enabled
    fix 15873008 = enabled
    fix 14133928 = enabled
    fix 16085999 = enabled
    fix 14176203 = enabled
    fix 16226575 = enabled
    fix 16015637 = enabled
    fix 15968693 = disabled
    fix 16220895 = enabled
    fix 16178821 = enabled
    fix 11865196 = enabled
    fix 16237969 = enabled
    fix 16058481 = enabled
    fix 13361493 = enabled
    fix 16264537 = enabled
    fix 14401107 = enabled
    fix 13943459 = enabled
    fix 13994546 = enabled
    fix  7174435 = enabled
    fix 14750443 = enabled
    fix 14469756 = enabled
    fix 14552075 = enabled
    fix 16324844 = enabled
    fix 13583529 = enabled
    fix 14565911 = enabled
    fix 13526551 = enabled
    fix 16368002 = enabled
    fix 16077770 = enabled
    fix 16419357 = enabled
    fix 15889476 = disabled
    fix 16273483 = enabled
    fix 16496848 = disabled
    fix 14107333 = enabled
    fix 11814337 = enabled
    fix 15882436 = enabled
    fix 14764840 = enabled
    fix 16226660 = enabled
    fix 16555865 = enabled
    fix 16625151 = enabled
    fix 16092378 = enabled
    fix 16487030 = enabled
    fix  9552303 = enabled
    fix 16609749 = enabled
    fix 16751246 = enabled
    fix 13253977 = enabled
    fix 14058291 = disabled
    fix 16749025 = enabled
    fix 16750067 = enabled
    fix 16726844 = enabled
    fix 15899648 = enabled
    fix 16690013 = enabled
    fix 15996156 = enabled
    fix 16544878 = enabled
    fix  9413591 = disabled
    fix 16792882 = 0       
    fix 16725982 = enabled
    fix 14648222 = enabled
    fix 16799181 = enabled
    fix 16516883 = enabled
    fix 16507317 = enabled
    fix 16837274 = enabled
    fix 14085520 = enabled
    fix 16713081 = enabled
    fix 14703295 = enabled
    fix 16908409 = enabled
    fix 16212250 = enabled
    fix 13692395 = disabled
    fix 17087729 = enabled
    fix 17088819 = enabled
    fix 13848786 = enabled
    fix 13522189 = enabled
    fix 16400122 = enabled
    fix 16796185 = enabled
    fix 15950252 = enabled
    fix 17070464 = enabled
    fix 16976121 = enabled
    fix 14580303 = enabled
    fix 16554552 = enabled
    fix 16582322 = enabled
    fix 16712213 = enabled
    fix 17382690 = enabled
    fix 14846352 = enabled
    fix 16516751 = enabled
    fix  3174223 = enabled
    fix  8611462 = enabled
    fix 14851437 = 3       
    fix 17348895 = enabled
    fix 16515789 = enabled
    fix  5451645 = disabled
    fix 14062749 = enabled
    fix 16346018 = enabled
    fix 12977599 = enabled
    fix 14191778 = enabled
    fix 15939321 = enabled
    fix 16874299 = enabled
    fix 16470836 = enabled
    fix 16805362 = disabled
    fix 17442009 = disabled
    fix 16825679 = enabled
    fix 17543180 = enabled
    fix 17301564 = enabled
    fix 12373708 = enabled
    fix 17397506 = enabled
    fix 14558315 = enabled
    fix 16615686 = enabled
    fix 16622801 = enabled
    fix 10038517 = enabled
    fix 16954950 = enabled
    fix 17728161 = enabled
    fix 17760375 = enabled
    fix 14311185 = enabled
    fix 13077335 = disabled
    fix 13458979 = disabled
    fix 17485514 = enabled
    fix 17599514 = enabled
    fix 17640863 = enabled
    fix 17716301 = enabled
    fix 17368047 = disabled
    fix 17597748 = enabled
    fix 17303359 = enabled
    fix 17376322 = disabled
    fix 16391176 = disabled
    fix 16673868 = enabled
    fix 17800514 = enabled
    fix 14826303 = enabled
    fix 17663076 = enabled
    fix 17760755 = enabled
    fix 17793460 = enabled
    fix 17997159 = enabled
    fix 17938754 = enabled
    fix 14733442 = enabled
    fix 17727676 = enabled
    fix 17781659 = enabled
    fix 17526569 = enabled
    fix 17950612 = enabled
    fix 17760686 = enabled
    fix 17696414 = enabled
    fix 17799716 = enabled
    fix 18116777 = enabled
    fix 18159664 = disabled
    fix 16052625 = enabled
    fix 18091750 = enabled
    fix 17572606 = enabled
    fix 17971955 = enabled
    fix 17946915 = enabled
    fix 18196576 = enabled
    fix 10145667 = enabled
    fix 17736165 = enabled
    fix 16434021 = enabled
    fix 18035463 = enabled
    fix 18011820 = enabled
    fix 16405740 = enabled
    fix 14612201 = enabled
    fix 17491018 = enabled
    fix 18365267 = enabled
    fix 17986549 = enabled
    fix 18115594 = enabled
    fix 18182018 = enabled
    fix 18302923 = enabled
    fix 18377553 = enabled
    fix  5677419 = enabled
    fix 17896018 = disabled
    fix 13097308 = enabled
    fix 17863980 = enabled
    fix 17567154 = enabled
    fix 18398980 = enabled
    fix 17023040 = enabled
    fix 17991403 = 1       
    fix 16033838 = enabled
    fix 17908541 = enabled
    fix 18134680 = enabled
    fix 18405517 = 0       
    fix 18304693 = enabled
    fix 18456944 = enabled
    fix 18467455 = enabled
    fix 18425876 = enabled
    fix 18508675 = enabled
    fix 17473046 = disabled
    fix 18636079 = enabled
    fix 18388128 = enabled
    fix 18415557 = enabled
    fix 18385778 = enabled
    fix 18308329 = enabled
    fix 18461984 = enabled
    fix 17973658 = enabled
    fix 18558952 = enabled
    fix  9912950 = enabled
    fix 18751128 = enabled
    fix 16809786 = enabled
    fix 18795224 = enabled
    fix 14776289 = enabled
    fix 18823135 = enabled
    fix 18874242 = enabled
    fix 18770199 = disabled
    fix  4185270 = disabled
    fix 18765574 = enabled
    fix 18754357 = disabled
    fix 18959892 = enabled
    fix 17324379 = disabled
    fix 18952882 = enabled
    fix 18924221 = enabled
    fix 18422714 = enabled
    fix 18798414 = enabled
    fix 18969167 = enabled
    fix 16191689 = enabled
    fix 18907562 = enabled
    fix 19055664 = enabled
    fix 18898582 = enabled
    fix 18960760 = enabled
    fix 19070454 = enabled
    fix 19230097 = enabled
    fix 19063497 = enabled
    fix 19046459 = enabled
    fix 19269482 = enabled
    fix 18876528 = enabled
    fix 19227996 = enabled
    fix 18864613 = enabled
    fix 19239478 = enabled
    fix 19451895 = enabled
    fix 19450139 = enabled
    fix 18907390 = enabled
    fix 19025959 = enabled
    fix 19309574 = enabled
    fix 16774698 = enabled
    fix 16923858 = 6       
    fix 19546825 = enabled
    fix 19475484 = enabled
    fix 19498595 = enabled
    fix 16934526 = enabled
    fix 19287919 = enabled
    fix 19386746 = enabled
    fix 19774486 = enabled
    fix 19803410 = enabled
    fix 18671960 = enabled
    fix 19484911 = enabled
    fix 19731940 = enabled
    fix 19604408 = enabled
    fix 14402409 = enabled
    fix 16486095 = enabled
    fix 19563657 = enabled
    fix 19632232 = enabled
    fix 19889960 = enabled
    fix 17208933 = enabled
    fix 19710102 = enabled
    fix 18697515 = enabled
    fix 18318631 = enabled
    fix 19377983 = enabled
    fix 20078639 = enabled
    fix 19503668 = enabled
    fix 20124288 = enabled
    fix 19847091 = enabled
    fix 12989345 = enabled
    fix 12618642 = enabled
    fix 19779920 = enabled
    fix 20186282 = enabled
    fix 20186295 = enabled
    fix 19563433 = enabled
    fix 19848804 = enabled
    fix 20046257 = enabled
    fix 20265690 = enabled
    fix 16047938 = enabled
    fix 19507904 = enabled
    fix 18915345 = enabled
    fix 20173686 = disabled
    fix 20329321 = enabled
    fix 20225191 = enabled
    fix 18776755 = enabled
    fix 19882842 = enabled
    fix 20010996 = enabled
    fix 20445764 = disabled
    fix 19728543 = disabled
    fix 20379571 = enabled
    fix 20129763 = enabled
    fix 19899588 = enabled
    fix 10098852 = enabled
    fix 19663421 = disabled
    fix 20355502 = 0       
    fix 20526705 = enabled
    fix 20465582 = enabled
    fix 20581886 = disabled
    fix 16732417 = enabled
    fix 20732410 = enabled
    fix 20289688 = enabled
    fix 20543684 = enabled
    fix 20636003 = enabled
    fix 20506136 = enabled
    fix 20458598 = disabled
    fix 20830312 = enabled
    fix 19768896 = enabled
    fix 20321661 = enabled
    fix 19814541 = enabled
    fix 20933264 = enabled
    fix 17443547 = enabled
    fix 20602794 = enabled
    fix 19123152 = enabled
    fix 19899833 = enabled
    fix 20754928 = enabled
    fix 20808265 = enabled
    fix 20808192 = enabled
    fix 20340595 = enabled
    fix 14474264 = disabled
    fix 20508819 = enabled
    fix 21098866 = disabled
    fix 18949550 = enabled
    fix 14775297 = enabled
    fix 19568958 = disabled
    fix 20923950 = enabled
    fix 21283159 = enabled
    fix 17497847 = enabled
    fix 21211629 = enabled
    fix 20819668 = disabled
    fix 20232513 = enabled
    fix 20906782 = enabled
    fix 20587527 = enabled
    fix 20914534 = disabled
    fix 20830544 = enabled
    fix 16851194 = enabled
    fix 19186783 = enabled
    fix 19653920 = enabled
    fix 21211786 = enabled
    fix 21057343 = enabled
    fix 21503478 = enabled
    fix 19808939 = disabled
    fix 21476032 = enabled
    fix 20859246 = enabled
    fix 20838633 = 2       
    fix 21639419 = enabled
    fix 20951803 = enabled
    fix 21683982 = enabled
    fix 20216500 = enabled
    fix 21614112 = enabled
    fix 20906162 = enabled
    fix 20854798 = enabled
    fix 21509656 = enabled
    fix 21833220 = enabled
    fix 21802552 = enabled
    fix 21452843 = enabled
    fix 21553593 = enabled
    fix 21093805 = enabled
    fix 16220085 = disabled
    fix 21800590 = enabled
    fix 21273039 = enabled
    fix 16750133 = enabled
    fix 22013607 = enabled
    fix 22152372 = enabled
    fix 22077191 = enabled
    fix 22123025 = enabled
    fix 16913734 = enabled
    fix  8357294 = enabled
    fix 12670904 = enabled
    fix 21979983 = enabled
    fix 22158526 = enabled
    fix 21971099 = enabled
    fix 22090662 = enabled
    fix 22149010 = disabled
    fix 21300129 = enabled
    fix 21339278 = enabled
    fix 20270511 = enabled
    fix 21424812 = enabled
    fix 22114090 = enabled
    fix 22310074 = disabled
    fix 22159570 = enabled
    fix 22272439 = enabled
    fix 22372694 = enabled
    fix 22514195 = enabled
    fix 20413540 = enabled
    fix 22520315 = enabled
    fix 22649054 = enabled
    fix  8617254 = enabled
    fix 22020067 = enabled
    fix 22864730 = enabled
    fix 21099502 = enabled
    fix 22904304 = enabled
    fix 22967807 = enabled
    fix 22879002 = enabled
    fix 23019286 = enabled
    fix 22760704 = enabled
    fix 20853506 = enabled
    fix 22540411 = disabled
    fix 22513493 = enabled
    fix 22518491 = enabled
    fix 23103096 = enabled
    fix 22143411 = enabled
    fix 23180670 = enabled
    fix 23002609 = enabled
    fix 22928015 = 1       
    fix 23210039 = enabled
    fix 23102649 = enabled
    fix 23071621 = enabled
    fix 22822245 = enabled
    fix 23136865 = enabled
    fix 23176721 = enabled
    fix 23308385 = enabled
    fix 23223113 = enabled
    fix 22301868 = disabled
    fix 22258300 = enabled
    fix 22205301 = enabled
    fix 23514473 = 1       
    fix 23556483 = enabled
    fix 21305617 = enabled
    fix 22533539 = enabled
    fix 23596611 = enabled
    fix 20347374 = disabled
    fix 22937293 = enabled
    fix 20107874 = enabled
    fix 19582337 = enabled
    fix 22746853 = enabled
    fix 23537232 = enabled
    fix 23565188 = enabled
    fix 20228468 = enabled
    fix 22393169 = enabled
    fix 24426912 = enabled
    fix 24690046 = enabled
    fix 23732552 = enabled
    fix 20648883 = enabled
    fix 24654471 = enabled
    fix 23738304 = enabled
    fix 24010030 = enabled
    fix 22766607 = enabled
    fix 24600280 = enabled
    fix 24845754 = enabled
    fix 24533235 = enabled
    fix 22128803 = enabled
    fix 24926999 = enabled
    fix 24434608 = enabled
    fix 25094218 = enabled
    fix 24819957 = enabled
    fix 23478835 = enabled
    fix 24745366 = enabled
    fix 24920138 = disabled
    fix 24570810 = enabled
    fix 25058954 = enabled
    fix 24518392 = enabled
    fix 23738186 = enabled
    fix 25234139 = enabled
    fix 25108065 = enabled
    fix 22212124 = enabled
    fix 25123105 = enabled
    fix 25078728 = enabled
    fix 23719498 = 0       
    fix 25090203 = enabled
    fix 23197730 = enabled
    fix 23738553 = enabled
    fix 22070473 = enabled
    fix 19956351 = enabled
    fix 25393617 = enabled
    fix 21130817 = enabled
    fix 25342352 = enabled
    fix 25167306 = disabled
    fix 23473108 = enabled
    fix 25501716 = enabled
    fix 22973474 = enabled
    fix 22153026 = enabled
    fix 25367727 = enabled
    fix 25477783 = enabled
    fix 25493582 = enabled
    fix 22205362 = enabled
    fix 23249829 = enabled
    fix 25120742 = enabled
    fix 23853877 = disabled
    fix 25796244 = enabled
    fix 25575369 = enabled
    fix 25643889 = disabled
    fix 25436615 = enabled
    fix 25478095 = enabled
    fix 25405100 = enabled
    fix 24952618 = enabled
    fix 25809211 = enabled
    fix 26094674 = enabled
    fix 21183079 = enabled
    fix 25948370 = enabled
    fix 24545933 = enabled
    fix 25926263 = enabled
    fix 26019148 = enabled
    fix 25995431 = enabled
    fix 21870589 = enabled
    fix 24584046 = enabled
    fix 26374214 = enabled
    fix 25476149 = enabled
    fix 25345279 = enabled
    fix 26290247 = disabled
    fix 24478915 = enabled
    fix 26541991 = enabled
    fix 26338880 = enabled
    fix 26270685 = disabled
    fix 26560136 = enabled
    fix 26671842 = enabled
    fix 26712343 = enabled
    fix 26585420 = enabled
    fix 26677151 = enabled
    fix 26367868 = enabled
    fix 25323193 = enabled
    fix 26552730 = disabled
    fix 26177646 = enabled
    fix 23643560 = enabled
    fix 25792706 = enabled
    fix 27057772 = disabled
    fix 24758816 = enabled
    fix 26986173 = disabled
    fix 26790514 = disabled
    fix 26423085 = disabled
    fix 27321179 = disabled
    fix 27745220 = disabled


Query Block Registry:
SEL$4 0x727ecfc8 (PARSER) [FINAL]
SEL$3 0x727eeae8 (PARSER) [FINAL]
SEL$2 0x727f0400 (PARSER) [FINAL]
SEL$1 0x0 (PARSER)
  SEL$56FBA5F4 0x0 (UNKNOWN QUERY BLOCK ORIGIN SEL$1; SEL$1; LIST 16)
  SEL$56FBA5F4 0x0 (UNKNOWN QUERY BLOCK ORIGIN SEL$1; SEL$1; LIST 16)
  SEL$8AF2EA6B 0x0 (UNKNOWN QUERY BLOCK ORIGIN SEL$1; SEL$1; LIST LIST 14)
  SEL$8AF2EA6B 0x0 (UNKNOWN QUERY BLOCK ORIGIN SEL$1; SEL$1; LIST LIST 14)
  SEL$1D24B11E 0x0 (UNKNOWN QUERY BLOCK ORIGIN SEL$1; SEL$1; LIST 13)
  SEL$1D24B11E 0x0 (UNKNOWN QUERY BLOCK ORIGIN SEL$1; SEL$1; LIST 13)
  SEL$67C23549 0x0 (UNKNOWN QUERY BLOCK ORIGIN SEL$1; SEL$1; LIST LIST 11)
  SEL$67C23549 0x0 (UNKNOWN QUERY BLOCK ORIGIN SEL$1; SEL$1; LIST LIST 11)
  SEL$DAF89EE2 0x0 (UNKNOWN QUERY BLOCK ORIGIN SEL$1; SEL$1; LIST 17) [FINAL]
  SEL$DAF89EE2 0x0 (UNKNOWN QUERY BLOCK ORIGIN SEL$1; SEL$1; LIST 17) [FINAL]
  SEL$FBA97E11 0x0 (UNKNOWN QUERY BLOCK ORIGIN SEL$1; SEL$1; LIST LIST 8)
  SEL$FBA97E11 0x0 (UNKNOWN QUERY BLOCK ORIGIN SEL$1; SEL$1; LIST LIST 8)
  SEL$8E90090D 0x0 (QUERY BLOCK TABLES CHANGED SEL$1)
    SEL$67676F75 0x0 (QUERY BLOCK TABLES CHANGED SEL$8E90090D)
      SEL$0D5C16D5 0x0 (SPLIT/MERGE QUERY BLOCKS SEL$67676F75)
        SEL$EB8F6131 0x0 (ELIMINATION OF GROUP BY SEL$0D5C16D5; SEL$0D5C16D5)
          SEL$26749286 0x0 (ELIMINATION OF GROUP BY SEL$EB8F6131; SEL$EB8F6131)
          SEL$26749286 0x0 (ELIMINATION OF GROUP BY SEL$EB8F6131; SEL$EB8F6131)
        SEL$EB8F6131 0x0 (ELIMINATION OF GROUP BY SEL$0D5C16D5; SEL$0D5C16D5)
          ...
    SEL$ACBFB8CC 0x0 (SPLIT/MERGE QUERY BLOCKS SEL$8E90090D) [FINAL]
  SEL$5084BC99 0x0 (UNKNOWN QUERY BLOCK ORIGIN SEL$1; SEL$1; LIST 7)
  SEL$5084BC99 0x0 (UNKNOWN QUERY BLOCK ORIGIN SEL$1; SEL$1; LIST 7)
  SEL$FD007FC2 0x0 (QUERY BLOCK TABLES CHANGED SEL$1)
    SEL$4DBD13CE 0x0 (QUERY BLOCK TABLES CHANGED SEL$FD007FC2)
      SEL$5A0F6FA7 0x0 (SPLIT/MERGE QUERY BLOCKS SEL$4DBD13CE)
    SEL$827DE9C7 0x0 (SPLIT/MERGE QUERY BLOCKS SEL$FD007FC2)
      SEL$4D1546CC 0x0 (ELIMINATION OF GROUP BY SEL$827DE9C7; SEL$827DE9C7)
        SEL$4C89B77A 0x0 (ELIMINATION OF GROUP BY SEL$4D1546CC; SEL$4D1546CC)
        SEL$4C89B77A 0x0 (ELIMINATION OF GROUP BY SEL$4D1546CC; SEL$4D1546CC)
      SEL$4D1546CC 0x0 (ELIMINATION OF GROUP BY SEL$827DE9C7; SEL$827DE9C7)
        ...
  SEL$9B5E143E 0x0 (UNKNOWN QUERY BLOCK ORIGIN SEL$1; SEL$1; LIST LIST 5)
  SEL$9B5E143E 0x0 (UNKNOWN QUERY BLOCK ORIGIN SEL$1; SEL$1; LIST LIST 5)
  SEL$7132965F 0x0 (QUERY BLOCK TABLES CHANGED SEL$1)
    SEL$66807F45 0x0 (QUERY BLOCK TABLES CHANGED SEL$7132965F)
      SEL$3D8AB28F 0x0 (SPLIT/MERGE QUERY BLOCKS SEL$66807F45)
    SEL$E055AE3E 0x0 (SPLIT/MERGE QUERY BLOCKS SEL$7132965F)
  SEL$B154D144 0x0 (UNKNOWN QUERY BLOCK ORIGIN SEL$1; SEL$1; LIST 4)
  SEL$B154D144 0x0 (UNKNOWN QUERY BLOCK ORIGIN SEL$1; SEL$1; LIST 4)
  SEL$C73B0CC3 0x0 (QUERY BLOCK TABLES CHANGED SEL$1)
    SEL$7200397A 0x0 (QUERY BLOCK TABLES CHANGED SEL$C73B0CC3)
      SEL$68F80278 0x0 (SPLIT/MERGE QUERY BLOCKS SEL$7200397A)
    SEL$DC996EF9 0x0 (SPLIT/MERGE QUERY BLOCKS SEL$C73B0CC3)
  SEL$F7BA66FC 0x0 (UNKNOWN QUERY BLOCK ORIGIN SEL$1; SEL$1; LIST LIST 2)
  SEL$F7BA66FC 0x0 (UNKNOWN QUERY BLOCK ORIGIN SEL$1; SEL$1; LIST LIST 2)
  SEL$F67CBA62 0x0 (QUERY BLOCK TABLES CHANGED SEL$1)
    SEL$F13E154C 0x0 (QUERY BLOCK TABLES CHANGED SEL$F67CBA62)
      SEL$D869EBF0 0x0 (SPLIT/MERGE QUERY BLOCKS SEL$F13E154C)
    SEL$F5B72DD9 0x0 (SPLIT/MERGE QUERY BLOCKS SEL$F67CBA62)
  SEL$B7DF437B 0x0 (UNKNOWN QUERY BLOCK ORIGIN SEL$1; SEL$1; LIST 1)
  SEL$B7DF437B 0x0 (UNKNOWN QUERY BLOCK ORIGIN SEL$1; SEL$1; LIST 1)
  SEL$6B22DB24 0x0 (QUERY BLOCK TABLES CHANGED SEL$1)
    SEL$9AE0327A 0x0 (SPLIT/MERGE QUERY BLOCKS SEL$6B22DB24)

:
    call(in-use=2307616, alloc=2342472), compile(in-use=4569600, alloc=4659912), execution(in-use=146840, alloc=150048)

End of Optimizer State Dump
Dumping Hints
=============
====================== END SQL Statement Dump ======================
