# vi:syntax=sql

Trace file /u01/app/oracle/diag/rdbms/lin183/LIN183/trace/LIN183_ora_17733_0001.trc
Oracle Database 18c Enterprise Edition Release 18.0.0.0.0 - Production
Version 18.3.0.0.0
Build label:    RDBMS_18.1.0.0.0_LINUX.X64_180103.1
ORACLE_HOME:    /u01/app/oracle/product/18.0.0/dbhome_1
System name:	Linux
Node name:	oel7.localdomain
Release:	4.14.35-1818.2.1.el7uek.x86_64
Version:	#2 SMP Mon Aug 27 21:16:31 PDT 2018
Machine:	x86_64
Instance name: LIN183
Redo thread mounted by this instance: 1
Oracle process number: 38
Unix process pid: 17733, image: oracle@oel7.localdomain


*** 2018-09-21T20:13:31.976872-04:00
*** SESSION ID:(255.11168) 2018-09-21T20:13:31.976895-04:00
*** CLIENT ID:() 2018-09-21T20:13:31.976899-04:00
*** SERVICE NAME:(LIN183) 2018-09-21T20:13:31.976904-04:00
*** MODULE NAME:(SQL*Plus) 2018-09-21T20:13:31.976908-04:00
*** ACTION NAME:() 2018-09-21T20:13:31.976912-04:00
*** CLIENT DRIVER:(SQL*PLUS) 2018-09-21T20:13:31.976916-04:00
 
Registered qb: SEL$1 0xa1a1cb78 (PARSER)
---------------------
QUERY BLOCK SIGNATURE
---------------------
  signature (): qb_name=SEL$1 nbfros=1 flg=0
    fro(0): flg=5 objn=0 hint_alias="from$_subquery$_001"@"SEL$1"

Registered qb: SEL$2 0xa1a19b00 (PARSER)
---------------------
QUERY BLOCK SIGNATURE
---------------------
  signature (): qb_name=SEL$2 nbfros=3 flg=0
    fro(0): flg=4 objn=75080 hint_alias="CUSTOMERS"@"SEL$2"
    fro(1): flg=4 objn=74993 hint_alias="SALES"@"SEL$2"
    fro(2): flg=4 objn=75132 hint_alias="TIMES"@"SEL$2"


**************************
Automatic degree of parallelism (AUTODOP)
**************************
Automatic degree of parallelism is disabled: hinted.
kkopqSetForceParallelProperties: Hint:yes
Query: compute:no forced:yes forceDop:1
Global Manual Dop: 1 - Rounded?: no
kkopqSetDopReason: Reason why we chose this DOP is: hint.
hint forces parallelism with dop=1

PM: Considering predicate move-around in query block SEL$1 (#0)
**************************
Predicate Move-Around (PM)
**************************
OPTIMIZER INFORMATION

******************************************
----- Current SQL Statement for this session (sql_id=0skx8c6t9ntz7) -----
SELECT /*+ monitor no_parallel tanel4 */
    *
FROM
    (
        SELECT
            times.calendar_quarter_desc,
            customers.cust_first_name,
            customers.cust_last_name,
            customers.cust_id,
            SUM(sales.amount_sold),
            RANK() OVER(
                PARTITION BY times.calendar_quarter_desc
                ORDER BY
                    SUM(amount_sold) DESC
            ) AS rank_within_quarter
        FROM
            sales,
            customers,
            times
        WHERE
            -- join conditions
                sales.cust_id = customers.cust_id
            AND times.time_id = sales.time_id
            -- filter conditions
            AND times.calendar_quarter_desc = '2010-4'
        GROUP BY
            customers.cust_id,
            customers.cust_first_name,
            customers.cust_last_name,
            customers.cust_id,
            times.calendar_quarter_desc
    )
WHERE
    rank_within_quarter < 16
*******************************************
Legend
The following abbreviations are used by optimizer trace.
CBQT - cost-based query transformation
JPPD - join predicate push-down
OJPPD - old-style (non-cost-based) JPPD
FPD - filter push-down
PM - predicate move-around
CVM - complex view merging
SPJ - select-project-join
SJC - set join conversion
SU - subquery unnesting
OBYE - order by elimination
OST - old style star transformation
ST - new (cbqt) star transformation
CNT - count(col) to count(*) transformation
JE - Join Elimination
JF - join factorization
CBY - connect by
SLP - select list pruning
DP - distinct placement
VT - vector transformation
AAT - Approximate Aggregate Transformation
ORE - CBQT OR-Expansion
LORE - Legacy OR-Expansion
qb - query block
LB - leaf blocks
DK - distinct keys
LB/K - average number of leaf blocks per key
DB/K - average number of data blocks per key
CLUF - clustering factor
NDV - number of distinct values
Resp - response cost
Card - cardinality
Resc - resource cost
NL - nested loops (join)
SM - sort merge (join)
HA - hash (join)
CPUSPEED - CPU Speed 
IOTFRSPEED - I/O transfer speed
IOSEEKTIM - I/O seek time
SREADTIM - average single block read time
MREADTIM - average multiblock read time
MBRC - average multiblock read count
MAXTHR - maximum I/O system throughput
SLAVETHR - average slave I/O throughput
dmeth - distribution method
  1: no partitioning required
  2: value partitioned
  4: right is random (round-robin)
  128: left is random (round-robin)
  8: broadcast right and partition left
  16: broadcast left and partition right
  32: partition left using partitioning of right
  64: partition right using partitioning of left
  256: run the join in serial
  0: invalid distribution method
sel - selectivity
ptn - partition
AP - adaptive plans
***************************************
PARAMETERS USED BY THE OPTIMIZER
********************************
  *************************************
  PARAMETERS WITH ALTERED VALUES
  ******************************
Compilation Environment Dump
_optimizer_adaptive_cursor_sharing  = false
optimizer_use_sql_plan_baselines    = false
parallel_hinted                     = serial
_optimizer_use_feedback             = false
_px_adaptive_dist_method            = off
_optimizer_strans_adaptive_pruning  = false
_optimizer_nlj_hj_adaptive_join     = false
optimizer_adaptive_plans            = false
Bug Fix Control Environment


  *************************************
  PARAMETERS WITH DEFAULT VALUES
  ******************************
Compilation Environment Dump
optimizer_mode_hinted               = false
optimizer_features_hinted           = 0.0.0
parallel_execution_enabled          = true
parallel_query_forced_dop           = 0
parallel_dml_forced_dop             = 0
parallel_ddl_forced_degree          = 0
parallel_ddl_forced_instances       = 0
_query_rewrite_fudge                = 90
optimizer_features_enable           = 18.1.0
_optimizer_search_limit             = 5
cpu_count                           = 6
active_instance_count               = 1
parallel_threads_per_cpu            = 1
hash_area_size                      = 131072
bitmap_merge_area_size              = 1048576
sort_area_size                      = 65536
sort_area_retained_size             = 0
_sort_elimination_cost_ratio        = 0
_optimizer_block_size               = 8192
_sort_multiblock_read_count         = 2
_hash_multiblock_io_count           = 0
_db_file_optimizer_read_count       = 8
_optimizer_max_permutations         = 2000
pga_aggregate_target                = 512000 KB
_pga_max_size                       = 204800 KB
_query_rewrite_maxdisjunct          = 257
_smm_auto_min_io_size               = 56 KB
_smm_auto_max_io_size               = 248 KB
_smm_min_size                       = 512 KB
_smm_max_size_static                = 102400 KB
_smm_px_max_size_static             = 256000 KB
_cpu_to_io                          = 0
_optimizer_undo_cost_change         = 18.1.0
parallel_query_mode                 = enabled
_enable_parallel_dml                = disabled
parallel_ddl_mode                   = enabled
optimizer_mode                      = all_rows
sqlstat_enabled                     = false
_optimizer_percent_parallel         = 101
_always_anti_join                   = choose
_always_semi_join                   = choose
_optimizer_mode_force               = true
_partition_view_enabled             = true
_always_star_transformation         = false
_query_rewrite_or_error             = false
_hash_join_enabled                  = true
cursor_sharing                      = exact
_b_tree_bitmap_plans                = true
star_transformation_enabled         = false
_optimizer_cost_model               = choose
_new_sort_cost_estimate             = true
_complex_view_merging               = true
_unnest_subquery                    = true
_eliminate_common_subexpr           = true
_pred_move_around                   = true
_convert_set_to_join                = false
_push_join_predicate                = true
_push_join_union_view               = true
_fast_full_scan_enabled             = true
_optim_enhance_nnull_detection      = true
_parallel_broadcast_enabled         = true
_px_broadcast_fudge_factor          = 100
_ordered_nested_loop                = true
_no_or_expansion                    = false
optimizer_index_cost_adj            = 100
optimizer_index_caching             = 0
_system_index_caching               = 0
_disable_datalayer_sampling         = false
query_rewrite_enabled               = true
query_rewrite_integrity             = enforced
_query_cost_rewrite                 = true
_query_rewrite_2                    = true
_query_rewrite_1                    = true
_query_rewrite_expression           = true
_query_rewrite_jgmigrate            = true
_query_rewrite_fpc                  = true
_query_rewrite_drj                  = false
_full_pwise_join_enabled            = true
_partial_pwise_join_enabled         = true
_left_nested_loops_random           = true
_improved_row_length_enabled        = true
_index_join_enabled                 = true
_enable_type_dep_selectivity        = true
_improved_outerjoin_card            = true
_optimizer_adjust_for_nulls         = true
_optimizer_degree                   = 0
_use_column_stats_for_function      = true
_subquery_pruning_enabled           = true
_subquery_pruning_mv_enabled        = false
_or_expand_nvl_predicate            = true
_like_with_bind_as_equality         = false
_table_scan_cost_plus_one           = true
_cost_equality_semi_join            = true
_default_non_equality_sel_check     = true
_new_initial_join_orders            = true
_oneside_colstat_for_equijoins      = true
_optim_peek_user_binds              = true
_minimal_stats_aggregation          = true
_force_temptables_for_gsets         = false
workarea_size_policy                = auto
_smm_auto_cost_enabled              = true
_gs_anti_semi_join_allowed          = true
_optim_new_default_join_sel         = true
optimizer_dynamic_sampling          = 2
_pre_rewrite_push_pred              = true
_optimizer_new_join_card_computation = true
_union_rewrite_for_gs               = yes_gset_mvs
_generalized_pruning_enabled        = true
_optim_adjust_for_part_skews        = true
_force_datefold_trunc               = false
statistics_level                    = typical
_optimizer_system_stats_usage       = true
skip_unusable_indexes               = true
_remove_aggr_subquery               = true
_optimizer_push_down_distinct       = 0
_dml_monitoring_enabled             = true
_optimizer_undo_changes             = false
_predicate_elimination_enabled      = true
_nested_loop_fudge                  = 100
_project_view_columns               = true
_local_communication_costing_enabled = true
_local_communication_ratio          = 50
_query_rewrite_vop_cleanup          = true
_slave_mapping_enabled              = true
_optimizer_cost_based_transformation = linear
_optimizer_mjc_enabled              = true
_right_outer_hash_enable            = true
_spr_push_pred_refspr               = true
_optimizer_cache_stats              = false
_optimizer_cbqt_factor              = 50
_optimizer_squ_bottomup             = true
_fic_area_size                      = 131072
_optimizer_skip_scan_enabled        = true
_optimizer_cost_filter_pred         = false
_optimizer_sortmerge_join_enabled   = true
_optimizer_join_sel_sanity_check    = true
_mmv_query_rewrite_enabled          = true
_bt_mmv_query_rewrite_enabled       = true
_add_stale_mv_to_dependency_list    = true
_distinct_view_unnesting            = false
_optimizer_dim_subq_join_sel        = true
_optimizer_disable_strans_sanity_checks = 0
_optimizer_compute_index_stats      = true
_push_join_union_view2              = true
optimizer_ignore_hints              = false
_optimizer_random_plan              = 0
_query_rewrite_setopgrw_enable      = true
_optimizer_correct_sq_selectivity   = true
_disable_function_based_index       = false
_optimizer_join_order_control       = 3
_optimizer_cartesian_enabled        = true
_optimizer_starplan_enabled         = true
_extended_pruning_enabled           = true
_optimizer_push_pred_cost_based     = true
_optimizer_null_aware_antijoin      = true
_optimizer_extend_jppd_view_types   = true
_sql_model_unfold_forloops          = run_time
_enable_dml_lock_escalation         = false
_bloom_filter_enabled               = true
_update_bji_ipdml_enabled           = 0
_optimizer_extended_cursor_sharing  = udo
_dm_max_shared_pool_pct             = 1
_optimizer_cost_hjsmj_multimatch    = true
_optimizer_transitivity_retain      = true
_px_pwg_enabled                     = true
optimizer_secure_view_merging       = true
_optimizer_join_elimination_enabled = true
flashback_table_rpi                 = non_fbt
_optimizer_cbqt_no_size_restriction = true
_optimizer_enhanced_filter_push     = true
_optimizer_filter_pred_pullup       = true
_rowsrc_trace_level                 = 0
_simple_view_merging                = true
_optimizer_rownum_pred_based_fkr    = true
_optimizer_better_inlist_costing    = all
_optimizer_self_induced_cache_cost  = false
_optimizer_min_cache_blocks         = 10
_optimizer_or_expansion             = depth
_optimizer_order_by_elimination_enabled = true
_optimizer_outer_to_anti_enabled    = true
_selfjoin_mv_duplicates             = true
_dimension_skip_null                = true
_force_rewrite_enable               = false
_optimizer_star_tran_in_with_clause = true
_optimizer_complex_pred_selectivity = true
_optimizer_connect_by_cost_based    = true
_gby_hash_aggregation_enabled       = true
_globalindex_pnum_filter_enabled    = true
_px_minus_intersect                 = true
_fix_control_key                    = 0
_force_slave_mapping_intra_part_loads = false
_force_tmp_segment_loads            = false
_query_mmvrewrite_maxpreds          = 10
_query_mmvrewrite_maxintervals      = 5
_query_mmvrewrite_maxinlists        = 5
_query_mmvrewrite_maxdmaps          = 10
_query_mmvrewrite_maxcmaps          = 20
_query_mmvrewrite_maxregperm        = 512
_query_mmvrewrite_maxqryinlistvals  = 500
_disable_parallel_conventional_load = false
_trace_virtual_columns              = false
_replace_virtual_columns            = true
_virtual_column_overload_allowed    = true
_kdt_buffering                      = true
_first_k_rows_dynamic_proration     = true
_optimizer_sortmerge_join_inequality = true
_optimizer_aw_stats_enabled         = true
_bloom_pruning_enabled              = true
result_cache_mode                   = MANUAL
_px_ual_serial_input                = true
_optimizer_skip_scan_guess          = false
_enable_row_shipping                = true
_row_shipping_threshold             = 100
_row_shipping_explain               = false
transaction_isolation_level         = read_commited
_optimizer_distinct_elimination     = true
_optimizer_multi_level_push_pred    = true
_optimizer_group_by_placement       = true
_optimizer_rownum_bind_default      = 10
_enable_query_rewrite_on_remote_objs = true
_optimizer_extended_cursor_sharing_rel = simple
_direct_path_insert_features        = 0
_optimizer_improve_selectivity      = true
optimizer_use_pending_statistics    = false
_optimizer_enable_density_improvements = true
_optimizer_aw_join_push_enabled     = true
_optimizer_connect_by_combine_sw    = true
_enable_pmo_ctas                    = 0
_optimizer_native_full_outer_join   = force
_bloom_predicate_enabled            = true
_optimizer_enable_extended_stats    = true
_is_lock_table_for_ddl_wait_lock    = 0
_pivot_implementation_method        = choose
optimizer_capture_sql_plan_baselines = false
_optimizer_star_trans_min_cost      = 0
_optimizer_star_trans_min_ratio     = 0
_with_subquery                      = OPTIMIZER
_optimizer_fkr_index_cost_bias      = 10
_optimizer_use_subheap              = true
parallel_degree_policy              = manual
parallel_degree                     = 0
parallel_min_time_threshold         = 10
_parallel_time_unit                 = 10
_optimizer_or_expansion_subheap     = true
_optimizer_free_transformation_heap = true
_optimizer_reuse_cost_annotations   = true
_result_cache_auto_size_threshold   = 100
_result_cache_auto_time_threshold   = 1000
_optimizer_nested_rollup_for_gset   = 100
_nlj_batching_enabled               = 1
parallel_query_default_dop          = 0
is_recur_flags                      = 0
optimizer_use_invisible_indexes     = false
flashback_data_archive_internal_cursor = 0
_optimizer_extended_stats_usage_control = 192
_parallel_syspls_obey_force         = true
cell_offload_processing             = true
_rdbms_internal_fplib_enabled       = false
db_file_multiblock_read_count       = 123
_bloom_folding_enabled              = true
_mv_generalized_oj_refresh_opt      = true
cell_offload_compaction             = ADAPTIVE
cell_offload_plan_display           = AUTO
_bloom_predicate_offload            = true
_bloom_filter_size                  = 0
_bloom_pushing_max                  = 512
parallel_degree_limit               = 65535
parallel_force_local                = false
parallel_max_degree                 = 6
total_cpu_count                     = 6
_optimizer_coalesce_subqueries      = true
_optimizer_fast_pred_transitivity   = true
_optimizer_fast_access_pred_analysis = true
_optimizer_unnest_disjunctive_subq  = true
_optimizer_unnest_corr_set_subq     = true
_optimizer_distinct_agg_transform   = true
_aggregation_optimization_settings  = 0
_optimizer_connect_by_elim_dups     = true
_optimizer_eliminate_filtering_join = true
_connect_by_use_union_all           = true
dst_upgrade_insert_conv             = true
advanced_queuing_internal_cursor    = 0
_optimizer_unnest_all_subqueries    = true
parallel_autodop                    = 0
parallel_ddldml                     = 0
_parallel_cluster_cache_policy      = adaptive
_parallel_scalability               = 50
iot_internal_cursor                 = 0
_optimizer_instance_count           = 0
_optimizer_connect_by_cb_whr_only   = false
_suppress_scn_chk_for_cqn           = nosuppress_1466
_optimizer_join_factorization       = true
_optimizer_use_cbqt_star_transformation = true
_optimizer_table_expansion          = true
_and_pruning_enabled                = true
_deferred_constant_folding_mode     = DEFAULT
_optimizer_distinct_placement       = true
partition_pruning_internal_cursor   = 0
_sql_compatibility                  = 0
_optimizer_try_st_before_jppd       = true
_dml_frequency_tracking             = false
_optimizer_interleave_jppd          = true
kkb_drop_empty_segments             = 0
_px_partition_scan_enabled          = true
_px_partition_scan_threshold        = 64
_optimizer_false_filter_pred_pullup = true
_bloom_minmax_enabled               = true
only_move_row                       = 0
_optimizer_enable_table_lookup_by_nl = true
parallel_execution_message_size     = 16384
_px_loc_msg_cost                    = 1000
_px_net_msg_cost                    = 10000
_optimizer_generate_transitive_pred = true
_optimizer_cube_join_enabled        = true
_optimizer_filter_pushdown          = true
deferred_segment_creation           = true
_optimizer_outer_join_to_inner      = true
_allow_level_without_connect_by     = false
_max_rwgs_groupings                 = 8192
_optimizer_hybrid_fpwj_enabled      = true
_px_replication_enabled             = true
ilm_filter                          = 0
_optimizer_partial_join_eval        = true
_px_concurrent                      = true
_px_object_sampling_enabled         = true
_px_back_to_parallel                = OFF
_optimizer_unnest_scalar_sq         = true
_optimizer_full_outer_join_to_outer = true
_px_filter_parallelized             = true
_px_filter_skew_handling            = true
_zonemap_use_enabled                = true
_zonemap_control                    = 0
_optimizer_multi_table_outerjoin    = true
_px_groupby_pushdown                = force
_partition_advisor_srs_active       = true
_optimizer_ansi_join_lateral_enhance = true
_px_parallelize_expression          = true
_fast_index_maintenance             = true
_optimizer_ansi_rearchitecture      = true
_optimizer_gather_stats_on_load     = true
ilm_access_tracking                 = 0
ilm_dml_timestamp                   = 0
_px_adaptive_dist_method_threshold  = 0
_optimizer_batch_table_access_by_rowid = true
optimizer_adaptive_reporting_only   = false
_optimizer_ads_max_table_count      = 0
_optimizer_ads_time_limit           = 0
_optimizer_ads_use_result_cache     = true
_px_wif_dfo_declumping              = choose
_px_wif_extend_distribution_keys    = true
_px_join_skew_handling              = true
_px_join_skew_ratio                 = 10
_px_join_skew_minfreq               = 30
CLI_internal_cursor                 = 0
_parallel_fault_tolerance_enabled   = false
_parallel_fault_tolerance_threshold = 3
_px_partial_rollup_pushdown         = adaptive
_px_single_server_enabled           = true
_optimizer_dsdir_usage_control      = 0
_px_cpu_autodop_enabled             = true
_px_cpu_process_bandwidth           = 200
_sql_hvshare_threshold              = 0
_px_tq_rowhvs                       = true
_optimizer_use_gtt_session_stats    = true
_optimizer_proc_rate_level          = basic
_px_hybrid_TSM_HWMB_load            = true
_optimizer_use_histograms           = true
PMO_altidx_rebuild                  = 0
_cell_offload_expressions           = true
_cell_materialize_virtual_columns   = true
_cell_materialize_all_expressions   = false
_rowsets_enabled                    = true
_rowsets_target_maxsize             = 524288
_rowsets_max_rows                   = 256
_use_hidden_partitions              = 0
_px_monitor_load                    = false
_px_load_monitor_threshold          = 10000
_px_numa_support_enabled            = false
total_processor_group_count         = 1
_adaptive_window_consolidator_enabled = true
_bloom_rm_filter                    = false
_optimizer_null_accepting_semijoin  = true
_long_varchar_allow_IOT             = 0
_parallel_ctas_enabled              = true
_cell_offload_complex_processing    = true
_optimizer_performance_feedback     = off
_optimizer_proc_rate_source         = DEFAULT
_hashops_prefetch_size              = 4
_cell_offload_sys_context           = true
_multi_commit_global_index_maint    = 0
_stat_aggs_one_pass_algorithm       = false
_dbg_scan                           = 0
_oltp_comp_dbg_scan                 = 0
_arch_comp_dbg_scan                 = 0
_optimizer_gather_feedback          = true
_upddel_dba_hash_mask_bits          = 0
_px_pwmr_enabled                    = true
_px_cdb_view_enabled                = true
_bloom_sm_enabled                   = true
_optimizer_cluster_by_rowid         = true
_optimizer_cluster_by_rowid_control = 129
_partition_cdb_view_enabled         = true
_common_data_view_enabled           = true
_pred_push_cdb_view_enabled         = true
_rowsets_cdb_view_enabled           = true
_distinct_agg_optimization_gsets    = choose
_array_cdb_view_enabled             = true
_optimizer_adaptive_plan_control    = 0
_optimizer_adaptive_random_seed     = 0
_optimizer_cbqt_or_expansion        = on
_inmemory_dbg_scan                  = 0
_gby_vector_aggregation_enabled     = true
_optimizer_vector_transformation    = true
_optimizer_vector_fact_dim_ratio    = 10
_key_vector_max_size                = 0
_key_vector_predicate_enabled       = true
_key_vector_predicate_threshold     = 0
_vector_operations_control          = 0
_optimizer_vector_min_fact_rows     = 10000000
parallel_dblink                     = 0
_px_scalable_invdist                = true
_key_vector_offload                 = predicate
_optimizer_aggr_groupby_elim        = true
_optimizer_reduce_groupby_key       = true
_vector_serialize_temp_threshold    = 1000
_always_vector_transformation       = false
_optimizer_cluster_by_rowid_batched = true
_object_link_fixed_enabled          = true
optimizer_inmemory_aware            = true
_optimizer_inmemory_table_expansion = true
_optimizer_inmemory_gen_pushable_preds = true
_optimizer_inmemory_autodop         = true
_optimizer_inmemory_access_path     = true
_optimizer_inmemory_bloom_filter    = true
_parallel_inmemory_min_time_threshold = 1
_parallel_inmemory_time_unit        = 1
_rc_sys_obj_enabled                 = true
_indexable_con_id                   = true
_bloom_serial_filter                = on
inmemory_force                      = default
inmemory_query                      = enable
_inmemory_query_scan                = true
_inmemory_query_fetch_by_rowid      = false
_inmemory_pruning                   = on
_px_autodop_pq_overhead             = true
_px_external_table_default_stats    = true
_optimizer_key_vector_aggr_factor   = 75
_optimizer_vector_cost_adj          = 100
_cdb_cross_container                = 65535
_cdb_view_parallel_degree           = 65535
_optimizer_hll_entry                = 4096
_px_cdb_view_join_enabled           = true
inmemory_size                       = 0
_external_table_smart_scan          = hadoop_only
_optimizer_inmemory_minmax_pruning  = true
_approx_cnt_distinct_gby_pushdown   = choose
_approx_cnt_distinct_optimization   = 0
_optimizer_ads_use_partial_results  = true
_query_execution_time_limit         = 0
_optimizer_inmemory_cluster_aware_dop = true
_optimizer_db_blocks_buffers        = 0 KB
_query_rewrite_use_on_query_computation = true
_px_scalable_invdist_mcol           = true
_optimizer_bushy_join               = off
_optimizer_bushy_fact_dim_ratio     = 20
_optimizer_bushy_fact_min_size      = 100000
_optimizer_bushy_cost_factor        = 100
_rmt_for_table_redef_enabled        = true
_optimizer_eliminate_subquery       = true
_sqlexec_cache_aware_hash_join_enabled = true
_zonemap_usage_tracking             = true
_sqlexec_hash_based_distagg_enabled = false
_sqlexec_disable_hash_based_distagg_tiv = false
_sqlexec_hash_based_distagg_ssf_enabled = true
_sqlexec_distagg_optimization_settings = 0
approx_for_aggregation              = false
approx_for_count_distinct           = false
_optimizer_union_all_gsets          = true
_rowsets_use_encoding               = true
_rowsets_max_enc_rows               = 64
_optimizer_enhanced_join_elimination = true
_optimizer_multicol_join_elimination = true
_key_vector_create_pushdown_threshold = 20000
_optimizer_enable_plsql_stats       = true
_recursive_with_parallel            = true
_recursive_with_branch_iterations   = 7
_px_dist_agg_partial_rollup_pushdown = adaptive
_px_adaptive_dist_bypass_enabled    = true
_enable_view_pdb                    = true
_optimizer_key_vector_pruning_enabled = true
_pwise_distinct_enabled             = true
_recursive_with_using_temp_table    = false
_partition_read_only                = true
_sql_alias_scope                    = true
_cdb_view_no_skip_migrate           = false
_approx_perc_sampling_err_rate      = 2
_sqlexec_encoding_aware_hj_enabled  = true
rim_node_exist                      = 0
_enable_containers_subquery         = true
_force_containers_subquery          = false
_cell_offload_vector_groupby        = true
_vector_encoding_mode               = manual
_ds_xt_split_count                  = 1
_ds_sampling_method                 = PROGRESSIVE
_optimizer_ads_use_spd_cache        = true
_optimizer_use_table_scanrate       = HADOOP_ONLY
_optimizer_use_xt_rowid             = true
_xt_sampling_scan_granules          = on
_recursive_with_control             = 0
_sqlexec_use_rwo_aware_expr_analysis = true
_optimizer_band_join_aware          = true
_optimizer_vector_base_dim_fact_factor = 200
approx_for_percentile               = none
_approx_percentile_optimization     = 0
_projection_pushdown                = true
_px_object_sampling                 = 200
_optimizer_adaptive_plans_continuous = false
_optimizer_adaptive_plans_iterative = false
_ds_enable_view_sampling            = true
_optimizer_generate_ptf_implied_preds = true
_optimizer_inmemory_use_stored_stats = AUTO
_cdb_special_old_xplan              = true
uniaud_internal_cursor              = 0
_kd_dbg_control                     = 0
_mv_access_compute_fresh_data       = on
_bloom_filter_ratio                 = 35
_optimizer_control_shard_qry_processing = 65528
containers_parallel_degree          = 65535
sql_from_coordinator                = 0
_xt_sampling_scan_granules_min_granules = 1
_in_memory_cdt                      = LIMITED
_in_memory_cdt_maxpx                = 4
_px_partition_load_dist_threshold   = 64
_px_adaptive_dist_bypass_optimization = 1
_optimizer_interleave_or_expansion  = true
optimizer_adaptive_statistics       = false
_optimizer_use_feedback_for_join    = false
_optimizer_ads_for_pq               = false
_px_join_skewed_values_count        = 0
optimizer_ignore_parallel_hints     = false
parallel_min_degree                 = 1
_px_nlj_bcast_rr_threshold          = 10
_optimizer_gather_stats_on_load_all = false
_optimizer_gather_stats_on_load_hist = false
_optimizer_allow_all_access_paths   = true
_key_vector_double_enabled          = true
_key_vector_timestamp_enabled       = true
_optimizer_answering_query_using_stats = false
_disable_dblink_optim               = true
_cell_offload_hybrid_processing     = true
_read_optimized_table_lookup        = true
_optimizer_key_vector_payload       = true
_optimizer_vector_fact_payload_ratio = 20
_bloom_pruning_setops_enabled       = true
_bloom_filter_setops_enabled        = true
_key_vector_shared_dgk_ht           = true
_px_pwise_wif_enabled               = true
_sqlexec_reorder_wif_enabled        = true
_px_partition_skew_threshold        = 80
_sqlexec_pwiseops_with_sqlfuncs_enabled = true
_sqlexec_pwiseops_with_binds_enabled = true
_px_shared_hash_join                = false
_px_reuse_server_groups             = multi
_px_join_skew_null_handling         = true
_px_join_skew_use_histogram         = true
_px_join_skew_sampling_time_limit   = 50
_px_join_skew_sampling_percent      = 0
_cdb_view_no_skip_restricted        = false
_inmemory_external_table            = true
_sqlexec_use_kgghash3               = true
_cell_offload_vector_groupby_force  = false
_hcs_opt_av_pred_push               = true
parallel_dop_doubled                = 0

  ***************************************
  PARAMETERS IN OPT_PARAM HINT
  ****************************
***************************************
Column Usage Monitoring is ON: tracking level = 21
***************************************

Considering Query Transformations on query block SEL$1 (#0)
**************************
Query transformations (QT)
**************************
CBQT: Validity checks passed for 0skx8c6t9ntz7.
CSE: Considering common sub-expression elimination in query block SEL$1 (#0)
*************************
Common Subexpression elimination (CSE)
*************************
CSE: Considering common sub-expression elimination in query block SEL$2 (#0)
*************************
Common Subexpression elimination (CSE)
*************************
CSE:     CSE not performed on query block SEL$2 (#0).
CSE:     CSE not performed on query block SEL$1 (#0).
OBYE:   Considering Order-by Elimination from view SEL$1 (#0)
***************************
Order-by elimination (OBYE)
***************************
OBYE:     OBYE bypassed: no order by to eliminate.
JE:[V2]   Considering Join Elimination on query block SEL$2 (#0)
*************************
Join Elimination [JE:R 12.2]    
*************************
SQL:******* UNPARSED QUERY IS *******
SELECT "TIMES"."CALENDAR_QUARTER_DESC" "CALENDAR_QUARTER_DESC","CUSTOMERS"."CUST_FIRST_NAME" "CUST_FIRST_NAME","CUSTOMERS"."CUST_LAST_NAME" "CUST_LAST_NAME","CUSTOMERS"."CUST_ID" "CUST_ID",SUM("SALES"."AMOUNT_SOLD") "SUM(SALES.AMOUNT_SOLD)",RANK() OVER ( PARTITION BY "TIMES"."CALENDAR_QUARTER_DESC" ORDER BY SUM("SALES"."AMOUNT_SOLD") DESC ) "RANK_WITHIN_QUARTER" FROM "SSH"."SALES" "SALES","SSH"."CUSTOMERS" "CUSTOMERS","SSH"."TIMES" "TIMES" WHERE "SALES"."CUST_ID"="CUSTOMERS"."CUST_ID" AND "TIMES"."TIME_ID"="SALES"."TIME_ID" AND "TIMES"."CALENDAR_QUARTER_DESC"='2010-4' GROUP BY "CUSTOMERS"."CUST_ID","CUSTOMERS"."CUST_FIRST_NAME","CUSTOMERS"."CUST_LAST_NAME","CUSTOMERS"."CUST_ID","TIMES"."CALENDAR_QUARTER_DESC"
JE:[V2] Query block (0x7fdba1a19b00) before join elimination:
SQL:******* UNPARSED QUERY IS *******
SELECT "TIMES"."CALENDAR_QUARTER_DESC" "CALENDAR_QUARTER_DESC","CUSTOMERS"."CUST_FIRST_NAME" "CUST_FIRST_NAME","CUSTOMERS"."CUST_LAST_NAME" "CUST_LAST_NAME","CUSTOMERS"."CUST_ID" "CUST_ID",SUM("SALES"."AMOUNT_SOLD") "SUM(SALES.AMOUNT_SOLD)",RANK() OVER ( PARTITION BY "TIMES"."CALENDAR_QUARTER_DESC" ORDER BY SUM("SALES"."AMOUNT_SOLD") DESC ) "RANK_WITHIN_QUARTER" FROM "SSH"."SALES" "SALES","SSH"."CUSTOMERS" "CUSTOMERS","SSH"."TIMES" "TIMES" WHERE "SALES"."CUST_ID"="CUSTOMERS"."CUST_ID" AND "TIMES"."TIME_ID"="SALES"."TIME_ID" AND "TIMES"."CALENDAR_QUARTER_DESC"='2010-4' GROUP BY "CUSTOMERS"."CUST_ID","CUSTOMERS"."CUST_FIRST_NAME","CUSTOMERS"."CUST_LAST_NAME","CUSTOMERS"."CUST_ID","TIMES"."CALENDAR_QUARTER_DESC"
JE:[V2]: Try to eliminate TIMES by ref. join elim using NTSID
JE:[V2]: Cannot eliminate TIMES by ref. join elim - no constr. based join pred(s)
JE:[V2]: Try to eliminate TIMES by ref. join elim using NTSID
JE:[V2]: Cannot eliminate TIMES by ref. join elim - no constr. based join pred(s)
JE:[V2]: Try to eliminate CUSTOMERS by ref. join elim using NTSID
JE:[V2]: Cannot eliminate CUSTOMERS by ref. join elim - no constr. based join pred(s)
JE:[V2]: Try to eliminate CUSTOMERS by ref. join elim using NTSID
JE:[V2]: Cannot eliminate CUSTOMERS by ref. join elim - no constr. based join pred(s)
JE:[V2]: Try to eliminate SALES by ref. join elim using NTSID
JE:[V2]: Cannot eliminate SALES by ref. join elim - no constr. based join pred(s)
JE:[V2]: Try to eliminate SALES by ref. join elim using NTSID
JE:[V2]: Cannot eliminate SALES by ref. join elim - no constr. based join pred(s)
JE:[V2] Query block (0x7fdba1a19b00) after join elimination:
SQL:******* UNPARSED QUERY IS *******
SELECT "TIMES"."CALENDAR_QUARTER_DESC" "CALENDAR_QUARTER_DESC","CUSTOMERS"."CUST_FIRST_NAME" "CUST_FIRST_NAME","CUSTOMERS"."CUST_LAST_NAME" "CUST_LAST_NAME","CUSTOMERS"."CUST_ID" "CUST_ID",SUM("SALES"."AMOUNT_SOLD") "SUM(SALES.AMOUNT_SOLD)",RANK() OVER ( PARTITION BY "TIMES"."CALENDAR_QUARTER_DESC" ORDER BY SUM("SALES"."AMOUNT_SOLD") DESC ) "RANK_WITHIN_QUARTER" FROM "SSH"."SALES" "SALES","SSH"."CUSTOMERS" "CUSTOMERS","SSH"."TIMES" "TIMES" WHERE "SALES"."CUST_ID"="CUSTOMERS"."CUST_ID" AND "TIMES"."TIME_ID"="SALES"."TIME_ID" AND "TIMES"."CALENDAR_QUARTER_DESC"='2010-4' GROUP BY "CUSTOMERS"."CUST_ID","CUSTOMERS"."CUST_FIRST_NAME","CUSTOMERS"."CUST_LAST_NAME","CUSTOMERS"."CUST_ID","TIMES"."CALENDAR_QUARTER_DESC"

OJE: Begin: find best directive for query block SEL$1 (#0)
OJE: End: finding best directive for query block SEL$1 (#0)
OJE: Begin: find best directive for query block SEL$2 (#0)
OJE: End: finding best directive for query block SEL$2 (#0)
CNT:   Considering count(col) to count(*) on query block SEL$2 (#0)
*************************
Count(col) to Count(*) (CNT)
*************************
CNT:     COUNT() to COUNT(*) not done.
JE:[V2]   Considering Join Elimination on query block SEL$2 (#0)
*************************
Join Elimination [JE:R 12.2]    
*************************
SQL:******* UNPARSED QUERY IS *******
SELECT "TIMES"."CALENDAR_QUARTER_DESC" "CALENDAR_QUARTER_DESC","CUSTOMERS"."CUST_FIRST_NAME" "CUST_FIRST_NAME","CUSTOMERS"."CUST_LAST_NAME" "CUST_LAST_NAME","CUSTOMERS"."CUST_ID" "CUST_ID",SUM("SALES"."AMOUNT_SOLD") "SUM(SALES.AMOUNT_SOLD)",RANK() OVER ( PARTITION BY "TIMES"."CALENDAR_QUARTER_DESC" ORDER BY SUM("SALES"."AMOUNT_SOLD") DESC ) "RANK_WITHIN_QUARTER" FROM "SSH"."SALES" "SALES","SSH"."CUSTOMERS" "CUSTOMERS","SSH"."TIMES" "TIMES" WHERE "SALES"."CUST_ID"="CUSTOMERS"."CUST_ID" AND "TIMES"."TIME_ID"="SALES"."TIME_ID" AND "TIMES"."CALENDAR_QUARTER_DESC"='2010-4' GROUP BY "CUSTOMERS"."CUST_ID","CUSTOMERS"."CUST_FIRST_NAME","CUSTOMERS"."CUST_LAST_NAME","CUSTOMERS"."CUST_ID","TIMES"."CALENDAR_QUARTER_DESC"
JE:[V2] Query block (0x7fdba1a19b00) before join elimination:
SQL:******* UNPARSED QUERY IS *******
SELECT "TIMES"."CALENDAR_QUARTER_DESC" "CALENDAR_QUARTER_DESC","CUSTOMERS"."CUST_FIRST_NAME" "CUST_FIRST_NAME","CUSTOMERS"."CUST_LAST_NAME" "CUST_LAST_NAME","CUSTOMERS"."CUST_ID" "CUST_ID",SUM("SALES"."AMOUNT_SOLD") "SUM(SALES.AMOUNT_SOLD)",RANK() OVER ( PARTITION BY "TIMES"."CALENDAR_QUARTER_DESC" ORDER BY SUM("SALES"."AMOUNT_SOLD") DESC ) "RANK_WITHIN_QUARTER" FROM "SSH"."SALES" "SALES","SSH"."CUSTOMERS" "CUSTOMERS","SSH"."TIMES" "TIMES" WHERE "SALES"."CUST_ID"="CUSTOMERS"."CUST_ID" AND "TIMES"."TIME_ID"="SALES"."TIME_ID" AND "TIMES"."CALENDAR_QUARTER_DESC"='2010-4' GROUP BY "CUSTOMERS"."CUST_ID","CUSTOMERS"."CUST_FIRST_NAME","CUSTOMERS"."CUST_LAST_NAME","CUSTOMERS"."CUST_ID","TIMES"."CALENDAR_QUARTER_DESC"
JE:[V2]: Try to eliminate TIMES by ref. join elim using NTSID
JE:[V2]: Cannot eliminate TIMES by ref. join elim - no constr. based join pred(s)
JE:[V2]: Try to eliminate TIMES by ref. join elim using NTSID
JE:[V2]: Cannot eliminate TIMES by ref. join elim - no constr. based join pred(s)
JE:[V2]: Try to eliminate CUSTOMERS by ref. join elim using NTSID
JE:[V2]: Cannot eliminate CUSTOMERS by ref. join elim - no constr. based join pred(s)
JE:[V2]: Try to eliminate CUSTOMERS by ref. join elim using NTSID
JE:[V2]: Cannot eliminate CUSTOMERS by ref. join elim - no constr. based join pred(s)
JE:[V2]: Try to eliminate SALES by ref. join elim using NTSID
JE:[V2]: Cannot eliminate SALES by ref. join elim - no constr. based join pred(s)
JE:[V2]: Try to eliminate SALES by ref. join elim using NTSID
JE:[V2]: Cannot eliminate SALES by ref. join elim - no constr. based join pred(s)
JE:[V2] Query block (0x7fdba1a19b00) after join elimination:
SQL:******* UNPARSED QUERY IS *******
SELECT "TIMES"."CALENDAR_QUARTER_DESC" "CALENDAR_QUARTER_DESC","CUSTOMERS"."CUST_FIRST_NAME" "CUST_FIRST_NAME","CUSTOMERS"."CUST_LAST_NAME" "CUST_LAST_NAME","CUSTOMERS"."CUST_ID" "CUST_ID",SUM("SALES"."AMOUNT_SOLD") "SUM(SALES.AMOUNT_SOLD)",RANK() OVER ( PARTITION BY "TIMES"."CALENDAR_QUARTER_DESC" ORDER BY SUM("SALES"."AMOUNT_SOLD") DESC ) "RANK_WITHIN_QUARTER" FROM "SSH"."SALES" "SALES","SSH"."CUSTOMERS" "CUSTOMERS","SSH"."TIMES" "TIMES" WHERE "SALES"."CUST_ID"="CUSTOMERS"."CUST_ID" AND "TIMES"."TIME_ID"="SALES"."TIME_ID" AND "TIMES"."CALENDAR_QUARTER_DESC"='2010-4' GROUP BY "CUSTOMERS"."CUST_ID","CUSTOMERS"."CUST_FIRST_NAME","CUSTOMERS"."CUST_LAST_NAME","CUSTOMERS"."CUST_ID","TIMES"."CALENDAR_QUARTER_DESC"

query block SEL$1 (#0) unchanged
Considering Query Transformations on query block SEL$1 (#0)
**************************
Query transformations (QT)
**************************
CSE: Considering common sub-expression elimination in query block SEL$1 (#0)
*************************
Common Subexpression elimination (CSE)
*************************
CSE: Considering common sub-expression elimination in query block SEL$2 (#0)
*************************
Common Subexpression elimination (CSE)
*************************
CSE:     CSE not performed on query block SEL$2 (#0).
CSE:     CSE not performed on query block SEL$1 (#0).
query block SEL$1 (#0) unchanged
apadrv-start sqlid=885986889270192103
CSE: Considering common sub-expression elimination in query block SEL$1 (#0)
*************************
Common Subexpression elimination (CSE)
*************************
CSE: Considering common sub-expression elimination in query block SEL$2 (#0)
*************************
Common Subexpression elimination (CSE)
*************************
CSE:     CSE not performed on query block SEL$2 (#0).
CSE:     CSE not performed on query block SEL$1 (#0).
  :
    call(in-use=4840, alloc=16344), compile(in-use=138056, alloc=144872), execution(in-use=7632, alloc=8088)

*******************************************
Peeked values of the binds in SQL statement
*******************************************


=====================================
SPD: BEGIN context at statement level
=====================================
Stmt: ******* UNPARSED QUERY IS *******
SELECT "from$_subquery$_001"."CALENDAR_QUARTER_DESC" "CALENDAR_QUARTER_DESC","from$_subquery$_001"."CUST_FIRST_NAME" "CUST_FIRST_NAME","from$_subquery$_001"."CUST_LAST_NAME" "CUST_LAST_NAME","from$_subquery$_001"."CUST_ID" "CUST_ID","from$_subquery$_001"."SUM(SALES.AMOUNT_SOLD)" "SUM(SALES.AMOUNT_SOLD)","from$_subquery$_001"."RANK_WITHIN_QUARTER" "RANK_WITHIN_QUARTER" FROM  (SELECT "TIMES"."CALENDAR_QUARTER_DESC" "CALENDAR_QUARTER_DESC","CUSTOMERS"."CUST_FIRST_NAME" "CUST_FIRST_NAME","CUSTOMERS"."CUST_LAST_NAME" "CUST_LAST_NAME","CUSTOMERS"."CUST_ID" "CUST_ID",SUM("SALES"."AMOUNT_SOLD") "SUM(SALES.AMOUNT_SOLD)",RANK() OVER ( PARTITION BY "TIMES"."CALENDAR_QUARTER_DESC" ORDER BY SUM("SALES"."AMOUNT_SOLD") DESC ) "RANK_WITHIN_QUARTER" FROM "SSH"."SALES" "SALES","SSH"."CUSTOMERS" "CUSTOMERS","SSH"."TIMES" "TIMES" WHERE "SALES"."CUST_ID"="CUSTOMERS"."CUST_ID" AND "TIMES"."TIME_ID"="SALES"."TIME_ID" AND "TIMES"."CALENDAR_QUARTER_DESC"='2010-4' GROUP BY "CUSTOMERS"."CUST_ID","CUSTOMERS"."CUST_FIRST_NAME","CUSTOMERS"."CUST_LAST_NAME","CUSTOMERS"."CUST_ID","TIMES"."CALENDAR_QUARTER_DESC") "from$_subquery$_001" WHERE "from$_subquery$_001"."RANK_WITHIN_QUARTER"<16
Objects referenced in the statement
  TIMES[TIMES] 75132, type = 1
  CUSTOMERS[CUSTOMERS] 75080, type = 1
  SALES[SALES] 74993, type = 1
Objects in the hash table
  Hash table Object 75080, type = 1, ownerid = 4631730053619896532:
    No Dynamic Sampling Directives for the object
  Hash table Object 74993, type = 1, ownerid = 10627761899388060318:
    Dynamic Sampling Directives at location 2:
       dirid = 1542024407863284184, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {F(75132)[]; (74993)[]}
  Hash table Object 75132, type = 1, ownerid = 6790125414651960965:
    No Dynamic Sampling Directives for the object
Return code in qosdInitDirCtx: ENBLD
===================================
SPD: END context at statement level
===================================
CBQT: Considering cost-based transformation on query block SEL$1 (#0)
********************************
COST-BASED QUERY TRANSFORMATIONS
********************************
FPD: Considering simple filter push (pre rewrite) in query block SEL$1 (#0)
FPD:  Current where clause predicates "from$_subquery$_001"."RANK_WITHIN_QUARTER"<16

try to generate transitive predicate from check constraints for query block SEL$1 (#0)
finally: "from$_subquery$_001"."RANK_WITHIN_QUARTER"<16

FPD: Considering simple filter push (pre rewrite) in query block SEL$2 (#0)
FPD:  Current where clause predicates "SALES"."CUST_ID"="CUSTOMERS"."CUST_ID" AND "TIMES"."TIME_ID"="SALES"."TIME_ID" AND "TIMES"."CALENDAR_QUARTER_DESC"='2010-4'

OBYE:   Considering Order-by Elimination from view SEL$1 (#0)
***************************
Order-by elimination (OBYE)
***************************
OBYE:     OBYE bypassed: no order by to eliminate.
Considering Query Transformations on query block SEL$1 (#0)
**************************
Query transformations (QT)
**************************
CSE: Considering common sub-expression elimination in query block SEL$1 (#0)
*************************
Common Subexpression elimination (CSE)
*************************
CSE: Considering common sub-expression elimination in query block SEL$2 (#0)
*************************
Common Subexpression elimination (CSE)
*************************
CSE:     CSE not performed on query block SEL$2 (#0).
CSE:     CSE not performed on query block SEL$1 (#0).
AAT:   Considering Approximate Aggregate Transformation on query block SEL$1 (#0) 
*******************************************
Approximate Aggregate Transformation (AAT) 
*******************************************
AAT: no exact aggregates transformed
SQE: Trying SQ elimination.
SQE: Trying SQ elimination.
Query after View Removal
******* UNPARSED QUERY IS *******
SELECT "TIMES"."CALENDAR_QUARTER_DESC" "CALENDAR_QUARTER_DESC","CUSTOMERS"."CUST_FIRST_NAME" "CUST_FIRST_NAME","CUSTOMERS"."CUST_LAST_NAME" "CUST_LAST_NAME","CUSTOMERS"."CUST_ID" "CUST_ID",SUM("SALES"."AMOUNT_SOLD") "SUM(SALES.AMOUNT_SOLD)",RANK() OVER ( PARTITION BY "TIMES"."CALENDAR_QUARTER_DESC" ORDER BY SUM("SALES"."AMOUNT_SOLD") DESC ) "RANK_WITHIN_QUARTER" FROM "SSH"."SALES" "SALES","SSH"."CUSTOMERS" "CUSTOMERS","SSH"."TIMES" "TIMES" WHERE "SALES"."CUST_ID"="CUSTOMERS"."CUST_ID" AND "TIMES"."TIME_ID"="SALES"."TIME_ID" AND "TIMES"."CALENDAR_QUARTER_DESC"='2010-4' GROUP BY "CUSTOMERS"."CUST_ID","CUSTOMERS"."CUST_FIRST_NAME","CUSTOMERS"."CUST_LAST_NAME","CUSTOMERS"."CUST_ID","TIMES"."CALENDAR_QUARTER_DESC"
kkqctdrvTD-start on query block SEL$1 (#0)
kkqctdrvTD-start: :
    call(in-use=5424, alloc=16344), compile(in-use=192920, alloc=196528), execution(in-use=7632, alloc=8088)

ORE: Checking validity of OR Expansion for query block SEL$2 (#2)
ORE: Checking validity of OR Expansion for query block SEL$1 (#1)
ORE: Predicate chain before QB validity check - SEL$1
"from$_subquery$_001"."RANK_WITHIN_QUARTER"<16
ORE: Predicate chain after QB validity check - SEL$1
"from$_subquery$_001"."RANK_WITHIN_QUARTER"<16
ORE: bypassed - No valid predicate for OR expansion.
kkqctdrvTD-cleanup: transform(in-use=0, alloc=0) :
    call(in-use=5424, alloc=16344), compile(in-use=194440, alloc=196528), execution(in-use=7632, alloc=8088)

kkqctdrvTD-end:
    call(in-use=5424, alloc=16344), compile(in-use=195560, alloc=196528), execution(in-use=7632, alloc=8088)

kkqctdrvTD-start on query block SEL$1 (#1)
kkqctdrvTD-start: :
    call(in-use=5424, alloc=16344), compile(in-use=195560, alloc=196528), execution(in-use=7632, alloc=8088)

Registered qb: SEL$1 0x9b7fdb30 (COPY SEL$1)
---------------------
QUERY BLOCK SIGNATURE
---------------------
  signature(): NULL
Registered qb: SEL$2 0x9b7fe030 (COPY SEL$2)
---------------------
QUERY BLOCK SIGNATURE
---------------------
  signature(): NULL
*****************************
Cost-Based Subquery Unnesting
*****************************
SU: Unnesting query blocks in query block SEL$1 (#1) that are valid to unnest.
*******************************
Cost-Based Complex View Merging
*******************************
CVM: Finding query blocks in query block SEL$1 (#1) that are valid to merge.
OJE: Begin: find best directive for query block SEL$1 (#1)
OJE: End: finding best directive for query block SEL$1 (#1)
CVM:   Checking validity of merging in query block SEL$2 (#2)
OJE: Begin: find best directive for query block SEL$2 (#2)
OJE: End: finding best directive for query block SEL$2 (#2)
CNT:   Considering count(col) to count(*) on query block SEL$2 (#2)
*************************
Count(col) to Count(*) (CNT)
*************************
CNT:     COUNT() to COUNT(*) not done.
SVM:     SVM bypassed: Window functions in this view.
Cost-based complex view merging on query block SEL$1 (#1)
kkqctdrvTD-cleanup: transform(in-use=8984, alloc=12600) :
    call(in-use=6888, alloc=16344), compile(in-use=225200, alloc=234136), execution(in-use=7632, alloc=8088)

kkqctdrvTD-end:
    call(in-use=6888, alloc=16344), compile(in-use=213608, alloc=234136), execution(in-use=7632, alloc=8088)

SJC: Considering set-join conversion in query block SEL$1 (#1)
*************************
Set-Join Conversion (SJC)
*************************
SJC: Considering set-join conversion in query block SEL$2 (#2)
*************************
Set-Join Conversion (SJC)
*************************
SJC: not performed
SJC: not performed
DCL: Checking validity of group-by elimination SEL$2 (#2)
DCL: Result of group-by elimination: Invalid
DCL: Checking validity of group-by elimination SEL$1 (#1)
DCL: Result of group-by elimination: Invalid
OJE: Begin: find best directive for query block SEL$1 (#1)
OJE: End: finding best directive for query block SEL$1 (#1)
OJE: Begin: find best directive for query block SEL$2 (#2)
OJE: End: finding best directive for query block SEL$2 (#2)
CNT:   Considering count(col) to count(*) on query block SEL$2 (#2)
*************************
Count(col) to Count(*) (CNT)
*************************
CNT:     COUNT() to COUNT(*) not done.
JE:[V2]   Considering Join Elimination on query block SEL$2 (#2)
*************************
Join Elimination [JE:R 12.2]    
*************************
SQL:******* UNPARSED QUERY IS *******
SELECT "TIMES"."CALENDAR_QUARTER_DESC" "CALENDAR_QUARTER_DESC","CUSTOMERS"."CUST_FIRST_NAME" "CUST_FIRST_NAME","CUSTOMERS"."CUST_LAST_NAME" "CUST_LAST_NAME","CUSTOMERS"."CUST_ID" "CUST_ID",SUM("SALES"."AMOUNT_SOLD") "SUM(SALES.AMOUNT_SOLD)",RANK() OVER ( PARTITION BY "TIMES"."CALENDAR_QUARTER_DESC" ORDER BY SUM("SALES"."AMOUNT_SOLD") DESC ) "RANK_WITHIN_QUARTER" FROM "SSH"."SALES" "SALES","SSH"."CUSTOMERS" "CUSTOMERS","SSH"."TIMES" "TIMES" WHERE "SALES"."CUST_ID"="CUSTOMERS"."CUST_ID" AND "TIMES"."TIME_ID"="SALES"."TIME_ID" AND "TIMES"."CALENDAR_QUARTER_DESC"='2010-4' GROUP BY "CUSTOMERS"."CUST_ID","CUSTOMERS"."CUST_FIRST_NAME","CUSTOMERS"."CUST_LAST_NAME","CUSTOMERS"."CUST_ID","TIMES"."CALENDAR_QUARTER_DESC"
JE:[V2] Query block (0x7fdba1a19b00) before join elimination:
SQL:******* UNPARSED QUERY IS *******
SELECT "TIMES"."CALENDAR_QUARTER_DESC" "CALENDAR_QUARTER_DESC","CUSTOMERS"."CUST_FIRST_NAME" "CUST_FIRST_NAME","CUSTOMERS"."CUST_LAST_NAME" "CUST_LAST_NAME","CUSTOMERS"."CUST_ID" "CUST_ID",SUM("SALES"."AMOUNT_SOLD") "SUM(SALES.AMOUNT_SOLD)",RANK() OVER ( PARTITION BY "TIMES"."CALENDAR_QUARTER_DESC" ORDER BY SUM("SALES"."AMOUNT_SOLD") DESC ) "RANK_WITHIN_QUARTER" FROM "SSH"."SALES" "SALES","SSH"."CUSTOMERS" "CUSTOMERS","SSH"."TIMES" "TIMES" WHERE "SALES"."CUST_ID"="CUSTOMERS"."CUST_ID" AND "TIMES"."TIME_ID"="SALES"."TIME_ID" AND "TIMES"."CALENDAR_QUARTER_DESC"='2010-4' GROUP BY "CUSTOMERS"."CUST_ID","CUSTOMERS"."CUST_FIRST_NAME","CUSTOMERS"."CUST_LAST_NAME","CUSTOMERS"."CUST_ID","TIMES"."CALENDAR_QUARTER_DESC"
JE:[V2]: Try to eliminate TIMES by ref. join elim using NTSID
JE:[V2]: Cannot eliminate TIMES by ref. join elim - no constr. based join pred(s)
JE:[V2]: Try to eliminate TIMES by ref. join elim using NTSID
JE:[V2]: Cannot eliminate TIMES by ref. join elim - no constr. based join pred(s)
JE:[V2]: Try to eliminate CUSTOMERS by ref. join elim using NTSID
JE:[V2]: Cannot eliminate CUSTOMERS by ref. join elim - no constr. based join pred(s)
JE:[V2]: Try to eliminate CUSTOMERS by ref. join elim using NTSID
JE:[V2]: Cannot eliminate CUSTOMERS by ref. join elim - no constr. based join pred(s)
JE:[V2]: Try to eliminate SALES by ref. join elim using NTSID
JE:[V2]: Cannot eliminate SALES by ref. join elim - no constr. based join pred(s)
JE:[V2]: Try to eliminate SALES by ref. join elim using NTSID
JE:[V2]: Cannot eliminate SALES by ref. join elim - no constr. based join pred(s)
JE:[V2] Query block (0x7fdba1a19b00) after join elimination:
SQL:******* UNPARSED QUERY IS *******
SELECT "TIMES"."CALENDAR_QUARTER_DESC" "CALENDAR_QUARTER_DESC","CUSTOMERS"."CUST_FIRST_NAME" "CUST_FIRST_NAME","CUSTOMERS"."CUST_LAST_NAME" "CUST_LAST_NAME","CUSTOMERS"."CUST_ID" "CUST_ID",SUM("SALES"."AMOUNT_SOLD") "SUM(SALES.AMOUNT_SOLD)",RANK() OVER ( PARTITION BY "TIMES"."CALENDAR_QUARTER_DESC" ORDER BY SUM("SALES"."AMOUNT_SOLD") DESC ) "RANK_WITHIN_QUARTER" FROM "SSH"."SALES" "SALES","SSH"."CUSTOMERS" "CUSTOMERS","SSH"."TIMES" "TIMES" WHERE "SALES"."CUST_ID"="CUSTOMERS"."CUST_ID" AND "TIMES"."TIME_ID"="SALES"."TIME_ID" AND "TIMES"."CALENDAR_QUARTER_DESC"='2010-4' GROUP BY "CUSTOMERS"."CUST_ID","CUSTOMERS"."CUST_FIRST_NAME","CUSTOMERS"."CUST_LAST_NAME","CUSTOMERS"."CUST_ID","TIMES"."CALENDAR_QUARTER_DESC"

PM: Considering predicate move-around in query block SEL$1 (#1)
**************************
Predicate Move-Around (PM)
**************************
PM:   Passed validity checks.
PM:     PM bypassed: checking.
kkqctdrvTD-start on query block SEL$1 (#1)
kkqctdrvTD-start: :
    call(in-use=8888, alloc=16344), compile(in-use=236544, alloc=246568), execution(in-use=7632, alloc=8088)

kkqctdrvTD-cleanup: transform(in-use=0, alloc=0) :
    call(in-use=8888, alloc=16344), compile(in-use=237952, alloc=246568), execution(in-use=7632, alloc=8088)

kkqctdrvTD-end:
    call(in-use=8888, alloc=16344), compile(in-use=239112, alloc=246568), execution(in-use=7632, alloc=8088)

isReduceGrByValid:   Group By Validation (Failed).
isReduceGrByValid:   Group By Validation (Failed).
isReduceGrByValid:   Group By Validation (Failed).
isReduceGrByValid:   Group By Validation (Failed).
kkqctdrvTD-start on query block SEL$1 (#1)
kkqctdrvTD-start: :
    call(in-use=8888, alloc=16344), compile(in-use=239152, alloc=246568), execution(in-use=7632, alloc=8088)

VT: Initial VT validity check for query block SEL$2 (#2)
VT: Bypassed: inmemory is disabled.
VT: Initial VT validity check for query block SEL$1 (#1)
VT: Bypassed: inmemory is disabled.
kkqctdrvTD-cleanup: transform(in-use=0, alloc=0) :
    call(in-use=8888, alloc=16344), compile(in-use=240568, alloc=246568), execution(in-use=7632, alloc=8088)

kkqctdrvTD-end:
    call(in-use=8888, alloc=16344), compile(in-use=241688, alloc=246568), execution(in-use=7632, alloc=8088)

kkqctdrvTD-start on query block SEL$1 (#1)
kkqctdrvTD-start: :
    call(in-use=8888, alloc=16344), compile(in-use=241688, alloc=246568), execution(in-use=7632, alloc=8088)

BJ: Checking validity for bushy join for query block SEL$2 (#2)
invalid because Not enabled by hint/parameter
BJ: Bypassed: Not enabled by hint/parameter.
BJ: Checking validity for bushy join for query block SEL$1 (#1)
invalid because Not enabled by hint/parameter
BJ: Bypassed: Not enabled by hint/parameter.
kkqctdrvTD-cleanup: transform(in-use=0, alloc=0) :
    call(in-use=8888, alloc=16344), compile(in-use=243128, alloc=246568), execution(in-use=7632, alloc=8088)

kkqctdrvTD-end:
    call(in-use=8888, alloc=16344), compile(in-use=244248, alloc=246568), execution(in-use=7632, alloc=8088)

kkqctdrvTD-start on query block SEL$1 (#1)
kkqctdrvTD-start: :
    call(in-use=8888, alloc=16344), compile(in-use=244248, alloc=246568), execution(in-use=7632, alloc=8088)

****************************************
 Cost-Based Group-By/Distinct Placement
****************************************
GBP/DP: Checking validity of GBP/DP for query block SEL$2 (#2)
GBP: Checking validity of group-by placement for query block SEL$2 (#2)
GBP: Bypassed: Query has invalid constructs.
DP: Checking validity of distinct placement for query block SEL$2 (#2)
DP: Bypassed: Query has invalid constructs.
kkqctdrvTD-cleanup: transform(in-use=8984, alloc=12600) :
    call(in-use=8888, alloc=16344), compile(in-use=273496, alloc=284176), execution(in-use=7632, alloc=8088)

kkqctdrvTD-end:
    call(in-use=8888, alloc=16344), compile(in-use=261920, alloc=284176), execution(in-use=7632, alloc=8088)

kkqctdrvTD-start on query block SEL$1 (#1)
kkqctdrvTD-start: :
    call(in-use=8888, alloc=16344), compile(in-use=261920, alloc=284176), execution(in-use=7632, alloc=8088)

TE: Checking validity of table expansion for query block SEL$2 (#2)
TE: Bypassed: Query has non-standard structure.
TE: Checking validity of table expansion for query block SEL$1 (#1)
TE: Bypassed: No partitioned table in query block.
kkqctdrvTD-cleanup: transform(in-use=0, alloc=0) :
    call(in-use=8888, alloc=16344), compile(in-use=263328, alloc=284176), execution(in-use=7632, alloc=8088)

kkqctdrvTD-end:
    call(in-use=8888, alloc=16344), compile(in-use=264472, alloc=284176), execution(in-use=7632, alloc=8088)

TE: Checking validity of table expansion for query block SEL$2 (#2)
TE: Bypassed: Query has non-standard structure.
TE: Checking validity of table expansion for query block SEL$1 (#1)
TE: Bypassed: No partitioned table in query block.
kkqctdrvTD-start on query block SEL$1 (#1)
kkqctdrvTD-start: :
    call(in-use=8888, alloc=16344), compile(in-use=264472, alloc=284176), execution(in-use=7632, alloc=8088)

ORE: Checking validity of OR Expansion for query block SEL$2 (#2)
ORE: Predicate chain before QB validity check - SEL$2
"SALES"."CUST_ID"="CUSTOMERS"."CUST_ID" AND "TIMES"."TIME_ID"="SALES"."TIME_ID" AND "TIMES"."CALENDAR_QUARTER_DESC"='2010-4'
ORE: Predicate chain after QB validity check - SEL$2
"SALES"."CUST_ID"="CUSTOMERS"."CUST_ID" AND "TIMES"."TIME_ID"="SALES"."TIME_ID" AND "TIMES"."CALENDAR_QUARTER_DESC"='2010-4'
ORE: bypassed - Unsupported structure.
ORE: Checking validity of OR Expansion for query block SEL$1 (#1)
ORE: Predicate chain before QB validity check - SEL$1
"from$_subquery$_001"."RANK_WITHIN_QUARTER"<16
ORE: Predicate chain after QB validity check - SEL$1
"from$_subquery$_001"."RANK_WITHIN_QUARTER"<16
ORE: bypassed - No valid predicate for OR expansion.
kkqctdrvTD-cleanup: transform(in-use=0, alloc=0) :
    call(in-use=8888, alloc=16344), compile(in-use=265880, alloc=284176), execution(in-use=7632, alloc=8088)

kkqctdrvTD-end:
    call(in-use=8888, alloc=16344), compile(in-use=267016, alloc=284176), execution(in-use=7632, alloc=8088)

ST: Query in kkqstardrv:******* UNPARSED QUERY IS *******
SELECT "from$_subquery$_001"."CALENDAR_QUARTER_DESC" "CALENDAR_QUARTER_DESC","from$_subquery$_001"."CUST_FIRST_NAME" "CUST_FIRST_NAME","from$_subquery$_001"."CUST_LAST_NAME" "CUST_LAST_NAME","from$_subquery$_001"."CUST_ID" "CUST_ID","from$_subquery$_001"."SUM(SALES.AMOUNT_SOLD)" "SUM(SALES.AMOUNT_SOLD)","from$_subquery$_001"."RANK_WITHIN_QUARTER" "RANK_WITHIN_QUARTER" FROM  (SELECT "TIMES"."CALENDAR_QUARTER_DESC" "CALENDAR_QUARTER_DESC","CUSTOMERS"."CUST_FIRST_NAME" "CUST_FIRST_NAME","CUSTOMERS"."CUST_LAST_NAME" "CUST_LAST_NAME","CUSTOMERS"."CUST_ID" "CUST_ID",SUM("SALES"."AMOUNT_SOLD") "SUM(SALES.AMOUNT_SOLD)",RANK() OVER ( PARTITION BY "TIMES"."CALENDAR_QUARTER_DESC" ORDER BY SUM("SALES"."AMOUNT_SOLD") DESC ) "RANK_WITHIN_QUARTER" FROM "SSH"."SALES" "SALES","SSH"."CUSTOMERS" "CUSTOMERS","SSH"."TIMES" "TIMES" WHERE "SALES"."CUST_ID"="CUSTOMERS"."CUST_ID" AND "TIMES"."TIME_ID"="SALES"."TIME_ID" AND "TIMES"."CALENDAR_QUARTER_DESC"='2010-4' GROUP BY "CUSTOMERS"."CUST_ID","CUSTOMERS"."CUST_FIRST_NAME","CUSTOMERS"."CUST_LAST_NAME","CUSTOMERS"."CUST_ID","TIMES"."CALENDAR_QUARTER_DESC") "from$_subquery$_001" WHERE "from$_subquery$_001"."RANK_WITHIN_QUARTER"<16
ST: not valid since star transformation parameter is FALSE
ST: not valid since star transformation parameter is FALSE
kkqctdrvTD-start on query block SEL$1 (#1)
kkqctdrvTD-start: :
    call(in-use=9112, alloc=16344), compile(in-use=267016, alloc=284176), execution(in-use=7632, alloc=8088)

JF: Checking validity of join factorization for query block SEL$2 (#2)
JF: Bypassed: not a UNION or UNION-ALL query block.
JF: Checking validity of join factorization for query block SEL$1 (#1)
JF: Bypassed: not a UNION or UNION-ALL query block.
kkqctdrvTD-cleanup: transform(in-use=0, alloc=0) :
    call(in-use=9112, alloc=16344), compile(in-use=268440, alloc=284176), execution(in-use=7632, alloc=8088)

kkqctdrvTD-end:
    call(in-use=9112, alloc=16344), compile(in-use=269560, alloc=284176), execution(in-use=7632, alloc=8088)

JPPD:  Considering Cost-based predicate pushdown from query block SEL$1 (#1)
************************************
Cost-based predicate pushdown (JPPD)
************************************
kkqctdrvTD-start on query block SEL$1 (#1)
kkqctdrvTD-start: :
    call(in-use=9112, alloc=16344), compile(in-use=269560, alloc=284176), execution(in-use=7632, alloc=8088)

Check Basic Validity for Non-Union View for query block SEL$2 (#2)
***********************************
Cost-Based Join Predicate Push-down
***********************************
JPPD: Checking validity of push-down in query block SEL$1 (#1)
JPPD:   Checking validity of push-down from query block SEL$1 (#1) to query block SEL$2 (#2)
Check Basic Validity for Non-Union View for query block SEL$2 (#2)
JPPD:     JPPD bypassed: No valid join condition found.
JPPD:   No valid views found to push predicate into.
kkqctdrvTD-cleanup: transform(in-use=8984, alloc=12600) :
    call(in-use=9128, alloc=16344), compile(in-use=298880, alloc=307176), execution(in-use=7632, alloc=8088)

kkqctdrvTD-end:
    call(in-use=9128, alloc=16344), compile(in-use=287296, alloc=307176), execution(in-use=7632, alloc=8088)

JPPD: Applying transformation directives
JPPD: Checking validity of push-down in query block SEL$1 (#1)
JPPD:   No valid views found to push predicate into.
SQT:   Considering Statistic-based Query Transformation from query block SEL$2 (#2)
***************************
Statistic-based Query Transformation (SQT)
***************************
SQT:     SQT bypassed: Disabled by parameter.
SQT:   Considering Statistic-based Query Transformation from query block SEL$1 (#1)
***************************
Statistic-based Query Transformation (SQT)
***************************
SQT:     SQT bypassed: Disabled by parameter.
query block SEL$1 (#1) unchanged
FPD: Considering simple filter push in query block SEL$1 (#1)
"from$_subquery$_001"."RANK_WITHIN_QUARTER"<16
try to generate transitive predicate from check constraints for query block SEL$1 (#1)
finally: "from$_subquery$_001"."RANK_WITHIN_QUARTER"<16

FPD: Considering simple filter push in query block SEL$2 (#2)
"SALES"."CUST_ID"="CUSTOMERS"."CUST_ID" AND "TIMES"."TIME_ID"="SALES"."TIME_ID" AND "TIMES"."CALENDAR_QUARTER_DESC"='2010-4'
try to generate transitive predicate from check constraints for query block SEL$2 (#2)
finally: "SALES"."CUST_ID"="CUSTOMERS"."CUST_ID" AND "TIMES"."TIME_ID"="SALES"."TIME_ID" AND "TIMES"."CALENDAR_QUARTER_DESC"='2010-4'

OJE: Begin: find best directive for query block SEL$2 (#2)
OJE: End: finding best directive for query block SEL$2 (#2)
CSE: Considering common sub-expression elimination in query block SEL$1 (#1)
*************************
Common Subexpression elimination (CSE)
*************************
CSE: Considering common sub-expression elimination in query block SEL$2 (#2)
*************************
Common Subexpression elimination (CSE)
*************************
CSE:     CSE not performed on query block SEL$2 (#2).
CSE:     CSE not performed on query block SEL$1 (#1).
Final query after transformations:******* UNPARSED QUERY IS *******
SELECT "from$_subquery$_001"."CALENDAR_QUARTER_DESC" "CALENDAR_QUARTER_DESC","from$_subquery$_001"."CUST_FIRST_NAME" "CUST_FIRST_NAME","from$_subquery$_001"."CUST_LAST_NAME" "CUST_LAST_NAME","from$_subquery$_001"."CUST_ID" "CUST_ID","from$_subquery$_001"."SUM(SALES.AMOUNT_SOLD)" "SUM(SALES.AMOUNT_SOLD)","from$_subquery$_001"."RANK_WITHIN_QUARTER" "RANK_WITHIN_QUARTER" FROM  (SELECT "TIMES"."CALENDAR_QUARTER_DESC" "CALENDAR_QUARTER_DESC","CUSTOMERS"."CUST_FIRST_NAME" "CUST_FIRST_NAME","CUSTOMERS"."CUST_LAST_NAME" "CUST_LAST_NAME","CUSTOMERS"."CUST_ID" "CUST_ID",SUM("SALES"."AMOUNT_SOLD") "SUM(SALES.AMOUNT_SOLD)",RANK() OVER ( PARTITION BY "TIMES"."CALENDAR_QUARTER_DESC" ORDER BY SUM("SALES"."AMOUNT_SOLD") DESC ) "RANK_WITHIN_QUARTER" FROM "SSH"."SALES" "SALES","SSH"."CUSTOMERS" "CUSTOMERS","SSH"."TIMES" "TIMES" WHERE "SALES"."CUST_ID"="CUSTOMERS"."CUST_ID" AND "TIMES"."TIME_ID"="SALES"."TIME_ID" AND "TIMES"."CALENDAR_QUARTER_DESC"='2010-4' GROUP BY "CUSTOMERS"."CUST_ID","CUSTOMERS"."CUST_FIRST_NAME","CUSTOMERS"."CUST_LAST_NAME","CUSTOMERS"."CUST_ID","TIMES"."CALENDAR_QUARTER_DESC") "from$_subquery$_001" WHERE "from$_subquery$_001"."RANK_WITHIN_QUARTER"<16
kkoqbc: optimizing query block SEL$2 (#2)
                                                               [    4433/  4433]
        :
    call(in-use=9360, alloc=32712), compile(in-use=293824, alloc=307176), execution(in-use=7672, alloc=8088)

kkoqbc-subheap (create addr=0x7fdb9b8557e8)
****************
QUERY BLOCK TEXT
****************
SELECT
            times.calendar_quarter_desc,
            customers.cust_first_name,
            customers.cust_last_name,
            customers.cust_id,
            SUM(sales.amount_sold),
            RANK() OVER(
                PARTITION BY times.calendar_quarter_desc
                ORDER BY
                    SUM(amount_sold) DESC
            ) AS rank_within_quarter
        FROM
            sales,
            customers,
            times
        WHERE
            -- join conditions
                sales.cust_id = customers.cust_id
            AND times.time_id = sales.time_id
            -- filter conditions
            AND times.calendar_quarter_desc = '2010-4'
        GROUP BY
            customers.cust_id,
            customers.cust_first_name,
            customers.cust_last_name,
            customers.cust_id,
            times.calendar_quarter_desc
    
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$2 nbfros=3 flg=0
  fro(0): flg=0 objn=75080 hint_alias="CUSTOMERS"@"SEL$2"
  fro(1): flg=0 objn=74993 hint_alias="SALES"@"SEL$2"
  fro(2): flg=0 objn=75132 hint_alias="TIMES"@"SEL$2"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3255 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: TIMES  Alias: TIMES
  #Rows: 7305  SSZ: 0  LGR: 0  #Blks:  66  AvgRowLen:  53.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): TIME_ID(DATE)
    AvgLen: 8 NDV: 7305 Nulls: 0 Density: 0.000137 Min: 2449719.000000 Max: 2457023.000000
***********************
Table Stats::
  Table: CUSTOMERS  Alias: CUSTOMERS  (Using composite stats)
  #Rows: 16260640  SSZ: 0  LGR: 0  #Blks:  412744  AvgRowLen:  179.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
***********************
Table Stats::
  Table: SALES  Alias: SALES  (Using composite stats)
  #Rows: 147287590  SSZ: 0  LGR: 0  #Blks:  1038800  AvgRowLen:  49.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): CUST_ID(NUMBER)
    AvgLen: 6 NDV: 16250880 Nulls: 0 Density: 0.000000 Min: 1.000000 Max: 16260640.000000
  Column (#2): CUST_FIRST_NAME(VARCHAR2)
    AvgLen: 7 NDV: 798 Nulls: 0 Density: 0.001253
  Column (#3): CUST_LAST_NAME(VARCHAR2)
    AvgLen: 8 NDV: 798 Nulls: 0 Density: 0.001253
  Column (#10): 
    NewDensity:0.006160, OldDensity:0.000068 BktCnt:7305.000000, PopBktCnt:7305.000000, PopValCnt:80, NDV:80
  Column (#10): CALENDAR_QUARTER_DESC(VARCHAR2)
    AvgLen: 7 NDV: 80 Nulls: 0 Density: 0.006160
    Histogram: Freq  #Bkts: 80  UncompBkts: 7305  EndPtVals: 80  ActualVal: no 
  Column (#2): CUST_ID(NUMBER)
    AvgLen: 6 NDV: 5373440 Nulls: 0 Density: 0.000000 Min: 0.000000 Max: 16260638.000000
  Column (#3): TIME_ID(DATE)
    AvgLen: 8 NDV: 6919 Nulls: 0 Density: 0.000145 Min: 2449719.000000 Max: 2456657.000000
try to generate single-table filter predicates from ORs for query block SEL$2 (#2)
finally: "SALES"."CUST_ID"="CUSTOMERS"."CUST_ID" AND "TIMES"."TIME_ID"="SALES"."TIME_ID" AND "TIMES"."CALENDAR_QUARTER_DESC"='2010-4'

=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$2 (#2)
Applicable DS directives:
   dirid = 1542024407863284184, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {F(75132)[]; (74993)[]}
Checking valid directives for the query block
  SPD: Return code in qosdDSDirSetup: NODIR, estType = GROUP_BY
  SPD: Return code in qosdDSDirSetup: NODIR, estType = QUERY_BLOCK
Return code in qosdSetupDirCtx4QB: EXISTS
=====================================
SPD: END context at query block level
=====================================
Access path analysis for SALES
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for SALES[SALES] 
  SPD: Return code in qosdDSDirSetup: NODIR, estType = TABLE
  Table: SALES  Alias: SALES
    Card: Original: 147287590.000000  Rounded: 147287590  Computed: 147287590.000000  Non Adjusted: 147287590.000000
  Scan IO  Cost (Disk) =   281343.000000
  Scan CPU Cost (Disk) =   61894160172.000000
  Total Scan IO  Cost  =   281343.000000 (scan (Disk))
                       =   281343.000000
  Total Scan CPU  Cost =   61894160172.000000 (scan (Disk))
                       =   61894160172.000000
  Access Path: TableScan
    Cost:  282927.639643  Resp: 282927.639643  Degree: 0
      Cost_io: 281343.000000  Cost_cpu: 61894160172
      Resp_io: 281343.000000  Resp_cpu: 61894160172
  Best:: AccessPath: TableScan
         Cost: 282927.639643  Degree: 1  Resp: 282927.639643  Card: 147287590.000000  Bytes: 0.000000

Access path analysis for CUSTOMERS
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for CUSTOMERS[CUSTOMERS] 
  SPD: Return code in qosdDSDirSetup: NODIR, estType = TABLE
  Table: CUSTOMERS  Alias: CUSTOMERS
    Card: Original: 16260640.000000  Rounded: 16260640  Computed: 16260640.000000  Non Adjusted: 16260640.000000
  Scan IO  Cost (Disk) =   111786.000000
  Scan CPU Cost (Disk) =   6028853231.360001
  Total Scan IO  Cost  =   111786.000000 (scan (Disk))
                       =   111786.000000
  Total Scan CPU  Cost =   6028853231.360001 (scan (Disk))
                       =   6028853231.360001
  Access Path: TableScan
    Cost:  111940.353170  Resp: 111940.353170  Degree: 0
      Cost_io: 111786.000000  Cost_cpu: 6028853231
      Resp_io: 111786.000000  Resp_cpu: 6028853231
  Best:: AccessPath: TableScan
         Cost: 111940.353170  Degree: 1  Resp: 111940.353170  Card: 16260640.000000  Bytes: 0.000000

Access path analysis for TIMES
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for TIMES[TIMES] 
  SPD: Return code in qosdDSDirSetup: NODIR, estType = TABLE

 kkecdn: Single Table Predicate:"TIMES"."CALENDAR_QUARTER_DESC"='2010-4'
  Estimated selectivity: 0.012594 , endpoint value predicate, col: #10 
  Table: TIMES  Alias: TIMES
    Card: Original: 7305.000000  Rounded: 92  Computed: 92.000000  Non Adjusted: 92.000000
  Scan IO  Cost (Disk) =   20.000000
  Scan CPU Cost (Disk) =   2880665.040000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.012594 flag = 2048  ("TIMES"."CALENDAR_QUARTER_DESC"='2010-4')
  Total Scan IO  Cost  =   20.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 7305.000000 (#rows))
                       =   20.000000
  Total Scan CPU  Cost =   2880665.040000 (scan (Disk))
                         + 365250.000000 (cpu filter eval) (= 50.000000 (per row) * 7305.000000 (#rows))
                       =   3245915.040000
  Access Path: TableScan
    Cost:  20.083103  Resp: 20.083103  Degree: 0
      Cost_io: 20.000000  Cost_cpu: 3245915
      Resp_io: 20.000000  Resp_cpu: 3245915
  Best:: AccessPath: TableScan
         Cost: 20.083103  Degree: 1  Resp: 20.083103  Card: 92.000000  Bytes: 0.000000

Grouping column cardinality [   CUST_ID]    16250880
Grouping column cardinality [CUST_FIRST]    798
Grouping column cardinality [CUST_LAST_]    798
Grouping column cardinality [CALENDAR_Q]    1
***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE:  Bypassed; QB is not duplicate insignificant SEL$2 (#2)
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  TIMES[TIMES]#0  CUSTOMERS[CUSTOMERS]#1  SALES[SALES]#2

***************
Now joining: CUSTOMERS[CUSTOMERS]#1
***************
NL Join
  Outer table: Card: 92.000000  Cost: 20.083103  Resp: 20.083103  Degree: 1  Bytes: 
Access path analysis for CUSTOMERS
  Scan IO  Cost (Disk) =   111784.847826
  Scan CPU Cost (Disk) =   6028853231.360001
  Total Scan IO  Cost  =   111784.847826 (scan (Disk))
                       =   111784.847826
  Total Scan CPU  Cost =   6028853231.360001 (scan (Disk))
                       =   6028853231.360001
  Inner table: CUSTOMERS  Alias: CUSTOMERS
  Access Path: TableScan
    NL Join:  Cost: 10298426.574751  Resp: 10298426.574751  Degree: 1
      Cost_io: 10284226.000000  Cost_cpu: 554657743200
      Resp_io: 10284226.000000  Resp_cpu: 554657743200

  Best NL cost: 10298426.574751
          resc: 10298426.574751  resc_io: 10284226.000000  resc_cpu: 554657743200
          resp: 10298426.574751  resp_io: 10284226.000000  resc_cpu: 554657743200
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Join Card:  1495978880.000000 = outer (92.000000) * inner (16260640.000000) * sel (1.000000)
Join Card - Rounded: 1495978880 Computed: 1495978880.000000
Grouping column cardinality [   CUST_ID]    5373440
Grouping column cardinality [CUST_FIRST]    798
Grouping column cardinality [CUST_LAST_]    798
Grouping column cardinality [CALENDAR_Q]    1
Best:: JoinMethod: NestedLoop
       Cost: 10298426.574751  Degree: 1  Resp: 10298426.574751  Card: 1495978880.000000 Bytes: 

***************
Now joining: SALES[SALES]#2
***************
NL Join
  Outer table: Card: 1495978880.000000  Cost: 10298426.574751  Resp: 10298426.574751  Degree: 1  Bytes: 
Access path analysis for SALES
  Scan IO  Cost (Disk) =   281341.666667
  Scan CPU Cost (Disk) =   61894160172.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000000 flag = 2048  ("SALES"."CUST_ID"="CUSTOMERS"."CUST_ID")
    io = NOCOST, cpu = 50.000000, sel = 0.000145 flag = 2048  ("TIMES"."TIME_ID"="SALES"."TIME_ID")
  Total Scan IO  Cost  =   281341.666667 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 147287590.000000 (#rows))
                       =   281341.666667
  Total Scan CPU  Cost =   61894160172.000000 (scan (Disk))
                         + 7364379953.168043 (cpu filter eval) (= 50.000003 (per row) * 147287590.000000 (#rows))
                       =   69258540125.168045
  Inner table: SALES  Alias: SALES
  Access Path: TableScan
    NL Join:  Cost: 6228449114286.502930  Resp: 6228449114286.502930  Degree: 1
      Cost_io: 6189439569480.926758  Cost_cpu: 1523666926523683584
      Resp_io: 6189439569480.926758  Resp_cpu: 1523666926523683584

  Best NL cost: 6228449114286.502930
          resc: 6228449114286.502930  resc_io: 6189439569480.926758  resc_cpu: 1523666926523683584
          resp: 6228449114286.502930  resp_io: 6189439569480.926758  resc_cpu: 1523666926523683584
  SPD: Directive valid: dirid = 1542024407863284184, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {F(75132)[]; (74993)[]}
  SPD: Return code in qosdDSDirSetup: EXISTS, estType = JOIN
Join Card:  1959617.929325 = outer (1495978880.000000) * inner (147287590.000000) * sel (8.8936e-12)
Join Card - Rounded: 1959618 Computed: 1959617.929325
Grouping column cardinality [   CUST_ID]    5373440
Grouping column cardinality [CUST_FIRST]    798
Grouping column cardinality [CUST_LAST_]    798
Grouping column cardinality [CALENDAR_Q]    1
  Outer table:  CUSTOMERS  Alias: CUSTOMERS
    resc: 10298426.574751  card 1495978880.000000  bytes:   deg: 1  resp: 10298426.574751
  Inner table:  SALES  Alias: SALES
    resc: 282927.639643  card: 147287590.000000  bytes:   deg: 1  resp: 282927.639643
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      524288 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 9157560 Row size:     50 Total Rows:     1495978880
      Initial runs:   714 Merge passes:  2 IO Cost / pass:    4960346
      Total IO sort cost: 19078252.000000      Total CPU sort cost: 2392577937089
      Total Temp space used: 144177185000
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      524288 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 522936 Row size:     29 Total Rows:      147287590
      Initial runs:   41 Merge passes:  1 IO Cost / pass:     283258
      Total IO sort cost: 806194.000000      Total CPU sort cost: 192977925209
      Total Temp space used: 8292656000
  SM join: Resc: 30531996.674723  Resp: 30531996.674723  [multiMatchCost=0.000000]
SM Join
  SM cost: 30531996.674723 
     resc: 30531996.674723 resc_io: 30450015.000000 resc_cpu: 3202107765670
     resp: 30531996.674723 resp_io: 30450015.000000 resp_cpu: 3202107765670
  Outer table:  CUSTOMERS  Alias: CUSTOMERS
    resc: 10298426.574751  card 1495978880.000000  bytes:   deg: 1  resp: 10298426.574751
  Inner table:  SALES  Alias: SALES
    resc: 282927.639643  card: 147287590.000000  bytes:   deg: 1  resp: 282927.639643
    using dmeth: 2  #groups: 1
    Cost per ptn: 3772122.228267  #ptns: 1
    hash_area: 128 (max=25600) buildfrag: 8765502  probefrag: 521404  ppasses: 1
  Hash join: Resc: 14353476.442661  Resp: 14353476.442661  [multiMatchCost=0.000000]
  Outer table:  SALES  Alias: SALES
    resc: 282927.639643  card 147287590.000000  bytes:   deg: 1  resp: 282927.639643
  Inner table:  CUSTOMERS  Alias: CUSTOMERS
    resc: 10298426.574751  card: 1495978880.000000  bytes:   deg: 1  resp: 10298426.574751
    using dmeth: 2  #groups: 1
    Cost per ptn: 3604133.214080  #ptns: 1
    hash_area: 128 (max=25600) buildfrag: 521404  probefrag: 8765502  ppasses: 1
  Hash join: Resc: 14185487.428473  Resp: 14185487.428473  [multiMatchCost=0.000000]
HA Join
  HA cost: 14185487.428473 swapped 
     resc: 14185487.428473 resc_io: 14160501.000000 resc_cpu: 975940500371
     resp: 14185487.428473 resp_io: 14160501.000000 resp_cpu: 975940500371
GROUP BY sort

GROUP BY/Correlated Subquery Filter adjustment factor: 0.353553
GROUP BY cardinality:  1959618.000000, TABLE cardinality:  1959618.000000
Vector group by not costed because no SYS_OP_XLATE_USE in group by.
kdmoGByPushdownValid: more than one table in group by    SORT ressource         Sort statistics
      Sort width:         598 Area size:      524288 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 16555 Row size:     69 Total Rows:        1959618
      Initial runs:   2 Merge passes:  1 IO Cost / pass:       8968
      Total IO sort cost: 25523.000000      Total CPU sort cost: 2292186849
      Total Temp space used: 126419000
WiF sort
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      524288 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 16555 Row size:     69 Total Rows:        1959618
      Initial runs:   2 Merge passes:  1 IO Cost / pass:       8968
      Total IO sort cost: 25523.000000      Total CPU sort cost: 2292186849
      Total Temp space used: 126419000
Best:: JoinMethod: Hash
       Cost: 14236650.799487  Degree: 1  Resp: 14236650.799487  Card: 1959617.929325 Bytes: 
***********************
Best so far:  Table#: 0  cost: 20.083103  card: 92.000000  bytes: 1380.000000
              Table#: 1  cost: 10298426.574751  card: 1495978880.000000  bytes: 53855239680.000000
              Table#: 2  cost: 14236650.799487  card: 1959617.929325  bytes: 103859754.000000
***********************
Join order[2]:  TIMES[TIMES]#0  SALES[SALES]#2  CUSTOMERS[CUSTOMERS]#1

***************
Now joining: SALES[SALES]#2
***************
NL Join
  Outer table: Card: 92.000000  Cost: 20.083103  Resp: 20.083103  Degree: 1  Bytes: 
Access path analysis for SALES
  Scan IO  Cost (Disk) =   281341.684783
  Scan CPU Cost (Disk) =   61894160172.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000145 flag = 2048  ("TIMES"."TIME_ID"="SALES"."TIME_ID")
  Total Scan IO  Cost  =   281341.684783 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 147287590.000000 (#rows))
                       =   281341.684783
  Total Scan CPU  Cost =   61894160172.000000 (scan (Disk))
                         + 7364379500.000000 (cpu filter eval) (= 50.000000 (per row) * 147287590.000000 (#rows))
                       =   69258539672.000000
  Inner table: SALES  Alias: SALES
  Access Path: TableScan
    NL Join:  Cost: 383057.848785  Resp: 383057.848785  Degree: 1
      Cost_io: 380658.750000  Cost_cpu: 93705976060
      Resp_io: 380658.750000  Resp_cpu: 93705976060

  Best NL cost: 383057.848785
          resc: 383057.848785  resc_io: 380658.750000  resc_cpu: 93705976060
          resp: 383057.848785  resp_io: 380658.750000  resc_cpu: 93705976060
  SPD: Directive valid: dirid = 1542024407863284184, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {F(75132)[]; (74993)[]}
  SPD: Return code in qosdDSDirSetup: EXISTS, estType = JOIN
Join Card:  1958441.722792 = outer (92.000000) * inner (147287590.000000) * sel (1.4453e-04)
Join Card - Rounded: 1958442 Computed: 1958441.722792
Grouping column cardinality [   CUST_ID]    5373440
Grouping column cardinality [CUST_FIRST]    798
Grouping column cardinality [CUST_LAST_]    798
Grouping column cardinality [CALENDAR_Q]    1
  Outer table:  TIMES  Alias: TIMES
    resc: 20.083103  card 92.000000  bytes:   deg: 1  resp: 20.083103
  Inner table:  SALES  Alias: SALES
    resc: 282927.639643  card: 147287590.000000  bytes:   deg: 1  resp: 282927.639643
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      524288 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     27 Total Rows:             92
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39085864
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      524288 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 522936 Row size:     29 Total Rows:      147287590
      Initial runs:   41 Merge passes:  1 IO Cost / pass:     283258
      Total IO sort cost: 806194.000000      Total CPU sort cost: 192977925209
      Total Temp space used: 8292656000
  SM join: Resc: 1094083.423331  Resp: 1094083.423331  [multiMatchCost=0.000000]
SM Join
  SM cost: 1094083.423331 
     resc: 1094083.423331 resc_io: 1087557.000000 resc_cpu: 254914417160
     resp: 1094083.423331 resp_io: 1087557.000000 resp_cpu: 254914417160
  Outer table:  TIMES  Alias: TIMES
    resc: 20.083103  card 92.000000  bytes:   deg: 1  resp: 20.083103
  Inner table:  SALES  Alias: SALES
    resc: 282927.639643  card: 147287590.000000  bytes:   deg: 1  resp: 282927.639643
    using dmeth: 2  #groups: 1
    Cost per ptn: 377.107436  #ptns: 1
    hash_area: 128 (max=25600) buildfrag: 1  probefrag: 521404  ppasses: 1
  Hash join: Resc: 283324.830182  Resp: 283324.830182  [multiMatchCost=0.000000]
HA Join
  HA cost: 283324.830182  
     resc: 283324.830182 resc_io: 281363.000000 resc_cpu: 76626778887
     resp: 283324.830182 resp_io: 281363.000000 resp_cpu: 76626778887
Best:: JoinMethod: Hash
       Cost: 283324.830182  Degree: 1  Resp: 283324.830182  Card: 1958441.722792 Bytes: 

***************
Now joining: CUSTOMERS[CUSTOMERS]#1
***************
NL Join
  Outer table: Card: 1958441.722792  Cost: 283324.830182  Resp: 283324.830182  Degree: 1  Bytes: 
Access path analysis for CUSTOMERS
  Scan IO  Cost (Disk) =   111784.833334
  Scan CPU Cost (Disk) =   6028853231.360001
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000000 flag = 2048  ("SALES"."CUST_ID"="CUSTOMERS"."CUST_ID")
  Total Scan IO  Cost  =   111784.833334 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 16260640.000000 (#rows))
                       =   111784.833334
  Total Scan CPU  Cost =   6028853231.360001 (scan (Disk))
                         + 813032000.000000 (cpu filter eval) (= 50.000000 (per row) * 16260640.000000 (#rows))
                       =   6841885231.360001
  Inner table: CUSTOMERS  Alias: CUSTOMERS
  Access Path: TableScan
    NL Join:  Cost: 13704481474.701481  Resp: 13704481474.701481  Degree: 1
      Cost_io: 13683038398.250000  Cost_cpu: 837541339046083
      Resp_io: 13683038398.250000  Resp_cpu: 837541339046083

  Best NL cost: 13704481474.701481
          resc: 13704481474.701481  resc_io: 13683038398.250000  resc_cpu: 837541339046083
          resp: 13704481474.701481  resp_io: 13683038398.250000  resc_cpu: 837541339046083
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Join Card:  1959617.929325 = outer (1958441.722792) * inner (16260640.000000) * sel (6.1535e-08)
Join Card - Rounded: 1959618 Computed: 1959617.929325
Grouping column cardinality [   CUST_ID]    5373440
Grouping column cardinality [CUST_FIRST]    798
Grouping column cardinality [CUST_LAST_]    798
Grouping column cardinality [CALENDAR_Q]    1
  Outer table:  SALES  Alias: SALES
    resc: 283324.830182  card 1958441.722792  bytes:   deg: 1  resp: 283324.830182
  Inner table:  CUSTOMERS  Alias: CUSTOMERS
    resc: 111940.353170  card: 16260640.000000  bytes:   deg: 1  resp: 111940.353170
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      524288 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 11030 Row size:     46 Total Rows:        1958442
      Initial runs:   2 Merge passes:  1 IO Cost / pass:       5976
      Total IO sort cost: 17006.000000      Total CPU sort cost: 2154944299
      Total Temp space used: 173466000
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      524288 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 67687 Row size:     34 Total Rows:       16260640
      Initial runs:   6 Merge passes:  1 IO Cost / pass:      36666
      Total IO sort cost: 104353.000000      Total CPU sort cost: 19255649926
      Total Temp space used: 1044784000
  SM join: Resc: 517172.346156  Resp: 517172.346156  [multiMatchCost=0.000000]
SM Join
  SM cost: 517172.346156 
     resc: 517172.346156 resc_io: 514508.000000 resc_cpu: 104066226343
     resp: 517172.346156 resp_io: 514508.000000 resp_cpu: 104066226343
  Outer table:  SALES  Alias: SALES
    resc: 283324.830182  card 1958441.722792  bytes:   deg: 1  resp: 283324.830182
  Inner table:  CUSTOMERS  Alias: CUSTOMERS
    resc: 111940.353170  card: 16260640.000000  bytes:   deg: 1  resp: 111940.353170
    using dmeth: 2  #groups: 1
    Cost per ptn: 29527.783697  #ptns: 1
    hash_area: 128 (max=25600) buildfrag: 10519  probefrag: 65504  ppasses: 1
  Hash join: Resc: 424792.967049  Resp: 424792.967049  [multiMatchCost=0.000000]
HA Join
  HA cost: 424792.967049  
     resc: 424792.967049 resc_io: 422578.000000 resc_cpu: 86514007097
     resp: 424792.967049 resp_io: 422578.000000 resp_cpu: 86514007097
GROUP BY sort

GROUP BY/Correlated Subquery Filter adjustment factor: 0.353553
GROUP BY cardinality:  1959618.000000, TABLE cardinality:  1959618.000000
Vector group by not costed because no SYS_OP_XLATE_USE in group by.
kdmoGByPushdownValid: more than one table in group by    SORT ressource         Sort statistics
      Sort width:         598 Area size:      524288 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 16555 Row size:     69 Total Rows:        1959618
      Initial runs:   2 Merge passes:  1 IO Cost / pass:       8968
      Total IO sort cost: 25523.000000      Total CPU sort cost: 2292186849
      Total Temp space used: 126419000
WiF sort
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      524288 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 16555 Row size:     69 Total Rows:        1959618
      Initial runs:   2 Merge passes:  1 IO Cost / pass:       8968
      Total IO sort cost: 25523.000000      Total CPU sort cost: 2292186849
      Total Temp space used: 126419000
Best:: JoinMethod: Hash
       Cost: 475956.338063  Degree: 1  Resp: 475956.338063  Card: 1959617.929325 Bytes: 
***********************
Best so far:  Table#: 0  cost: 20.083103  card: 92.000000  bytes: 1380.000000
              Table#: 2  cost: 283324.830182  card: 1958441.722792  bytes: 62670144.000000
              Table#: 1  cost: 475956.338063  card: 1959617.929325  bytes: 103859754.000000
***********************
Join order[3]:  CUSTOMERS[CUSTOMERS]#1  TIMES[TIMES]#0  SALES[SALES]#2

***************
Now joining: TIMES[TIMES]#0
***************
NL Join
  Outer table: Card: 16260640.000000  Cost: 111940.353170  Resp: 111940.353170  Degree: 1  Bytes: 
Access path analysis for TIMES
  Scan IO  Cost (Disk) =   17.875000
  Scan CPU Cost (Disk) =   2880665.040000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.012594 flag = 2048  ("TIMES"."CALENDAR_QUARTER_DESC"='2010-4')
  Total Scan IO  Cost  =   17.875000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 7305.000000 (#rows))
                       =   17.875000
  Total Scan CPU  Cost =   2880665.040000 (scan (Disk))
                         + 365250.000000 (cpu filter eval) (= 50.000000 (per row) * 7305.000000 (#rows))
                       =   3245915.040000
  Inner table: TIMES  Alias: TIMES
  Access Path: TableScan
    NL Join:  Cost: 292122193.327436  Resp: 292122193.327436  Degree: 1
      Cost_io: 290770727.000000  Cost_cpu: 52786684789257
      Resp_io: 290770727.000000  Resp_cpu: 52786684789257

  Best NL cost: 292122193.327436
          resc: 292122193.327436  resc_io: 290770727.000000  resc_cpu: 52786684789257
          resp: 292122193.327436  resp_io: 290770727.000000  resc_cpu: 52786684789257
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Join Card:  1495978880.000000 = outer (16260640.000000) * inner (92.000000) * sel (1.000000)
Join Card - Rounded: 1495978880 Computed: 1495978880.000000
Grouping column cardinality [   CUST_ID]    5373440
Grouping column cardinality [CUST_FIRST]    798
Grouping column cardinality [CUST_LAST_]    798
Grouping column cardinality [CALENDAR_Q]    1
Join order aborted: cost > best plan cost
***********************
Join order[4]:  CUSTOMERS[CUSTOMERS]#1  SALES[SALES]#2  TIMES[TIMES]#0

***************
Now joining: SALES[SALES]#2
***************
NL Join
  Outer table: Card: 16260640.000000  Cost: 111940.353170  Resp: 111940.353170  Degree: 1  Bytes: 
Access path analysis for SALES
  Scan IO  Cost (Disk) =   281341.666667
  Scan CPU Cost (Disk) =   61894160172.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000000 flag = 2048  ("SALES"."CUST_ID"="CUSTOMERS"."CUST_ID")
  Total Scan IO  Cost  =   281341.666667 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 147287590.000000 (#rows))
                       =   281341.666667
  Total Scan CPU  Cost =   61894160172.000000 (scan (Disk))
                         + 7364379500.000000 (cpu filter eval) (= 50.000000 (per row) * 147287590.000000 (#rows))
                       =   69258539672.000000
  Inner table: SALES  Alias: SALES
  Access Path: TableScan
    NL Join:  Cost: 4603628801736.434570  Resp: 4603628801736.434570  Degree: 1
      Cost_io: 4574795670454.000000  Cost_cpu: 1126188186560963328
      Resp_io: 4574795670454.000000  Resp_cpu: 1126188186560963328

  Best NL cost: 4603628801736.434570
          resc: 4603628801736.434570  resc_io: 4574795670454.000000  resc_cpu: 1126188186560963328
          resp: 4603628801736.434570  resp_io: 4574795670454.000000  resc_cpu: 1126188186560963328
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Join Card:  147376048.402154 = outer (16260640.000000) * inner (147287590.000000) * sel (6.1535e-08)
Join Card - Rounded: 147376048 Computed: 147376048.402154
Grouping column cardinality [   CUST_ID]    5373440
Grouping column cardinality [CUST_FIRST]    798
Grouping column cardinality [CUST_LAST_]    798
Grouping column cardinality [CALENDAR_Q]    1
  Outer table:  CUSTOMERS  Alias: CUSTOMERS
    resc: 111940.353170  card 16260640.000000  bytes:   deg: 1  resp: 111940.353170
  Inner table:  SALES  Alias: SALES
    resc: 282927.639643  card: 147287590.000000  bytes:   deg: 1  resp: 282927.639643
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      524288 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 67687 Row size:     34 Total Rows:       16260640
      Initial runs:   6 Merge passes:  1 IO Cost / pass:      36666
      Total IO sort cost: 104353.000000      Total CPU sort cost: 19255649926
      Total Temp space used: 1044784000
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      524288 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 522936 Row size:     29 Total Rows:      147287590
      Initial runs:   41 Merge passes:  1 IO Cost / pass:     283258
      Total IO sort cost: 806194.000000      Total CPU sort cost: 192977925209
      Total Temp space used: 8292656000
  SM join: Resc: 1310848.910216  Resp: 1310848.910216  [multiMatchCost=0.226474]
SM Join
  SM cost: 1310848.910216 
     resc: 1310848.910216 resc_io: 1303676.000000 resc_cpu: 280165434338
     resp: 1310848.910216 resp_io: 1303676.000000 resp_cpu: 280165434338
  Outer table:  CUSTOMERS  Alias: CUSTOMERS
    resc: 111940.353170  card 16260640.000000  bytes:   deg: 1  resp: 111940.353170
  Inner table:  SALES  Alias: SALES
    resc: 282927.639643  card: 147287590.000000  bytes:   deg: 1  resp: 282927.639643
    using dmeth: 2  #groups: 1
    Cost per ptn: 228069.290040  #ptns: 1
    hash_area: 128 (max=25600) buildfrag: 65504  probefrag: 521404  ppasses: 1
  Hash join: Resc: 622937.509327  Resp: 622937.509327  [multiMatchCost=0.226474]
HA Join
  HA cost: 622937.509327  
     resc: 622937.509327 resc_io: 620320.000000 resc_cpu: 102236834875
     resp: 622937.509327 resp_io: 620320.000000 resp_cpu: 102236834875
Join order aborted: cost > best plan cost
***********************
Join order[5]:  SALES[SALES]#2  TIMES[TIMES]#0  CUSTOMERS[CUSTOMERS]#1

***************
Now joining: TIMES[TIMES]#0
***************
NL Join
  Outer table: Card: 147287590.000000  Cost: 282927.639643  Resp: 282927.639643  Degree: 1  Bytes: 
Access path analysis for TIMES
  Scan IO  Cost (Disk) =   17.875000
  Scan CPU Cost (Disk) =   2880665.040000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000145 flag = 2048  ("TIMES"."TIME_ID"="SALES"."TIME_ID")
    io = NOCOST, cpu = 50.000000, sel = 0.012594 flag = 2048  ("TIMES"."CALENDAR_QUARTER_DESC"='2010-4')
  Total Scan IO  Cost  =   17.875000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 7305.000000 (#rows))
                       =   17.875000
  Total Scan CPU  Cost =   2880665.040000 (scan (Disk))
                         + 365302.789420 (cpu filter eval) (= 50.007226 (per row) * 7305.000000 (#rows))
                       =   3245967.829420
  Inner table: TIMES  Alias: TIMES
  Access Path: TableScan
    NL Join:  Cost: 2645288876.603225  Resp: 2645288876.603225  Degree: 1
      Cost_io: 2633047016.000000  Cost_cpu: 478152672973039
      Resp_io: 2633047016.000000  Resp_cpu: 478152672973039

  Best NL cost: 2645288876.603225
          resc: 2645288876.603225  resc_io: 2633047016.000000  resc_cpu: 478152672973039
          resp: 2645288876.603225  resp_io: 2633047016.000000  resc_cpu: 478152672973039
  SPD: Directive valid: dirid = 1542024407863284184, state = 1, flags = 1, loc = 2, forDS = NO, forCG = YES {F(75132)[]; (74993)[]}
  SPD: Return code in qosdDSDirSetup: EXISTS, estType = JOIN
Join Card:  1958441.722792 = outer (147287590.000000) * inner (92.000000) * sel (1.4453e-04)
Join Card - Rounded: 1958442 Computed: 1958441.722792
Grouping column cardinality [   CUST_ID]    5373440
Grouping column cardinality [CUST_FIRST]    798
Grouping column cardinality [CUST_LAST_]    798
Grouping column cardinality [CALENDAR_Q]    1
  Outer table:  SALES  Alias: SALES
    resc: 282927.639643  card 147287590.000000  bytes:   deg: 1  resp: 282927.639643
  Inner table:  TIMES  Alias: TIMES
    resc: 20.083103  card: 92.000000  bytes:   deg: 1  resp: 20.083103
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      524288 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 522936 Row size:     29 Total Rows:      147287590
      Initial runs:   41 Merge passes:  1 IO Cost / pass:     283258
      Total IO sort cost: 806194.000000      Total CPU sort cost: 192977925209
      Total Temp space used: 8292656000
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      524288 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     27 Total Rows:             92
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 39085864
      Total Temp space used: 0
  SM join: Resc: 1094083.423331  Resp: 1094083.423331  [multiMatchCost=0.000000]
SM Join
  SM cost: 1094083.423331 
     resc: 1094083.423331 resc_io: 1087557.000000 resc_cpu: 254914417160
     resp: 1094083.423331 resp_io: 1087557.000000 resp_cpu: 254914417160
  Outer table:  SALES  Alias: SALES
    resc: 282927.639643  card 147287590.000000  bytes:   deg: 1  resp: 282927.639643
  Inner table:  TIMES  Alias: TIMES
    resc: 20.083103  card: 92.000000  bytes:   deg: 1  resp: 20.083103
    using dmeth: 2  #groups: 1
    Cost per ptn: 202455.417962  #ptns: 1
    hash_area: 128 (max=25600) buildfrag: 521404  probefrag: 1  ppasses: 1
  Hash join: Resc: 485408.154556  Resp: 485408.154556  [multiMatchCost=5.013848]
  Outer table:  TIMES  Alias: TIMES
    resc: 20.083103  card 92.000000  bytes:   deg: 1  resp: 20.083103
  Inner table:  SALES  Alias: SALES
    resc: 282927.639643  card: 147287590.000000  bytes:   deg: 1  resp: 282927.639643
    using dmeth: 2  #groups: 1
    Cost per ptn: 377.107436  #ptns: 1
    hash_area: 128 (max=25600) buildfrag: 1  probefrag: 521404  ppasses: 1
  Hash join: Resc: 283324.830182  Resp: 283324.830182  [multiMatchCost=0.000000]
HA Join
  HA cost: 283324.830182 swapped 
     resc: 283324.830182 resc_io: 281363.000000 resc_cpu: 76626778887
     resp: 283324.830182 resp_io: 281363.000000 resp_cpu: 76626778887
Best:: JoinMethod: Hash
       Cost: 283324.830182  Degree: 1  Resp: 283324.830182  Card: 1958441.722792 Bytes: 

***************
Now joining: CUSTOMERS[CUSTOMERS]#1
***************
NL Join
  Outer table: Card: 1958441.722792  Cost: 283324.830182  Resp: 283324.830182  Degree: 1  Bytes: 
Access path analysis for CUSTOMERS
  Scan IO  Cost (Disk) =   111784.833334
  Scan CPU Cost (Disk) =   6028853231.360001
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000000 flag = 2048  ("SALES"."CUST_ID"="CUSTOMERS"."CUST_ID")
  Total Scan IO  Cost  =   111784.833334 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 16260640.000000 (#rows))
                       =   111784.833334
  Total Scan CPU  Cost =   6028853231.360001 (scan (Disk))
                         + 813032000.000000 (cpu filter eval) (= 50.000000 (per row) * 16260640.000000 (#rows))
                       =   6841885231.360001
  Inner table: CUSTOMERS  Alias: CUSTOMERS
  Access Path: TableScan
    NL Join:  Cost: 13704481474.701481  Resp: 13704481474.701481  Degree: 1
      Cost_io: 13683038398.250000  Cost_cpu: 837541339046083
      Resp_io: 13683038398.250000  Resp_cpu: 837541339046083

  Best NL cost: 13704481474.701481
          resc: 13704481474.701481  resc_io: 13683038398.250000  resc_cpu: 837541339046083
          resp: 13704481474.701481  resp_io: 13683038398.250000  resc_cpu: 837541339046083
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Join Card:  1959617.929325 = outer (1958441.722792) * inner (16260640.000000) * sel (6.1535e-08)
Join Card - Rounded: 1959618 Computed: 1959617.929325
Grouping column cardinality [   CUST_ID]    5373440
Grouping column cardinality [CUST_FIRST]    798
Grouping column cardinality [CUST_LAST_]    798
Grouping column cardinality [CALENDAR_Q]    1
  Outer table:  TIMES  Alias: TIMES
    resc: 283324.830182  card 1958441.722792  bytes:   deg: 1  resp: 283324.830182
  Inner table:  CUSTOMERS  Alias: CUSTOMERS
    resc: 111940.353170  card: 16260640.000000  bytes:   deg: 1  resp: 111940.353170
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      524288 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 11030 Row size:     46 Total Rows:        1958442
      Initial runs:   2 Merge passes:  1 IO Cost / pass:       5976
      Total IO sort cost: 17006.000000      Total CPU sort cost: 2154944299
      Total Temp space used: 157311000
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      524288 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 67687 Row size:     34 Total Rows:       16260640
      Initial runs:   6 Merge passes:  1 IO Cost / pass:      36666
      Total IO sort cost: 104353.000000      Total CPU sort cost: 19255649926
      Total Temp space used: 1044784000
  SM join: Resc: 517172.346156  Resp: 517172.346156  [multiMatchCost=0.000000]
SM Join
  SM cost: 517172.346156 
     resc: 517172.346156 resc_io: 514508.000000 resc_cpu: 104066226343
     resp: 517172.346156 resp_io: 514508.000000 resp_cpu: 104066226343
  Outer table:  TIMES  Alias: TIMES
    resc: 283324.830182  card 1958441.722792  bytes:   deg: 1  resp: 283324.830182
  Inner table:  CUSTOMERS  Alias: CUSTOMERS
    resc: 111940.353170  card: 16260640.000000  bytes:   deg: 1  resp: 111940.353170
    using dmeth: 2  #groups: 1
    Cost per ptn: 29527.783697  #ptns: 1
    hash_area: 128 (max=25600) buildfrag: 10519  probefrag: 65504  ppasses: 1
  Hash join: Resc: 424792.967049  Resp: 424792.967049  [multiMatchCost=0.000000]
HA Join
  HA cost: 424792.967049  
     resc: 424792.967049 resc_io: 422578.000000 resc_cpu: 86514007097
     resp: 424792.967049 resp_io: 422578.000000 resp_cpu: 86514007097
GROUP BY sort

GROUP BY/Correlated Subquery Filter adjustment factor: 0.353553
GROUP BY cardinality:  1959618.000000, TABLE cardinality:  1959618.000000
Vector group by not costed because no SYS_OP_XLATE_USE in group by.
kdmoGByPushdownValid: more than one table in group by    SORT ressource         Sort statistics
      Sort width:         598 Area size:      524288 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 16555 Row size:     69 Total Rows:        1959618
      Initial runs:   2 Merge passes:  1 IO Cost / pass:       8968
      Total IO sort cost: 25523.000000      Total CPU sort cost: 2292186849
      Total Temp space used: 126419000
WiF sort
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      524288 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 16555 Row size:     69 Total Rows:        1959618
      Initial runs:   2 Merge passes:  1 IO Cost / pass:       8968
      Total IO sort cost: 25523.000000      Total CPU sort cost: 2292186849
      Total Temp space used: 126419000
Join order aborted: cost > best plan cost
***********************
Join order[6]:  SALES[SALES]#2  CUSTOMERS[CUSTOMERS]#1  TIMES[TIMES]#0

***************
Now joining: CUSTOMERS[CUSTOMERS]#1
***************
NL Join
  Outer table: Card: 147287590.000000  Cost: 282927.639643  Resp: 282927.639643  Degree: 1  Bytes: 
Access path analysis for CUSTOMERS
  Scan IO  Cost (Disk) =   111784.833333
  Scan CPU Cost (Disk) =   6028853231.360001
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000000 flag = 2048  ("SALES"."CUST_ID"="CUSTOMERS"."CUST_ID")
  Total Scan IO  Cost  =   111784.833333 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 16260640.000000 (#rows))
                       =   111784.833333
  Total Scan CPU  Cost =   6028853231.360001 (scan (Disk))
                         + 813032000.000000 (cpu filter eval) (= 50.000000 (per row) * 16260640.000000 (#rows))
                       =   6841885231.360001
  Inner table: CUSTOMERS  Alias: CUSTOMERS
  Access Path: TableScan
    NL Join:  Cost: 1030645213116.024536  Resp: 1030645213116.024536  Degree: 1
      Cost_io: 1029032700106.750000  Cost_cpu: 62982861068135600
      Resp_io: 1029032700106.750000  Resp_cpu: 62982861068135600

  Best NL cost: 1030645213116.024536
          resc: 1030645213116.024536  resc_io: 1029032700106.750000  resc_cpu: 62982861068135600
          resp: 1030645213116.024536  resp_io: 1029032700106.750000  resc_cpu: 62982861068135600
  SPD: Return code in qosdDSDirSetup: NODIR, estType = JOIN
Join Card:  147376048.402154 = outer (147287590.000000) * inner (16260640.000000) * sel (6.1535e-08)
Join Card - Rounded: 147376048 Computed: 147376048.402154
Grouping column cardinality [   CUST_ID]    5373440
Grouping column cardinality [CUST_FIRST]    798
Grouping column cardinality [CUST_LAST_]    798
Grouping column cardinality [CALENDAR_Q]    1
  Outer table:  SALES  Alias: SALES
    resc: 282927.639643  card 147287590.000000  bytes:   deg: 1  resp: 282927.639643
  Inner table:  CUSTOMERS  Alias: CUSTOMERS
    resc: 111940.353170  card: 16260640.000000  bytes:   deg: 1  resp: 111940.353170
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      524288 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 522936 Row size:     29 Total Rows:      147287590
      Initial runs:   41 Merge passes:  1 IO Cost / pass:     283258
      Total IO sort cost: 806194.000000      Total CPU sort cost: 192977925209
      Total Temp space used: 8292656000
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      524288 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 67687 Row size:     34 Total Rows:       16260640
      Initial runs:   6 Merge passes:  1 IO Cost / pass:      36666
      Total IO sort cost: 104353.000000      Total CPU sort cost: 19255649926
      Total Temp space used: 1044784000
  SM join: Resc: 1310848.910216  Resp: 1310848.910216  [multiMatchCost=0.226474]
SM Join
  SM cost: 1310848.910216 
     resc: 1310848.910216 resc_io: 1303676.000000 resc_cpu: 280165434338
     resp: 1310848.910216 resp_io: 1303676.000000 resp_cpu: 280165434338
  Outer table:  SALES  Alias: SALES
    resc: 282927.639643  card 147287590.000000  bytes:   deg: 1  resp: 282927.639643
  Inner table:  CUSTOMERS  Alias: CUSTOMERS
    resc: 111940.353170  card: 16260640.000000  bytes:   deg: 1  resp: 111940.353170
    using dmeth: 2  #groups: 1
    Cost per ptn: 227901.559757  #ptns: 1
    hash_area: 128 (max=25600) buildfrag: 521404  probefrag: 65504  ppasses: 1
  Hash join: Resc: 623105.239609  Resp: 623105.239609  [multiMatchCost=335.687039]
  Outer table:  CUSTOMERS  Alias: CUSTOMERS
    resc: 111940.353170  card 16260640.000000  bytes:   deg: 1  resp: 111940.353170
  Inner table:  SALES  Alias: SALES
    resc: 282927.639643  card: 147287590.000000  bytes:   deg: 1  resp: 282927.639643
    using dmeth: 2  #groups: 1
    Cost per ptn: 228069.290040  #ptns: 1
    hash_area: 128 (max=25600) buildfrag: 65504  probefrag: 521404  ppasses: 1
  Hash join: Resc: 622937.509327  Resp: 622937.509327  [multiMatchCost=0.226474]
HA Join
  HA cost: 622937.509327 swapped 
     resc: 622937.509327 resc_io: 620320.000000 resc_cpu: 102236834875
     resp: 622937.509327 resp_io: 620320.000000 resp_cpu: 102236834875
Join order aborted: cost > best plan cost
***********************
(newjo-stop-1) k:0, spcnt:0, perm:6, maxperm:2000

*********************************
Number of join permutations tried: 6
*********************************
Consider using bloom filter between TIMES[TIMES] and SALES[SALES] with ??
kkoBloomFilter: join (lcdn:92 rcdn:147287590 jcdn:1958442 limit:6775229140)
kkopqSingleJoinBloomNdv:Compute bloom ndv for lfro:TIMES[TIMES] and rfro:SALES[SALES] swap:no
kkopqSingleJoinBloomNdv: predCnt:#1 col1:(bndv:7305 ndv:7305) and col2:(bndv:6919 ndv:6919) creatorNDV:7305.0 userNDV:6919.0
kkopqComputeBloomNdv: predCnt:1 creatorNdv:7305.0 userNdv:6919.0 singleTblPred:yes
kkoBloomFilter: join ndv:92 reduction:0.000001 (limit:0.500000)  accepted, but final decision will be made in code generation
Consider using bloom filter between SALES[SALES] and CUSTOMERS[CUSTOMERS] with ??
kkoBloomFilter: join (lcdn:1958442 rcdn:16260640 jcdn:1959618 limit:15922757907653)
kkopqSingleJoinBloomNdv:Compute bloom ndv for lfro:TIMES[TIMES] and rfro:CUSTOMERS[CUSTOMERS] swap:no
kkopqSingleJoinBloomNdv:Compute bloom ndv for lfro:SALES[SALES] and rfro:CUSTOMERS[CUSTOMERS] swap:no
kkopqSingleJoinBloomNdv: predCnt:#1 col1:(bndv:5373440 ndv:5373440) and col2:(bndv:16250880 ndv:16250880) creatorNDV:5373440.0 userNDV:16250880.0
kkopqComputeBloomNdv: predCnt:1 creatorNdv:5373440.0 userNdv:16250880.0 singleTblPred:yes
kkoBloomFilter: join ndv:1958442 reduction:0.120441 (limit:0.500000)  accepted, but final decision will be made in code generation
Enumerating distribution method (advanced)
--- Distribution method for 
join between TIMES[TIMES](serial) and SALES[SALES](serial); jm = 1; right side access path = TableScan
---- serial Hash-Join -> NONE
--- Distribution method for 
join between SALES[SALES](serial) and CUSTOMERS[CUSTOMERS](serial); jm = 1; right side access path = TableScan
---- serial Hash-Join -> NONE

(newjo-save)    [0 2 1 ]

GROUP BY/Correlated Subquery Filter adjustment factor: 0.353553
GROUP BY cardinality:  1959618.000000, TABLE cardinality:  1959618.000000
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      524288 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 16555 Row size:     69 Total Rows:        1959618
      Initial runs:   2 Merge passes:  1 IO Cost / pass:       8968
      Total IO sort cost: 25523.000000      Total CPU sort cost: 2292186849
      Total Temp space used: 126419000
LORE: Or-Expansion validity checks failed on query block SEL$2 (#2) because Cost based OR expansion enabled
Transfer Optimizer annotations for query block SEL$2 (#2)
AP: Adaptive joins bypassed for query block SEL$2 due to disabled by adaptive join parameter
AutoDOP: Consider caching for TIMES[TIMES](obj#75132) 
cost:20.083103 blkSize:8192 objSize:66.00 marObjSize:62.70 bufSize:92026.00 affPercent:80 smallTab:YES affinitized:NO
kkecComputeAPDop: IO Dop: 0.000000 - CPU Dop: 0.000000
Replication not feasible for first input in join order
id=0 frofand predicate="TIMES"."CALENDAR_QUARTER_DESC"='2010-4'
Transfer optimizer annotations for TIMES[TIMES]
AutoDOP: Consider caching for SALES[SALES](obj#74993) 
cost:283324.830182 blkSize:8192 objSize:1038800.00 marObjSize:986860.00 bufSize:92026.00 affPercent:80 smallTab:NO affinitized:NO
kkecComputeAPDop: IO Dop: 0.000000 - CPU Dop: 0.000000
Replication not feasible based on distribution
id=0 frofkksm[i] (sort-merge/hash) predicate="TIMES"."TIME_ID"="SALES"."TIME_ID"
id=0 frosand (sort-merge/hash) predicate="TIMES"."TIME_ID"="SALES"."TIME_ID"
Transfer optimizer annotations for SALES[SALES]
AutoDOP: Consider caching for CUSTOMERS[CUSTOMERS](obj#75080) 
cost:475956.338063 blkSize:8192 objSize:412744.00 marObjSize:392106.80 bufSize:92026.00 affPercent:80 smallTab:NO affinitized:NO
kkecComputeAPDop: IO Dop: 0.000000 - CPU Dop: 0.000000
Replication not feasible based on distribution
id=0 frofkksm[i] (sort-merge/hash) predicate="SALES"."CUST_ID"="CUSTOMERS"."CUST_ID"
id=0 frosand (sort-merge/hash) predicate="SALES"."CUST_ID"="CUSTOMERS"."CUST_ID"
Transfer optimizer annotations for CUSTOMERS[CUSTOMERS]
HJ temp:

GROUP BY/Correlated Subquery Filter adjustment factor: 1.000000

GROUP BY/Correlated Subquery Filter adjustment factor: 0.250000
Final cost for query block SEL$2 (#2) - All Rows Plan:
  Best join order: 2
  Cost: 475956.338063  Degree: 1  Card: 1959618.000000  Bytes: 103859754.000000
  Resc: 475956.338063  Resc_io: 473624.000000  Resc_cpu: 91098380795
  Resp: 475956.338063  Resp_io: 473624.000000  Resc_cpu: 91098380795
kkoqbc-subheap (delete addr=0x7fdb9b8557e8, in-use=63104, alloc=65704)
kkoqbc-end:                                            [    4438/     5]
        :
    call(in-use=65768, alloc=147704), compile(in-use=325576, alloc=326976), execution(in-use=7672, alloc=8088)

kkoqbc: finish optimizing query block SEL$2 (#2)
kkoqbc: optimizing query block SEL$1 (#1)
                                                       [    4438/     0]
        :
    call(in-use=65768, alloc=147704), compile(in-use=325672, alloc=326976), execution(in-use=7672, alloc=8088)

kkoqbc-subheap (create addr=0x7fdb9b8557e8)
****************
QUERY BLOCK TEXT
****************
SELECT /*+ monitor no_parallel tanel4 */
    *
FROM
    (
        SELECT
            times.calendar_quarter_desc,
            customers.cust_first_name,
            customers.cust_last_name,
            customers.cust_id,
            SUM(sales.amount_sold),
            RANK() OVER(
                PARTITION BY times.calendar_quarter_desc
                ORDER BY
                    SUM(amount_sold) DESC
            ) AS rank_within_quarter
        FROM
            sales,
            customers,
            times
        WHERE
            -- join conditions
                sales.cust_id = customers.cust_id
            AND times.time_id = sales.time_id
            -- filter conditions
            AND times.calendar_quarter_desc = '2010-4'
        GROUP BY
            customers.cust_id,
            customers.cust_first_name,
            customers.cust_last_name,
            customers.cust_id,
            times.calendar_quarter_desc
    )
WHERE
    rank_within_quarter < 16
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$1 nbfros=1 flg=0
  fro(0): flg=1 objn=0 hint_alias="from$_subquery$_001"@"SEL$1"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3255 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: from$_subquery$_001  Alias: from$_subquery$_001  (NOT ANALYZED)
  #Rows: 0  SSZ: 0  LGR: 0  #Blks:  0  AvgRowLen:  0.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 0
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
try to generate single-table filter predicates from ORs for query block SEL$1 (#1)
finally: "from$_subquery$_001"."RANK_WITHIN_QUARTER"<16

=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$1 (#1)
Applicable DS directives:
Return code in qosdSetupDirCtx4QB: NODIR
=====================================
SPD: END context at query block level
=====================================
Access path analysis for from$_subquery$_001

***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE:  Bypassed; QB has a single table SEL$1 (#1)
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  from$_subquery$_001[from$_subquery$_001]#0
***********************
Best so far:  Table#: 0  cost: 475956.338063  card: 1959618.000000  bytes: 152850204.000000
***********************
(newjo-stop-1) k:0, spcnt:0, perm:1, maxperm:2000

*********************************
Number of join permutations tried: 1
*********************************
Enumerating distribution method (advanced)

LORE: Or-Expansion validity checks failed on query block SEL$1 (#1) because Cost based OR expansion enabled
Transfer Optimizer annotations for query block SEL$1 (#1)
AP: Adaptive joins bypassed for query block SEL$1 due to disabled by adaptive join parameter
AutoDOP: Consider caching for from$_subquery$_001[from$_subquery$_001](obj#0) 
cost:475956.338063 blkSize:8192 objSize:0.00 marObjSize:0.00 bufSize:92026.00 affPercent:80 smallTab:YES affinitized:NO
kkecComputeAPDop: IO Dop: 0.000000 - CPU Dop: 0.000000
Replication not feasible for first input in join order
id=0 frofand predicate="from$_subquery$_001"."RANK_WITHIN_QUARTER"<16
Transfer optimizer annotations for from$_subquery$_001[from$_subquery$_001]
Final cost for query block SEL$1 (#1) - All Rows Plan:
  Best join order: 1
  Cost: 475956.338063  Degree: 1  Card: 1959618.000000  Bytes: 152850204.000000
  Resc: 475956.338063  Resc_io: 473624.000000  Resc_cpu: 91098380795
  Resp: 475956.338063  Resp_io: 473624.000000  Resc_cpu: 91098380795
kkoqbc-subheap (delete addr=0x7fdb9b8557e8, in-use=36056, alloc=49272)
kkoqbc-end:                                            [    4439/     1]
        :
    call(in-use=72192, alloc=131232), compile(in-use=328536, alloc=331120), execution(in-use=8184, alloc=12144)

kkoqbc: finish optimizing query block SEL$1 (#1)
CBRID: from$_subquery$_001 @ SEL$1 - no blocking operation found
CBRID: TIMES @ SEL$2 - blocking operation in qb SEL$2
CBRID: SALES @ SEL$2 - blocking operation in qb SEL$2
CBRID: CUSTOMERS @ SEL$2 - blocking operation in qb SEL$2
apadrv-end                                             [    4439/     0]
          :
    call(in-use=72192, alloc=131232), compile(in-use=330152, alloc=331120), execution(in-use=8184, alloc=12144)



    SPD: Generating finding id: type = 1, reason = 1, objcnt = 1, obItr = 0, objid = 75132, objtyp = 1, vecsize = 11, colvec = [10, ], fid = 6811186061607990230
    SPD: Modified felem, fid=6811186061607990230, ftype = 1, freason = 1, dtype = 0, dstate = 0, dflag = 0, ver = YES, keep = NO

    SPD: Generating finding id: type = 1, reason = 2, objcnt = 2, obItr = 0, objid = 74993, objtyp = 1, vecsize = 0, obItr = 1, objid = 75132, objtyp = 1, vecsize = 0, fid = 7936947574142619066

    SPD: Generating finding id: type = 1, reason = 2, objcnt = 3, obItr = 0, objid = 74993, objtyp = 1, vecsize = 0, obItr = 1, objid = 75080, objtyp = 1, vecsize = 0, obItr = 2, objid = 75132, objtyp = 1, vecsize = 0, fid = 6818735810646830138
    SPD: Modified felem, fid=6818735810646830138, ftype = 1, freason = 2, dtype = 0, dstate = 0, dflag = 0, ver = YES, keep = NO

    SPD: Generating finding id: type = 1, reason = 4, objcnt = 3, obItr = 0, objid = 74993, objtyp = 1, vecsize = 0, obItr = 1, objid = 75080, objtyp = 1, vecsize = 4, colvec = [1, 2, 3, ], obItr = 2, objid = 75132, objtyp = 1, vecsize = 11, colvec = [10, ], fid = 10034486232300851139
    SPD: Modified felem, fid=10034486232300851139, ftype = 1, freason = 4, dtype = 0, dstate = 0, dflag = 0, ver = YES, keep = NO
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=3718(MB) time=18592(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=3718(MB) time=18592(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=3718(MB) time=18592(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=3718(MB) time=18592(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=3718(MB) time=18592(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=3718(MB) time=18592(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=3319(MB) time=16593(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=3319(MB) time=16593(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=2213(MB) time=11067(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=2213(MB) time=11067(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=2213(MB) time=11067(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=2213(MB) time=11067(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=1(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=1(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=1(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=1(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=2210(MB) time=11052(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=2210(MB) time=11052(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=2210(MB) time=11052(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=2210(MB) time=11052(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=875(MB) time=4373(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=875(MB) time=4373(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=875(MB) time=4373(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=875(MB) time=4373(ms)
Starting SQL statement dump

user_id=108 user_name=SSH module=SQL*Plus action=
sql_id=0skx8c6t9ntz7 plan_hash_value=-304637884 problem_type=3
----- Current SQL Statement for this session (sql_id=0skx8c6t9ntz7) -----
SELECT /*+ monitor no_parallel tanel4 */
    *
FROM
    (
        SELECT
            times.calendar_quarter_desc,
            customers.cust_first_name,
            customers.cust_last_name,
            customers.cust_id,
            SUM(sales.amount_sold),
            RANK() OVER(
                PARTITION BY times.calendar_quarter_desc
                ORDER BY
                    SUM(amount_sold) DESC
            ) AS rank_within_quarter
        FROM
            sales,
            customers,
            times
        WHERE
            -- join conditions
                sales.cust_id = customers.cust_id
            AND times.time_id = sales.time_id
            -- filter conditions
            AND times.calendar_quarter_desc = '2010-4'
        GROUP BY
            customers.cust_id,
            customers.cust_first_name,
            customers.cust_last_name,
            customers.cust_id,
            times.calendar_quarter_desc
    )
WHERE
    rank_within_quarter < 16
sql_text_length=983
sql=SELECT /*+ monitor no_parallel tanel4 */
    *
FROM
    (
        SELECT
            times.calendar_quarter_desc,
            customers.cust_first_name,
            customers.cust_last_name,
            customers.cust_id,
            SUM(sales.amount_sold),
            RANK() OVER(
                PARTITION BY times.calendar_quarter_desc
                ORDER BY
                    SUM(amount_sold) DESC
            ) AS rank_within_quarter
        FROM
            sales,
            customers,
            times
        WHERE
            -- join conditions
                sales.cust_id = customers.cust_id
            AND times.time_id = sales.time_id
            -- filter conditions
            AND times.calendar_quarter_desc = '2010-4'
        GROUP BY
            customers.cust_id,
            customers.cust_first_name,
            customers.cust_last_name,
            customers.cust_id,
            times.calendar_quarter_desc
    )
WHERE
    rank_within_quarter < 16
----- Explain Plan Dump -----
----- Plan Table -----
 
============
Plan Table
============
------------------------------------------------------+-----------------------------------+---------------+
| Id  | Operation                          | Name     | Rows  | Bytes | Cost  | Time      | Pstart| Pstop |
------------------------------------------------------+-----------------------------------+---------------+
| 0   | SELECT STATEMENT                   |          |       |       |  465K |           |       |       |
| 1   |  VIEW                              |          | 1914K |  146M |  465K |  02:35:12 |       |       |
| 2   |   WINDOW SORT PUSHED RANK          |          | 1914K |   99M |  465K |  02:35:12 |       |       |
| 3   |    HASH GROUP BY                   |          | 1914K |   99M |  465K |  02:35:12 |       |       |
| 4   |     HASH JOIN                      |          | 1914K |   99M |  415K |  01:25:58 |       |       |
| 5   |      PART JOIN FILTER CREATE       | :BF0000  | 1913K |   60M |  277K |  00:57:40 |       |       |
| 6   |       HASH JOIN                    |          | 1913K |   60M |  277K |  00:57:40 |       |       |
| 7   |        PART JOIN FILTER CREATE     | :BF0001  |    92 |  1380 |    20 |  00:00:01 |       |       |
| 8   |         TABLE ACCESS FULL          | TIMES    |    92 |  1380 |    20 |  00:00:01 |       |       |
| 9   |        PARTITION RANGE JOIN-FILTER |          |  140M | 2388M |  276K |  00:57:36 | :BF0001| :BF0001|
| 10  |         TABLE ACCESS FULL          | SALES    |  140M | 2388M |  276K |  00:57:36 | :BF0001| :BF0001|
| 11  |      PARTITION RANGE JOIN-FILTER   |          |   16M |  326M |  109K |  00:22:24 | :BF0000| :BF0000|
| 12  |       TABLE ACCESS FULL            | CUSTOMERS|   16M |  326M |  109K |  00:22:24 | :BF0000| :BF0000|
------------------------------------------------------+-----------------------------------+---------------+
Query Block Name / Object Alias(identified by operation id):
------------------------------------------------------------
 1 - SEL$2                / from$_subquery$_001@SEL$1
 2 - SEL$2                
 8 - SEL$2                / TIMES@SEL$2
10 - SEL$2                / SALES@SEL$2
12 - SEL$2                / CUSTOMERS@SEL$2
------------------------------------------------------------
Predicate Information:
----------------------
1 - filter("RANK_WITHIN_QUARTER"<16)
2 - filter(RANK() OVER ( PARTITION BY "TIMES"."CALENDAR_QUARTER_DESC" ORDER BY SUM("AMOUNT_SOLD") DESC )<16)
4 - access("SALES"."CUST_ID"="CUSTOMERS"."CUST_ID")
6 - access("TIMES"."TIME_ID"="SALES"."TIME_ID")
8 - filter("TIMES"."CALENDAR_QUARTER_DESC"='2010-4')
 
Content of other_xml column
===========================
nodeid/pflags: 12 513nodeid/pflags: 11 513nodeid/pflags: 10 513nodeid/pflags: 9 513  derived_cpu_dop: 0
  derived_io_dop : 0
  dop_reason     : hint
  dop            : 1
  px_in_memory_imc: no
  px_in_memory   : no
  db_version     : 18.0.0.0
  parse_schema   : SSH
  plan_hash_full : 2471837348
  plan_hash      : 3990329412
  plan_hash_2    : 2471837348
  Outline Data:
  /*+
    BEGIN_OUTLINE_DATA
      IGNORE_OPTIM_EMBEDDED_HINTS
      OPTIMIZER_FEATURES_ENABLE('18.1.0')
      DB_VERSION('18.1.0')
      OPT_PARAM('_optimizer_adaptive_cursor_sharing' 'false')
      OPT_PARAM('_optimizer_use_feedback' 'false')
      OPT_PARAM('_px_adaptive_dist_method' 'off')
      OPT_PARAM('_optimizer_strans_adaptive_pruning' 'false')
      OPT_PARAM('_optimizer_nlj_hj_adaptive_join' 'false')
      ALL_ROWS
      OUTLINE_LEAF(@"SEL$2")
      OUTLINE_LEAF(@"SEL$1")
      NO_ACCESS(@"SEL$1" "from$_subquery$_001"@"SEL$1")
      FULL(@"SEL$2" "TIMES"@"SEL$2")
      FULL(@"SEL$2" "SALES"@"SEL$2")
      FULL(@"SEL$2" "CUSTOMERS"@"SEL$2")
      LEADING(@"SEL$2" "TIMES"@"SEL$2" "SALES"@"SEL$2" "CUSTOMERS"@"SEL$2")
      USE_HASH(@"SEL$2" "SALES"@"SEL$2")
      USE_HASH(@"SEL$2" "CUSTOMERS"@"SEL$2")
      USE_HASH_AGGREGATION(@"SEL$2")
    END_OUTLINE_DATA
  */
 
Optimizer state dump:
Compilation Environment Dump
optimizer_mode_hinted               = false
optimizer_features_hinted           = 0.0.0
parallel_execution_enabled          = true
parallel_query_forced_dop           = 0
parallel_dml_forced_dop             = 0
parallel_ddl_forced_degree          = 0
parallel_ddl_forced_instances       = 0
_query_rewrite_fudge                = 90
optimizer_features_enable           = 18.1.0
_optimizer_search_limit             = 5
cpu_count                           = 6
active_instance_count               = 1
parallel_threads_per_cpu            = 1
hash_area_size                      = 131072
bitmap_merge_area_size              = 1048576
sort_area_size                      = 65536
sort_area_retained_size             = 0
_sort_elimination_cost_ratio        = 0
_optimizer_block_size               = 8192
_sort_multiblock_read_count         = 2
_hash_multiblock_io_count           = 0
_db_file_optimizer_read_count       = 8
_optimizer_max_permutations         = 2000
pga_aggregate_target                = 512000 KB
_pga_max_size                       = 204800 KB
_query_rewrite_maxdisjunct          = 257
_smm_auto_min_io_size               = 56 KB
_smm_auto_max_io_size               = 248 KB
_smm_min_size                       = 512 KB
_smm_max_size_static                = 102400 KB
_smm_px_max_size_static             = 256000 KB
_cpu_to_io                          = 0
_optimizer_undo_cost_change         = 18.1.0
parallel_query_mode                 = enabled
_enable_parallel_dml                = disabled
parallel_ddl_mode                   = enabled
optimizer_mode                      = all_rows
sqlstat_enabled                     = false
_optimizer_percent_parallel         = 101
_always_anti_join                   = choose
_always_semi_join                   = choose
_optimizer_mode_force               = true
_partition_view_enabled             = true
_always_star_transformation         = false
_query_rewrite_or_error             = false
_hash_join_enabled                  = true
cursor_sharing                      = exact
_b_tree_bitmap_plans                = true
star_transformation_enabled         = false
_optimizer_cost_model               = choose
_new_sort_cost_estimate             = true
_complex_view_merging               = true
_unnest_subquery                    = true
_eliminate_common_subexpr           = true
_pred_move_around                   = true
_convert_set_to_join                = false
_push_join_predicate                = true
_push_join_union_view               = true
_fast_full_scan_enabled             = true
_optim_enhance_nnull_detection      = true
_parallel_broadcast_enabled         = true
_px_broadcast_fudge_factor          = 100
_ordered_nested_loop                = true
_no_or_expansion                    = false
optimizer_index_cost_adj            = 100
optimizer_index_caching             = 0
_system_index_caching               = 0
_disable_datalayer_sampling         = false
query_rewrite_enabled               = true
query_rewrite_integrity             = enforced
_query_cost_rewrite                 = true
_query_rewrite_2                    = true
_query_rewrite_1                    = true
_query_rewrite_expression           = true
_query_rewrite_jgmigrate            = true
_query_rewrite_fpc                  = true
_query_rewrite_drj                  = false
_full_pwise_join_enabled            = true
_partial_pwise_join_enabled         = true
_left_nested_loops_random           = true
_improved_row_length_enabled        = true
_index_join_enabled                 = true
_enable_type_dep_selectivity        = true
_improved_outerjoin_card            = true
_optimizer_adjust_for_nulls         = true
_optimizer_degree                   = 0
_use_column_stats_for_function      = true
_subquery_pruning_enabled           = true
_subquery_pruning_mv_enabled        = false
_or_expand_nvl_predicate            = true
_like_with_bind_as_equality         = false
_table_scan_cost_plus_one           = true
_cost_equality_semi_join            = true
_default_non_equality_sel_check     = true
_new_initial_join_orders            = true
_oneside_colstat_for_equijoins      = true
_optim_peek_user_binds              = true
_minimal_stats_aggregation          = true
_force_temptables_for_gsets         = false
workarea_size_policy                = auto
_smm_auto_cost_enabled              = true
_gs_anti_semi_join_allowed          = true
_optim_new_default_join_sel         = true
optimizer_dynamic_sampling          = 2
_pre_rewrite_push_pred              = true
_optimizer_new_join_card_computation = true
_union_rewrite_for_gs               = yes_gset_mvs
_generalized_pruning_enabled        = true
_optim_adjust_for_part_skews        = true
_force_datefold_trunc               = false
statistics_level                    = typical
_optimizer_system_stats_usage       = true
skip_unusable_indexes               = true
_remove_aggr_subquery               = true
_optimizer_push_down_distinct       = 0
_dml_monitoring_enabled             = true
_optimizer_undo_changes             = false
_predicate_elimination_enabled      = true
_nested_loop_fudge                  = 100
_project_view_columns               = true
_local_communication_costing_enabled = true
_local_communication_ratio          = 50
_query_rewrite_vop_cleanup          = true
_slave_mapping_enabled              = true
_optimizer_cost_based_transformation = linear
_optimizer_mjc_enabled              = true
_right_outer_hash_enable            = true
_spr_push_pred_refspr               = true
_optimizer_cache_stats              = false
_optimizer_cbqt_factor              = 50
_optimizer_squ_bottomup             = true
_fic_area_size                      = 131072
_optimizer_skip_scan_enabled        = true
_optimizer_cost_filter_pred         = false
_optimizer_sortmerge_join_enabled   = true
_optimizer_join_sel_sanity_check    = true
_mmv_query_rewrite_enabled          = true
_bt_mmv_query_rewrite_enabled       = true
_add_stale_mv_to_dependency_list    = true
_distinct_view_unnesting            = false
_optimizer_dim_subq_join_sel        = true
_optimizer_disable_strans_sanity_checks = 0
_optimizer_compute_index_stats      = true
_push_join_union_view2              = true
optimizer_ignore_hints              = false
_optimizer_random_plan              = 0
_query_rewrite_setopgrw_enable      = true
_optimizer_correct_sq_selectivity   = true
_disable_function_based_index       = false
_optimizer_join_order_control       = 3
_optimizer_cartesian_enabled        = true
_optimizer_starplan_enabled         = true
_extended_pruning_enabled           = true
_optimizer_push_pred_cost_based     = true
_optimizer_null_aware_antijoin      = true
_optimizer_extend_jppd_view_types   = true
_sql_model_unfold_forloops          = run_time
_enable_dml_lock_escalation         = false
_bloom_filter_enabled               = true
_update_bji_ipdml_enabled           = 0
_optimizer_extended_cursor_sharing  = udo
_dm_max_shared_pool_pct             = 1
_optimizer_cost_hjsmj_multimatch    = true
_optimizer_transitivity_retain      = true
_px_pwg_enabled                     = true
optimizer_secure_view_merging       = true
_optimizer_join_elimination_enabled = true
flashback_table_rpi                 = non_fbt
_optimizer_cbqt_no_size_restriction = true
_optimizer_enhanced_filter_push     = true
_optimizer_filter_pred_pullup       = true
_rowsrc_trace_level                 = 0
_simple_view_merging                = true
_optimizer_rownum_pred_based_fkr    = true
_optimizer_better_inlist_costing    = all
_optimizer_self_induced_cache_cost  = false
_optimizer_min_cache_blocks         = 10
_optimizer_or_expansion             = depth
_optimizer_order_by_elimination_enabled = true
_optimizer_outer_to_anti_enabled    = true
_selfjoin_mv_duplicates             = true
_dimension_skip_null                = true
_force_rewrite_enable               = false
_optimizer_star_tran_in_with_clause = true
_optimizer_complex_pred_selectivity = true
_optimizer_connect_by_cost_based    = true
_gby_hash_aggregation_enabled       = true
_globalindex_pnum_filter_enabled    = true
_px_minus_intersect                 = true
_fix_control_key                    = 0
_force_slave_mapping_intra_part_loads = false
_force_tmp_segment_loads            = false
_query_mmvrewrite_maxpreds          = 10
_query_mmvrewrite_maxintervals      = 5
_query_mmvrewrite_maxinlists        = 5
_query_mmvrewrite_maxdmaps          = 10
_query_mmvrewrite_maxcmaps          = 20
_query_mmvrewrite_maxregperm        = 512
_query_mmvrewrite_maxqryinlistvals  = 500
_disable_parallel_conventional_load = false
_trace_virtual_columns              = false
_replace_virtual_columns            = true
_virtual_column_overload_allowed    = true
_kdt_buffering                      = true
_first_k_rows_dynamic_proration     = true
_optimizer_sortmerge_join_inequality = true
_optimizer_aw_stats_enabled         = true
_bloom_pruning_enabled              = true
result_cache_mode                   = MANUAL
_px_ual_serial_input                = true
_optimizer_skip_scan_guess          = false
_enable_row_shipping                = true
_row_shipping_threshold             = 100
_row_shipping_explain               = false
transaction_isolation_level         = read_commited
_optimizer_distinct_elimination     = true
_optimizer_multi_level_push_pred    = true
_optimizer_group_by_placement       = true
_optimizer_rownum_bind_default      = 10
_enable_query_rewrite_on_remote_objs = true
_optimizer_extended_cursor_sharing_rel = simple
_optimizer_adaptive_cursor_sharing  = false
_direct_path_insert_features        = 0
_optimizer_improve_selectivity      = true
optimizer_use_pending_statistics    = false
_optimizer_enable_density_improvements = true
_optimizer_aw_join_push_enabled     = true
_optimizer_connect_by_combine_sw    = true
_enable_pmo_ctas                    = 0
_optimizer_native_full_outer_join   = force
_bloom_predicate_enabled            = true
_optimizer_enable_extended_stats    = true
_is_lock_table_for_ddl_wait_lock    = 0
_pivot_implementation_method        = choose
optimizer_capture_sql_plan_baselines = false
optimizer_use_sql_plan_baselines    = false
_optimizer_star_trans_min_cost      = 0
_optimizer_star_trans_min_ratio     = 0
_with_subquery                      = OPTIMIZER
_optimizer_fkr_index_cost_bias      = 10
_optimizer_use_subheap              = true
parallel_degree_policy              = manual
parallel_degree                     = 0
parallel_min_time_threshold         = 10
_parallel_time_unit                 = 10
_optimizer_or_expansion_subheap     = true
_optimizer_free_transformation_heap = true
_optimizer_reuse_cost_annotations   = true
_result_cache_auto_size_threshold   = 100
_result_cache_auto_time_threshold   = 1000
_optimizer_nested_rollup_for_gset   = 100
_nlj_batching_enabled               = 1
parallel_query_default_dop          = 0
is_recur_flags                      = 0
optimizer_use_invisible_indexes     = false
flashback_data_archive_internal_cursor = 0
_optimizer_extended_stats_usage_control = 192
_parallel_syspls_obey_force         = true
cell_offload_processing             = true
_rdbms_internal_fplib_enabled       = false
db_file_multiblock_read_count       = 123
_bloom_folding_enabled              = true
_mv_generalized_oj_refresh_opt      = true
cell_offload_compaction             = ADAPTIVE
cell_offload_plan_display           = AUTO
_bloom_predicate_offload            = true
_bloom_filter_size                  = 0
_bloom_pushing_max                  = 512
parallel_degree_limit               = 65535
parallel_force_local                = false
parallel_max_degree                 = 6
total_cpu_count                     = 6
_optimizer_coalesce_subqueries      = true
_optimizer_fast_pred_transitivity   = true
_optimizer_fast_access_pred_analysis = true
_optimizer_unnest_disjunctive_subq  = true
_optimizer_unnest_corr_set_subq     = true
_optimizer_distinct_agg_transform   = true
_aggregation_optimization_settings  = 0
_optimizer_connect_by_elim_dups     = true
_optimizer_eliminate_filtering_join = true
_connect_by_use_union_all           = true
dst_upgrade_insert_conv             = true
advanced_queuing_internal_cursor    = 0
_optimizer_unnest_all_subqueries    = true
parallel_autodop                    = 0
parallel_ddldml                     = 0
_parallel_cluster_cache_policy      = adaptive
_parallel_scalability               = 50
iot_internal_cursor                 = 0
_optimizer_instance_count           = 0
_optimizer_connect_by_cb_whr_only   = false
_suppress_scn_chk_for_cqn           = nosuppress_1466
_optimizer_join_factorization       = true
_optimizer_use_cbqt_star_transformation = true
_optimizer_table_expansion          = true
_and_pruning_enabled                = true
_deferred_constant_folding_mode     = DEFAULT
_optimizer_distinct_placement       = true
partition_pruning_internal_cursor   = 0
parallel_hinted                     = serial
_sql_compatibility                  = 0
_optimizer_use_feedback             = false
_optimizer_try_st_before_jppd       = true
_dml_frequency_tracking             = false
_optimizer_interleave_jppd          = true
kkb_drop_empty_segments             = 0
_px_partition_scan_enabled          = true
_px_partition_scan_threshold        = 64
_optimizer_false_filter_pred_pullup = true
_bloom_minmax_enabled               = true
only_move_row                       = 0
_optimizer_enable_table_lookup_by_nl = true
parallel_execution_message_size     = 16384
_px_loc_msg_cost                    = 1000
_px_net_msg_cost                    = 10000
_optimizer_generate_transitive_pred = true
_optimizer_cube_join_enabled        = true
_optimizer_filter_pushdown          = true
deferred_segment_creation           = true
_optimizer_outer_join_to_inner      = true
_allow_level_without_connect_by     = false
_max_rwgs_groupings                 = 8192
_optimizer_hybrid_fpwj_enabled      = true
_px_replication_enabled             = true
ilm_filter                          = 0
_optimizer_partial_join_eval        = true
_px_concurrent                      = true
_px_object_sampling_enabled         = true
_px_back_to_parallel                = OFF
_optimizer_unnest_scalar_sq         = true
_optimizer_full_outer_join_to_outer = true
_px_filter_parallelized             = true
_px_filter_skew_handling            = true
_zonemap_use_enabled                = true
_zonemap_control                    = 0
_optimizer_multi_table_outerjoin    = true
_px_groupby_pushdown                = force
_partition_advisor_srs_active       = true
_optimizer_ansi_join_lateral_enhance = true
_px_parallelize_expression          = true
_fast_index_maintenance             = true
_optimizer_ansi_rearchitecture      = true
_optimizer_gather_stats_on_load     = true
ilm_access_tracking                 = 0
ilm_dml_timestamp                   = 0
_px_adaptive_dist_method            = off
_px_adaptive_dist_method_threshold  = 0
_optimizer_batch_table_access_by_rowid = true
optimizer_adaptive_reporting_only   = false
_optimizer_ads_max_table_count      = 0
_optimizer_ads_time_limit           = 0
_optimizer_ads_use_result_cache     = true
_px_wif_dfo_declumping              = choose
_px_wif_extend_distribution_keys    = true
_px_join_skew_handling              = true
_px_join_skew_ratio                 = 10
_px_join_skew_minfreq               = 30
CLI_internal_cursor                 = 0
_parallel_fault_tolerance_enabled   = false
_parallel_fault_tolerance_threshold = 3
_px_partial_rollup_pushdown         = adaptive
_px_single_server_enabled           = true
_optimizer_dsdir_usage_control      = 0
_px_cpu_autodop_enabled             = true
_px_cpu_process_bandwidth           = 200
_sql_hvshare_threshold              = 0
_px_tq_rowhvs                       = true
_optimizer_use_gtt_session_stats    = true
_optimizer_proc_rate_level          = basic
_px_hybrid_TSM_HWMB_load            = true
_optimizer_use_histograms           = true
PMO_altidx_rebuild                  = 0
_cell_offload_expressions           = true
_cell_materialize_virtual_columns   = true
_cell_materialize_all_expressions   = false
_rowsets_enabled                    = true
_rowsets_target_maxsize             = 524288
_rowsets_max_rows                   = 256
_use_hidden_partitions              = 0
_px_monitor_load                    = false
_px_load_monitor_threshold          = 10000
_px_numa_support_enabled            = false
total_processor_group_count         = 1
_adaptive_window_consolidator_enabled = true
_optimizer_strans_adaptive_pruning  = false
_bloom_rm_filter                    = false
_optimizer_null_accepting_semijoin  = true
_long_varchar_allow_IOT             = 0
_parallel_ctas_enabled              = true
_cell_offload_complex_processing    = true
_optimizer_performance_feedback     = off
_optimizer_proc_rate_source         = DEFAULT
_hashops_prefetch_size              = 4
_cell_offload_sys_context           = true
_multi_commit_global_index_maint    = 0
_stat_aggs_one_pass_algorithm       = false
_dbg_scan                           = 0
_oltp_comp_dbg_scan                 = 0
_arch_comp_dbg_scan                 = 0
_optimizer_gather_feedback          = true
_upddel_dba_hash_mask_bits          = 0
_px_pwmr_enabled                    = true
_px_cdb_view_enabled                = true
_bloom_sm_enabled                   = true
_optimizer_cluster_by_rowid         = true
_optimizer_cluster_by_rowid_control = 129
_partition_cdb_view_enabled         = true
_common_data_view_enabled           = true
_pred_push_cdb_view_enabled         = true
_rowsets_cdb_view_enabled           = true
_distinct_agg_optimization_gsets    = choose
_array_cdb_view_enabled             = true
_optimizer_adaptive_plan_control    = 0
_optimizer_adaptive_random_seed     = 0
_optimizer_cbqt_or_expansion        = on
_inmemory_dbg_scan                  = 0
_gby_vector_aggregation_enabled     = true
_optimizer_vector_transformation    = true
_optimizer_vector_fact_dim_ratio    = 10
_key_vector_max_size                = 0
_key_vector_predicate_enabled       = true
_key_vector_predicate_threshold     = 0
_vector_operations_control          = 0
_optimizer_vector_min_fact_rows     = 10000000
parallel_dblink                     = 0
_px_scalable_invdist                = true
_key_vector_offload                 = predicate
_optimizer_aggr_groupby_elim        = true
_optimizer_reduce_groupby_key       = true
_vector_serialize_temp_threshold    = 1000
_always_vector_transformation       = false
_optimizer_cluster_by_rowid_batched = true
_object_link_fixed_enabled          = true
optimizer_inmemory_aware            = true
_optimizer_inmemory_table_expansion = true
_optimizer_inmemory_gen_pushable_preds = true
_optimizer_inmemory_autodop         = true
_optimizer_inmemory_access_path     = true
_optimizer_inmemory_bloom_filter    = true
_parallel_inmemory_min_time_threshold = 1
_parallel_inmemory_time_unit        = 1
_rc_sys_obj_enabled                 = true
_optimizer_nlj_hj_adaptive_join     = false
_indexable_con_id                   = true
_bloom_serial_filter                = on
inmemory_force                      = default
inmemory_query                      = enable
_inmemory_query_scan                = true
_inmemory_query_fetch_by_rowid      = false
_inmemory_pruning                   = on
_px_autodop_pq_overhead             = true
_px_external_table_default_stats    = true
_optimizer_key_vector_aggr_factor   = 75
_optimizer_vector_cost_adj          = 100
_cdb_cross_container                = 65535
_cdb_view_parallel_degree           = 65535
_optimizer_hll_entry                = 4096
_px_cdb_view_join_enabled           = true
inmemory_size                       = 0
_external_table_smart_scan          = hadoop_only
_optimizer_inmemory_minmax_pruning  = true
_approx_cnt_distinct_gby_pushdown   = choose
_approx_cnt_distinct_optimization   = 0
_optimizer_ads_use_partial_results  = true
_query_execution_time_limit         = 0
_optimizer_inmemory_cluster_aware_dop = true
_optimizer_db_blocks_buffers        = 0 KB
_query_rewrite_use_on_query_computation = true
_px_scalable_invdist_mcol           = true
_optimizer_bushy_join               = off
_optimizer_bushy_fact_dim_ratio     = 20
_optimizer_bushy_fact_min_size      = 100000
_optimizer_bushy_cost_factor        = 100
_rmt_for_table_redef_enabled        = true
_optimizer_eliminate_subquery       = true
_sqlexec_cache_aware_hash_join_enabled = true
_zonemap_usage_tracking             = true
_sqlexec_hash_based_distagg_enabled = false
_sqlexec_disable_hash_based_distagg_tiv = false
_sqlexec_hash_based_distagg_ssf_enabled = true
_sqlexec_distagg_optimization_settings = 0
approx_for_aggregation              = false
approx_for_count_distinct           = false
_optimizer_union_all_gsets          = true
_rowsets_use_encoding               = true
_rowsets_max_enc_rows               = 64
_optimizer_enhanced_join_elimination = true
_optimizer_multicol_join_elimination = true
_key_vector_create_pushdown_threshold = 20000
_optimizer_enable_plsql_stats       = true
_recursive_with_parallel            = true
_recursive_with_branch_iterations   = 7
_px_dist_agg_partial_rollup_pushdown = adaptive
_px_adaptive_dist_bypass_enabled    = true
_enable_view_pdb                    = true
_optimizer_key_vector_pruning_enabled = true
_pwise_distinct_enabled             = true
_recursive_with_using_temp_table    = false
_partition_read_only                = true
_sql_alias_scope                    = true
_cdb_view_no_skip_migrate           = false
_approx_perc_sampling_err_rate      = 2
_sqlexec_encoding_aware_hj_enabled  = true
rim_node_exist                      = 0
_enable_containers_subquery         = true
_force_containers_subquery          = false
_cell_offload_vector_groupby        = true
_vector_encoding_mode               = manual
_ds_xt_split_count                  = 1
_ds_sampling_method                 = PROGRESSIVE
_optimizer_ads_use_spd_cache        = true
_optimizer_use_table_scanrate       = HADOOP_ONLY
_optimizer_use_xt_rowid             = true
_xt_sampling_scan_granules          = on
_recursive_with_control             = 0
_sqlexec_use_rwo_aware_expr_analysis = true
_optimizer_band_join_aware          = true
_optimizer_vector_base_dim_fact_factor = 200
approx_for_percentile               = none
_approx_percentile_optimization     = 0
_projection_pushdown                = true
_px_object_sampling                 = 200
_optimizer_adaptive_plans_continuous = false
_optimizer_adaptive_plans_iterative = false
_ds_enable_view_sampling            = true
_optimizer_generate_ptf_implied_preds = true
_optimizer_inmemory_use_stored_stats = AUTO
_cdb_special_old_xplan              = true
uniaud_internal_cursor              = 0
_kd_dbg_control                     = 0
_mv_access_compute_fresh_data       = on
_bloom_filter_ratio                 = 35
_optimizer_control_shard_qry_processing = 65528
containers_parallel_degree          = 65535
sql_from_coordinator                = 0
_xt_sampling_scan_granules_min_granules = 1
_in_memory_cdt                      = LIMITED
_in_memory_cdt_maxpx                = 4
_px_partition_load_dist_threshold   = 64
_px_adaptive_dist_bypass_optimization = 1
_optimizer_interleave_or_expansion  = true
optimizer_adaptive_plans            = false
optimizer_adaptive_statistics       = false
_optimizer_use_feedback_for_join    = false
_optimizer_ads_for_pq               = false
_px_join_skewed_values_count        = 0
optimizer_ignore_parallel_hints     = false
parallel_min_degree                 = 1
_px_nlj_bcast_rr_threshold          = 10
_optimizer_gather_stats_on_load_all = false
_optimizer_gather_stats_on_load_hist = false
_optimizer_allow_all_access_paths   = true
_key_vector_double_enabled          = true
_key_vector_timestamp_enabled       = true
_optimizer_answering_query_using_stats = false
_disable_dblink_optim               = true
_cell_offload_hybrid_processing     = true
_read_optimized_table_lookup        = true
_optimizer_key_vector_payload       = true
_optimizer_vector_fact_payload_ratio = 20
_bloom_pruning_setops_enabled       = true
_bloom_filter_setops_enabled        = true
_key_vector_shared_dgk_ht           = true
_px_pwise_wif_enabled               = true
_sqlexec_reorder_wif_enabled        = true
_px_partition_skew_threshold        = 80
_sqlexec_pwiseops_with_sqlfuncs_enabled = true
_sqlexec_pwiseops_with_binds_enabled = true
_px_shared_hash_join                = false
_px_reuse_server_groups             = multi
_px_join_skew_null_handling         = true
_px_join_skew_use_histogram         = true
_px_join_skew_sampling_time_limit   = 50
_px_join_skew_sampling_percent      = 0
_cdb_view_no_skip_restricted        = false
_inmemory_external_table            = true
_sqlexec_use_kgghash3               = true
_cell_offload_vector_groupby_force  = false
_hcs_opt_av_pred_push               = true
parallel_dop_doubled                = 0
Bug Fix Control Environment
    fix  3834770 = 1       
    fix  3746511 = enabled
    fix  4519016 = enabled
    fix  3118776 = enabled
    fix  4488689 = enabled
    fix  2194204 = disabled
    fix  2660592 = enabled
    fix  2320291 = enabled
    fix  2324795 = enabled
    fix  4308414 = enabled
    fix  3499674 = disabled
    fix  4569940 = enabled
    fix  4631959 = enabled
    fix  4519340 = enabled
    fix  4550003 = enabled
    fix  1403283 = enabled
    fix  4554846 = enabled
    fix  4602374 = enabled
    fix  4584065 = enabled
    fix  4545833 = enabled
    fix  4611850 = enabled
    fix  4663698 = enabled
    fix  4663804 = enabled
    fix  4666174 = enabled
    fix  4567767 = enabled
    fix  4556762 = 15      
    fix  4728348 = enabled
    fix  4708389 = enabled
    fix  4175830 = enabled
    fix  4752814 = enabled
    fix  4583239 = enabled
    fix  4386734 = enabled
    fix  4887636 = enabled
    fix  4483240 = enabled
    fix  4872602 = disabled
    fix  4711525 = enabled
    fix  4545802 = enabled
    fix  4605810 = enabled
    fix  4704779 = enabled
    fix  4900129 = enabled
    fix  4924149 = enabled
    fix  4663702 = enabled
    fix  4878299 = enabled
    fix  4658342 = enabled
    fix  4881533 = enabled
    fix  4676955 = enabled
    fix  4273361 = enabled
    fix  4967068 = enabled
    fix  4969880 = disabled
    fix  5005866 = enabled
    fix  5015557 = enabled
    fix  4705343 = enabled
    fix  4904838 = enabled
    fix  4716096 = enabled
    fix  4483286 = disabled
    fix  4722900 = enabled
    fix  4615392 = enabled
    fix  5096560 = enabled
    fix  5029464 = enabled
    fix  4134994 = enabled
    fix  4904890 = enabled
    fix  5104624 = enabled
    fix  5014836 = enabled
    fix  4768040 = enabled
    fix  4600710 = enabled
    fix  5129233 = enabled
    fix  4595987 = enabled
    fix  4908162 = enabled
    fix  5139520 = enabled
    fix  5084239 = enabled
    fix  5143477 = disabled
    fix  2663857 = enabled
    fix  4717546 = enabled
    fix  5240264 = disabled
    fix  5099909 = enabled
    fix  5240607 = enabled
    fix  5195882 = enabled
    fix  5220356 = enabled
    fix  5263572 = enabled
    fix  5385629 = enabled
    fix  5302124 = enabled
    fix  5391942 = enabled
    fix  5384335 = enabled
    fix  5482831 = enabled
    fix  4158812 = enabled
    fix  5387148 = enabled
    fix  5383891 = enabled
    fix  5466973 = enabled
    fix  5396162 = enabled
    fix  5394888 = enabled
    fix  5395291 = enabled
    fix  5236908 = enabled
    fix  5509293 = enabled
    fix  5449488 = enabled
    fix  5567933 = enabled
    fix  5570494 = enabled
    fix  5288623 = enabled
    fix  5505995 = enabled
    fix  5505157 = enabled
    fix  5112460 = enabled
    fix  5554865 = enabled
    fix  5112260 = enabled
    fix  5112352 = enabled
    fix  5547058 = enabled
    fix  5618040 = enabled
    fix  5585313 = enabled
    fix  5547895 = enabled
    fix  5634346 = enabled
    fix  5620485 = enabled
    fix  5483301 = enabled
    fix  5657044 = enabled
    fix  5694984 = enabled
    fix  5868490 = enabled
    fix  5650477 = enabled
    fix  5611962 = enabled
    fix  4279274 = enabled
    fix  5741121 = enabled
    fix  5714944 = enabled
    fix  5391505 = enabled
    fix  5762598 = enabled
    fix  5578791 = enabled
    fix  5259048 = enabled
    fix  5882954 = enabled
    fix  2492766 = enabled
    fix  5707608 = enabled
    fix  5891471 = enabled
    fix  5884780 = enabled
    fix  5680702 = enabled
    fix  5371452 = enabled
    fix  5838613 = enabled
    fix  5949981 = enabled
    fix  5624216 = enabled
    fix  5741044 = enabled
    fix  5976822 = enabled
    fix  6006457 = enabled
    fix  5872956 = enabled
    fix  5923644 = enabled
    fix  5943234 = enabled
    fix  5844495 = enabled
    fix  4168080 = enabled
    fix  6020579 = enabled
    fix  5842686 = disabled
    fix  5996801 = enabled
    fix  5593639 = enabled
    fix  6133948 = enabled
    fix  3151991 = enabled
    fix  6146906 = enabled
    fix  6239909 = enabled
    fix  6267621 = enabled
    fix  5909305 = enabled
    fix  6279918 = enabled
    fix  6141818 = enabled
    fix  6151963 = enabled
    fix  6251917 = enabled
    fix  6282093 = enabled
    fix  6119510 = enabled
    fix  6119382 = enabled
    fix  3801750 = enabled
    fix  5705630 = disabled
    fix  5944076 = enabled
    fix  5406763 = enabled
    fix  6070954 = enabled
    fix  6282944 = enabled
    fix  6138746 = enabled
    fix  6082745 = enabled
    fix  3426050 = enabled
    fix   599680 = enabled
    fix  6062266 = enabled
    fix  6087237 = enabled
    fix  6122894 = enabled
    fix  6377505 = enabled
    fix  5893768 = enabled
    fix  6163564 = enabled
    fix  6073325 = enabled
    fix  6188881 = enabled
    fix  6007259 = enabled
    fix  6239971 = enabled
    fix  5284200 = disabled
    fix  6042205 = enabled
    fix  6051211 = enabled
    fix  6434668 = enabled
    fix  6438752 = enabled
    fix  5936366 = enabled
    fix  6439032 = enabled
    fix  6438892 = enabled
    fix  6006300 = enabled
    fix  5947231 = enabled
    fix  5416118 = 1       
    fix  6365442 = 1       
    fix  6239039 = enabled
    fix  6502845 = enabled
    fix  6913094 = enabled
    fix  6029469 = enabled
    fix  5919513 = enabled
    fix  6057611 = enabled
    fix  6469667 = enabled
    fix  6608941 = disabled
    fix  6368066 = enabled
    fix  6329318 = enabled
    fix  6656356 = enabled
    fix  4507997 = enabled
    fix  6671155 = enabled
    fix  6694548 = enabled
    fix  6688200 = enabled
    fix  6612471 = enabled
    fix  6708183 = disabled
    fix  6326934 = enabled
    fix  6520717 = disabled
    fix  6714199 = enabled
    fix  6681545 = enabled
    fix  6748058 = enabled
    fix  6167716 = enabled
    fix  6674254 = enabled
    fix  6468287 = enabled
    fix  6503543 = enabled
    fix  6808773 = disabled
    fix  6766962 = enabled
    fix  6120483 = enabled
    fix  6670551 = enabled
    fix  6771838 = enabled
    fix  6626018 = disabled
    fix  6530596 = enabled
    fix  6778642 = enabled
    fix  6699059 = enabled
    fix  6376551 = enabled
    fix  6429113 = enabled
    fix  6782437 = enabled
    fix  6776808 = enabled
    fix  6765823 = enabled
    fix  6768660 = enabled
    fix  6782665 = enabled
    fix  6610822 = enabled
    fix  6514189 = enabled
    fix  6818410 = enabled
    fix  6827696 = enabled
    fix  6773613 = enabled
    fix  5902962 = enabled
    fix  6956212 = enabled
    fix  3056297 = enabled
    fix  6440977 = disabled
    fix  6972291 = disabled
    fix  6904146 = enabled
    fix  6221403 = enabled
    fix  5475051 = enabled
    fix  6845871 = enabled
    fix  5468809 = enabled
    fix  6917633 = enabled
    fix  4444536 = disabled
    fix  6955210 = enabled
    fix  6994194 = enabled
    fix  6399597 = disabled
    fix  6951776 = enabled
    fix  5648287 = 3       
    fix  6987082 = disabled
    fix  7132036 = enabled
    fix  6980350 = enabled
    fix  5199213 = enabled
    fix  7138405 = enabled
    fix  7148689 = enabled
    fix  6820988 = enabled
    fix  7032684 = enabled
    fix  6617866 = enabled
    fix  7155968 = enabled
    fix  7127980 = enabled
    fix  6982954 = enabled
    fix  7241819 = enabled
    fix  6897034 = enabled
    fix  7236148 = enabled
    fix  7298570 = enabled
    fix  7249095 = enabled
    fix  7314499 = enabled
    fix  7324224 = enabled
    fix  7289023 = enabled
    fix  7237571 = enabled
    fix  7116357 = enabled
    fix  7345484 = enabled
    fix  7375179 = enabled
    fix  6430500 = disabled
    fix  5897486 = enabled
    fix  6774209 = enabled
    fix  7306637 = enabled
    fix  6451322 = enabled
    fix  7208131 = enabled
    fix  7388652 = enabled
    fix  7127530 = enabled
    fix  6751206 = enabled
    fix  6669103 = enabled
    fix  7430474 = enabled
    fix  6990305 = enabled
    fix  7043307 = enabled
    fix  3120429 = enabled
    fix  7452823 = disabled
    fix  6838105 = enabled
    fix  6769711 = enabled
    fix  7170213 = enabled
    fix  6528872 = enabled
    fix  7295298 = enabled
    fix  5922070 = enabled
    fix  7259468 = enabled
    fix  6418552 = enabled
    fix  4619997 = enabled
    fix  7524366 = enabled
    fix  6942476 = enabled
    fix  6418771 = enabled
    fix  7375077 = enabled
    fix  5400639 = enabled
    fix  4570921 = enabled
    fix  7426911 = enabled
    fix  5099019 = disabled
    fix  7528216 = enabled
    fix  7521266 = enabled
    fix  7385140 = enabled
    fix  7576516 = enabled
    fix  7573526 = enabled
    fix  7576476 = enabled
    fix  7165898 = enabled
    fix  7263214 = enabled
    fix  3320140 = enabled
    fix  7555510 = enabled
    fix  7613118 = enabled
    fix  7597059 = enabled
    fix  7558911 = enabled
    fix  5520732 = enabled
    fix  7679490 = disabled
    fix  7449971 = enabled
    fix  3628118 = enabled
    fix  4370840 = enabled
    fix  7281191 = enabled
    fix  7519687 = enabled
    fix  5029592 = 3       
    fix  6012093 = 1       
    fix  6053861 = disabled
    fix  6941515 = disabled
    fix  7696414 = enabled
    fix  7272039 = enabled
    fix  7834811 = enabled
    fix  7640597 = enabled
    fix  7341616 = enabled
    fix  7168184 = enabled
    fix   399198 = enabled
    fix  7831070 = enabled
    fix  7676897 = disabled
    fix  7414637 = enabled
    fix  7585456 = enabled
    fix  8202421 = enabled
    fix  7658097 = disabled
    fix  8251486 = enabled
    fix  7132684 = enabled
    fix  7512227 = enabled
    fix  6972987 = enabled
    fix  7199035 = enabled
    fix  8243446 = enabled
    fix  7650462 = enabled
    fix  6720701 = enabled
    fix  7592673 = enabled
    fix  7718694 = enabled
    fix  7534027 = enabled
    fix  7708267 = enabled
    fix  5716785 = enabled
    fix  7356191 = enabled
    fix  7679161 = enabled
    fix  7597159 = enabled
    fix  7499258 = enabled
    fix  8328363 = enabled
    fix  7452863 = enabled
    fix  8284930 = enabled
    fix  7298626 = enabled
    fix  7657126 = enabled
    fix  8371884 = enabled
    fix  8318020 = enabled
    fix  8255423 = enabled
    fix  7135745 = enabled
    fix  8356253 = enabled
    fix  7534257 = enabled
    fix  8323407 = enabled
    fix  7539815 = enabled
    fix  8289316 = enabled
    fix  8447850 = enabled
    fix  7675944 = enabled
    fix  8355120 = enabled
    fix  7176746 = enabled
    fix  8442891 = enabled
    fix  8373261 = enabled
    fix  7679164 = enabled
    fix  7670533 = enabled
    fix  8408665 = enabled
    fix  8491399 = enabled
    fix  8348392 = enabled
    fix  8348585 = enabled
    fix  8335178 = enabled
    fix  8247017 = enabled
    fix  7325597 = enabled
    fix  8531490 = enabled
    fix  6163600 = enabled
    fix  8589278 = disabled
    fix  8557992 = enabled
    fix  7556098 = enabled
    fix  8580883 = enabled
    fix  5892599 = disabled
    fix  8609714 = enabled
    fix  8619631 = disabled
    fix  8672915 = enabled
    fix  8514561 = enabled
    fix  8213977 = enabled
    fix  8560951 = disabled
    fix  8578587 = enabled
    fix  8287870 = enabled
    fix  8467123 = enabled
    fix  8602185 = enabled
    fix  8519457 = enabled
    fix  3335182 = enabled
    fix  8602840 = enabled
    fix  8725296 = enabled
    fix  8628970 = enabled
    fix  6754080 = enabled
    fix  8767442 = enabled
    fix  8760135 = enabled
    fix  8644935 = enabled
    fix  8352378 = enabled
    fix  8685327 = enabled
    fix  8763472 = enabled
    fix  8773324 = enabled
    fix  8813674 = enabled
    fix  8532236 = enabled
    fix  8629716 = enabled
    fix  7277732 = enabled
    fix  8692170 = enabled
    fix  8900973 = enabled
    fix  8919133 = enabled
    fix  8927050 = enabled
    fix  8551880 = enabled
    fix  8901237 = enabled
    fix  8812372 = enabled
    fix  6236862 = enabled
    fix  8528517 = enabled
    fix  7215982 = enabled
    fix  8214022 = enabled
    fix  8595392 = enabled
    fix  8890233 = enabled
    fix  8999317 = enabled
    fix  9004800 = enabled
    fix  8986163 = enabled
    fix  8855396 = enabled
    fix  8800514 = 20      
    fix  9007859 = enabled
    fix  8198783 = disabled
    fix  9053879 = enabled
    fix  6086930 = enabled
    fix  7641601 = enabled
    fix  9052506 = enabled
    fix  9103775 = enabled
    fix  9047975 = enabled
    fix  8893626 = enabled
    fix  9111170 = enabled
    fix  8971829 = enabled
    fix  7628358 = enabled
    fix  9125151 = enabled
    fix  9039715 = enabled
    fix  9106224 = enabled
    fix  9185228 = enabled
    fix  9206747 = enabled
    fix  9088510 = enabled
    fix  9143856 = enabled
    fix  8833381 = enabled
    fix  8949971 = enabled
    fix  8951812 = enabled
    fix  9148171 = enabled
    fix  8706652 = enabled
    fix  9245114 = enabled
    fix  8802198 = enabled
    fix  9011016 = enabled
    fix  9265681 = enabled
    fix  7284269 = enabled
    fix  9272549 = enabled
    fix  8917507 = 7       
    fix  8531463 = enabled
    fix  9263333 = enabled
    fix  8675087 = enabled
    fix  8896955 = enabled
    fix  9041934 = enabled
    fix  9344709 = enabled
    fix  9024933 = enabled
    fix  9033718 = enabled
    fix  9240455 = enabled
    fix  9081848 = enabled
    fix  5982893 = enabled
    fix  9287401 = enabled
    fix  8590021 = enabled
    fix  9340120 = enabled
    fix  9355794 = enabled
    fix  9356656 = enabled
    fix  9385634 = enabled
    fix  9069046 = enabled
    fix  9239337 = enabled
    fix  9300228 = enabled
    fix  9298010 = enabled
    fix  9384170 = enabled
    fix  9407929 = enabled
    fix  8836806 = enabled
    fix  9344055 = enabled
    fix  9274675 = enabled
    fix  9203723 = enabled
    fix  9443476 = enabled
    fix  9195582 = enabled
    fix  8226666 = enabled
    fix  9433490 = enabled
    fix  9065494 = enabled
    fix  9303766 = enabled
    fix  9437283 = enabled
    fix  9116214 = enabled
    fix  9456688 = enabled
    fix  9456746 = disabled
    fix  9342979 = enabled
    fix  9465425 = enabled
    fix  9092442 = enabled
    fix  4926618 = enabled
    fix  8792846 = enabled
    fix  9474259 = enabled
    fix  9495669 = disabled
    fix  6472966 = enabled
    fix  6408301 = enabled
    fix  9380298 = disabled
    fix  8500130 = enabled
    fix  9584723 = enabled
    fix  9270951 = enabled
    fix  9508254 = enabled
    fix  9593680 = enabled
    fix  9196440 = disabled
    fix  9309281 = enabled
    fix  8693158 = enabled
    fix  9381638 = enabled
    fix  9383967 = enabled
    fix  7711900 = enabled
    fix  9218587 = enabled
    fix  9728438 = enabled
    fix  9038395 = enabled
    fix  9577300 = enabled
    fix  9171113 = enabled
    fix  8973745 = enabled
    fix  9732434 = enabled
    fix  8937971 = disabled
    fix  9102474 = enabled
    fix  9243499 = enabled
    fix  9791810 = enabled
    fix  9785632 = enabled
    fix  9898249 = enabled
    fix  9153459 = enabled
    fix  9680430 = enabled
    fix  9841679 = enabled
    fix  9912503 = enabled
    fix  9850461 = enabled
    fix  9762592 = 3       
    fix  9716877 = enabled
    fix  9814067 = enabled
    fix  9776736 = enabled
    fix  8349119 = enabled
    fix  9958518 = enabled
    fix 10041074 = enabled
    fix 10004943 = enabled
    fix  9980661 = enabled
    fix  9554026 = enabled
    fix  9593547 = enabled
    fix  9833381 = enabled
    fix 10043801 = enabled
    fix  9940732 = enabled
    fix  9702850 = enabled
    fix  9659125 = 0       
    fix  9668086 = enabled
    fix  9476520 = enabled
    fix 10158107 = enabled
    fix 10148457 = enabled
    fix 10106423 = enabled
    fix  9721439 = disabled
    fix 10162430 = enabled
    fix 10134677 = enabled
    fix 10182051 = 3       
    fix 10175079 = enabled
    fix 10026972 = enabled
    fix 10192889 = enabled
    fix  3566843 = enabled
    fix  9550277 = disabled
    fix 10236566 = enabled
    fix 10227392 = enabled
    fix  8961143 = enabled
    fix  9721228 = enabled
    fix 10080014 = enabled
    fix 10101489 = enabled
    fix  9929609 = enabled
    fix 10015652 = enabled
    fix  9918661 = enabled
    fix 10333395 = enabled
    fix 10336499 = disabled
    fix 10182672 = enabled
    fix  9578670 = enabled
    fix 10232225 = enabled
    fix 10330090 = enabled
    fix 10232623 = enabled
    fix  9630092 = disabled
    fix 10271790 = enabled
    fix  9227576 = enabled
    fix 10197666 = enabled
    fix 10376744 = enabled
    fix  8274946 = enabled
    fix 10046368 = enabled
    fix  9569678 = enabled
    fix  9002661 = enabled
    fix 10038373 = enabled
    fix  9477688 = enabled
    fix 10013899 = enabled
    fix  9832338 = enabled
    fix 10623119 = enabled
    fix  9898066 = enabled
    fix 11699884 = enabled
    fix 10640430 = enabled
    fix 10428450 = enabled
    fix 10117760 = enabled
    fix 11720178 = enabled
    fix  9881812 = enabled
    fix 10428278 = enabled
    fix 11741436 = enabled
    fix 11668189 = enabled
    fix 10359631 = enabled
    fix  9829887 = enabled
    fix  8275054 = enabled
    fix 11814428 = enabled
    fix 11676888 = disabled
    fix 10348427 = enabled
    fix 11843512 = enabled
    fix 11657468 = enabled
    fix 11877160 = enabled
    fix 11738631 = enabled
    fix 11744086 = enabled
    fix 11830663 = enabled
    fix 11853331 = enabled
    fix  9748015 = enabled
    fix 11834739 = enabled
    fix  6055658 = enabled
    fix 11740670 = enabled
    fix 11940126 = enabled
    fix 12315002 = enabled
    fix  8275023 = enabled
    fix 12352373 = enabled
    fix 12390139 = enabled
    fix 11935589 = enabled
    fix 10226906 = enabled
    fix 12327548 = enabled
    fix 12388221 = enabled
    fix 11892888 = enabled
    fix 11814265 = enabled
    fix 10230017 = enabled
    fix 12341619 = enabled
    fix 11744016 = enabled
    fix 10216738 = enabled
    fix 10298302 = enabled
    fix 12563419 = enabled
    fix 12399886 = enabled
    fix 12584007 = enabled
    fix 11881047 = enabled
    fix 12534597 = enabled
    fix  8683604 = enabled
    fix 12410972 = enabled
    fix  7147087 = enabled
    fix 11846314 = enabled
    fix 12535474 = enabled
    fix 12561635 = enabled
    fix 12432426 = enabled
    fix  9913117 = enabled
    fix 12432089 = enabled
    fix 12587690 = enabled
    fix 11858963 = enabled
    fix 12569245 = enabled
    fix 12569300 = enabled
    fix  7308975 = disabled
    fix 12569316 = enabled
    fix 12569321 = enabled
    fix 12335617 = enabled
    fix  9002958 = enabled
    fix 12591120 = enabled
    fix 11876260 = enabled
    fix 12313574 = enabled
    fix 12569713 = enabled
    fix 12348584 = enabled
    fix 10420220 = enabled
    fix 12559453 = enabled
    fix 12727549 = enabled
    fix 12728203 = enabled
    fix 12828479 = enabled
    fix 10181153 = enabled
    fix  9971371 = disabled
    fix 12864791 = enabled
    fix 12810427 = enabled
    fix 12605402 = enabled
    fix 12861609 = enabled
    fix 12915337 = enabled
    fix 12942119 = enabled
    fix 12622441 = enabled
    fix 11072246 = enabled
    fix 12739252 = enabled
    fix 12953765 = enabled
    fix 12905116 = enabled
    fix 12978495 = enabled
    fix  9633142 = disabled
    fix  3639130 = enabled
    fix 12827166 = enabled
    fix 12944193 = enabled
    fix 13020272 = enabled
    fix 12673320 = enabled
    fix 12975771 = enabled
    fix 12882092 = enabled
    fix 12379334 = enabled
    fix 12723414 = enabled
    fix  9488694 = disabled
    fix 13255388 = 10      
    fix 11727871 = enabled
    fix 13110511 = enabled
    fix 13075297 = enabled
    fix 13345888 = enabled
    fix 11657903 = disabled
    fix 13396096 = enabled
    fix 12591379 = enabled
    fix 13398214 = enabled
    fix 13382280 = enabled
    fix 12869367 = enabled
    fix 12999577 = enabled
    fix 12433153 = enabled
    fix  9094254 = enabled
    fix 13104618 = enabled
    fix 13524237 = enabled
    fix 11813257 = enabled
    fix 13489017 = enabled
    fix 12954320 = enabled
    fix 13555551 = enabled
    fix 13499154 = enabled
    fix 13036910 = enabled
    fix 13545925 = enabled
    fix 13545956 = enabled
    fix 13545989 = enabled
    fix 12839247 = enabled
    fix  9858777 = enabled
    fix 13568366 = enabled
    fix 13393357 = enabled
    fix 13040171 = enabled
    fix 13406619 = enabled
    fix 13594757 = enabled
    fix 13543207 = enabled
    fix 13594712 = enabled
    fix 12648629 = enabled
    fix 13549808 = enabled
    fix 13634700 = enabled
    fix  8792821 = enabled
    fix 13454409 = enabled
    fix 13146487 = enabled
    fix 13592248 = enabled
    fix 11689541 = enabled
    fix 13527374 = enabled
    fix 13430622 = enabled
    fix 13704562 = enabled
    fix  9547706 = enabled
    fix 13497184 = enabled
    fix 13704977 = enabled
    fix 13734456 = enabled
    fix 13070532 = enabled
    fix  6520878 = enabled
    fix  2273284 = enabled
    fix 13786127 = enabled
    fix 13065064 = enabled
    fix 13972896 = enabled
    fix 11843466 = enabled
    fix 13777823 = enabled
    fix 13616573 = enabled
    fix 13831671 = enabled
    fix 13652216 = enabled
    fix 13912192 = enabled
    fix 13909909 = enabled
    fix 13849486 = enabled
    fix 13321547 = enabled
    fix 13886606 = disabled
    fix 14013502 = enabled
    fix 13850256 = enabled
    fix 13929275 = enabled
    fix 11732303 = enabled
    fix 13906168 = enabled
    fix 14055128 = enabled
    fix 12856200 = enabled
    fix 14008590 = enabled
    fix 13627489 = disabled
    fix 13961105 = enabled
    fix 13583722 = enabled
    fix 13076238 = enabled
    fix 13936229 = enabled
    fix  9852856 = enabled
    fix  3904125 = enabled
    fix  5910187 = enabled
    fix 10068316 = enabled
    fix 14029891 = enabled
    fix  4215125 = enabled
    fix 13711083 = enabled
    fix 13973691 = enabled
    fix 13486825 = enabled
    fix 13682550 = enabled
    fix 13826669 = enabled
    fix 14033181 = enabled
    fix 13836796 = enabled
    fix 12555499 = enabled
    fix 13568506 = enabled
    fix  9891396 = enabled
    fix 13699643 = enabled
    fix 13835788 = enabled
    fix  7271518 = enabled
    fix 14127824 = enabled
    fix 12557401 = enabled
    fix 13350470 = enabled
    fix 14095362 = enabled
    fix 13000118 = enabled
    fix 14254795 = enabled
    fix 14012261 = enabled
    fix 14241953 = enabled
    fix 14221012 = enabled
    fix 13329748 = enabled
    fix 13843964 = enabled
    fix 14254052 = enabled
    fix 13814866 = enabled
    fix 14255600 = disabled
    fix 13735304 = enabled
    fix 14142884 = disabled
    fix 12909121 = enabled
    fix 14464068 = enabled
    fix 14295250 = 45000   
    fix  6873091 = enabled
    fix 13448445 = enabled
    fix 14155722 = enabled
    fix 14098180 = enabled
    fix 11905801 = enabled
    fix 14467202 = enabled
    fix 14541122 = enabled
    fix 13905599 = disabled
    fix 14320077 = enabled
    fix 14243782 = enabled
    fix  9114915 = enabled
    fix 14516175 = enabled
    fix 12812697 = enabled
    fix 13109345 = enabled
    fix 14456124 = enabled
    fix 14605040 = enabled
    fix 14595273 = disabled
    fix 14176247 = enabled
    fix 11894476 = enabled
    fix 14256885 = enabled
    fix 14545269 = disabled
    fix 14668404 = disabled
    fix 14144611 = enabled
    fix 14346182 = enabled
    fix 13083139 = enabled
    fix 14726188 = enabled
    fix 14707009 = enabled
    fix 14703133 = enabled
    fix 14618560 = enabled
    fix 14170552 = enabled
    fix 13263174 = enabled
    fix 14669785 = enabled
    fix 14633570 = enabled
    fix 14755138 = enabled
    fix 14682092 = enabled
    fix 14712222 = enabled
    fix 14570575 = enabled
    fix 14707748 = disabled
    fix 14684079 = enabled
    fix 13245379 = enabled
    fix 13853916 = enabled
    fix 13699007 = enabled
    fix 14843189 = enabled
    fix 14147762 = enabled
    fix 14795969 = enabled
    fix 14746036 = 1       
    fix 14750501 = enabled
    fix 13891981 = enabled
    fix 15996520 = enabled
    fix 16026776 = enabled
    fix 13573073 = enabled
    fix 13263455 = enabled
    fix 16053273 = enabled
    fix 16029607 = enabled
    fix 14242833 = enabled
    fix 13362020 = enabled
    fix 13799389 = enabled
    fix 12693573 = enabled
    fix 15998585 = enabled
    fix 16166364 = enabled
    fix 14723910 = enabled
    fix 15873008 = enabled
    fix 14133928 = enabled
    fix 16085999 = enabled
    fix 14176203 = enabled
    fix 16226575 = enabled
    fix 16015637 = enabled
    fix 15968693 = disabled
    fix 16220895 = enabled
    fix 16178821 = enabled
    fix 11865196 = enabled
    fix 16237969 = enabled
    fix 16058481 = enabled
    fix 13361493 = enabled
    fix 16264537 = enabled
    fix 14401107 = enabled
    fix 13943459 = enabled
    fix 13994546 = enabled
    fix  7174435 = enabled
    fix 14750443 = enabled
    fix 14469756 = enabled
    fix 14552075 = enabled
    fix 16324844 = enabled
    fix 13583529 = enabled
    fix 14565911 = enabled
    fix 13526551 = enabled
    fix 16368002 = enabled
    fix 16077770 = enabled
    fix 16419357 = enabled
    fix 15889476 = disabled
    fix 16273483 = enabled
    fix 16496848 = disabled
    fix 14107333 = enabled
    fix 11814337 = enabled
    fix 15882436 = enabled
    fix 14764840 = enabled
    fix 16226660 = enabled
    fix 16555865 = enabled
    fix 16625151 = enabled
    fix 16092378 = enabled
    fix 16487030 = enabled
    fix  9552303 = enabled
    fix 16609749 = enabled
    fix 16751246 = enabled
    fix 13253977 = enabled
    fix 14058291 = disabled
    fix 16749025 = enabled
    fix 16750067 = enabled
    fix 16726844 = enabled
    fix 15899648 = enabled
    fix 16690013 = enabled
    fix 15996156 = enabled
    fix 16544878 = enabled
    fix  9413591 = disabled
    fix 16792882 = 0       
    fix 16725982 = enabled
    fix 14648222 = enabled
    fix 16799181 = enabled
    fix 16516883 = enabled
    fix 16507317 = enabled
    fix 16837274 = enabled
    fix 14085520 = enabled
    fix 16713081 = enabled
    fix 14703295 = enabled
    fix 16908409 = enabled
    fix 16212250 = enabled
    fix 13692395 = disabled
    fix 17087729 = enabled
    fix 17088819 = enabled
    fix 13848786 = enabled
    fix 13522189 = enabled
    fix 16400122 = enabled
    fix 16796185 = enabled
    fix 15950252 = enabled
    fix 17070464 = enabled
    fix 16976121 = enabled
    fix 14580303 = enabled
    fix 16554552 = enabled
    fix 16582322 = enabled
    fix 16712213 = enabled
    fix 17382690 = enabled
    fix 14846352 = enabled
    fix 16516751 = enabled
    fix  3174223 = enabled
    fix  8611462 = enabled
    fix 14851437 = 3       
    fix 17348895 = enabled
    fix 16515789 = enabled
    fix  5451645 = disabled
    fix 14062749 = enabled
    fix 16346018 = enabled
    fix 12977599 = enabled
    fix 14191778 = enabled
    fix 15939321 = enabled
    fix 16874299 = enabled
    fix 16470836 = enabled
    fix 16805362 = disabled
    fix 17442009 = disabled
    fix 16825679 = enabled
    fix 17543180 = enabled
    fix 17301564 = enabled
    fix 12373708 = enabled
    fix 17397506 = enabled
    fix 14558315 = enabled
    fix 16615686 = enabled
    fix 16622801 = enabled
    fix 10038517 = enabled
    fix 16954950 = enabled
    fix 17728161 = enabled
    fix 17760375 = enabled
    fix 14311185 = enabled
    fix 13077335 = disabled
    fix 13458979 = disabled
    fix 17485514 = enabled
    fix 17599514 = enabled
    fix 17640863 = enabled
    fix 17716301 = enabled
    fix 17368047 = disabled
    fix 17597748 = enabled
    fix 17303359 = enabled
    fix 17376322 = disabled
    fix 16391176 = disabled
    fix 16673868 = enabled
    fix 17800514 = enabled
    fix 14826303 = enabled
    fix 17663076 = enabled
    fix 17760755 = enabled
    fix 17793460 = enabled
    fix 17997159 = enabled
    fix 17938754 = enabled
    fix 14733442 = enabled
    fix 17727676 = enabled
    fix 17781659 = enabled
    fix 17526569 = enabled
    fix 17950612 = enabled
    fix 17760686 = enabled
    fix 17696414 = enabled
    fix 17799716 = enabled
    fix 18116777 = enabled
    fix 18159664 = disabled
    fix 16052625 = enabled
    fix 18091750 = enabled
    fix 17572606 = enabled
    fix 17971955 = enabled
    fix 17946915 = enabled
    fix 18196576 = enabled
    fix 10145667 = enabled
    fix 17736165 = enabled
    fix 16434021 = enabled
    fix 18035463 = enabled
    fix 18011820 = enabled
    fix 16405740 = enabled
    fix 14612201 = enabled
    fix 17491018 = enabled
    fix 18365267 = enabled
    fix 17986549 = enabled
    fix 18115594 = enabled
    fix 18182018 = enabled
    fix 18302923 = enabled
    fix 18377553 = enabled
    fix  5677419 = enabled
    fix 17896018 = disabled
    fix 13097308 = enabled
    fix 17863980 = enabled
    fix 17567154 = enabled
    fix 18398980 = enabled
    fix 17023040 = enabled
    fix 17991403 = 1       
    fix 16033838 = enabled
    fix 17908541 = enabled
    fix 18134680 = enabled
    fix 18405517 = 0       
    fix 18304693 = enabled
    fix 18456944 = enabled
    fix 18467455 = enabled
    fix 18425876 = enabled
    fix 18508675 = enabled
    fix 17473046 = disabled
    fix 18636079 = enabled
    fix 18388128 = enabled
    fix 18415557 = enabled
    fix 18385778 = enabled
    fix 18308329 = enabled
    fix 18461984 = enabled
    fix 17973658 = enabled
    fix 18558952 = enabled
    fix  9912950 = enabled
    fix 18751128 = enabled
    fix 16809786 = enabled
    fix 18795224 = enabled
    fix 14776289 = enabled
    fix 18823135 = enabled
    fix 18874242 = enabled
    fix 18770199 = disabled
    fix  4185270 = disabled
    fix 18765574 = enabled
    fix 18754357 = disabled
    fix 18959892 = enabled
    fix 17324379 = disabled
    fix 18952882 = enabled
    fix 18924221 = enabled
    fix 18422714 = enabled
    fix 18798414 = enabled
    fix 18969167 = enabled
    fix 16191689 = enabled
    fix 18907562 = enabled
    fix 19055664 = enabled
    fix 18898582 = enabled
    fix 18960760 = enabled
    fix 19070454 = enabled
    fix 19230097 = enabled
    fix 19063497 = enabled
    fix 19046459 = enabled
    fix 19269482 = enabled
    fix 18876528 = enabled
    fix 19227996 = enabled
    fix 18864613 = enabled
    fix 19239478 = enabled
    fix 19451895 = enabled
    fix 19450139 = enabled
    fix 18907390 = enabled
    fix 19025959 = enabled
    fix 19309574 = enabled
    fix 16774698 = enabled
    fix 16923858 = 6       
    fix 19546825 = enabled
    fix 19475484 = enabled
    fix 19498595 = enabled
    fix 16934526 = enabled
    fix 19287919 = enabled
    fix 19386746 = enabled
    fix 19774486 = enabled
    fix 19803410 = enabled
    fix 18671960 = enabled
    fix 19484911 = enabled
    fix 19731940 = enabled
    fix 19604408 = enabled
    fix 14402409 = enabled
    fix 16486095 = enabled
    fix 19563657 = enabled
    fix 19632232 = enabled
    fix 19889960 = enabled
    fix 17208933 = enabled
    fix 19710102 = enabled
    fix 18697515 = enabled
    fix 18318631 = enabled
    fix 19377983 = enabled
    fix 20078639 = enabled
    fix 19503668 = enabled
    fix 20124288 = enabled
    fix 19847091 = enabled
    fix 12989345 = enabled
    fix 12618642 = enabled
    fix 19779920 = enabled
    fix 20186282 = enabled
    fix 20186295 = enabled
    fix 19563433 = enabled
    fix 19848804 = enabled
    fix 20046257 = enabled
    fix 20265690 = enabled
    fix 16047938 = enabled
    fix 19507904 = enabled
    fix 18915345 = enabled
    fix 20173686 = disabled
    fix 20329321 = enabled
    fix 20225191 = enabled
    fix 18776755 = enabled
    fix 19882842 = enabled
    fix 20010996 = enabled
    fix 20445764 = disabled
    fix 19728543 = disabled
    fix 20379571 = enabled
    fix 20129763 = enabled
    fix 19899588 = enabled
    fix 10098852 = enabled
    fix 19663421 = disabled
    fix 20355502 = 0       
    fix 20526705 = enabled
    fix 20465582 = enabled
    fix 20581886 = disabled
    fix 16732417 = enabled
    fix 20732410 = enabled
    fix 20289688 = enabled
    fix 20543684 = enabled
    fix 20636003 = enabled
    fix 20506136 = enabled
    fix 20458598 = disabled
    fix 20830312 = enabled
    fix 19768896 = enabled
    fix 20321661 = enabled
    fix 19814541 = enabled
    fix 20933264 = enabled
    fix 17443547 = enabled
    fix 20602794 = enabled
    fix 19123152 = enabled
    fix 19899833 = enabled
    fix 20754928 = enabled
    fix 20808265 = enabled
    fix 20808192 = enabled
    fix 20340595 = enabled
    fix 14474264 = disabled
    fix 20508819 = enabled
    fix 21098866 = disabled
    fix 18949550 = enabled
    fix 14775297 = enabled
    fix 19568958 = disabled
    fix 20923950 = enabled
    fix 21283159 = enabled
    fix 17497847 = enabled
    fix 21211629 = enabled
    fix 20819668 = disabled
    fix 20232513 = enabled
    fix 20906782 = enabled
    fix 20587527 = enabled
    fix 20914534 = disabled
    fix 20830544 = enabled
    fix 16851194 = enabled
    fix 19186783 = enabled
    fix 19653920 = enabled
    fix 21211786 = enabled
    fix 21057343 = enabled
    fix 21503478 = enabled
    fix 19808939 = disabled
    fix 21476032 = enabled
    fix 20859246 = enabled
    fix 20838633 = 2       
    fix 21639419 = enabled
    fix 20951803 = enabled
    fix 21683982 = enabled
    fix 20216500 = enabled
    fix 21614112 = enabled
    fix 20906162 = enabled
    fix 20854798 = enabled
    fix 21509656 = enabled
    fix 21833220 = enabled
    fix 21802552 = enabled
    fix 21452843 = enabled
    fix 21553593 = enabled
    fix 21093805 = enabled
    fix 16220085 = disabled
    fix 21800590 = enabled
    fix 21273039 = enabled
    fix 16750133 = enabled
    fix 22013607 = enabled
    fix 22152372 = enabled
    fix 22077191 = enabled
    fix 22123025 = enabled
    fix 16913734 = enabled
    fix  8357294 = enabled
    fix 12670904 = enabled
    fix 21979983 = enabled
    fix 22158526 = enabled
    fix 21971099 = enabled
    fix 22090662 = enabled
    fix 22149010 = disabled
    fix 21300129 = enabled
    fix 21339278 = enabled
    fix 20270511 = enabled
    fix 21424812 = enabled
    fix 22114090 = enabled
    fix 22310074 = disabled
    fix 22159570 = enabled
    fix 22272439 = enabled
    fix 22372694 = enabled
    fix 22514195 = enabled
    fix 20413540 = enabled
    fix 22520315 = enabled
    fix 22649054 = enabled
    fix  8617254 = enabled
    fix 22020067 = enabled
    fix 22864730 = enabled
    fix 21099502 = enabled
    fix 22904304 = enabled
    fix 22967807 = enabled
    fix 22879002 = enabled
    fix 23019286 = enabled
    fix 22760704 = enabled
    fix 20853506 = enabled
    fix 22540411 = disabled
    fix 22513493 = enabled
    fix 22518491 = enabled
    fix 23103096 = enabled
    fix 22143411 = enabled
    fix 23180670 = enabled
    fix 23002609 = enabled
    fix 22928015 = 1       
    fix 23210039 = enabled
    fix 23102649 = enabled
    fix 23071621 = enabled
    fix 22822245 = enabled
    fix 23136865 = enabled
    fix 23176721 = enabled
    fix 23308385 = enabled
    fix 23223113 = enabled
    fix 22301868 = disabled
    fix 22258300 = enabled
    fix 22205301 = enabled
    fix 23514473 = 1       
    fix 23556483 = enabled
    fix 21305617 = enabled
    fix 22533539 = enabled
    fix 23596611 = enabled
    fix 20347374 = disabled
    fix 22937293 = enabled
    fix 20107874 = enabled
    fix 19582337 = enabled
    fix 22746853 = enabled
    fix 23537232 = enabled
    fix 23565188 = enabled
    fix 20228468 = enabled
    fix 22393169 = enabled
    fix 24426912 = enabled
    fix 24690046 = enabled
    fix 23732552 = enabled
    fix 20648883 = enabled
    fix 24654471 = enabled
    fix 23738304 = enabled
    fix 24010030 = enabled
    fix 22766607 = enabled
    fix 24600280 = enabled
    fix 24845754 = enabled
    fix 24533235 = enabled
    fix 22128803 = enabled
    fix 24926999 = enabled
    fix 24434608 = enabled
    fix 25094218 = enabled
    fix 24819957 = enabled
    fix 23478835 = enabled
    fix 24745366 = enabled
    fix 24920138 = disabled
    fix 24570810 = enabled
    fix 25058954 = enabled
    fix 24518392 = enabled
    fix 23738186 = enabled
    fix 25234139 = enabled
    fix 25108065 = enabled
    fix 22212124 = enabled
    fix 25123105 = enabled
    fix 25078728 = enabled
    fix 23719498 = 0       
    fix 25090203 = enabled
    fix 23197730 = enabled
    fix 23738553 = enabled
    fix 22070473 = enabled
    fix 19956351 = enabled
    fix 25393617 = enabled
    fix 21130817 = enabled
    fix 25342352 = enabled
    fix 25167306 = disabled
    fix 23473108 = enabled
    fix 25501716 = enabled
    fix 22973474 = enabled
    fix 22153026 = enabled
    fix 25367727 = enabled
    fix 25477783 = enabled
    fix 25493582 = enabled
    fix 22205362 = enabled
    fix 23249829 = enabled
    fix 25120742 = enabled
    fix 23853877 = disabled
    fix 25796244 = enabled
    fix 25575369 = enabled
    fix 25643889 = disabled
    fix 25436615 = enabled
    fix 25478095 = enabled
    fix 25405100 = enabled
    fix 24952618 = enabled
    fix 25809211 = enabled
    fix 26094674 = enabled
    fix 21183079 = enabled
    fix 25948370 = enabled
    fix 24545933 = enabled
    fix 25926263 = enabled
    fix 26019148 = enabled
    fix 25995431 = enabled
    fix 21870589 = enabled
    fix 24584046 = enabled
    fix 26374214 = enabled
    fix 25476149 = enabled
    fix 25345279 = enabled
    fix 26290247 = disabled
    fix 24478915 = enabled
    fix 26541991 = enabled
    fix 26338880 = enabled
    fix 26270685 = disabled
    fix 26560136 = enabled
    fix 26671842 = enabled
    fix 26712343 = enabled
    fix 26585420 = enabled
    fix 26677151 = enabled
    fix 26367868 = enabled
    fix 25323193 = enabled
    fix 26552730 = disabled
    fix 26177646 = enabled
    fix 23643560 = enabled
    fix 25792706 = enabled
    fix 27057772 = disabled
    fix 24758816 = enabled
    fix 26986173 = disabled
    fix 26790514 = disabled
    fix 26423085 = disabled
    fix 27321179 = disabled
    fix 27745220 = disabled


Query Block Registry:
SEL$2 0xa1a19b00 (PARSER) [FINAL]
SEL$1 0xa1a1cb78 (PARSER) [FINAL]

:
    call(in-use=111232, alloc=147600), compile(in-use=412680, alloc=472888), execution(in-use=35232, alloc=36480)

End of Optimizer State Dump
Dumping Hints
=============
  atom_hint=(@=0x699b5c08 err=0 resol=0 used=1 token=177 org=1 lvl=1 txt=SHARED (1) )
  atom_hint=(@=0x699b5dc8 err=0 resol=0 used=1 token=1599 org=1 lvl=1 txt=MONITOR )
====================== END SQL Statement Dump ======================
